Search.setIndex({"docnames": ["documentation/bricks/preprocess/afni/Automask", "documentation/bricks/preprocess/afni/Calc", "documentation/bricks/preprocess/afni/CalcDropTRs", "documentation/bricks/preprocess/afni/Despike", "documentation/bricks/preprocess/afni/FWHMx", "documentation/bricks/preprocess/afni/GCOR", "documentation/bricks/preprocess/afni/OutlierCount", "documentation/bricks/preprocess/afni/QualityIndex", "documentation/bricks/preprocess/afni/RefitDeoblique", "documentation/bricks/preprocess/afni/SkullStrip", "documentation/bricks/preprocess/afni/TShift", "documentation/bricks/preprocess/afni/TStatMean", "documentation/bricks/preprocess/afni/Volreg", "documentation/bricks/preprocess/ants/AffineInitializer", "documentation/bricks/preprocess/ants/ApplyTransform", "documentation/bricks/preprocess/ants/N4BiasFieldCorrection", "documentation/bricks/preprocess/ants/Registration", "documentation/bricks/preprocess/dipy/ComputeDKI", "documentation/bricks/preprocess/dipy/Denoise", "documentation/bricks/preprocess/freesurfer/Binarize", "documentation/bricks/preprocess/freesurfer/SynthStrip", "documentation/bricks/preprocess/freesurfer/SynthStripMriqc", "documentation/bricks/preprocess/fsl/Bet", "documentation/bricks/preprocess/fsl/BetSurfacesExtraction", "documentation/bricks/preprocess/fsl/ConvertXFM", "documentation/bricks/preprocess/fsl/EpiReg", "documentation/bricks/preprocess/fsl/ExtractROI", "documentation/bricks/preprocess/fsl/FastSegment", "documentation/bricks/preprocess/fsl/Flirt", "documentation/bricks/preprocess/fsl/Smooth", "documentation/bricks/preprocess/matlab_wrap/ComputeBrainVolume", "documentation/bricks/preprocess/mrtrix/ConstrainedSphericalDeconvolution", "documentation/bricks/preprocess/mrtrix/DWIBiasCorrect", "documentation/bricks/preprocess/mrtrix/DWIBrainMask", "documentation/bricks/preprocess/mrtrix/DWICat", "documentation/bricks/preprocess/mrtrix/DWIDenoise", "documentation/bricks/preprocess/mrtrix/DWIExtract", "documentation/bricks/preprocess/mrtrix/DWIPreproc", "documentation/bricks/preprocess/mrtrix/EditingTrack", "documentation/bricks/preprocess/mrtrix/FilteringTrack", "documentation/bricks/preprocess/mrtrix/FitTensor", "documentation/bricks/preprocess/mrtrix/Generate5tt2gmwmi", "documentation/bricks/preprocess/mrtrix/Generate5ttfsl", "documentation/bricks/preprocess/mrtrix/MRCat", "documentation/bricks/preprocess/mrtrix/MRConvert", "documentation/bricks/preprocess/mrtrix/MRDeGibbs", "documentation/bricks/preprocess/mrtrix/MRGridRegrid", "documentation/bricks/preprocess/mrtrix/MRMath", "documentation/bricks/preprocess/mrtrix/MRTransform", "documentation/bricks/preprocess/mrtrix/MTNormalise", "documentation/bricks/preprocess/mrtrix/ResponseSDDhollander", "documentation/bricks/preprocess/mrtrix/ResponseSDTournier", "documentation/bricks/preprocess/mrtrix/SphericalHarmonicExtraction", "documentation/bricks/preprocess/mrtrix/TensorMetrics", "documentation/bricks/preprocess/mrtrix/Tractography", "documentation/bricks/preprocess/mrtrix/TransformFSLConvert", "documentation/bricks/preprocess/others/ApplyBiasCorrection", "documentation/bricks/preprocess/others/ArtifactMask", "documentation/bricks/preprocess/others/Binarize", "documentation/bricks/preprocess/others/ConformImage", "documentation/bricks/preprocess/others/ConvROI", "documentation/bricks/preprocess/others/Enhance", "documentation/bricks/preprocess/others/EstimateSNR", "documentation/bricks/preprocess/others/ExtractROIbyLabel", "documentation/bricks/preprocess/others/ExtractSignalROI", "documentation/bricks/preprocess/others/GradientThreshold", "documentation/bricks/preprocess/others/Harmonize", "documentation/bricks/preprocess/others/IntensityClip", "documentation/bricks/preprocess/others/Mask", "documentation/bricks/preprocess/others/NonSteadyDetector", "documentation/bricks/preprocess/others/Resample1", "documentation/bricks/preprocess/others/Resample2", "documentation/bricks/preprocess/others/RotationMask", "documentation/bricks/preprocess/others/Sanitize", "documentation/bricks/preprocess/others/TSNR", "documentation/bricks/preprocess/others/TemplateFromTemplateFlow", "documentation/bricks/preprocess/others/Threshold", "documentation/bricks/preprocess/spm/Coregister", "documentation/bricks/preprocess/spm/GM_WM_Normalize", "documentation/bricks/preprocess/spm/NewSegment", "documentation/bricks/preprocess/spm/Normalize12", "documentation/bricks/preprocess/spm/Realign", "documentation/bricks/preprocess/spm/SliceTiming", "documentation/bricks/preprocess/spm/Smooth", "documentation/bricks/preprocess/volbrain/AssemblyNetDocker", "documentation/bricks/preprocess/volbrain/GetLabels", "documentation/bricks/preprocess/volbrain/LabelsCorrespondence", "documentation/bricks/reports/AnatIQMs", "documentation/bricks/reports/BoldIQMs", "documentation/bricks/reports/BoldIQMsPlot", "documentation/bricks/reports/CarpetParcellation", "documentation/bricks/reports/ComputeDVARS", "documentation/bricks/reports/FramewiseDisplacement", "documentation/bricks/reports/LateralizationIndexCurve", "documentation/bricks/reports/Mean_stdDev_calc", "documentation/bricks/reports/PlotSignalROI", "documentation/bricks/reports/ReportAnatMriqc", "documentation/bricks/reports/ReportCO2inhalCvr", "documentation/bricks/reports/ReportFuncMriqc", "documentation/bricks/reports/ReportGE2REC", "documentation/bricks/reports/ReportGroupMriqc", "documentation/bricks/reports/ReportPerfDsc", "documentation/bricks/reports/Result_collector", "documentation/bricks/reports/Spikes", "documentation/bricks/stats/spm/EstimateContrast", "documentation/bricks/stats/spm/EstimateModel", "documentation/bricks/stats/spm/Level1Design", "documentation/bricks/stats/spm/MultipleRegressionDesign", "documentation/bricks/stats/spm/OneSampleTTestDesign", "documentation/bricks/stats/spm/PairedTTestDesign", "documentation/bricks/stats/spm/TwoSampleTTestDesign", "documentation/bricks/tools/Concat_to_list", "documentation/bricks/tools/Concat_to_list_of_list", "documentation/bricks/tools/Deconv_from_aif", "documentation/bricks/tools/Delete_data", "documentation/bricks/tools/Files_To_List", "documentation/bricks/tools/Filter_Files_List", "documentation/bricks/tools/Find_In_List", "documentation/bricks/tools/Get_Conditions_From_BIDS_tsv", "documentation/bricks/tools/Get_Conditions_From_csv", "documentation/bricks/tools/Get_Eprime_info_GE2REC", "documentation/bricks/tools/Get_Patient_Name", "documentation/bricks/tools/Get_Regressors_From_csv", "documentation/bricks/tools/Import_Data", "documentation/bricks/tools/Input_Filter", "documentation/bricks/tools/List_Duplicate", "documentation/bricks/tools/List_Of_List_To_List", "documentation/bricks/tools/List_To_File", "documentation/bricks/tools/Make_AIF", "documentation/bricks/tools/Make_A_List", "documentation/bricks/tools/Make_CVR_reg_physio", "documentation/documentation", "documentation/pipelines/CerebVascularReact/CO2_inhalation", "documentation/pipelines/DWITractography/Dwi_whole_brain_tractograpy", "documentation/pipelines/FunctionalLangageMemory/GE2REC", "documentation/pipelines/FunctionalLangageMemory/GE2REC_without_behavioural_data", "documentation/pipelines/Perfusion/Perfdsc", "documentation/pipelines/preprocess/Anat_airmask", "documentation/pipelines/preprocess/Anat_headmask", "documentation/pipelines/preprocess/Anat_mni_tpms", "documentation/pipelines/preprocess/Anat_skullstrip", "documentation/pipelines/preprocess/Anat_skullstrip_synthstrip", "documentation/pipelines/preprocess/Anat_spatial_norm", "documentation/pipelines/preprocess/Bold_hmc", "documentation/pipelines/preprocess/Bold_mni_align", "documentation/pipelines/preprocess/Bold_spatial_preprocessing1", "documentation/pipelines/preprocess/Bold_spatial_preprocessing2", "documentation/pipelines/preprocess/Bold_spatial_preprocessing3", "documentation/pipelines/preprocess/Dwi_fod_msmt_csd", "documentation/pipelines/preprocess/Dwi_preprocessing", "documentation/pipelines/preprocess/Dwi_tissue_boundaries", "documentation/pipelines/preprocess/Spatial_mask", "documentation/pipelines/qualityControl/Anat_mriqc", "documentation/pipelines/qualityControl/Bold_mriqc", "documentation/pipelines/qualityControl/Bold_signals_roi", "documentation/pipelines/reports/Bold_iqms", "documentation/pipelines/reports/Extract_roi_param", "documentation/pipelines/stat/Bold_stat_cvr", "index", "mia_processes", "mia_processes.bricks", "mia_processes.bricks.preprocess", "mia_processes.bricks.preprocess.afni", "mia_processes.bricks.preprocess.ants", "mia_processes.bricks.preprocess.dipy", "mia_processes.bricks.preprocess.freesurfer", "mia_processes.bricks.preprocess.fsl", "mia_processes.bricks.preprocess.mrtrix", "mia_processes.bricks.preprocess.others", "mia_processes.bricks.preprocess.spm", "mia_processes.bricks.reports", "mia_processes.bricks.stat", "mia_processes.bricks.stat.spm", "mia_processes.bricks.tools", "mia_processes.pipelines", "mia_processes.pipelines.CerebVascularReact", "mia_processes.pipelines.DWITractography", "mia_processes.pipelines.preprocess", "mia_processes.pipelines.qualityControl", "mia_processes.pipelines.reports", "mia_processes.pipelines.stat", "mia_processes.utils", "modules"], "filenames": ["documentation/bricks/preprocess/afni/Automask.rst", "documentation/bricks/preprocess/afni/Calc.rst", "documentation/bricks/preprocess/afni/CalcDropTRs.rst", "documentation/bricks/preprocess/afni/Despike.rst", "documentation/bricks/preprocess/afni/FWHMx.rst", "documentation/bricks/preprocess/afni/GCOR.rst", "documentation/bricks/preprocess/afni/OutlierCount.rst", "documentation/bricks/preprocess/afni/QualityIndex.rst", "documentation/bricks/preprocess/afni/RefitDeoblique.rst", "documentation/bricks/preprocess/afni/SkullStrip.rst", "documentation/bricks/preprocess/afni/TShift.rst", "documentation/bricks/preprocess/afni/TStatMean.rst", "documentation/bricks/preprocess/afni/Volreg.rst", "documentation/bricks/preprocess/ants/AffineInitializer.rst", "documentation/bricks/preprocess/ants/ApplyTransform.rst", "documentation/bricks/preprocess/ants/N4BiasFieldCorrection.rst", "documentation/bricks/preprocess/ants/Registration.rst", "documentation/bricks/preprocess/dipy/ComputeDKI.rst", "documentation/bricks/preprocess/dipy/Denoise.rst", "documentation/bricks/preprocess/freesurfer/Binarize.rst", "documentation/bricks/preprocess/freesurfer/SynthStrip.rst", "documentation/bricks/preprocess/freesurfer/SynthStripMriqc.rst", "documentation/bricks/preprocess/fsl/Bet.rst", "documentation/bricks/preprocess/fsl/BetSurfacesExtraction.rst", "documentation/bricks/preprocess/fsl/ConvertXFM.rst", "documentation/bricks/preprocess/fsl/EpiReg.rst", "documentation/bricks/preprocess/fsl/ExtractROI.rst", "documentation/bricks/preprocess/fsl/FastSegment.rst", "documentation/bricks/preprocess/fsl/Flirt.rst", "documentation/bricks/preprocess/fsl/Smooth.rst", "documentation/bricks/preprocess/matlab_wrap/ComputeBrainVolume.rst", "documentation/bricks/preprocess/mrtrix/ConstrainedSphericalDeconvolution.rst", "documentation/bricks/preprocess/mrtrix/DWIBiasCorrect.rst", "documentation/bricks/preprocess/mrtrix/DWIBrainMask.rst", "documentation/bricks/preprocess/mrtrix/DWICat.rst", "documentation/bricks/preprocess/mrtrix/DWIDenoise.rst", "documentation/bricks/preprocess/mrtrix/DWIExtract.rst", "documentation/bricks/preprocess/mrtrix/DWIPreproc.rst", "documentation/bricks/preprocess/mrtrix/EditingTrack.rst", "documentation/bricks/preprocess/mrtrix/FilteringTrack.rst", "documentation/bricks/preprocess/mrtrix/FitTensor.rst", "documentation/bricks/preprocess/mrtrix/Generate5tt2gmwmi.rst", "documentation/bricks/preprocess/mrtrix/Generate5ttfsl.rst", "documentation/bricks/preprocess/mrtrix/MRCat.rst", "documentation/bricks/preprocess/mrtrix/MRConvert.rst", "documentation/bricks/preprocess/mrtrix/MRDeGibbs.rst", "documentation/bricks/preprocess/mrtrix/MRGridRegrid.rst", "documentation/bricks/preprocess/mrtrix/MRMath.rst", "documentation/bricks/preprocess/mrtrix/MRTransform.rst", "documentation/bricks/preprocess/mrtrix/MTNormalise.rst", "documentation/bricks/preprocess/mrtrix/ResponseSDDhollander.rst", "documentation/bricks/preprocess/mrtrix/ResponseSDTournier.rst", "documentation/bricks/preprocess/mrtrix/SphericalHarmonicExtraction.rst", "documentation/bricks/preprocess/mrtrix/TensorMetrics.rst", "documentation/bricks/preprocess/mrtrix/Tractography.rst", "documentation/bricks/preprocess/mrtrix/TransformFSLConvert.rst", "documentation/bricks/preprocess/others/ApplyBiasCorrection.rst", "documentation/bricks/preprocess/others/ArtifactMask.rst", "documentation/bricks/preprocess/others/Binarize.rst", "documentation/bricks/preprocess/others/ConformImage.rst", "documentation/bricks/preprocess/others/ConvROI.rst", "documentation/bricks/preprocess/others/Enhance.rst", "documentation/bricks/preprocess/others/EstimateSNR.rst", "documentation/bricks/preprocess/others/ExtractROIbyLabel.rst", "documentation/bricks/preprocess/others/ExtractSignalROI.rst", "documentation/bricks/preprocess/others/GradientThreshold.rst", "documentation/bricks/preprocess/others/Harmonize.rst", "documentation/bricks/preprocess/others/IntensityClip.rst", "documentation/bricks/preprocess/others/Mask.rst", "documentation/bricks/preprocess/others/NonSteadyDetector.rst", "documentation/bricks/preprocess/others/Resample1.rst", "documentation/bricks/preprocess/others/Resample2.rst", "documentation/bricks/preprocess/others/RotationMask.rst", "documentation/bricks/preprocess/others/Sanitize.rst", "documentation/bricks/preprocess/others/TSNR.rst", "documentation/bricks/preprocess/others/TemplateFromTemplateFlow.rst", "documentation/bricks/preprocess/others/Threshold.rst", "documentation/bricks/preprocess/spm/Coregister.rst", "documentation/bricks/preprocess/spm/GM_WM_Normalize.rst", "documentation/bricks/preprocess/spm/NewSegment.rst", "documentation/bricks/preprocess/spm/Normalize12.rst", "documentation/bricks/preprocess/spm/Realign.rst", "documentation/bricks/preprocess/spm/SliceTiming.rst", "documentation/bricks/preprocess/spm/Smooth.rst", "documentation/bricks/preprocess/volbrain/AssemblyNetDocker.rst", "documentation/bricks/preprocess/volbrain/GetLabels.rst", "documentation/bricks/preprocess/volbrain/LabelsCorrespondence.rst", "documentation/bricks/reports/AnatIQMs.rst", "documentation/bricks/reports/BoldIQMs.rst", "documentation/bricks/reports/BoldIQMsPlot.rst", "documentation/bricks/reports/CarpetParcellation.rst", "documentation/bricks/reports/ComputeDVARS.rst", "documentation/bricks/reports/FramewiseDisplacement.rst", "documentation/bricks/reports/LateralizationIndexCurve.rst", "documentation/bricks/reports/Mean_stdDev_calc.rst", "documentation/bricks/reports/PlotSignalROI.rst", "documentation/bricks/reports/ReportAnatMriqc.rst", "documentation/bricks/reports/ReportCO2inhalCvr.rst", "documentation/bricks/reports/ReportFuncMriqc.rst", "documentation/bricks/reports/ReportGE2REC.rst", "documentation/bricks/reports/ReportGroupMriqc.rst", "documentation/bricks/reports/ReportPerfDsc.rst", "documentation/bricks/reports/Result_collector.rst", "documentation/bricks/reports/Spikes.rst", "documentation/bricks/stats/spm/EstimateContrast.rst", "documentation/bricks/stats/spm/EstimateModel.rst", "documentation/bricks/stats/spm/Level1Design.rst", "documentation/bricks/stats/spm/MultipleRegressionDesign.rst", "documentation/bricks/stats/spm/OneSampleTTestDesign.rst", "documentation/bricks/stats/spm/PairedTTestDesign.rst", "documentation/bricks/stats/spm/TwoSampleTTestDesign.rst", "documentation/bricks/tools/Concat_to_list.rst", "documentation/bricks/tools/Concat_to_list_of_list.rst", "documentation/bricks/tools/Deconv_from_aif.rst", "documentation/bricks/tools/Delete_data.rst", "documentation/bricks/tools/Files_To_List.rst", "documentation/bricks/tools/Filter_Files_List.rst", "documentation/bricks/tools/Find_In_List.rst", "documentation/bricks/tools/Get_Conditions_From_BIDS_tsv.rst", "documentation/bricks/tools/Get_Conditions_From_csv.rst", "documentation/bricks/tools/Get_Eprime_info_GE2REC.rst", "documentation/bricks/tools/Get_Patient_Name.rst", "documentation/bricks/tools/Get_Regressors_From_csv.rst", "documentation/bricks/tools/Import_Data.rst", "documentation/bricks/tools/Input_Filter.rst", "documentation/bricks/tools/List_Duplicate.rst", "documentation/bricks/tools/List_Of_List_To_List.rst", "documentation/bricks/tools/List_To_File.rst", "documentation/bricks/tools/Make_AIF.rst", "documentation/bricks/tools/Make_A_List.rst", "documentation/bricks/tools/Make_CVR_reg_physio.rst", "documentation/documentation.rst", "documentation/pipelines/CerebVascularReact/CO2_inhalation.rst", "documentation/pipelines/DWITractography/Dwi_whole_brain_tractograpy.rst", "documentation/pipelines/FunctionalLangageMemory/GE2REC.rst", "documentation/pipelines/FunctionalLangageMemory/GE2REC_without_behavioural_data.rst", "documentation/pipelines/Perfusion/Perfdsc.rst", "documentation/pipelines/preprocess/Anat_airmask.rst", "documentation/pipelines/preprocess/Anat_headmask.rst", "documentation/pipelines/preprocess/Anat_mni_tpms.rst", "documentation/pipelines/preprocess/Anat_skullstrip.rst", "documentation/pipelines/preprocess/Anat_skullstrip_synthstrip.rst", "documentation/pipelines/preprocess/Anat_spatial_norm.rst", "documentation/pipelines/preprocess/Bold_hmc.rst", "documentation/pipelines/preprocess/Bold_mni_align.rst", "documentation/pipelines/preprocess/Bold_spatial_preprocessing1.rst", "documentation/pipelines/preprocess/Bold_spatial_preprocessing2.rst", "documentation/pipelines/preprocess/Bold_spatial_preprocessing3.rst", "documentation/pipelines/preprocess/Dwi_fod_msmt_csd.rst", "documentation/pipelines/preprocess/Dwi_preprocessing.rst", "documentation/pipelines/preprocess/Dwi_tissue_boundaries.rst", "documentation/pipelines/preprocess/Spatial_mask.rst", "documentation/pipelines/qualityControl/Anat_mriqc.rst", "documentation/pipelines/qualityControl/Bold_mriqc.rst", "documentation/pipelines/qualityControl/Bold_signals_roi.rst", "documentation/pipelines/reports/Bold_iqms.rst", "documentation/pipelines/reports/Extract_roi_param.rst", "documentation/pipelines/stat/Bold_stat_cvr.rst", "index.rst", "mia_processes.rst", "mia_processes.bricks.rst", "mia_processes.bricks.preprocess.rst", "mia_processes.bricks.preprocess.afni.rst", "mia_processes.bricks.preprocess.ants.rst", "mia_processes.bricks.preprocess.dipy.rst", "mia_processes.bricks.preprocess.freesurfer.rst", "mia_processes.bricks.preprocess.fsl.rst", "mia_processes.bricks.preprocess.mrtrix.rst", "mia_processes.bricks.preprocess.others.rst", "mia_processes.bricks.preprocess.spm.rst", "mia_processes.bricks.reports.rst", "mia_processes.bricks.stat.rst", "mia_processes.bricks.stat.spm.rst", "mia_processes.bricks.tools.rst", "mia_processes.pipelines.rst", "mia_processes.pipelines.CerebVascularReact.rst", "mia_processes.pipelines.DWITractography.rst", "mia_processes.pipelines.preprocess.rst", "mia_processes.pipelines.qualityControl.rst", "mia_processes.pipelines.reports.rst", "mia_processes.pipelines.stat.rst", "mia_processes.utils.rst", "modules.rst"], "titles": ["Automask brick", "Calc brick", "CalcDropTRs brick", "Despike brick", "FWHMx brick", "GCOR brick", "OutlierCount brick", "QualityIndex brick", "RefitDeoblique brick", "SkullStrip brick", "TShift brick", "TStatMean brick", "Volreg brick", "AffineInitializer brick", "ApplyTransforms brick", "N4BiasFieldCorrection brick", "Registration brick", "ComputeDKI brick", "Denoise brick", "Binarize brick", "SynthStrip brick", "SynthStripMriqc brick", "Bet brick", "BetSurfacesExtraction brick", "ConvertXFM brick", "EpiReg brick", "ExtractROI brick", "FastSegment brick", "Flirt brick", "Smooth brick", "ComputeBrainVolume brick", "ConstrainedSphericalDeconvolution brick", "DWIBiasCorrect brick", "DWIBrainMask brick", "DWICat brick", "DWIDenoise brick", "DWIExtract brick", "DWIPreproc brick", "EditingTrack brick", "FilteringTrack brick", "FitTensor brick", "Generate5tt2gmwmi brick", "Generate5ttfsl brick", "MRCat brick", "MRConvert brick", "MRDeGibbs brick", "MRGridRegrid brick", "MRMath brick", "MRTransform brick", "MTNormalise brick", "ResponseSDDhollander brick", "ResponseSTrournie brick", "SphericalHarmonicExtraction brick", "TensorMetrics brick", "Tractography brick", "TransformFSLConvert brick", "ApplyBiasCorrection brick", "ArtifactMask brick", "Binarize brick", "ConformImage brick", "ConvROI brick", "Enhance brick", "EstimateSNR brick", "ExtractROIbyLabel brick", "ExtractSignalROI brick", "GradientThreshold brick", "Harmonize brick", "IntensityClip brick", "Mask brick", "NonSteadyDetector brick", "Resample1 brick", "Resample2 brick", "RotationMask brick", "Sanitize brick", "TSNR brick", "TemplateFromTemplateFlow brick", "Threshold brick", "Coregister brick", "GM_WM_Normalize brick", "NewSegment brick", "Normalize12 brick", "Realign brick", "SliceTiming brick", "Smooth brick", "AssemblyNetDocker brick", "GetLabels brick", "LabelsCorrespondence brick", "AnatIQMs brick", "BoldQMs brick", "BoldIQMsPlot brick", "CarpetParcellation brick", "ComputeDVARS brick", "FramewiseDisplacement brick", "LateralizationIndexCurve brick", "Mean_stdDev_calc brick", "PlotSignalROI brick", "ReportAnatMriqc brick", "ReportCO2inhalCvr brick", "ReportFuncMriqc brick", "ReportGE2REC brick", "ReportGroupMriqc brick", "ReportPerfDsc brick", "Result_collector brick", "Spikes brick", "EstimateConstrast brick", "EstimateModel brick", "Level1Design brick", "MultipleRegressionDesign brick", "OneSampleTTestDesign brick", "PairedTTestDesign brick", "TwoSampleTTestDesign brick", "Concat_to_list  brick", "Concat_to_list_of_list brick", "Deconv_from_aif brick", "Delete_data brick", "Files_To_List brick", "Filter_Files_List brick", "Find_In_List brick", "Get_Conditions_From_BIDS_tsv brick", "Get_Conditions_From_csv brick", "Get_Eprime_info_GE2REC brick", "Get_Patient_Name brick", "Get_Regressors_From_csv brick", "Import_Data  brick", "Input_Filter brick", "List_Duplicate brick", "List_Of_List_To_List brick", "List_To_File brick", "Make_AIF brick", "Make_a_list brick", "Make_CVR_reg_physio brick", "Mia_processes\u2019s documentation", "CO2_inhalation pipeline", "Dwi_whole_brain_tractograpy pipeline", "GE2REC pipeline", "GE2REC_without_behavioural_data pipeline", "Perfdsc pipeline", "Anat_airmask pipeline", "Anat_headmask pipeline", "Anat_mni_tpms pipeline", "Anat_skullstrip pipeline", "Anat_skullstrip_synthstrip pipeline", "Anat_spatial_norm pipeline", "Bold_hmc pipeline", "Bold_mni_align pipeline", "Bold_spatial_preprocessing1 pipeline", "Bold_spatial_preprocessing2 pipeline", "Bold_spatial_preprocessing3 pipeline", "Dwi_fod_msmt_csd pipeline", "Dwi_preprocessing pipeline", "Dwi_tissue_boundaries pipeline", "Spatial_mask pipeline", "Anat_mriqc pipeline", "Bold_mriqc pipeline", "Bold_signals_roi pipeline", "Bold_iqms pipeline", "Extract_roi_param pipeline", "Bold_stat_cvr brick", "Purpose", "mia_processes package", "mia_processes.bricks package", "mia_processes.bricks.preprocess package", "mia_processes.bricks.preprocess.afni package", "mia_processes.bricks.preprocess.ants package", "mia_processes.bricks.preprocess.dipy package", "mia_processes.bricks.preprocess.freesurfer package", "mia_processes.bricks.preprocess.fsl package", "mia_processes.bricks.preprocess.mrtrix package", "mia_processes.bricks.preprocess.others package", "mia_processes.bricks.preprocess.spm package", "mia_processes.bricks.reports package", "mia_processes.bricks.stat package", "mia_processes.bricks.stat.spm package", "mia_processes.bricks.tools package", "mia_processes.pipelines package", "mia_processes.pipelines.CerebVascularReact package", "mia_processes.pipelines.DWITractography package", "mia_processes.pipelines.preprocess package", "mia_processes.pipelines.qualityControl package", "mia_processes.pipelines.reports package", "mia_processes.pipelines.stat package", "mia_processes.utils package", "mia_processes"], "terms": {"home": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157], "document": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 180, 181], "github": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 163, 165, 168, 169, 181], "3dcliplevel": 0, "algorithm": [0, 12, 15, 31, 40, 54, 79, 80, 113, 128, 133, 148, 167, 168, 170], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 63, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 120, 123, 126, 127, 128, 130, 132, 133, 134, 135, 136, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 177, 179, 181], "find": [0, 23, 52, 54, 77], "clip": [0, 6, 7, 16, 73, 97, 101, 141, 168], "level": [0, 104, 105, 106, 107, 108, 109, 110, 113, 124, 130, 132, 134, 167, 173], "after": [0, 19, 48, 54, 58, 70, 76, 78, 82, 91, 94, 113, 128, 134, 135, 167, 168, 170], "an": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 71, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 117, 118, 120, 121, 125, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 181], "eros": [0, 19, 50], "dilat": [0, 19, 39, 51, 170], "step": [0, 1, 5, 15, 35, 40, 44, 51, 54, 57, 105, 133, 140, 143, 148, 149, 150, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 177], "largest": [0, 10, 27], "connect": [0, 170], "compon": [0, 49, 52, 133], "supra": 0, "threshold": [0, 15, 16, 19, 20, 21, 22, 39, 50, 52, 67, 88, 89, 93, 106, 107, 108, 109, 110, 113, 128, 131, 138, 151, 155, 161, 165, 167, 168], "voxel": [0, 6, 7, 10, 11, 12, 15, 19, 22, 26, 27, 28, 29, 35, 39, 41, 44, 50, 51, 54, 58, 61, 77, 80, 81, 83, 89, 91, 97, 99, 101, 105, 106, 107, 108, 109, 110, 113, 128, 133, 147, 148, 157, 162, 167, 170, 173, 181], "ar": [0, 1, 10, 15, 16, 17, 18, 19, 22, 23, 26, 27, 28, 31, 33, 34, 36, 37, 38, 40, 43, 44, 45, 46, 47, 48, 49, 50, 54, 58, 59, 61, 66, 67, 68, 70, 71, 72, 76, 77, 79, 80, 81, 82, 83, 87, 88, 89, 93, 94, 97, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 117, 119, 120, 122, 128, 130, 132, 133, 134, 135, 136, 144, 145, 146, 147, 148, 149, 150, 152, 153, 157, 158, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 181], "kept": [0, 76, 114], "Be": [0, 58, 59, 61, 66, 68, 72, 114], "care": 0, "thi": [0, 1, 4, 10, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 60, 64, 71, 76, 77, 79, 81, 82, 84, 85, 86, 87, 88, 91, 92, 93, 94, 102, 104, 105, 106, 107, 108, 109, 110, 113, 114, 121, 123, 124, 128, 132, 133, 134, 135, 136, 148, 149, 150, 154, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 180], "program": [0, 23, 52, 77, 81], "itself": [0, 15, 54, 170, 173], "doe": [0, 28, 50], "NOT": [0, 39, 42, 54], "do": [0, 5, 12, 25, 28, 37, 39, 42, 54, 103, 106, 107, 108, 109, 110, 113, 135, 162, 163, 164, 165, 166, 167, 168, 169, 172], "skull": [0, 9, 20, 22, 141, 152, 165, 166, 170, 177], "strip": [0, 9, 20, 22, 23, 141, 152, 165, 177], "mandatori": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 100, 103, 104, 105, 107, 108, 109, 110, 114, 115, 133, 137, 138, 139, 140, 141, 142, 143, 144, 148, 149, 150, 152, 153, 154, 155, 181], "input": [0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 180], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 180, 181], "in_fil": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 76, 81, 82, 83, 84, 91, 92, 93, 95, 103, 107, 108, 114, 121, 137, 138, 140, 141, 143, 170, 181], "string": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 170, 173, 181], "repres": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 79, 80, 81, 82, 84, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 128, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 170, 181], "exist": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 79, 80, 81, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 117, 118, 119, 120, 121, 122, 125, 128, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 168, 170, 181], "file": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 118, 119, 121, 122, 123, 128, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 165, 167, 168, 170, 172, 173, 181], "valid": [0, 1, 2, 3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 101, 103, 113, 117, 128, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 173, 181], "extens": [0, 1, 2, 3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 103, 113, 117, 128, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 181], "nii": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 35, 37, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 181], "gz": [0, 1, 2, 3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 35, 37, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 84, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 101, 103, 133, 137, 138, 139, 140, 141, 142, 143, 144, 149, 150, 151, 152, 153, 154, 155, 181], "dataset": [0, 4, 11, 36, 162, 167, 170], "can": [0, 10, 15, 16, 17, 19, 22, 27, 28, 46, 48, 77, 78, 79, 80, 83, 102, 105, 106, 107, 108, 109, 110, 113, 114, 128, 130, 132, 158, 159, 163, 165, 170, 181], "4depi": 0, "anatom": [0, 39, 41, 42, 54, 57, 59, 61, 62, 65, 66, 72, 97, 99, 101, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 150, 168, 170, 177, 178], "ex": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 170, 173, 181], "usernam": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157], "data": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 94, 95, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 113, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 138, 139, 140, 141, 142, 143, 144, 148, 149, 150, 151, 154, 155, 156, 157, 163, 167, 170, 172, 173, 177, 178, 179, 181], "raw_data": [0, 1, 2, 3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 106, 113, 115, 116, 123, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 173], "func": [0, 2, 3, 8, 10, 11, 12, 18, 29, 69, 73, 74, 77, 81, 82, 83, 88, 98, 100, 103, 115, 116, 124, 125, 126, 127, 130, 132, 136, 143, 145, 146, 147, 151, 153, 154], "option": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 61, 63, 65, 66, 67, 68, 70, 72, 73, 74, 75, 76, 77, 81, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 114, 115, 124, 133, 143, 144, 148, 149, 154, 155, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 181], "default": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 61, 63, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 87, 88, 89, 90, 91, 92, 96, 97, 98, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 123, 126, 128, 133, 137, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 153, 154, 158, 173, 181], "valu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 61, 63, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 120, 122, 123, 126, 128, 132, 133, 137, 139, 142, 143, 144, 146, 147, 148, 149, 150, 153, 154, 157, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 179, 181], "clfrac": 0, "float": [0, 3, 5, 6, 10, 13, 14, 15, 16, 18, 19, 22, 25, 28, 29, 31, 36, 37, 38, 44, 46, 49, 50, 52, 54, 58, 62, 67, 76, 77, 79, 80, 81, 82, 83, 88, 89, 91, 92, 97, 101, 103, 104, 105, 106, 107, 108, 109, 110, 113, 118, 119, 120, 122, 128, 133, 144, 149, 152, 153, 155, 168, 170, 173, 181], "0": [0, 1, 2, 5, 6, 10, 12, 13, 14, 15, 16, 18, 19, 22, 25, 26, 27, 28, 29, 31, 33, 37, 38, 40, 44, 45, 46, 47, 48, 49, 50, 51, 54, 58, 67, 73, 76, 77, 79, 80, 81, 82, 83, 88, 89, 91, 92, 96, 98, 103, 104, 106, 107, 108, 109, 110, 113, 116, 118, 119, 120, 122, 126, 127, 128, 129, 133, 134, 135, 142, 144, 146, 147, 149, 155, 165, 167, 168, 170, 173, 181], "5": [0, 1, 6, 7, 10, 14, 15, 16, 18, 19, 22, 28, 35, 40, 44, 54, 79, 80, 81, 82, 85, 86, 96, 97, 98, 101, 106, 107, 108, 109, 110, 113, 128, 133, 142, 150, 168, 170, 173, 181], "set": [0, 2, 10, 13, 15, 18, 19, 26, 27, 28, 31, 35, 37, 39, 40, 44, 48, 50, 51, 52, 54, 58, 61, 77, 81, 82, 83, 91, 106, 113, 120, 123, 128, 136, 152, 153, 163, 167, 173], "fraction": [0, 6, 17, 22, 27, 53, 170], "must": [0, 10, 16, 28, 37, 38, 54, 60, 67, 71, 76, 77, 81, 82, 94, 102, 106, 131, 134, 150, 157, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173], "1": [0, 2, 6, 7, 12, 13, 14, 16, 18, 19, 20, 21, 22, 26, 27, 28, 37, 44, 45, 47, 48, 54, 57, 58, 59, 63, 69, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 97, 100, 101, 104, 105, 106, 107, 108, 109, 110, 112, 113, 118, 120, 122, 123, 126, 127, 128, 133, 139, 142, 144, 147, 152, 153, 157, 165, 168, 170, 173, 177, 181], "9": [0, 28, 40, 54, 67, 81, 82, 106, 122], "A": [0, 9, 15, 16, 22, 23, 27, 31, 34, 37, 39, 46, 54, 58, 60, 70, 76, 77, 78, 79, 80, 81, 83, 84, 87, 88, 89, 93, 94, 96, 97, 98, 99, 100, 101, 102, 106, 111, 112, 113, 114, 115, 116, 117, 123, 124, 125, 126, 127, 128, 130, 132, 133, 134, 135, 136, 145, 146, 147, 149, 150, 151, 152, 153, 154, 156, 157, 159, 163, 168, 170], "small": [0, 6, 7, 22, 28, 152, 153], "tend": [0, 133], "make": [0, 19, 82, 113, 128, 148, 168, 170, 173, 177, 181], "larger": [0, 113, 128], "out_brain_suffix": 0, "_mask": [0, 57, 68], "suffix": [0, 10, 19, 25, 26, 38, 39, 44, 46, 52, 57, 58, 59, 61, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 137, 139, 142, 144, 181], "output_typ": [0, 1, 2, 3, 9, 10, 11, 12, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "nifti": [0, 1, 2, 3, 9, 10, 11, 12, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 63, 80, 133, 149, 150, 181], "nifti_gz": [0, 1, 2, 3, 9, 10, 11, 12, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 44, 181], "format": [0, 1, 2, 3, 9, 10, 11, 12, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 84, 113, 128, 130, 132, 149, 150, 167, 170], "output": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 180, 181], "one": [0, 1, 2, 3, 4, 9, 10, 11, 12, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 36, 37, 38, 42, 53, 54, 58, 59, 61, 66, 67, 68, 72, 77, 79, 83, 95, 103, 105, 106, 107, 109, 110, 115, 118, 119, 122, 124, 125, 158, 162, 167, 168, 170, 172, 173, 181], "out_prefix": [0, 1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 29, 77, 80, 81, 82, 83, 90, 91, 92, 96, 98, 103], "prefix": [0, 1, 2, 3, 9, 10, 11, 12, 13, 14, 15, 16, 18, 58, 59, 60, 61, 65, 66, 68, 70, 72, 73, 74, 76, 77, 80, 81, 82, 83, 96, 98, 103], "automask_": 0, "integ": [0, 1, 2, 4, 5, 6, 7, 10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 26, 28, 30, 31, 35, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 63, 64, 77, 80, 81, 82, 83, 85, 86, 88, 95, 96, 97, 98, 101, 103, 105, 106, 113, 116, 126, 127, 128, 144, 147, 154, 155, 173, 181], "outward": 0, "undefin": [0, 1, 5, 7, 10, 12, 14, 15, 16, 18, 19, 25, 36, 82, 89, 96, 97, 98, 101, 102, 104, 105, 106, 115, 123, 145, 156], "ie": [0, 1, 5, 10, 12, 14, 15, 16, 18, 19, 36, 50, 54, 96, 97, 98, 101], "erod": [0, 19, 50, 66, 170], "inward": 0, "out_brain": [0, 141], "derived_data": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 121, 123, 128, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157], "func_mask": 0, "out_fil": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 54, 56, 58, 59, 61, 63, 65, 66, 67, 68, 70, 72, 73, 76, 87, 88, 89, 90, 91, 92, 102, 103, 117, 125, 138, 140, 143, 170, 181], "automask_func": [0, 114], "link": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 98, 100, 103, 104, 105, 106, 107, 108, 109, 110, 118, 133, 137, 138, 139, 141, 142, 143, 144, 152, 153, 154, 155, 157, 158, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173], "nipyp": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 35, 36, 37, 40, 42, 43, 45, 47, 48, 50, 51, 53, 54, 57, 69, 74, 77, 79, 80, 81, 82, 83, 91, 92, 104, 105, 106, 107, 108, 109, 110, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172], "assum": [1, 37, 82, 106, 107, 108, 109, 110, 147], "comput": [1, 11, 14, 16, 17, 18, 19, 30, 31, 40, 45, 49, 52, 54, 62, 66, 89, 113, 134, 135, 152, 153, 158, 162, 164, 167, 168, 169, 170, 173, 177], "being": [1, 54, 77, 80, 81], "perform": [1, 15, 25, 28, 31, 35, 40, 43, 47, 48, 52, 77, 97, 99, 101, 106, 107, 108, 109, 110, 113, 120, 134, 148, 150, 167, 170], "occupi": 1, "same": [1, 8, 10, 17, 19, 26, 28, 37, 42, 44, 77, 82, 83, 102, 106, 119, 152, 153, 169, 170, 173], "space": [1, 13, 14, 16, 23, 25, 26, 28, 45, 46, 48, 57, 58, 59, 61, 66, 68, 72, 75, 77, 78, 79, 80, 81, 84, 87, 90, 93, 133, 137, 142, 145, 147, 155, 170, 177, 181], "have": [1, 15, 16, 27, 28, 31, 37, 39, 54, 60, 71, 77, 78, 79, 80, 81, 93, 94, 95, 102, 106, 107, 108, 109, 110, 113, 128, 134, 168, 170], "orient": [1, 39, 46, 48, 50, 54, 106, 107, 108, 109, 110, 133, 167, 177, 181], "in_file_a": [1, 2], "first": [1, 5, 10, 14, 16, 19, 27, 28, 35, 37, 40, 44, 49, 54, 76, 81, 94, 96, 97, 98, 100, 101, 102, 107, 108, 109, 110, 113, 116, 117, 119, 122, 126, 127, 134, 141, 148, 170], "img_1": 1, "expr": [1, 140], "b": [1, 15, 17, 22, 31, 33, 37, 44, 77, 80, 81, 104, 111, 112, 133, 140, 148, 149, 150, 167, 170, 173], "express": [1, 91], "appli": [1, 14, 16, 18, 22, 28, 31, 42, 46, 49, 50, 51, 54, 67, 76, 77, 78, 81, 82, 94, 106, 107, 108, 109, 110, 123, 124, 128, 137, 139, 144, 150, 167, 168, 173], "between": [1, 6, 10, 13, 15, 16, 25, 37, 39, 54, 76, 77, 79, 80, 82, 85, 86, 91, 96, 97, 98, 100, 101, 106, 107, 108, 109, 110, 113, 116, 128, 130, 134, 148, 152, 153, 156, 162, 167, 168, 181], "c": [1, 22, 104, 111, 112, 173], "allow": [1, 17, 19, 23, 28, 54, 77, 84, 93, 106, 107, 108, 109, 110, 113, 124, 128, 150, 154, 156], "parenthes": 1, "It": [1, 16, 17, 20, 25, 26, 27, 28, 30, 48, 82, 93, 102, 104, 105, 113, 128, 130, 136, 150, 170], "also": [1, 10, 17, 22, 25, 27, 28, 54, 77, 80, 81, 100, 102, 106, 107, 108, 109, 110, 113, 114, 128, 132, 133, 134, 149, 156], "possibl": [1, 16, 25, 26, 27, 28, 37, 77, 81, 152, 153, 167], "built": [1, 31, 50, 94, 158, 177], "function": [1, 16, 17, 22, 28, 31, 39, 48, 59, 62, 77, 91, 97, 99, 101, 103, 105, 106, 113, 130, 132, 133, 134, 135, 136, 143, 145, 146, 147, 148, 151, 154, 157, 167, 168, 170, 173, 177, 178, 179, 181], "sin": 1, "co": [1, 130, 132, 133, 150], "sqrt": [1, 170], "mean": [1, 12, 16, 17, 47, 53, 79, 80, 81, 88, 91, 98, 102, 104, 107, 108, 109, 110, 113, 128, 132, 136, 153, 155, 162, 164, 170, 177, 179, 181], "stdev": 1, "some": [1, 16, 25, 26, 44, 77, 87, 88, 104, 105, 106, 113, 133, 150, 158, 162, 163, 164, 165, 166, 167, 169, 172], "design": [1, 37, 104, 105, 106, 118, 119, 122, 134, 135, 157, 172, 175], "help": [1, 148, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 180], "implement": [1, 92, 93, 105, 170], "logic": 1, "x": [1, 18, 25, 26, 28, 48, 52, 54, 77, 80, 81, 83, 106, 133, 134, 151, 165, 170, 181], "For": [1, 10, 14, 16, 19, 25, 28, 44, 61, 63, 64, 65, 77, 78, 81, 102, 107, 108, 109, 110, 119, 177, 181], "more": [1, 3, 12, 16, 17, 31, 36, 37, 54, 58, 59, 61, 66, 67, 68, 72, 77, 81, 91, 106, 113, 128, 173], "exampl": [1, 10, 14, 16, 19, 25, 31, 41, 63, 64, 65, 75, 77, 78, 81, 93, 95, 102, 104, 105, 118, 173, 181], "refer": [1, 13, 28, 46, 49, 55, 77, 81, 87, 88, 106, 113, 134, 136, 137, 163, 168, 173, 178], "imag": [1, 2, 3, 4, 5, 6, 7, 12, 13, 15, 17, 19, 20, 21, 22, 23, 24, 27, 30, 31, 34, 35, 36, 39, 40, 45, 49, 50, 51, 52, 53, 54, 55, 57, 62, 63, 64, 67, 74, 77, 79, 84, 89, 91, 93, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 113, 128, 130, 132, 133, 134, 135, 136, 137, 139, 141, 142, 145, 146, 147, 148, 149, 150, 154, 156, 157, 158, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 177, 178, 181], "c_": 1, "in_file_b": 1, "second": [1, 10, 24, 28, 37, 40, 42, 44, 49, 54, 81, 82, 106, 107, 108, 109, 110, 113, 116, 118, 133, 134, 141, 149], "img_2": 1, "in_file_c": 1, "third": [1, 44, 100, 131, 134, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173], "img_3": 1, "single_idx": 1, "volum": [1, 4, 10, 27, 28, 30, 33, 37, 40, 44, 47, 48, 52, 69, 73, 80, 81, 82, 88, 91, 106, 113, 133, 136, 143, 149, 153, 155, 162, 165, 166, 167, 168, 169, 170, 173, 181], "index": [1, 2, 10, 26, 79, 82, 88, 93, 96, 97, 98, 99, 101, 102, 105, 113, 116, 126, 127, 128, 134, 135, 155, 156, 158, 162, 173, 179], "The": [1, 3, 7, 10, 12, 13, 16, 17, 18, 23, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 60, 61, 70, 71, 76, 77, 78, 79, 80, 81, 82, 89, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 113, 114, 116, 117, 118, 119, 120, 122, 123, 126, 127, 128, 130, 132, 133, 134, 135, 136, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "onli": [1, 6, 7, 17, 18, 19, 22, 27, 28, 31, 35, 37, 38, 39, 40, 41, 44, 46, 49, 52, 54, 58, 59, 61, 66, 68, 72, 76, 79, 81, 83, 104, 105, 106, 107, 108, 109, 110, 113, 123, 128, 130, 162, 170, 173, 181], "start_idx": [1, 2], "start": [1, 2, 47, 52, 150, 163, 181], "requir": [1, 15, 16, 30, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 77, 79, 84, 102, 107, 108, 109, 110, 130, 133, 134, 135, 154, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173], "stop_idx": [1, 2], "stop": [1, 2, 54, 77], "35": [1, 82, 119], "out": [1, 2, 4, 5, 6, 7, 9, 10, 11, 13, 14, 15, 18, 19, 31, 34, 43, 44, 47, 54, 57, 87, 88, 89, 91, 92, 93, 95, 103, 104, 105, 106, 113, 128, 147, 154, 155, 170, 173, 177, 181], "c_img_1": 1, "current": [1, 18, 79, 81, 82, 102, 105, 107, 108, 109, 110, 149, 173], "initi": [1, 5, 16, 28, 40, 50, 51, 54, 128, 142, 144, 158, 159], "mai": [1, 12, 28, 77, 78, 81, 106, 113, 128, 170], "crash": [1, 105], "execut": [1, 37, 39], "produc": [1, 79, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 179], "ani": [1, 19, 20, 21, 38, 39, 45, 54, 77, 80, 97, 101, 102, 106, 107, 108, 109, 110, 113, 129, 162], "result": [1, 15, 27, 28, 42, 54, 60, 70, 71, 77, 79, 80, 81, 94, 102, 113, 115, 116, 123, 124, 126, 127, 128, 132, 134, 135, 152, 153, 156, 170, 173, 181], "without": [1, 48, 54, 57, 79, 81, 96, 102, 131, 170, 173, 181], "error": [1, 36, 105, 152, 153, 170], "messag": [1, 181], "If": [2, 10, 15, 16, 17, 20, 21, 25, 28, 31, 34, 35, 37, 38, 40, 41, 44, 46, 47, 48, 49, 54, 60, 71, 77, 79, 80, 81, 82, 83, 84, 93, 94, 95, 102, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 123, 126, 127, 133, 149, 152, 156, 168, 170, 173, 181], "none": [2, 16, 37, 53, 79, 80, 82, 106, 107, 108, 109, 110, 128, 144, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 180, 181], "automat": [2, 17, 44, 46, 82, 97, 101, 105, 106, 123, 133, 149, 170], "length": [2, 38, 54, 59, 104, 105, 106, 113, 128, 168], "3d": [2, 4, 9, 11, 15, 19, 26, 54, 70, 81, 128, 132, 136, 145, 146, 147, 162, 164, 166, 169, 170, 173], "crop": [2, 42, 54], "cropped_": 2, "cannot": [2, 19, 87, 88], "lower": [2, 16, 67, 81, 97, 101, 113, 170], "than": [2, 10, 12, 17, 42, 48, 52, 58, 77, 79, 80, 97, 101, 106, 113, 128, 132, 168], "equal": [2, 14, 19, 31, 40, 48, 81, 93, 104, 110], "10": [2, 13, 26, 38, 62, 67, 79, 80, 82, 83, 97, 101, 106, 118, 119, 133, 134, 144, 168, 170], "cropped_func": 2, "calc": [2, 131, 140, 161, 162], "replac": [3, 18, 28, 48], "someth": 3, "pleas": [3, 20, 21, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 78, 81, 93, 105, 106, 150, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 180], "ey": [3, 22, 75], "alwai": 3, "store": [3, 40, 77, 181], "boolean": [3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 19, 20, 21, 22, 24, 25, 27, 28, 31, 32, 35, 36, 37, 38, 39, 40, 42, 44, 48, 49, 50, 51, 52, 53, 54, 63, 66, 67, 73, 76, 77, 79, 81, 83, 85, 86, 91, 92, 102, 103, 104, 105, 107, 108, 109, 110, 123, 143, 155, 168, 181], "true": [3, 4, 5, 6, 7, 8, 14, 15, 16, 22, 27, 28, 32, 35, 36, 53, 63, 66, 67, 76, 79, 81, 83, 85, 86, 91, 102, 103, 104, 105, 107, 108, 109, 110, 113, 123, 141, 142, 143, 148, 150, 153, 154, 155, 168, 170, 181], "d": [3, 22, 111, 168, 173], "d_": 3, "d_func": 3, "all": [4, 17, 19, 27, 28, 33, 34, 36, 37, 38, 39, 40, 44, 46, 54, 58, 63, 77, 81, 82, 83, 87, 88, 91, 95, 100, 103, 106, 107, 108, 109, 110, 114, 133, 148, 155, 157, 158, 162, 170, 173, 181], "sub": [4, 42, 64, 93, 95, 97, 99, 101, 107, 108, 109, 110, 114, 118, 162, 173], "each": [4, 5, 10, 13, 16, 26, 27, 28, 31, 38, 39, 46, 50, 51, 54, 60, 61, 63, 64, 75, 77, 79, 81, 85, 86, 91, 94, 95, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 113, 118, 119, 123, 128, 133, 148, 154, 157, 161, 162, 167, 168, 170, 173, 181], "tr": [4, 5, 10, 82, 89], "separ": [4, 10, 27, 50, 77, 81, 89, 113, 162], "mean_reg_func_valid": [4, 5, 88, 98, 144, 155], "combin": [4, 5, 6, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157], "final": [4, 5, 6, 10, 15, 24, 28, 39, 50, 51, 67, 94, 124, 128, 145, 146, 147, 148, 157, 170], "measur": [4, 5, 6, 17, 40, 79, 80, 87, 88, 106, 110, 113, 118, 130, 132, 136, 170, 175, 178], "along": [4, 5, 6, 28, 43, 44, 46, 167, 170], "axi": [4, 5, 6, 13, 28, 37, 43, 44, 54, 167, 170, 181], "detrend": [4, 6, 7, 10, 103], "specifi": [4, 6, 7, 10, 12, 14, 15, 19, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 60, 77, 82, 83, 90, 91, 92, 97, 101, 104, 105, 106, 107, 108, 109, 110, 126, 127, 167, 173], "order": [4, 10, 12, 14, 15, 16, 23, 25, 31, 38, 49, 54, 79, 82, 105, 106, 119, 128, 133, 134, 147, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173], "prepend": [4, 6, 7, 29, 60, 77, 83, 90, 91, 92], "filenam": [4, 6, 7, 29, 77, 81, 83, 90, 91, 92, 106, 123, 173], "fwhm_": 4, "arg": [4, 181], "add": [4, 10, 25, 39, 86, 104, 114, 122, 159, 181], "showmeclassicfwhm": 4, "old": [4, 102, 134, 170], "classic": [4, 16, 106, 163, 172], "method": [4, 10, 12, 25, 28, 45, 46, 48, 54, 57, 66, 70, 72, 77, 80, 81, 105, 107, 108, 109, 110, 113, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 181], "mask_fil": [4, 5, 6, 7, 22, 68, 113], "mask": [4, 6, 7, 12, 15, 16, 17, 18, 20, 21, 22, 23, 28, 31, 32, 34, 35, 37, 38, 39, 40, 42, 49, 50, 51, 52, 54, 60, 63, 64, 75, 77, 81, 83, 84, 87, 88, 91, 96, 97, 98, 101, 102, 103, 105, 106, 107, 108, 109, 110, 113, 128, 131, 132, 133, 139, 140, 141, 142, 144, 148, 149, 150, 152, 153, 155, 157, 161, 162, 167, 168, 170, 173, 177, 179], "automask_mean_reg_func_valid": [4, 5, 6, 7, 90, 91, 144, 155], "fwhm_mean_reg_func_valid": [4, 88], "no_demean": 5, "fals": [5, 6, 7, 10, 12, 13, 14, 15, 16, 19, 20, 21, 22, 24, 25, 28, 31, 32, 36, 37, 38, 39, 40, 42, 44, 48, 49, 50, 51, 52, 53, 54, 63, 67, 73, 77, 79, 81, 83, 85, 86, 92, 102, 103, 104, 105, 113, 128, 142, 143, 155, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 181], "need": [5, 12, 23, 28, 59, 77, 79, 80, 81, 95, 105, 106, 124, 134, 170, 173], "demean": [5, 170], "nfirst": 5, "number": [5, 12, 13, 15, 16, 19, 27, 28, 31, 38, 40, 44, 46, 48, 49, 50, 51, 52, 54, 69, 73, 79, 81, 82, 87, 88, 89, 96, 97, 98, 101, 104, 105, 106, 113, 128, 133, 170, 173, 181], "ignor": [5, 10, 28, 106], "3": [5, 6, 7, 13, 14, 15, 16, 22, 25, 26, 27, 28, 31, 40, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 76, 77, 79, 80, 81, 82, 83, 85, 86, 106, 107, 108, 109, 110, 113, 119, 122, 128, 129, 133, 134, 135, 140, 141, 142, 144, 147, 151, 155, 168, 170, 173, 181], "global": [5, 16, 88, 106, 107, 108, 109, 110, 148, 159], "06123": 5, "reg_func_valid": [6, 7, 88, 91, 155], "autoclip": [6, 7], "off": [6, 7, 54, 81], "mutual": [6, 7, 10, 16, 22, 28, 29, 77, 80, 104, 114], "exclus": [6, 7, 10, 16, 22, 24, 28, 29, 30, 37, 38, 54, 80, 104, 130, 132, 133, 149], "automask": [6, 7, 131, 154, 161, 162], "interv": [6, 7], "write": [6, 7, 16, 24, 38, 77, 78, 79, 80, 81, 105, 146, 147], "median": [6, 7, 47, 61, 67, 91, 100, 168, 170], "mad": [6, 7, 170], "count": [6, 7, 44, 155], "timepoint": [6, 7, 91, 103], "legendr": [6, 52, 54], "polynomi": [6, 7, 10, 12, 49, 52, 54, 106, 170], "outliers_": 6, "qthr": 6, "001": [6, 63, 77, 79, 80, 121], "indic": [6, 37, 42, 45, 47, 76, 81, 83, 91, 93, 97, 99, 101, 102, 105, 113, 116, 128, 132, 134, 136, 170, 173], "q": 6, "alpha": 6, "correl": [6, 7, 16, 28, 77, 88, 105, 106, 107, 108, 109, 110, 162, 170], "across": [6, 7, 20, 44, 47, 48, 75, 91, 170, 181], "polort": [6, 7], "timeseri": [6, 7], "outliers_reg_func_valid": [6, 7, 88, 89, 155], "1d": [7, 10, 12], "seri": [7, 10, 14, 37, 48, 54, 77, 89, 91, 97, 103, 106, 113, 128, 167, 168, 169], "outlier": [7, 67, 88, 89, 98, 155, 162, 168, 170], "qi": [7, 170], "qi_": 7, "quadrant": 7, "similar": [7, 16, 106, 130, 144], "spearman": 7, "minu": [7, 106], "coeffici": [7, 31, 39, 40, 48, 52, 53, 77, 97, 101, 104, 105, 132, 156], "rank": 7, "e": [7, 15, 17, 22, 31, 37, 38, 44, 45, 48, 54, 79, 80, 91, 97, 101, 102, 105, 107, 108, 109, 110, 111, 113, 116, 123, 126, 127, 128, 132, 134, 135, 150, 152, 153, 170, 173], "name": [8, 17, 25, 27, 34, 43, 44, 47, 75, 76, 77, 83, 85, 94, 97, 99, 101, 102, 104, 105, 106, 107, 108, 109, 110, 117, 118, 119, 120, 121, 122, 123, 132, 134, 135, 136, 144, 145, 146, 147, 156, 159, 170, 172, 173, 181], "refit": 8, "t1w": [9, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 27, 28, 30, 42, 55, 56, 57, 58, 61, 62, 65, 66, 67, 68, 72, 75, 84, 87, 96, 121, 129, 133, 137, 138, 139, 140, 141, 142, 147, 154, 168, 178], "ss": 9, "ss_": 9, "ss_t1w": [9, 138], "shift": [10, 12, 45, 170], "from": [10, 16, 17, 20, 21, 27, 28, 31, 40, 41, 44, 45, 46, 47, 48, 50, 51, 52, 54, 57, 58, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 79, 80, 82, 84, 87, 88, 91, 92, 93, 94, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 113, 118, 121, 123, 124, 130, 132, 134, 135, 139, 141, 142, 143, 144, 147, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 177, 178, 181], "so": [10, 26, 30, 54, 77, 79, 80, 81, 82, 102, 106, 148, 170], "align": [10, 12, 13, 16, 28, 37, 79, 144, 153, 169], "tempor": [10, 93, 113, 128, 134, 169], "origin": [10, 12, 15, 16, 28, 48, 67, 77, 79, 81, 83, 113, 123, 158, 165, 170, 173, 181], "you": [10, 14, 16, 17, 20, 21, 25, 26, 77, 81, 84, 93, 105, 107, 108, 109, 110, 113, 114, 152, 170], "either": [10, 25, 27, 28, 46, 48, 77, 82, 95, 105, 134, 147], "slice_tim": 10, "tpattern": 10, "neither": 10, "two": [10, 12, 24, 27, 28, 37, 40, 79, 102, 115, 116, 119, 123, 156, 158, 170, 172, 173], "defin": [10, 16, 38, 39, 48, 49, 54, 58, 59, 61, 66, 68, 72, 76, 80, 85, 86, 94, 104, 105, 106, 107, 108, 109, 110, 115, 118, 123, 128, 150, 154, 156, 157, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173], "process": [10, 15, 30, 31, 35, 36, 39, 54, 76, 79, 82, 97, 113, 124, 128, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 152, 153, 154, 155, 158, 159, 160, 161, 169, 172, 173, 175, 176, 177, 178, 179, 180], "return": [10, 126, 127, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 181], "interpol": [10, 12, 14, 16, 28, 35, 45, 48, 77, 81, 107, 108, 109, 110, 137, 139, 142, 144, 154, 167], "fourier": [10, 12, 105, 106, 153], "linear": [10, 12, 14, 16, 37, 46, 48, 53, 70, 97, 99, 101, 106, 130, 139, 144, 149, 166], "cubic": [10, 12, 46, 48], "quintic": [10, 12], "heptic": [10, 12], "differ": [10, 12, 27, 28, 46, 79, 80, 81, 82, 106, 133, 148, 150, 167, 169, 170], "most": [10, 12, 22, 52, 81], "accur": [10, 12, 81, 113], "slowest": [10, 12], "1st": [10, 12, 97, 101, 106], "least": [10, 12, 28, 31, 38, 40, 54, 80, 107, 108, 110, 148], "3rd": [10, 12, 77, 81, 106], "lagrang": [10, 12], "5th": [10, 12, 106], "7th": [10, 12, 77, 81], "st_corr": 10, "st_corr_": 10, "rlt": 10, "befor": [10, 16, 35, 38, 45, 48, 78, 80, 81, 94, 97, 101, 149], "remov": [10, 39, 59, 67, 91, 94, 106, 114, 149, 162, 167, 170], "trend": 10, "rltplu": 10, "later": [10, 99, 102, 132, 134, 135, 170, 179], "put": [10, 16, 40, 181], "back": [10, 77, 81, 169], "slice_encoding_dir": 10, "k": [10, 93, 105, 156, 170], "direct": [10, 25, 28, 31, 37, 39, 48, 52, 54, 77, 81, 83, 133, 149, 170], "which": [10, 16, 17, 18, 19, 22, 27, 28, 31, 34, 36, 37, 38, 43, 44, 45, 47, 49, 50, 51, 52, 67, 70, 71, 73, 76, 77, 79, 80, 81, 82, 83, 86, 87, 88, 92, 93, 94, 95, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 113, 117, 119, 120, 122, 128, 132, 133, 136, 144, 145, 146, 147, 148, 149, 154, 157, 168, 170, 181], "neg": [10, 15, 31, 39, 93], "revers": [10, 14, 37, 48, 177], "entri": [10, 49, 60, 71, 94, 102, 115, 168, 170], "correspond": [10, 31, 44, 52, 58, 77, 85, 86, 87, 88, 89, 94, 102, 115, 116, 124, 125, 126, 127, 133, 145, 154, 156, 161, 170, 172, 173, 181], "zero": [10, 15, 17, 19, 39, 54, 77, 81, 91, 107, 108, 109, 110, 113, 170, 173], "point": [10, 13, 26, 28, 48, 54, 77, 79, 80, 81, 105, 113, 128, 152, 153, 168, 181], "ii": 10, "unchang": [10, 44], "thei": [10, 15, 38, 54, 77, 80, 81, 106, 134, 181], "2": [10, 12, 13, 14, 15, 16, 18, 27, 28, 29, 37, 38, 40, 44, 45, 46, 47, 48, 50, 52, 54, 75, 77, 79, 80, 81, 82, 83, 85, 86, 88, 89, 105, 106, 107, 108, 109, 110, 112, 113, 116, 119, 120, 122, 123, 128, 130, 132, 133, 142, 144, 149, 155, 165, 170, 173], "list": [10, 14, 15, 16, 19, 22, 27, 28, 31, 34, 36, 38, 43, 44, 45, 46, 48, 49, 50, 58, 60, 61, 63, 64, 70, 71, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 93, 94, 95, 99, 102, 104, 105, 106, 107, 108, 109, 110, 114, 118, 119, 120, 122, 123, 124, 132, 136, 139, 144, 145, 146, 147, 154, 156, 157, 170, 172, 173, 181], "offset": [10, 12], "acquisit": [10, 20, 37, 44, 82, 106, 113, 147, 169, 170], "onset": [10, 106, 113, 118, 119, 173], "alt": 10, "z": [10, 22, 25, 26, 28, 48, 52, 54, 77, 80, 81, 83, 103, 133, 151, 168, 170], "altplu": 10, "z2": 10, "altminu": 10, "seq": 10, "seqplu": 10, "seqminu": 10, "pattern": [10, 77, 81, 173], "rather": [10, 42, 48], "header": [10, 15, 37, 44, 46, 48, 77, 81, 168], "One": [10, 77, 80, 81, 106, 118, 119, 122, 157, 158], "manual": [10, 18, 42, 157], "": [10, 16, 22, 25, 27, 28, 29, 38, 51, 53, 61, 77, 81, 83, 84, 92, 99, 106, 113, 132, 133, 134, 135, 136, 149, 150, 157, 165, 167, 169, 173], "m": [10, 22, 82, 93, 97, 101, 102, 133, 150, 170, 173], "millisecond": 10, "tslice": 10, "given": [10, 16, 25, 39, 54, 67, 106, 107, 108, 109, 110, 113, 116, 120, 136, 154, 159, 162, 168], "tzero": 10, "minimum": [10, 19, 26, 28, 38, 54, 97, 101, 128], "maximum": [10, 19, 26, 29, 31, 38, 49, 50, 51, 54, 76, 79, 80, 83, 91, 97, 101, 113, 128, 136, 170, 172], "note": [10, 15, 26, 28, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 79, 93, 104, 105, 107, 108, 109, 110, 124, 126, 127, 133, 150, 151, 173, 181], "when": [10, 12, 16, 22, 46, 48, 51, 54, 70, 77, 79, 80, 81, 94, 128, 150, 152, 153], "averag": [10, 11, 18, 77, 91, 95, 113, 128, 130, 136, 149, 150, 154, 162], "st_corr_func": 10, "time": [11, 12, 14, 22, 26, 37, 54, 77, 89, 97, 103, 106, 107, 108, 109, 110, 113, 128, 133, 136, 146, 147, 149, 162, 168, 169, 173, 181], "mean_": 11, "mean_func": [11, 98], "tstat": 11, "copyorigin": 12, "copi": [12, 15, 81], "coord": [12, 44], "reg": [12, 79, 80], "reg_": 12, "save_oned_matrix": 12, "save": [12, 15, 19, 28, 63, 79, 87, 88, 128, 159, 170, 181], "transform": [12, 16, 25, 28, 46, 77, 79, 80, 81, 84, 137, 139, 142, 144, 150, 163, 165, 166, 167], "matrix": [12, 28, 48, 84, 106, 107, 108, 109, 110, 122, 157, 167, 172, 173], "oned": 12, "save_md1d_fil": 12, "max": [12, 15, 19, 28, 47, 54, 170], "displac": [12, 155, 170], "outputfil": 12, "md1d": 12, "timeshift": 12, "slice": [12, 19, 22, 28, 37, 44, 77, 89, 96, 97, 98, 101, 103, 106, 128, 146, 147, 162, 169, 170, 173, 181], "twopass": [12, 153], "pass": [12, 50, 106, 113, 136, 181], "registr": [12, 22, 25, 37, 77, 79, 80, 131, 133, 142, 143, 150, 153, 161, 163, 166, 177], "smooth": [12, 15, 16, 35, 46, 77, 79, 80, 81, 113, 128, 131, 145, 146, 147, 151, 161, 166, 169], "get": [12, 16, 22, 23, 25, 31, 35, 38, 40, 50, 51, 54, 118, 119, 121, 122, 134, 137, 142, 144, 154, 168, 169, 173, 177, 178, 181], "crude": [12, 50], "fine": [12, 28, 77], "high": [12, 54, 106, 113, 128, 181], "resolut": [12, 20, 46, 75, 105, 113, 137, 139, 142, 144, 151, 156, 157, 168, 173, 177], "move": [12, 13, 16, 48, 77, 113, 128, 142, 163], "few": 12, "zpad": 12, "4": [12, 14, 15, 16, 19, 28, 54, 77, 79, 81, 82, 83, 85, 86, 106, 107, 108, 109, 110, 116, 133, 141, 142, 144, 146, 147, 150, 170, 181], "zeropad": 12, "around": [12, 13, 28, 77, 81, 89, 132, 170], "edg": [12, 19, 25, 89, 113], "n": [12, 22, 81, 106, 133, 150, 170, 173], "dure": [12, 15, 31, 36, 37, 48, 54, 97, 99, 101, 105, 106, 113, 120, 123, 128, 130, 132, 134, 145, 146, 147, 173], "rotat": [12, 13, 28, 57, 81, 87, 97, 99, 101, 145, 146, 147, 168, 170, 177, 181], "in_weight_volum": 12, "tupl": [12, 14, 15, 16, 35, 38, 44, 52, 54, 79, 144, 181], "weight": [12, 15, 16, 21, 25, 28, 33, 36, 38, 39, 40, 42, 44, 54, 81, 104, 150, 162, 167], "md1d_file": 12, "aff12": 12, "reg_func_md": 12, "oned_fil": [12, 143], "movement": [12, 77, 92, 143, 149, 155], "txt": [12, 19, 28, 31, 38, 39, 44, 48, 50, 51, 55, 81, 84, 92, 94, 97, 99, 101, 102, 106, 116, 130, 132, 143, 145, 146, 147, 155, 157, 170], "reg_func_on": 12, "oned_matrix": 12, "reg_func_oned_matrix": 12, "reg_func": 12, "moving_imag": [13, 16, 142], "map": [13, 15, 20, 22, 27, 28, 32, 35, 39, 48, 53, 65, 75, 78, 79, 87, 97, 101, 113, 136, 145, 147, 149, 157, 169, 170, 177, 181], "fix": [13, 16, 24, 54, 78, 163], "fixed_imag": [13, 16], "t1w_templat": 13, "dimens": [13, 14, 15, 16, 19, 28, 42, 44, 46, 48, 79, 80, 106, 113, 128, 140, 141, 144, 151, 170, 173, 181], "local_search": 13, "determin": [13, 28, 40, 46, 48, 54, 67, 81, 97, 101, 113, 120, 128, 134], "local": [13, 45, 113, 128, 136, 164], "optim": [13, 20, 163, 167], "run": [13, 22, 25, 37, 45, 84, 100, 120, 124, 134, 135, 152, 153, 154, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 181, 182], "search": [13, 28, 77, 81, 156, 158], "iter": [13, 15, 16, 22, 39, 40, 49, 51, 77, 134, 135, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173], "affinetransform": 13, "affinetransform_": 13, "principal_ax": 13, "whether": [13, 28, 48, 67, 81, 107, 108, 109, 110, 128, 134, 170, 181], "princip": 13, "radian_fract": 13, "arc": 13, "ax": [13, 44, 45, 46, 47, 48, 59, 170, 181], "search_factor": 13, "15": [13, 16, 48, 49, 50, 54, 82, 119, 134, 142], "increment": 13, "degre": [13, 17, 28, 31, 50, 51, 77, 80, 81, 170], "mat": [13, 14, 16, 24, 25, 28, 55, 79, 97, 104, 105, 106, 107, 108, 109, 110, 130, 157], "affinetransform_t1w": 13, "input_imag": 14, "reference_imag": [14, 70, 71, 168], "wish": [14, 81], "warp": [14, 16, 48, 79, 80, 169], "ref_t1w": 14, "multipl": [14, 16, 52, 106, 152, 153, 157, 167, 172, 181], "last": [14, 19, 159], "post_n4c_t1w_clipped_masked_inversecomposit": 14, "h5": [14, 16, 137, 139, 142, 144], "default_valu": [14, 181], "forc": [14, 28, 36, 51, 156], "treat": 14, "dimension": [14, 105, 150], "instead": [14, 16, 19, 40, 173], "doubl": [14, 16, 28, 83, 113], "input_image_typ": 14, "type": [14, 20, 27, 28, 39, 50, 51, 54, 79, 82, 83, 85, 86, 102, 106, 107, 108, 109, 110, 119, 129, 133, 147, 148, 150, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 180], "scalar": [14, 38], "vector": [14, 52, 77, 107, 108, 109, 110, 133, 172, 173], "tensor": [14, 167], "nearestneighbor": [14, 16, 144], "cosinewindowedsinc": [14, 16, 144], "welchwindowedsinc": [14, 16, 144], "hammingwindowedsinc": [14, 16, 144], "lanczoswindowedsinc": [14, 16, 142, 144], "multilabel": [14, 16, 137, 144], "gaussian": [14, 15, 16, 17, 18, 46, 77, 79, 80, 81, 144, 166, 169, 173], "bspline": [14, 15, 16, 144], "model": [14, 15, 16, 18, 20, 21, 28, 39, 54, 97, 99, 101, 104, 107, 108, 109, 110, 130, 132, 157, 160, 165, 171], "t": [14, 22, 26, 79, 80, 97, 99, 101, 104, 105, 113, 132, 133, 150, 156, 157, 170, 172, 173], "t_": 14, "print_out_composite_warp_fil": 14, "composit": [14, 16, 137, 139, 142, 144], "interpolation_paramet": [14, 16], "form": [14, 15, 16, 35, 37, 38, 44, 52, 54, 79, 80, 144, 181], "sigma": [14, 16, 29, 170], "alphaparamet": [14, 16], "invert_transform_flag": 14, "invert": [14, 19, 24, 48, 67], "flag": 14, "ants_warp": 14, "tran": [14, 16, 170], "follow": [14, 27, 40, 77, 78, 79, 102, 106, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 165, 170, 172, 173, 177], "t_t1w": 14, "variant": 15, "popular": 15, "n3": 15, "nonparameter": 15, "nonuniform": 15, "normal": [15, 28, 54, 84, 91, 92, 132, 133, 145, 147, 148, 170, 177], "retrospect": 15, "base": [15, 19, 25, 28, 31, 37, 38, 39, 40, 45, 54, 76, 79, 84, 105, 106, 113, 128, 133, 134, 136, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 180, 181], "assumpt": 15, "corrupt": [15, 130, 170], "low": [15, 28, 113, 128, 170, 173, 181], "frequenc": [15, 113], "convolut": [15, 84, 156, 165, 168, 173], "intens": [15, 16, 22, 25, 27, 28, 34, 40, 44, 48, 73, 79, 80, 89, 91, 97, 101, 106, 113, 128, 133, 141, 148, 167, 168, 170], "histogram": [15, 16, 28, 77, 168], "basic": [15, 93, 105, 106, 133, 159, 168, 173], "protocol": [15, 37, 84, 85, 86, 170, 173], "deconvolv": [15, 50, 113], "remap": 15, "spatial": [15, 44, 46, 47, 75, 77, 81, 97, 101, 128, 145, 147, 149, 150, 152, 167, 169, 177], "spline": [15, 28, 77, 80, 81], "2d": [15, 19, 28], "4d": [15, 22, 26, 34, 48, 54, 70, 79, 81, 128, 132, 136, 145, 146, 147, 168, 173, 181], "thera": 15, "close": [15, 18, 52, 89, 91, 170], "prior": 15, "copy_head": 15, "n4c": [15, 114], "n4c_": 15, "rescale_intens": [15, 141], "rescal": [15, 28, 44], "min": [15, 19, 28, 47, 54, 113, 153], "rang": [15, 16, 19, 20, 27, 28, 97, 100, 101, 168, 170, 181], "theorigin": 15, "within": [15, 17, 31, 34, 35, 39, 40, 52, 54, 77, 91, 106, 107, 108, 109, 110, 113, 128, 132, 136, 157, 170], "user": [15, 82, 106, 107, 108, 109, 110, 156], "save_bia": 15, "estim": [15, 16, 17, 22, 32, 35, 37, 39, 52, 77, 79, 80, 81, 97, 99, 101, 106, 107, 108, 109, 110, 113, 128, 133, 138, 145, 146, 147, 149, 156, 167, 168, 170, 172], "bspline_fitting_dist": 15, "fit": [15, 17, 40, 49, 67, 81, 105, 170], "distanc": [15, 20, 21, 77, 79, 80, 81, 168], "300": [15, 31, 48], "bspline_ord": 15, "convergence_threshold": [15, 16, 142, 144], "converg": [15, 16, 51], "n_iter": [15, 141], "1e": [15, 16, 142, 144], "6": [15, 28, 29, 48, 51, 54, 79, 82, 83, 85, 86, 103, 106, 107, 108, 109, 110, 119, 134, 150, 155, 165, 168, 170, 173, 181], "histogram_sharpen": 15, "three": [15, 27, 31, 44, 46, 47, 48, 53, 83, 107, 108, 109, 110, 134, 147, 148], "sharpen": 15, "fwhm": [15, 29, 77, 79, 80, 81, 83, 87, 88, 162], "wienernos": 15, "numberofhistogrambin": 15, "These": [15, 17, 77, 81, 105, 152, 153], "describ": [15, 57, 66, 72, 75, 77, 79, 80, 170, 181], "deconvolut": [15, 31, 54, 133, 148, 167, 173], "been": [15, 37, 42, 54, 77, 78, 81, 93, 95, 106, 113, 124, 128, 134, 152, 153, 170], "shown": 15, "work": [15, 60, 71, 94, 102, 133, 150, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173], "fairli": 15, "well": 15, "12": [15, 26, 28, 40, 77, 82, 106, 118, 122, 170, 181], "02": [15, 77], "200": [15, 54], "mask_imag": [15, 105, 106], "region": [15, 16, 38, 54, 57, 63, 64, 81, 89, 94, 113, 128, 130, 132, 166, 168, 170, 173], "t1w_mask": [15, 68], "50": [15, 80, 82, 92, 128, 141, 155], "30": [15, 16, 52, 80, 82, 118, 144, 146], "20": [15, 16, 45, 79, 82, 93, 106, 118, 119, 142, 144], "shrink_factor": [15, 16, 142, 144], "shrink": [15, 16], "factor": [15, 16, 46, 49, 106, 107, 108, 109, 110, 113, 128, 170, 173], "weight_imag": [15, 25], "rel": [15, 80, 107, 108, 109, 110, 170], "g": [15, 22, 48, 79, 80, 91, 97, 101, 102, 113, 123, 128, 132, 152, 153, 173], "probabl": [15, 77, 78, 79, 80, 81, 145, 147, 177], "white": [15, 25, 27, 28, 31, 54, 58, 59, 61, 68, 72, 79, 89, 133, 139, 148, 150, 151, 167, 168, 169, 170, 177], "matter": [15, 25, 27, 28, 31, 42, 54, 76, 79, 89, 93, 133, 139, 148, 150, 157, 167, 168, 169, 170, 177, 179], "t1w_pve_0": [15, 27], "bias_imag": [15, 56, 140, 141, 144], "t1w_bia": [15, 56], "negative_valu": 15, "present": [15, 27, 36, 102, 113, 115, 134, 170], "otherwis": [15, 82, 113, 123, 130, 168], "n4c_t1w": [15, 140], "regist": [16, 23, 28, 57, 80, 87, 90, 133, 142, 143, 145, 147, 150, 162, 163, 166, 177], "predefin": 16, "sequenc": [16, 132, 134, 136, 145, 146, 147, 170], "cost": [16, 28, 39], "oper": [16, 47, 123, 159, 167, 173], "metric": [16, 89, 113, 128, 142, 144, 167, 170, 178], "both": [16, 23, 28, 33, 67, 115], "non": [16, 17, 22, 27, 31, 36, 48, 73, 79, 80, 128, 153, 164, 168, 170], "usual": [16, 76, 113, 136, 152, 153, 161], "done": [16, 19, 22, 40, 81, 107, 108, 109, 110, 133, 143, 148, 149, 150, 165, 170], "stage": [16, 105, 145, 146, 147, 160, 177], "affin": [16, 79, 80, 142, 144, 163, 166], "rigid": [16, 25, 28, 142, 144], "ultim": 16, "syn": [16, 144], "see": [16, 25, 28, 54, 78, 81, 105, 106, 135, 144, 155, 157, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 180], "transform_paramet": [16, 142, 144], "initial_moving_transform": 16, "alreadi": [16, 28, 42, 77, 81, 104, 105], "warpfield": [16, 25], "correct": [16, 25, 36, 37, 45, 82, 88, 91, 106, 120, 133, 141, 144, 145, 147, 148, 149, 155, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 177], "geometr": 16, "distort": [16, 25, 37, 133, 149, 167], "epi": [16, 28, 37, 133, 136, 149, 166, 170, 177], "want": [16, 17, 86, 152], "structur": [16, 28, 63, 64, 81, 84, 85, 86, 154, 166, 170, 177, 178], "could": [16, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 77, 79, 95, 102, 128, 133, 145, 147], "intial_moving_transform": 16, "here": [16, 54, 93, 114, 158, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173], "found": [16, 117, 133, 149, 158, 159, 163, 165, 168, 170], "fmriprep": [16, 144, 163], "mriqc": [16, 57, 59, 61, 62, 65, 66, 72, 90, 91, 92, 103, 137, 138, 139, 141, 142, 143, 144, 155, 163, 165, 168, 170, 177, 178, 181], "niworkflow": [16, 58, 67, 68, 73, 89, 90, 163, 168, 170], "should": [16, 17, 24, 25, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 63, 64, 77, 79, 80, 81, 87, 88, 93, 104, 105, 107, 108, 109, 110, 114, 118, 119, 121, 122, 133, 148, 149, 152, 153, 170], "templat": [16, 46, 48, 57, 70, 71, 80, 87, 90, 137, 144, 155, 168, 169, 177], "collapse_output_transform": 16, "collaps": 16, "initialize_transforms_per_stag": 16, "previou": [16, 40, 78], "genericlabel": [16, 144], "item": [16, 19, 22, 27, 29, 31, 34, 36, 38, 43, 44, 45, 49, 50, 58, 70, 71, 76, 77, 79, 80, 81, 82, 83, 87, 104, 105, 106, 107, 108, 109, 110, 117, 120, 122, 132, 134, 136, 144, 145, 146, 147, 157], "cc": [16, 144], "meansquar": [16, 144], "demon": [16, 144], "gc": [16, 144], "mi": [16, 77, 144], "matt": [16, 142, 144], "avail": [16, 25, 37, 106, 120, 123, 152, 153, 174], "cross": [16, 54, 77, 134, 148], "squar": [16, 28, 40, 44, 48, 104, 106], "inform": [16, 25, 27, 28, 77, 87, 88, 91, 97, 101, 102, 105, 106, 113, 118, 119, 122, 133, 134, 156, 159, 167, 173, 181], "metric_weight": [16, 142, 144], "sum": [16, 47, 49, 79, 80, 170], "per": [16, 27, 39, 49, 54, 79, 82, 97, 99, 101, 105, 106, 107, 108, 109, 110, 113], "output_inverse_warped_imag": 16, "inverse_warped_imag": 16, "w": [16, 80, 170], "w_": 16, "radius_bins_item_trait": 16, "radiu": [16, 22, 54, 92, 170], "bin": [16, 28, 106], "signa_unit": 16, "vox": [16, 39, 44, 80], "mm": [16, 20, 21, 22, 29, 38, 44, 54, 77, 79, 80, 81, 83, 92, 139, 170, 177], "len": 16, "unit": [16, 28, 82, 91, 106, 181], "smoothing_sigma": [16, 142, 144], "compositeaffin": [16, 144], "translat": [16, 81, 97, 99, 101, 144, 145, 146, 147, 181], "gaussiandisplacementfield": [16, 144], "timevaryingvelocityfield": [16, 144], "timevaryingbsplinevelocityfield": [16, 144], "bsplinesyn": [16, 144], "exponenti": [16, 144], "bsplineexponenti": [16, 144], "01": [16, 77], "08": [16, 142, 144], "use_estimate_learning_rate_onc": 16, "learn": [16, 20], "rate": [16, 76, 113, 132, 136, 173], "use_histogram_match": [16, 142], "match": [16, 19, 34, 39, 46, 48, 52, 77, 106, 114, 133, 165, 167], "winsorize_lower_quantil": 16, "005": 16, "quantil": 16, "winsorize_upper_quantil": 16, "995": 16, "upper": [16, 67], "write_composite_transform": 16, "number_of_iter": [16, 40, 142, 144], "07": [16, 122, 142], "8": [16, 31, 40, 61, 79, 82, 83, 105, 106, 107, 108, 109, 110, 113, 119, 122, 128, 132, 144], "convergence_window_s": [16, 142, 144], "window": [16, 28, 35, 45, 106, 113, 128], "size": [16, 18, 26, 28, 35, 42, 44, 46, 54, 60, 77, 80, 81, 94, 97, 101, 106, 107, 108, 109, 110, 113, 128, 147, 168, 170, 181], "fixed_image_mask": 16, "null": [16, 54], "limit": [16, 26], "sampl": [16, 28, 46, 48, 54, 77, 79, 80, 81, 152, 153, 172], "omit": [16, 31, 38, 107, 108, 109, 110], "template_desc": 16, "brain_mask": [16, 20, 21, 52, 90, 96, 98, 142, 148, 149], "initial_moving_transform_com": 16, "center": [16, 18, 22, 107, 108, 109, 110, 170, 172], "invert_initial_moving_transform": 16, "indicatewheth": 16, "invers": [16, 38, 48, 78, 79, 137, 139, 142, 144, 150, 173], "moving_image_mask": 16, "t1w_desc": [16, 19, 20, 21, 142], "10000": [16, 144], "1000": [16, 31, 54, 91, 144, 155, 170], "100": [16, 19, 54, 80, 113, 144], "500": [16, 38, 144], "250": [16, 144], "radius_or_number_of_bin": [16, 142, 144], "other": [16, 18, 54, 58, 77, 79, 80, 82, 106, 107, 108, 109, 110, 113, 114, 124, 131, 132, 133, 158, 160, 161, 162, 170, 173, 177], "56": [16, 97, 101, 119, 122, 142, 144], "random_se": 16, "seed": [16, 52, 54, 133, 150, 167], "random": [16, 54, 61, 134, 142, 144, 152, 153], "gener": [16, 22, 23, 31, 37, 53, 54, 77, 80, 81, 105, 106, 113, 132, 134, 135, 136, 150, 159, 160, 167, 168, 170, 172, 173, 179, 181], "sampling_percentag": [16, 142, 144], "percentag": [16, 120, 128], "strategi": [16, 20], "sampling_strategi": [16, 142, 144], "regular": [16, 144], "composite_transform": [16, 142, 144], "t1w_composit": 16, "inverse_composite_transform": [16, 137, 139, 142, 144], "t1w_inversecomposit": 16, "w_inverse_t1w": 16, "warped_imag": [16, 142], "w_t1w": 16, "dki": [17, 40, 164], "expans": [17, 106], "dti": [17, 40], "quantif": 17, "water": 17, "biolog": [17, 133, 150], "tissu": [17, 31, 33, 39, 54, 63, 64, 65, 79, 80, 84, 85, 86, 87, 128, 133, 136, 148, 154, 162, 166, 167, 170, 173, 177], "us": [17, 19, 20, 22, 25, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 57, 58, 59, 60, 61, 67, 68, 69, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 98, 100, 102, 103, 104, 106, 107, 108, 109, 110, 113, 114, 118, 119, 120, 122, 123, 128, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 143, 144, 145, 147, 148, 150, 151, 154, 155, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 180, 181], "propos": [17, 45, 177], "dipi": [17, 18, 131, 160, 161, 177], "sinc": [17, 28, 44, 46, 48, 87, 88], "standard": [17, 18, 23, 29, 48, 75, 79, 80, 98, 107, 108, 109, 110, 113, 128, 130, 132, 168, 170, 179], "statist": [17, 37, 39, 97, 99, 101, 132, 134, 135, 156, 157, 160, 167, 168, 171, 172, 180], "anisotropi": [17, 53], "fa": [17, 50, 53, 54], "md": 17, "axial": [17, 45, 53, 103], "ad": [17, 44, 53, 78, 93, 104, 105, 181], "radial": [17, 53], "rd": [17, 53], "In": [17, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 81, 85, 86, 105, 106, 128, 133, 134, 135, 148, 149, 158, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 181], "addit": [17, 22, 37, 39, 42, 78, 81, 106, 107, 108, 109, 110, 122], "mk": 17, "ak": 17, "rk": 17, "mkt": 17, "kfa": 17, "depend": [17, 28, 85, 86, 110, 132], "in_dwi": [17, 44, 133, 148, 149, 150], "multi": [17, 31, 50, 106, 133, 163, 167], "shell": [17, 31, 50, 51, 133, 167], "acquir": [17, 37, 45, 106, 132, 136, 169], "dwi": [17, 31, 37, 40, 44, 45, 46, 47, 48, 50, 51, 54, 55, 133, 167, 176, 177], "dwi_bvec": 17, "bvec": [17, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 133, 149], "suppli": [17, 28, 44, 46, 49, 113, 130, 133, 149], "dwi_bval": 17, "bval": [17, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 133, 149], "in_mask": [17, 18, 31, 32, 34, 35, 40, 41, 42, 50, 51, 88, 91, 137, 170], "brain": [17, 18, 19, 20, 21, 25, 30, 31, 39, 40, 41, 42, 50, 52, 63, 64, 75, 81, 88, 89, 90, 91, 95, 96, 97, 99, 101, 107, 108, 109, 110, 113, 128, 132, 134, 136, 142, 144, 148, 149, 155, 162, 166, 167, 170, 173, 176, 177], "dwi_brainmask": [17, 31, 32, 33, 35, 38, 40, 49, 50, 51], "out_fa": 17, "dwi_dki_fa": 17, "out_md": 17, "dwi_dki_md": 17, "out_rd": 17, "dwi_dki_rd": 17, "out_ad": 17, "dwi_dki_ad": 17, "out_mk": 17, "dwi_dki_mk": 17, "out_rk": 17, "dwi_dki_rk": 17, "out_ak": 17, "dwi_dki_ak": 17, "out_mkt": 17, "dwi_dki_mkt": 17, "out_kfa": 17, "dwi_dki_kfa": 17, "jensen": 17, "jh": 17, "2005": 17, "pixel": [18, 170], "specif": [18, 20, 54, 104, 105, 107, 108, 109, 110, 157, 165, 168, 172], "patch": 18, "contrast": [18, 20, 25, 67, 94, 102, 105, 106, 107, 108, 110, 113, 157, 170, 172, 173], "interest": [18, 28, 38, 54, 94, 97, 99, 101, 128, 130, 132, 166, 170, 172, 173], "block_radiu": 18, "block": [18, 106, 119, 134, 135, 165], "noise_model": 18, "rician": 18, "nois": [18, 35, 113, 128, 149, 167, 170, 173, 181], "distribut": [18, 39, 48, 50, 54, 67, 105, 113, 133, 167, 170, 177], "denoise_": 18, "patch_radiu": 18, "func_brain_mask": 18, "noise_mask": 18, "signal": [18, 20, 31, 40, 50, 61, 89, 93, 97, 106, 113, 128, 132, 136, 148, 154, 168, 170], "signal_mask": 18, "deviat": [18, 29, 98, 113, 128, 132, 168, 170, 179], "snr": [18, 138, 160, 168, 170], "ratio": [18, 28, 39, 46], "260": [18, 119], "denoise_func": 18, "articl": 18, "rmin": 19, "rmax": 19, "binval": 19, "binvalnot": 19, "By": [19, 22, 27, 40, 44, 50, 91, 158], "ab": 19, "take": [19, 26, 27, 54, 78, 113, 116, 136, 156], "absolut": [19, 107, 108, 109, 110, 168, 181], "unsign": [19, 83], "bin_col_nul": 19, "its": [19, 31, 42, 81, 82, 106, 113, 117, 128, 136, 156, 158, 170], "column": [19, 96, 97, 98, 101, 106, 118, 119, 122, 128, 157, 181], "get_count_fil": 19, "hit": 19, "ascii": [19, 48], "ntotvox": 19, "pct": 19, "four": 19, "nhit": 19, "total": [19, 37, 45, 48, 105, 113, 128, 133, 149, 181], "nvoxtot": 19, "percent": 19, "out_suffix": 19, "_thresh": 19, "mgz": [19, 20, 21], "zero_edg": 19, "plane": [19, 45, 96, 97, 98, 101, 106, 181], "sure": [19, 77, 81, 82], "zero_slice_edg": 19, "erode2d": 19, "frame_no": 19, "frame": [19, 79, 103, 155], "extract": [19, 20, 21, 25, 93, 95, 130, 133, 149, 150, 154, 162, 166, 167, 168, 177, 179], "label": [19, 75, 84, 139, 154, 168, 170, 181], "globalmean": 19, "count_fil": 19, "pathlik": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 70, 71, 79, 80, 81, 82, 84, 93, 95, 96, 104, 105, 106, 107, 108, 109, 110, 145, 146, 147, 148, 151, 157], "object": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 70, 71, 77, 79, 80, 81, 82, 84, 93, 95, 96, 104, 105, 106, 107, 108, 109, 110, 134, 145, 146, 147, 148, 151, 157, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 177, 181], "contain": [19, 25, 27, 31, 37, 38, 39, 54, 76, 77, 80, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 118, 119, 122, 132, 148, 151, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 179, 180, 181], "t1w_binarize_count_fil": 19, "freesurf": [19, 20, 131, 152, 160, 161, 177], "tool": [20, 28, 93, 131, 134, 135, 159, 160, 167, 170, 182], "mri_synthstrip": [20, 165], "landscap": 20, "modal": [20, 100, 134, 166, 169, 181], "subject": [20, 28, 77, 87, 90, 99, 100, 107, 108, 109, 110, 120, 134, 148, 169, 170, 177], "popul": 20, "leverag": 20, "deep": [20, 89], "synthes": 20, "arbitrari": 20, "train": [20, 165], "segment": [20, 22, 25, 28, 39, 41, 57, 78, 80, 86, 87, 89, 90, 96, 113, 128, 138, 152, 153, 155, 166, 168, 169, 170, 181], "robust": [20, 22, 113, 128], "agnost": 20, "your": [20, 21, 107, 108, 109, 110, 114, 152], "analysi": [20, 21, 97, 99, 101, 105, 107, 108, 109, 110, 113, 128, 130, 132, 134, 135, 136, 172, 176, 177], "cite": [20, 21, 84, 93, 170], "border_mm": [20, 21], "border": [20, 21, 45], "control": [20, 21, 26, 79, 80, 104, 105, 113, 120, 128, 132, 134, 168, 178], "boundari": [20, 21, 25, 28, 41, 133], "no_csf": 20, "exclud": [20, 21, 28, 36, 38, 54, 107, 108, 109, 110, 128], "csf": [20, 21, 25, 27, 31, 33, 50, 55, 75, 79, 85, 86, 139, 148, 150, 177], "out_mask": [20, 21, 140, 141], "binari": [20, 21, 22, 27, 31, 34, 39, 40, 52, 63, 64, 90, 134, 149, 168, 170], "adapt": [21, 57, 58, 59, 61, 62, 65, 66, 67, 68, 69, 72, 73, 74, 87, 88, 90, 91, 92, 93, 103, 137, 138, 139, 141, 142, 143, 144, 168, 170, 173, 177, 181], "mriqc_1": 21, "mriqc_2": 21, "freeesurfer_path": 21, "pt": 21, "altern": 21, "gpu": 21, "cli": [21, 165], "sever": [22, 75, 106, 133, 148, 154, 167, 173, 181], "surfac": [22, 79, 165, 166], "creat": [22, 23, 26, 31, 60, 70, 71, 80, 81, 94, 102, 104, 105, 106, 128, 130, 133, 136, 157, 162, 168, 170, 172, 173, 177, 181], "command": [22, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 162, 167], "line": [22, 37, 96, 97, 98, 100, 101, 181], "argument": [22, 26, 28, 54, 181], "mesh": [22, 23, 54], "vtk": [22, 23], "no_output": 22, "don": [22, 113], "outlin": 22, "o": 22, "frac": [22, 170], "f": [22, 99, 104, 105, 132, 135, 136, 168, 170], "vertical_gradi": 22, "vertic": [22, 38], "gradient": [22, 36, 44, 138, 168], "fmri": [22, 77, 80, 81, 91, 97, 99, 101, 113, 128, 130, 132, 134, 135, 157, 170, 172], "reduce_bia": 22, "pad": [22, 113, 173], "remove_ey": 22, "t2_guid": 22, "improv": [22, 54, 81, 113, 133], "fov": [22, 28], "veri": [22, 79, 80], "temporarili": 22, "end": [22, 38, 59, 67, 130, 132, 133, 134, 135, 150, 170], "reduce_biai": 22, "bia": [22, 32, 36, 80, 87, 133, 141, 144, 145, 147, 149, 163, 168, 169, 177], "field": [22, 28, 37, 48, 49, 75, 78, 79, 80, 132, 133, 136, 140, 141, 144, 145, 146, 147, 149, 151, 163, 167, 168, 181], "neck": 22, "cleanup": [22, 79], "optic": 22, "nerv": 22, "siena": 22, "centr": 22, "r": [22, 54, 77, 81, 99, 102, 111, 112, 123, 135, 157, 170], "bet2": [22, 23], "betsurf": [22, 23], "scalp": [22, 23], "includ": [22, 33, 36, 37, 38, 54, 75, 81, 97, 101, 104, 105, 106, 107, 108, 109, 110, 122, 128, 130, 132, 134, 136, 158, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173], "head": [22, 57, 77, 81, 82, 87, 91, 137, 140, 141, 147, 152, 155, 170, 177], "65": [22, 106, 119], "graviti": 22, "As": [22, 66, 72, 107, 108, 109, 110, 136], "feed": [22, 113], "t2": [22, 27, 42, 113, 128, 130, 132, 136, 145, 146, 147], "a2": 22, "t2w": [22, 75, 137, 138, 139, 140, 141, 142, 178], "skullstrip": [22, 23, 131, 140, 161, 162], "t1w_brain": [22, 23, 25], "t1w_brain_mask": [22, 137], "mesh_vtk_fil": 22, "t1w_brain_mesh": 22, "outline_fil": 22, "t1w_brain_overlai": 22, "skull_fil": 22, "t1w_brain_skul": 22, "inskull_mask_fil": [22, 23], "inskul": [22, 166], "t1w_brain_inskull_mask": [22, 23], "inskull_mesh_vtk_fil": [22, 23], "t1w_brain_inskull_mesh": [22, 23], "outskin_mask_fil": [22, 23], "outskin": [22, 96, 166], "t1w_brain_outskin_mask": [22, 23, 96], "outskin_mesh_fil": [22, 23], "t1w_brain_outskin_mesh": [22, 23], "outskin_mesh_vtk_fil": [22, 23], "outskull_mask_fil": [22, 23], "outskul": [22, 166], "t1w_brain_outskull_mask": [22, 23], "outskull_mesh_vtk_fil": [22, 23], "t1w_brain_outskull_mesh": [22, 23], "outskull_mesh_fil": [22, 23], "skull_mask_fil": [22, 23], "t1w_brain_skull_mask": [22, 23], "involv": [23, 77, 79, 80, 113, 132, 136], "in_transfo": 24, "epi2struct": [24, 25], "invert_xfm": 24, "fix_scale_skew": 24, "concat_xfm": 24, "joint": [24, 77], "matric": [24, 166], "in_trasfo_2": 24, "secondari": 24, "scale": [24, 34, 37, 44, 46, 49, 106, 107, 108, 109, 110, 128, 167], "skew": 24, "in_transfo_2": 24, "struc2mni": 24, "epi2struct_concate_struc2mni": 24, "epi_reg": [25, 166], "script": [25, 30, 37, 42, 159, 161, 166], "fsl": [25, 29, 32, 44, 65, 92, 131, 133, 150, 152, 160, 161, 167, 168], "To": [25, 60, 67, 71, 79, 94, 102, 104, 106, 131, 148, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173], "good": [25, 80, 120, 170], "grei": [25, 27, 31, 42, 54, 76, 79, 139, 156, 157, 167, 169, 177], "fiedmap": 25, "simultan": 25, "provid": [25, 28, 30, 34, 38, 39, 41, 42, 44, 47, 50, 51, 52, 54, 77, 81, 113, 128, 133, 149, 152, 153, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 177], "fmap": 25, "fmapmag": 25, "fmapmagbrain": 25, "about": [25, 77, 87, 88, 97, 101, 102, 113, 135, 156], "echospac": [25, 28], "pedir": [25, 28], "in_epi": [25, 88], "bold": [25, 88, 89, 91, 94, 102, 103, 132, 144, 154, 162, 168, 170, 177, 181], "in_t1": 25, "obtain": [25, 28, 33, 78, 85, 86, 93, 95, 113, 132, 134, 135, 152, 156, 170, 181], "betsurfacesextract": [25, 131, 154, 161, 166], "no_clean": 25, "clean": 25, "up": [25, 31, 82, 93, 102, 113, 128, 147, 173], "intermedi": [25, 37], "no_fmapreg": 25, "t1": [25, 27, 42, 50, 84, 132, 136, 145, 146, 147, 150, 162], "wmseg": 25, "fast": [25, 32, 42, 52, 106, 152, 166], "t1w_wmseg": 25, "weight_spac": 25, "fieldmap": [25, 28], "rad": [25, 28, 170], "magnitud": [25, 53, 168], "wholehead": 25, "fmap_mag": 25, "y": [25, 26, 28, 48, 52, 54, 77, 80, 81, 83, 133, 151, 170, 181], "phase": [25, 28, 37, 77, 81, 133, 170], "encod": [25, 28, 37, 77, 81, 120, 133, 134, 165, 170], "effect": [25, 79, 80, 93, 97, 99, 101, 102, 104, 105, 106, 107, 108, 109, 110, 132, 170], "echo": [25, 28, 37, 132, 136, 145, 146, 147, 170, 173], "unwarp": 25, "coregist": [25, 131, 133, 145, 146, 147, 150, 161, 169], "epi2str_ma": 25, "epi2str_inv": 25, "epi2struct_inv": 25, "out_1vol": 25, "epi2struct_1vol": 25, "fmap2epi_mat": 25, "epi2struct_fieldmaprads2epi": 25, "fmap2str_mat": 25, "epi2struct_fieldmap2str": 25, "fmap_epi": 25, "fmap_str": 25, "epi2struct_fieldmaprads2str": 25, "fmapmag_str": 25, "fullwarp": 25, "epi2struct_warp": 25, "shiftmap": 25, "epi2struct_fieldmaprads2epi_shift": 25, "seg": [25, 144, 170], "grai": [25, 89, 93, 133, 148, 150, 170, 179], "epi2struct_fast_seg": 25, "wmedg": 25, "visual": [25, 27], "epi2struct_fast_wmedg": 25, "wmseg_out": 25, "flirt": [25, 55, 131, 133, 150, 154, 161, 166], "bbr": [25, 28], "epi2struct_fast_wmseg": 25, "taken": [26, 81], "new": [26, 46, 93, 102, 104, 134, 170], "just": 26, "inclus": [26, 38, 54, 170], "would": [26, 81, 102, 106, 113, 128], "t1w_5tt": [26, 41, 42, 54], "t_min": 26, "t_size": 26, "x_min": 26, "x_size": 26, "y_min": 26, "y_size": 26, "z_min": 26, "z_size": 26, "roi_fil": 26, "5tt_roi": 26, "class": [27, 65, 79, 80, 81, 103, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 180, 181], "pd": 27, "chang": [27, 28, 44, 91, 105, 106, 113, 128, 132, 136, 159, 165, 167, 173], "img_typ": 27, "int": [27, 28, 46, 48, 69, 73, 75, 81, 83, 89, 106, 107, 108, 109, 110, 170, 173], "aid": 27, "identifi": [27, 113, 118, 128], "mixeltyp": 27, "classif": 27, "mixtur": [27, 132], "That": 27, "again": 27, "those": [27, 35, 38, 41, 52, 79, 80, 106, 114, 134, 170], "t1w_mixeltyp": 27, "partial_volume_fil": 27, "partial": [27, 170], "where": [27, 28, 48, 77, 81, 102, 105, 107, 108, 109, 110, 113, 128, 150, 156, 170, 181], "proport": [27, 106, 107, 108, 109, 110, 170], "t1w_pve_1": 27, "t1w_pve_2": 27, "partial_volume_map": 27, "pveseg": 27, "best": [27, 77, 128, 169, 181], "hard": 27, "quick": 27, "assess": [27, 93, 113, 130, 132, 134, 170, 173], "t1w_pveseg": 27, "tissue_class_fil": 27, "t1w_seg_0": 27, "t1w_seg_1": 27, "t1w_seg_2": 27, "tissue_class_map": 27, "classifi": [27, 168], "singl": [27, 28, 31, 36, 37, 46, 50, 51, 79, 83, 102, 106, 167, 170], "necessari": [27, 77, 94, 105, 106, 148, 150, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173], "etc": [27, 28, 48, 54, 79, 102, 106, 113, 128, 132, 151, 168, 170, 173], "t1w_seg": [27, 65, 66], "fmrib": 28, "calcul": [28, 41, 51, 67, 77, 82, 91, 94, 102, 107, 108, 109, 110, 113, 128, 134, 156, 159, 160, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 178, 180], "get_registered_fil": 28, "apply_xfm": [28, 154], "apply_isoxfm": 28, "still": 28, "view": 28, "b0mean": 28, "in_refer": 28, "in_matrix_fil": 28, "isotrop": [28, 77, 81], "resampl": [28, 60, 61, 71, 80, 106, 165, 168], "4x4": [28, 48], "matrix_struct_to_diff": 28, "angle_rep": 28, "euler": 28, "quaternion": 28, "represent": [28, 107, 108, 109, 110], "angl": [28, 54], "bbrslope": 28, "slope": 28, "bbrtype": 28, "sign": [28, 83], "global_ab": 28, "local_abl": 28, "bgvalu": 28, "background": [28, 57, 79, 170, 181], "outsid": [28, 38, 77, 81, 170], "256": [28, 77, 119], "coarse_search": 28, "60": [28, 52, 54, 79, 80, 118, 119], "coars": [28, 77], "delta": 28, "mutualinfo": 28, "corratio": 28, "normcor": 28, "normi": 28, "leastsq": 28, "labeldiff": 28, "There": [28, 107, 108, 109, 110], "main": [28, 49, 105, 106, 132, 134, 135, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173], "normalis": [28, 77, 80, 96, 97, 98, 99, 101, 106, 107, 108, 109, 110, 113, 145, 146, 147, 152, 167, 169], "recommend": [28, 77, 81, 105], "try": [28, 52, 79, 80, 181], "cost_func": 28, "searchcost": 28, "data_typ": [28, 83], "char": [28, 83], "short": [28, 83, 113, 128], "dof": [28, 150], "7": [28, 49, 50, 77, 79, 80, 81, 82, 85, 86, 106, 107, 108, 109, 110, 165], "freedom": 28, "larg": [28, 84, 113, 128], "appropri": [28, 46, 54, 167], "scanner": [28, 132, 170], "rigid2d": 28, "fine_search": 28, "18": [28, 82], "field_map_regist": 28, "fieldmapmask": 28, "field_map_registered_mask": 28, "force_sc": 28, "even": [28, 113, 128, 173], "re": [28, 75, 77, 113], "interp": [28, 46, 70, 77, 80, 81, 150], "trilinear": [28, 77, 80, 81], "nearestneighbour": [28, 150, 154], "reslic": [28, 46, 77, 81, 167], "applyxfm": 28, "in_weight": 28, "ref_weight": 28, "area": [28, 128], "increas": [28, 79, 80, 113, 128, 132, 150], "import": [28, 79, 104, 105, 113, 173], "ventricl": 28, "introduc": [28, 106], "artifici": 28, "wherea": [28, 81], "min_sampl": 28, "no_clamp": 28, "clampinp": 28, "no_resampl": 28, "no_resample_blur": 28, "blur": [28, 113, 128, 170], "downsampl": [28, 54], "no_search": 28, "angular": [28, 39, 92], "padding_s": 28, "mode": 28, "bodi": 28, "save_log": 28, "log": [28, 40, 130, 132, 167, 170], "schedul": 28, "what": [28, 87, 88, 113], "how": [28, 30, 53, 113, 168], "optimis": [28, 52], "fsldir": 28, "flirtsch": 28, "sch2d_6dof": 28, "searchr_x": 28, "90": [28, 80], "searchr_i": 28, "searchr_z": 28, "sinc_width": 28, "full": [28, 29, 79, 80, 83, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 180], "width": [28, 29, 48, 79, 80, 81, 83, 106, 128, 181], "sinc_window": 28, "rectangular": 28, "han": [28, 106], "blackman": 28, "use_qform": 28, "sform": 28, "qform": 28, "wm_seg": 28, "wmcoord": 28, "coordin": [28, 44, 54], "wm_coor": 28, "wmnorm": 28, "wm_norm": 28, "b0mean_registered_with_t1w": 28, "out_log": 28, "b0mean_flirt_log": 28, "out_matrix": 28, "b0mean_t1w_flirt": 28, "faq": 28, "nput": [29, 33], "uncompress": [29, 77, 80, 81, 82, 83, 94, 96, 113, 117, 128, 130, 132, 134, 135, 136, 145, 146, 147], "img": [29, 71, 77, 79, 80, 81, 83, 113, 117, 128, 130, 132, 136, 145, 151, 170], "hdr": [29, 71, 77, 79, 80, 81, 83, 113, 117, 128, 130, 132, 136, 145, 151], "half": [29, 37, 48, 79, 80, 83, 173], "kernel": [29, 77, 81, 83, 148], "Will": 29, "convert": [29, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 150, 167, 173], "intern": [29, 123, 134, 173], "approxim": [29, 52, 79, 80], "355": 29, "s_": 29, "filter": [29, 35, 41, 67, 76, 78, 84, 106, 113, 114, 116, 123, 126, 127, 128, 133, 167, 170, 172, 173], "55": [29, 54, 122], "s_func": 29, "matlab": [30, 93, 159, 161, 170, 173], "licens": [30, 84], "disclaim": [30, 152, 153], "proof": 30, "concept": 30, "develop": [30, 81, 102], "show": [30, 50, 51, 89, 134, 148, 170, 181], "wrap": [30, 77, 81, 161], "mia": [30, 93, 105, 152, 153], "absenc": 30, "better": [30, 77, 81, 170], "solut": [30, 173], "mcr": 30, "4929083": 30, "fiber": [31, 50, 54, 133, 177], "densiti": [31, 39, 48, 54, 133, 167], "basi": [31, 49, 106], "responsesddholland": [31, 131, 161, 167], "aim": [31, 50, 61, 107, 108, 109, 110, 133, 148, 149, 150], "amount": [31, 46, 48, 106, 136], "diffus": [31, 32, 33, 34, 35, 36, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 133, 148, 149, 150, 167, 176], "orthogon": 31, "spheric": [31, 39, 48, 53, 54, 133, 148, 167], "mrtrix": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 131, 150, 160, 161], "dwi2fod": [31, 167], "mia_process": [31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 77, 78, 79, 80, 81, 82, 83, 106, 107, 108, 109, 110, 152, 153, 158], "mif": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 133, 148, 149, 150], "mrconvert": [31, 32, 33, 34, 35, 36, 37, 40, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 131, 161, 167], "case": [31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 102, 105, 170], "wm_txt": 31, "wm": [31, 50, 51, 54, 75, 78, 79, 85, 86, 139, 148, 170, 177], "respons": [31, 55, 105, 106, 120, 130, 133, 134, 148, 167, 173], "text": [31, 37, 38, 39, 44, 50, 51, 55, 132, 170], "csd": [31, 133, 148], "row": [31, 89, 119, 122, 128, 170, 181], "msmt_csd": [31, 148], "dwi_response_wm": [31, 50, 51], "uniqu": [31, 148], "comparti": 31, "get_predicted_sign": [31, 40, 148], "predict": [31, 40, 148], "csf_txt": 31, "cerebrospin": [31, 89, 139, 148, 177], "fluid": [31, 89, 148], "dwi_response_csf": [31, 50], "gm_txt": 31, "gm": [31, 39, 50, 54, 75, 78, 79, 85, 86, 107, 108, 109, 110, 139, 148, 170, 177], "dwi_response_gm": [31, 50], "in_direct": 31, "az": 31, "el": 31, "pair": [31, 37, 91, 149], "over": [31, 46, 48, 54, 106, 113, 128, 156, 162, 173], "constraint": 31, "max_sh": [31, 50, 51], "harmon": [31, 39, 48, 50, 51, 72, 87, 131, 133, 152, 161, 167, 168], "lmax": 31, "3000": [31, 36, 89], "wm_odf": 31, "odf": 31, "dwi_wm_odf": 31, "gm_odf": 31, "dwi_gm_odf": 31, "csf_odf": 31, "dwi_csf_odf": 31, "predicted_signal_fil": [31, 40, 148], "dwi_odf_predicted_sign": 31, "use_fsl": 32, "configur": [32, 37], "populs": [32, 37, 158, 163, 165, 168, 169], "use_an": 32, "ant": [32, 131, 140, 141, 144, 160, 161, 168], "n4": [32, 163], "dwi_unbia": 32, "bias_field_map": 32, "dwi_bias_field_map": 32, "dwi2mask": [33, 37, 167], "dwi1": [34, 43], "dwi2": [34, 43], "brainmask": [34, 41, 42, 155], "out_nam": [34, 181], "concat_filename1_filenam": 34, "new_concate_imag": 34, "concat_dwi1_dwi2": 34, "marchenko": 35, "pastur": 35, "pca": [35, 167], "pipelin": [35, 77, 114, 124, 131, 157, 158, 159, 170, 173, 182], "extend": [35, 100, 113], "dwi_denois": 35, "noise_map": 35, "dwi_noise_map": 35, "certain": [36, 131, 167, 181], "bzero": 36, "nobzero": 36, "singleshel": 36, "enforc": 36, "presenc": [36, 39, 173], "no_bzero": 36, "them": [36, 39, 79, 80, 118, 177, 181], "dwi_bzero": 36, "inhomogen": [37, 133, 136, 149, 167, 170], "dwifslpreproc": [37, 167], "rpe_opt": [37, 149], "rpe_non": 37, "rpe_al": 37, "oppos": [37, 133, 149], "fill": [37, 60, 71, 94, 102, 107, 108, 109, 110, 121, 168, 170], "concaten": [37, 47, 63, 123, 149, 167, 173], "rpe_pair": 37, "typic": [37, 77, 79, 81, 106, 113, 132, 136], "ha": [37, 42, 54, 77, 106, 124, 152, 153], "se_epi_corr": 37, "consist": [37, 46, 58, 59, 61, 66, 68, 72, 79, 134], "spin": 37, "part": [37, 76, 93, 113, 130, 170], "rpe_air": 37, "se": 37, "possess": 37, "while": [37, 54, 77, 79, 80, 113, 115, 128, 132, 134, 135], "opposit": [37, 133, 149], "ident": [37, 48, 77, 81, 105, 152, 153, 165], "readout": [37, 133, 149, 170], "dwi_b0_inverse_phas": 37, "pe_dir": 37, "ap": [37, 133, 149], "pa": [37, 133, 149], "lr": [37, 133, 149], "rl": [37, 133, 149], "anterior": [37, 80, 133, 149, 170], "posterior": [37, 133, 149, 170], "left": [37, 45, 93, 102, 133, 149, 154, 170], "right": [37, 45, 93, 102, 124, 133, 149, 154, 170], "toleft": [37, 133, 149], "align_seepi": 37, "achiev": [37, 132], "eddyqc_al": 37, "keep": [37, 42, 54], "eddy_qc": 37, "instal": [37, 131, 152], "eddyqc_text": 37, "variou": [37, 113, 132, 136, 159, 160, 167, 174, 177, 179], "nocleanup": 37, "delet": [37, 70, 71, 94, 168, 173, 181], "scratch": 37, "directori": [37, 60, 71, 94, 102, 104, 105, 106, 107, 108, 109, 110, 123, 159, 168, 170, 173, 181], "complet": [37, 158, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 180], "ro_tim": 37, "eddy_mask": 37, "automaticcali": 37, "dwi_brain_mask": 37, "eddy_opt": [37, 149], "slm": [37, 149], "repol": 37, "data_is_shel": [37, 149], "eddy_slspec": 37, "group": [37, 110, 148, 170, 181], "topup_opt": 37, "preprocess": [37, 131, 133, 134, 135, 148, 150, 157, 159, 160, 170, 174], "dwi_fslpreproc": 37, "tckedit": [38, 167], "in_track": [38, 39], "tck": [38, 39, 54, 133], "select": [38, 39, 44, 46, 50, 51, 53, 54, 77, 78, 79, 81, 106, 123, 124, 128, 148, 151, 167, 173], "streamlin": [38, 39, 133, 150, 167], "criteria": [38, 54], "fail": 38, "criterion": [38, 128, 170], "written": [38, 77, 80, 81, 107, 108, 109, 110, 121, 123, 173], "ends_onli": 38, "test": [38, 51, 105, 106, 128, 172], "against": [38, 113, 128], "roi": [38, 54, 85, 86, 93, 94, 102, 123, 128, 154, 166, 168, 170, 173, 179], "get_tck_weights_out_desc": 38, "roi_excl": [38, 54], "enter": [38, 54, 83, 99, 107, 108, 109, 110, 132, 135, 136], "discard": [38, 54, 69, 155], "roi_incl": [38, 54], "travers": [38, 54], "accept": [38, 54, 77, 113, 128, 130, 181], "roi_incl_ord": [38, 54], "inclusion_ord": [38, 54], "roi_mask": [38, 54], "exit": [38, 54, 107, 108, 109, 110, 159], "truncat": [38, 54, 113, 173], "maxlength": 38, "26": [38, 82, 106, 119, 122, 170], "minlength": 38, "desir": [38, 46, 54, 102], "propag": [38, 54], "20000": 38, "skip": [38, 103], "commenc": 38, "maxweight": 38, "minweight": 38, "tck_weights_in": 38, "tck_weight": 38, "tracks_out": [38, 39], "tracks_edit": 38, "tck_weights_out": 38, "tracks_tck_weight": 38, "whole": [39, 41, 50, 77, 81, 95, 123, 133, 167, 176], "fibr": [39, 48, 50, 51, 133, 148, 167], "fod": [39, 48, 54, 133, 167], "lobe": [39, 84, 85, 86, 133, 134, 154, 167], "integr": [39, 54, 93, 133, 167], "tcksift": [39, 167], "in_fod": 39, "wm_fod_norm": 39, "sift": [39, 54, 133], "fd_scale_gm": 39, "conjunct": 39, "act": [39, 42, 54, 113, 128, 133, 150, 167], "heurist": 39, "downsiz": 39, "no_dilate_lut": 39, "lookup": [39, 52], "tabl": [39, 52], "precis": [39, 54, 73, 81, 113, 128, 152, 153], "tangent": 39, "li": [39, 93, 170], "spread": [39, 48], "make_null_lob": 39, "cover": [39, 181], "amplitud": [39, 52, 54], "remove_untrack": 39, "attribut": [39, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173], "get_csv_fil": 39, "csv": [39, 64, 84, 95, 99, 118, 119, 122, 130, 132, 173], "get_mu_fil": 39, "get_out_selection_fil": 39, "proc_mask": 39, "act_imag": [39, 54], "five": [39, 54], "deriv": [39, 42, 51, 53, 97, 99, 101, 104, 105, 106, 113, 132, 165], "5tt_coreg": [39, 150], "fd_thresh_valu": 39, "term_ratio_valu": 39, "termin": [39, 54, 133], "reduct": 39, "term_mu_valu": 39, "onc": [39, 54, 67], "proportion": 39, "reach": [39, 54, 113, 136], "tracks_sift": [39, 133], "csv_file_out": 39, "tracks_tcksift_stat": 39, "mu_file_out": 39, "mu": 39, "tracks_tcksift_mu": 39, "selection_file_out": 39, "tracks_tcksift_select": 39, "kurtosi": [40, 170], "wl": 40, "empir": 40, "ordinari": 40, "ol": 40, "ols_opt": 40, "iwl": 40, "choos": [40, 44, 54, 77, 85, 86, 100, 107, 108, 109, 110, 133], "dwi2tensor": [40, 167], "estimate_dkt": 40, "get_output_b0": 40, "b0": [40, 150, 177], "contribut": [40, 97, 173], "number_of_it": 40, "reweight": 40, "ma": 40, "d11": 40, "d22": 40, "d33": 40, "d12": 40, "d13": 40, "d23": 40, "dwi_dti": [40, 53], "out_dkt": 40, "w1111": 40, "w2222": 40, "w3333": 40, "w1112": 40, "w1113": 40, "w1222": 40, "w1333": 40, "w2223": 40, "w2333": 40, "11": [40, 82, 119, 128, 170], "w1122": 40, "w1133": 40, "w2233": 40, "14": [40, 82, 106, 122], "w1123": 40, "w1223": 40, "w1233": 40, "dwi_dki": 40, "out_b0": 40, "dwi_b0": 40, "dwi_dti_predicted_sign": 40, "5tt2gmwmi": [41, 167], "5tt": [41, 54, 150, 167], "generate5ttfsl": [41, 131, 161, 167], "accord": [41, 76, 82, 84, 163], "lie": 41, "upon": 41, "t1w_5tt_gmwmseed": 41, "suitabl": [42, 77, 81, 167], "constrain": [42, 54, 133, 148, 150], "tractographi": [42, 131, 150, 161, 167, 176], "5ttgen": [42, 167], "no_crop": 42, "reduc": [42, 54, 113, 128, 133, 173], "sgm_amyg_hipp": 42, "amygdala": 42, "hippocampi": 42, "cortic": [42, 85, 86, 89, 150], "premask": 42, "t2_imag": 42, "out_file_nam": [43, 47], "out_file_format": 44, "export_bvec_bv": 44, "export": [44, 124], "retain": [44, 76, 113], "fourth": [44, 105], "begin": [44, 94, 103, 123, 128, 168], "24": [44, 82, 106, 118, 122], "report": [44, 84, 131, 132, 134, 135, 136, 152, 153, 159, 160, 174, 182], "25": [44, 54, 82, 144], "0mm": 44, "5mm": 44, "respect": [44, 181], "leav": 44, "bval_scal": 44, "ye": 44, "enabl": [44, 77, 81], "disabl": [44, 46, 91], "dw": 44, "norm": [44, 47, 142, 168], "grad_fil": 44, "scheme": 44, "diff_mrtrix_format": 44, "in_bvec": 44, "in_bval": 44, "bavl": 44, "out_bvec": 44, "out_bval": 44, "artefact": [45, 149], "mri": [45, 77, 79, 80, 81, 113, 132, 134, 135, 162, 170, 173, 178], "subvoxel": 45, "kellner": 45, "et": [45, 91, 170], "al": [45, 91, 134, 170], "motion": [45, 77, 81, 88, 89, 91, 92, 132, 133, 149, 155, 170, 177], "dwipreproc": [45, 131, 161, 167], "wa": [45, 77, 81, 123, 124, 134, 159, 173], "coron": 45, "sagitt": 45, "maxw": 45, "variat": [45, 79, 80, 130, 132, 152, 153], "tv": 45, "minw": 45, "nshift": 45, "discret": 45, "subpixel": 45, "unring": [45, 133, 149], "dwi_unring": 45, "locat": [46, 54, 89], "down": [46, 82, 147], "unless": 46, "nearest": [46, 48, 70, 77, 80, 81, 107, 108, 109, 110, 173], "neighbour": [46, 77, 80, 81, 107, 108, 109, 110], "oversampl": [46, 173], "explicitli": [46, 106], "mrgrid": [46, 167], "regrid": [46, 167], "among": [46, 61, 93, 107, 108, 109, 110], "nearesr": 46, "defaunt": 46, "hi": 46, "120": [46, 80], "target": [46, 48, 77, 165], "downloaded_data_data": 46, "dwi_regrid": 46, "product": [47, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173], "rm": 47, "var": 47, "std": [47, 74, 94], "absmax": 47, "magmax": 47, "sdt": 47, "absmin": 47, "thu": [47, 76], "oerat": 47, "mean_along_axis3": 47, "dwi_mean": 47, "modifi": [48, 106, 166, 167, 168], "reorient": 48, "apodis": 48, "4th": [48, 54, 79, 106, 173], "antipod": 48, "symmetr": 48, "28": [48, 82, 106, 122], "fod_reori": 48, "root": 48, "midway_spac": 48, "midwai": 48, "template_imag": 48, "warp_imag": 48, "linear_transform": 48, "3x4": 48, "convent": 48, "flix_ax": 48, "flip": 48, "replace_fil": 48, "oversample_factor": 48, "deform": [48, 78, 79, 145, 147, 151], "deformation_field": [48, 80], "warp_full_imag": 48, "5d": 48, "mrregist": 48, "deformation_field_5d": 48, "fod_modul": 48, "jac": 48, "modul": [48, 53, 79, 106, 158, 160, 161, 171, 174, 182], "preserv": [48, 83, 113], "appar": [48, 53], "bundl": 48, "jacobian": 48, "fod_direction_fil": 48, "dwi_transform": 48, "dwi_wmfod": 49, "dwi_gmfod": 49, "dwi_csffod": 49, "order_numb": 49, "niter_numb": 49, "potenti": [49, 113, 128, 132], "loop": 49, "inner": 49, "updat": [49, 181], "balanc": [49, 113, 128], "reference_numb": 49, "282095": 49, "posit": [49, 54, 67, 81, 93, 113, 116, 126, 127, 128], "compart": [49, 148], "balanced_numb": 49, "incorpor": 49, "dwi_wmfod_norm": 49, "dwi_gmfod_norm": 49, "dwi_csffod_norm": 49, "unsupervis": 50, "decompos": 50, "smaller": [50, 81, 113, 128], "individu": [50, 105, 130, 134, 181], "dwi2respons": [50, 51, 167], "fa_thresh": 50, "versu": [50, 81], "get_final_voxel": [50, 51], "were": [50, 51, 105, 106], "construct": [50, 51, 102], "basu": [50, 51], "tisuu": [50, 51], "40": [50, 80, 82, 118, 119, 134], "wm_algo": 50, "tax": 50, "tournier": [50, 167], "extern": 50, "2019": 50, "csf_file": 50, "wm_file": [50, 51], "gm_file": 50, "voxels_imag": [50, 51], "dwi_response_voxel": [50, 51], "iter_voxel": 51, "prepar": [51, 133, 148, 150], "next": [51, 94, 106, 170], "max_it": 51, "sh2peak": [52, 167], "in_sh_coeff": 52, "sh": 52, "wm_fod": 52, "num": 52, "associ": [52, 63, 64, 97, 101, 105, 106, 113, 123, 128, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173], "faster": [52, 79, 80, 81], "phi": 52, "theta": 52, "peaks_imag": 52, "thresh_valu": 52, "greater": [52, 113, 128, 168], "consid": [52, 91, 113, 128, 173], "seeds_fil": 52, "restart": 52, "output_imag": 52, "turn": [52, 133], "wm_fod_peak": 52, "adc": 53, "planar": [53, 132, 136, 145, 146, 147], "eigenvalu": 53, "eigenvector": 53, "tensor2metr": [53, 167], "eigval": 53, "get_ad": 53, "get_adc": 53, "get_cl": 53, "westin": 53, "shape": [53, 59, 170, 173, 181], "get_cp": 53, "get_c": 53, "get_fa": 53, "get_rd": 53, "get_valu": 53, "get_vector": 53, "computeth": 53, "ad_fil": 53, "dwi_dti_ad": 53, "adc_fil": 53, "dwi_dti_adc": 53, "cl_file": 53, "dwi_dti_cl": 53, "cp_file": 53, "dwi_dti_cp": 53, "cs_file": 53, "dwi_dti_c": 53, "fa_fil": 53, "dwi_dti_fa": 53, "rd_file": 53, "dwi_dti_rd": 53, "value_fil": 53, "dwi_dti_valu": 53, "vector_fil": 53, "dwi_dti_vector": 53, "tckgen": [54, 167], "At": 54, "mechan": 54, "ifod2": 54, "fact": [54, 106, 133], "ifod1": 54, "nulldist": 54, "sd_stream": 54, "tensor_det": 54, "tensor_prob": 54, "assign": [54, 159], "continu": [54, 70, 113, 132], "track": [54, 133, 136, 150, 167], "sd": 54, "determinist": 54, "probabilist": 54, "cutoff": [54, 79, 80], "nopreselectcompt": 54, "pre": [54, 113, 128, 130, 134, 135, 160, 167, 168, 177], "use_rk4": 54, "rung": 54, "kutta": 54, "tracto_seed_unidirect": 54, "tracto_get_output_se": 54, "success": [54, 77, 158, 159], "backtrack": 54, "crop_at_gmwmi": 54, "endpoint": 54, "interfac": [54, 79, 158, 167, 168], "nulldist1": 54, "45": [54, 82, 122], "nulldist2": 54, "downsample_factor": 54, "max_lenght": 54, "voxels": 54, "min_lenght": 54, "step_siz": 54, "rk4": 54, "32": [54, 82, 106, 119, 122, 173], "trial": [54, 106, 118], "5000": 54, "seed_dynam": 54, "dynam": [54, 105, 113, 130, 173], "reconstruct": [54, 170], "substitut": 54, "seed_gmwmi": 54, "framework": 54, "gmwmseed_coreg": [54, 150], "seed_grid_voxel": 54, "place": 54, "grid": [54, 165, 167], "grid_siz": 54, "27": [54, 82, 106], "mesh_grid": 54, "seed_imag": 54, "entir": 54, "seed_reject": 54, "reject": [54, 133], "seed_rnd_voxel": 54, "placement": 54, "seed_spher": 54, "xyz": 54, "95": [54, 170], "tracto_seeds_numb": 54, "attempt": 54, "until": 54, "OR": 54, "request": [54, 120], "2000": 54, "tracto_max_attempts_per_seed_numb": 54, "enough": 54, "ensur": [54, 113, 128, 130, 132], "actual": [54, 76, 87, 88, 116, 126, 127], "plausibl": [54, 133, 150], "prematur": 54, "unabl": 54, "tracto_seed_cutoff": 54, "cut": 54, "tracto_seed_direct": 54, "Of": 54, "ifod_pow": 54, "ifod": 54, "rais": 54, "power": [54, 91, 170], "nsampl": 54, "ifod2_n_sampl": 54, "2nd": [54, 77, 80, 81, 106], "dwi_tracto": 54, "dwi__tracto_out_se": 54, "transformconvert": [55, 167], "in_transform": 55, "diff2struct_fsl": 55, "out_transform": 55, "t1w_inu": 56, "paper": [57, 66, 72], "mortamet": [57, 66, 72], "colleagu": [57, 66, 72], "workflow": [57, 59, 61, 62, 65, 66, 72, 103, 137, 138, 139, 142, 168, 177, 178], "head_mask": [57, 96, 137], "t1w_outskin_mask": 57, "nasion_post_mask": 57, "t_tpl": [57, 90, 144, 155], "mni152nlin2009casym_r": [57, 75, 87, 89, 90, 139, 144, 153, 155], "01_desc": [57, 89, 90, 144, 153, 155], "rot_mask": 57, "t1w_rotmask": [57, 72, 87], "out_art_mask": [57, 137], "art_t1w_mask": [57, 87, 96, 137], "out_hat_mask": [57, 137], "hat": [57, 87, 96, 170, 177], "hat_t1w_mask": [57, 87, 137], "out_air_mask": [57, 137], "air": [57, 79, 87, 96, 139, 152, 168, 170, 177], "air_t1w_mask": [57, 87, 96, 137], "carreful": [58, 59, 61, 66, 68, 72, 114], "overwritten": [58, 59, 60, 61, 66, 68, 72, 94, 104, 105, 107, 108, 109, 110, 170], "element": [58, 79, 80, 94, 102, 105, 106, 123, 125, 126, 127, 128, 168, 170, 172, 173], "path": [58, 60, 65, 66, 67, 68, 72, 73, 74, 75, 76, 79, 82, 115, 123, 125, 159, 170, 181], "_bin": 58, "thresh_low": 58, "applic": [58, 76], "t1w_bin": 58, "nibabel": [59, 168, 181], "squeeze_imag": 59, "reorder": 59, "closest": 59, "canon": [59, 106, 130], "as_closest_canon": 59, "images_to_convolv": [60, 168], "convolve_with": [60, 168], "Then": [60, 168], "convolv": [60, 94, 106, 130, 168, 170], "resiz": [60, 94, 168, 170], "patientname_data": [60, 94, 102, 123, 168, 170, 173], "roi_data": [60, 71, 94, 123, 156, 168, 170, 173], "convroi_bold": [60, 156, 168], "receiv": [60, 71, 94, 102, 168, 170], "runtim": [60, 71, 94, 102, 168, 170], "correctli": [60, 71, 94, 102, 168, 170], "databas": [60, 71, 82, 89, 94, 102, 104, 105, 106, 121, 123, 156, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 181], "patientnam": [60, 71, 94, 99, 102, 121, 123, 135, 156, 168, 170, 173], "tag": [60, 71, 94, 102, 121, 123, 156, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 181], "aca_l": [60, 123], "aca_r": [60, 123], "acm_l": [60, 123], "acm_r": [60, 123], "out_imag": [60, 71], "conv": [60, 94], "patient": [60, 71, 93, 94, 97, 99, 101, 102, 121, 123, 132, 134, 135, 136, 156, 170, 173], "name_data": [60, 71, 94, 102, 123, 156], "convaca_l": [60, 71, 94, 156], "convaca_r": [60, 71, 94, 156], "convacm_l": [60, 71, 94, 156], "convacm_r": [60, 71, 94, 156], "excess": 61, "superior": [61, 170], "99": [61, 67, 122, 170], "_enh": 61, "t1w_enh": 61, "seg_fil": [62, 65, 138], "out_snr": 62, "96": [62, 106, 119, 122], "_estimate_snr": 62, "native_structures_sub": [63, 64, 95], "47": [63, 64, 82, 95, 119, 154], "48": [63, 64, 82, 95, 118, 154], "save_each_roi": 63, "save_concate_roi": 63, "001_47": 63, "001_48": 63, "out_conc": 63, "001_concate_47_48": 63, "001_bold": [64, 93, 95], "in_seg": 64, "001_bold_spac": 64, "001_bold_extracted_signals_47_48": [64, 95], "nilearn": [64, 168], "niftilabelsmask": 64, "fastseg": [65, 131, 161, 166], "_grad": 65, "scan": [65, 76, 79, 81, 82, 88, 89, 106, 107, 108, 110, 130, 132, 169, 173], "t1w_grad": 65, "arfifact": [66, 72], "wm_mask": 66, "erodemask": 66, "_harmon": 66, "t1w_harmon": 66, "dtype": [67, 83], "robustli": 67, "spike": [67, 88, 89, 91, 96, 98, 131, 155, 160, 162, 170], "denois": [67, 131, 133, 149, 161, 164, 167, 177], "thrown": 67, "awai": 67, "int16": [67, 83], "float32": [67, 73, 83], "uint8": [67, 83], "datatyp": 67, "nonneg": 67, "p_max": 67, "bound": [67, 80], "p_min": 67, "xtension": 67, "t1w_clip": 67, "niworflow": [67, 68, 73], "confound": [69, 74, 132, 168], "n_volumes_to_discard": [69, 73], "confund": [69, 74], "nonsteadystatedetector": [69, 161, 168], "files_to_resampl": [70, 71], "t1w_002": 70, "_003": 70, "suffix_to_delet": 70, "_002": [70, 76], "t1w_003": 70, "_data": 71, "convroi_bold2": [71, 168], "_2": [71, 170], "convaca_l_2": 71, "convaca_r_2": 71, "convacm_l_2": 71, "convacm_r_2": 71, "_rotmask": 72, "max_32bit": 73, "cast": 73, "higher": [73, 77, 81, 91, 97, 101, 104, 106, 128, 132, 170, 173], "encount": 73, "steadi": [73, 153, 168], "state": [73, 153, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173], "_valid": 73, "func_valid": [73, 89, 155], "sanitizeimag": 73, "prefix_stddev": 74, "stddev": 74, "prefix_tsnr": 74, "suffix_stddev": 74, "_stddev": 74, "dev": 74, "suffix_tnsr": 74, "_tsnr": 74, "out_tsnr_fil": 74, "func_tsnr": 74, "out_stddev_fil": 74, "func_stddev": 74, "repositori": 75, "neuroimag": [75, 84, 130, 132, 170], "mni152nlin2009casym": [75, 137, 139, 144, 177], "mnicolin27": 75, "mnipediatricasym": 75, "entiti": 75, "atla": [75, 169], "particular": [75, 81, 83, 113], "difumo": 75, "scahefer2018": 75, "desc": [75, 114, 137, 142, 144], "descript": [75, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 180, 181], "256dimens": 75, "in_templ": [75, 137, 139, 142, 144], "probseg": [75, 139], "t2map": 75, "cach": 75, "tpl": 75, "02_t1w": 75, "c1anat": [76, 79, 145, 147, 151], "c2anat": [76, 79, 145, 147, 151], "c3anat": [76, 79, 145, 147, 151], "c4anat": [76, 79, 145, 147, 151], "c5anat": [76, 79, 145, 147, 151], "gm_filter": 76, "c1": [76, 78, 151], "spm": [76, 78, 92, 93, 97, 99, 101, 104, 105, 106, 131, 151, 160, 161, 168, 170, 171, 181], "syntax": [76, 77, 78, 79, 80, 81, 82, 83, 106, 107, 108, 109, 110, 151], "everyth": 76, "abov": 76, "becom": 76, "below": [76, 82, 113, 128], "multipli": [76, 91, 113, 128], "c1anat_002": 76, "thinsp": [77, 78, 79, 80, 81, 115, 116, 117, 123, 124, 125, 126, 127, 132, 145], "emsp": [77, 78, 79, 80, 81, 115, 116, 117, 123, 124, 125, 126, 127, 132, 145], "ensp": [77, 78, 79, 80, 81, 115, 116, 117, 123, 124, 125, 126, 127, 132, 145], "nbsp": [77, 78, 79, 80, 81, 115, 116, 117, 123, 124, 125, 126, 127, 132, 145], "ref": 77, "remain": [77, 81, 170], "stationari": 77, "sourc": [77, 92, 145, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 180, 181], "downloaded_data": [77, 80, 118, 119, 120, 122, 130, 132], "meanfunc": [77, 81, 116, 145], "jiggl": 77, "anat": [77, 79, 80, 87, 96, 100, 115, 116, 123, 124, 126, 127, 132, 134, 135, 136, 145, 146, 147, 152, 154, 181], "apply_to_fil": [77, 78, 80], "jobtyp": [77, 78, 80, 81, 146, 147], "estwrit": [77, 80, 81, 146], "except": [77, 106, 114], "procedur": [77, 170], "coregistered_sourc": [77, 145], "coregistered_fil": 77, "whose": [77, 102, 134, 156], "rewritten": [77, 81], "subsequ": 77, "filter_files_list": [77, 131, 160, 173], "librari": [77, 78, 123, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177], "cost_funct": 77, "eoption": [77, 80, 81], "cost_fun": 77, "nmi": 77, "ecc": 77, "ncc": 77, "maximis": 77, "minimis": 77, "inter": [77, 100, 166], "entropi": [77, 170], "sep": [77, 81], "increasingli": 77, "ones": 77, "toler": 77, "tol": 77, "param": [77, 102, 106, 170, 173, 181], "less": [77, 113, 128], "write_interp": [77, 78, 80, 81, 146, 147], "roption": [77, 81], "long": [77, 80, 81, 83], "fastest": [77, 81], "realign": [77, 80, 113, 128, 131, 145, 146, 147, 161, 169, 181], "ok": [77, 80, 81, 181], "pet": [77, 80, 81, 107, 108, 109, 110], "becaus": [77, 79, 80, 81], "give": [77, 79, 80, 81, 111, 112, 123, 152, 153, 173], "although": [77, 81], "slower": [77, 81], "write_wrap": [77, 81], "check": [77, 81, 84, 114, 150, 177, 181], "nose": [77, 81], "poke": [77, 81], "No": [77, 79, 80, 81, 106, 107, 108, 109, 110], "realli": [77, 81], "un": [77, 81], "write_mask": [77, 81], "like": [77, 81, 94, 102, 113, 128, 165, 170, 173], "With": [77, 81, 107, 108, 109, 110, 134], "through": [77, 81, 113, 132, 134, 136], "look": [77, 81, 82, 117], "occur": [77, 79, 80, 81], "coregisterd": 77, "capsul": 77, "spm12": [77, 79, 80, 81, 82, 83, 106, 157, 173], "equival": 78, "normalize12": [78, 131, 145, 146, 147, 161, 169], "in_filt": 78, "nativ": [78, 79, 84, 145, 147, 152, 153, 173, 177], "deformation_fil": [78, 80, 151], "therefor": [78, 82, 93, 156], "togeth": [78, 132, 169, 181], "write_bounding_box": [78, 80, 147], "write_voxel_s": [78, 80, 147], "normalized_fil": [78, 80], "made": [78, 102, 106, 124, 151, 152, 153], "c2": [78, 151], "channel_fil": 79, "channel": 79, "vol": [79, 80], "channel_info": 79, "biasreg": [79, 80], "biasfwhm": [79, 80], "reguralis": 79, "goal": [79, 80], "aris": [79, 80, 170], "due": [79, 80, 91, 106], "artifact": [79, 80, 81, 87, 96, 113, 128, 167, 168, 170, 173, 177], "physic": [79, 80], "littl": [79, 80], "uniform": [79, 80], "tell": [79, 80], "doesn": [79, 80], "regularis": [79, 80], "00001": [79, 80], "extrem": [79, 80, 89, 170], "light": [79, 80], "heavi": [79, 80], "infin": 79, "smoother": [79, 80, 113, 128], "fewer": [79, 80], "150": [79, 80, 119], "version": [79, 105, 159], "noth": [79, 159], "0001": [79, 80, 146], "tpm": [79, 80], "ngau": 79, "bone": 79, "soft": 79, "dartel": 79, "unmodul": 79, "inf": [79, 80], "parametr": [79, 106, 181], "ci": 79, "toobox": [79, 159], "rci": 79, "mcwi": 79, "wci": 79, "warping_regular": [79, 80], "rough": [79, 80], "latter": [79, 115], "05": [79, 80, 119, 144], "affine_regular": 79, "affreg": [79, 80], "mni": [79, 80, 84, 137, 139, 145, 147, 177], "eastern": 79, "subj": [79, 80], "sampling_dist": [79, 80], "samp": [79, 80], "write_deformation_field": 79, "disk": 79, "util": [79, 159, 182], "forward": [79, 145, 147, 165], "bias_corrected_imag": [79, 145, 147], "manat": [79, 145, 147], "bias_field_imag": [79, 145, 147], "biasfield_anat": 79, "native_class_imag": [79, 145, 147, 151], "dartel_input_imag": 79, "toolbox": [79, 93, 170, 173], "rc1anat": 79, "rc2anat": 79, "rc3anat": 79, "rc4anat": 79, "rc5anat": 79, "modulated_class_imag": 79, "mwc1anat": 79, "mwc2anat": 79, "mwc3anat": 79, "mwc4anat": 79, "homeusernam": 79, "mwc5anat": 79, "normalized_class_imag": 79, "wc1anat": 79, "wc2anat": 79, "wc3anat": 79, "wc4anat": 79, "wc5anat": 79, "inverse_deformation_field": 79, "gifti": 79, "iy_anat": 79, "forward_deformation_field": [79, 145, 147], "y_anat": [79, 80, 145, 147, 151], "transformation_mat": 79, "anat_seg8": 79, "support": 79, "mrf": 79, "image_to_align": 80, "def": 80, "y_": [80, 151], "est": 80, "come": [80, 168], "normalized_imag": 80, "bias_regular": [80, 146], "bias_fwhm": [80, 146], "70": [80, 147], "80": 80, "110": 80, "130": [80, 119], "140": [80, 170], "affine_regularization_typ": 80, "woption": 80, "bb": 80, "box": [80, 100], "commissur": 80, "78": [80, 119, 147], "112": [80, 119, 147], "76": [80, 119, 147], "85": [80, 119, 122, 147], "7nd": 80, "wanat": [80, 97, 99, 101, 145, 146, 147], "code": [81, 99, 128, 132, 135, 136, 173], "contact": 81, "team": [81, 158], "realignment_paramet": [81, 97, 101, 145, 146, 147, 181], "modified_in_fil": 81, "write_which": 81, "realigned_fil": 81, "mean_imag": 81, "qualiti": [81, 162, 168, 170, 178, 181], "speed": 81, "trade": 81, "highest": 81, "register_to_mean": 81, "rtm": 81, "weight_img": 81, "lot": 81, "extra": 81, "seriou": 81, "account": [81, 106, 130, 132], "rfunc": 81, "rp_func": [81, 97, 101, 116, 145, 146, 147, 157], "compat": [82, 91, 105, 173], "verif": 82, "sequenti": [82, 147, 158], "ascend": [82, 147], "descend": [82, 147], "interleav": [82, 147], "middl": [82, 147], "top": [82, 128, 147], "bottom": [82, 147], "foot": [82, 147], "num_slic": 82, "nslice": 82, "initialis": [82, 106, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173], "53": [82, 106, 122], "repetit": [82, 89, 130], "retriev": [82, 106, 123, 173, 181], "000002": 82, "ta": [82, 84], "slice_ord": 82, "ref_slic": 82, "9433981886792453": 82, "13": [82, 97, 101, 119], "16": [82, 106, 165, 168, 170, 173], "17": [82, 106, 119, 122], "19": [82, 106, 170], "21": [82, 106], "22": [82, 119, 142, 143, 144, 152, 153, 155, 165, 168, 177], "23": [82, 106, 122], "29": [82, 119], "31": [82, 106, 119, 122], "33": [82, 119], "34": [82, 106, 122], "36": [82, 106, 118], "37": 82, "38": 82, "39": [82, 106, 122], "41": [82, 106], "42": [82, 106, 119, 122, 170], "43": [82, 106], "44": [82, 119, 122], "46": [82, 122], "49": [82, 106, 119, 122], "51": [82, 119], "52": [82, 106, 119, 122], "refslic": 82, "chosen": [82, 100, 105, 107, 108, 109, 110], "_undefin": 82, "timed_fil": 82, "afunc": 82, "int32": 83, "prec": 83, "float64": 83, "implicit_mask": 83, "im": 83, "impli": [83, 107, 108, 109, 110], "implicit": [83, 107, 108, 109, 110, 134], "smoothed_fil": 83, "sfunc": 83, "docker": [84, 154], "ensembl": 84, "neural": 84, "network": [84, 134, 170], "133": 84, "braincolor": [84, 85, 86], "pierrick": 84, "coup\u00e9": 84, "bori": [84, 168], "mansenc": 84, "micha\u00ebl": 84, "cl\u00e9ment": 84, "r\u00e9mi": 84, "giraud": 84, "baudouin": 84, "deni": 84, "de": 84, "sennevil": 84, "vinh": 84, "thong": 84, "vincent": 84, "lepetit": 84, "jos\u00e9": 84, "v": [84, 104, 173], "manjon": 84, "cnn": 84, "elsevi": 84, "2020": [84, 134], "219": 84, "pp": 84, "117026": 84, "native_t1": 84, "native_t1_t1w": 84, "mni_t1": 84, "mni_t1_t1w": 84, "native_mask": 84, "intracrani": 84, "caviti": 84, "native_mask_t1w": 84, "mni_mask": 84, "mni_masks_t1w": 84, "native_structur": 84, "native_structures_t1w": 84, "mni_structur": 84, "mni_structures_t1w": 84, "native_macrostructur": 84, "macrostructur": [84, 85, 86, 154], "native_macrostructures_t1w": 84, "mni_macrostructur": 84, "mni_macrostructures_t1w": 84, "native_lob": 84, "native_lobes_t1w": 84, "mni_lob": 84, "mni_lobes_t1w": 84, "native_tissu": 84, "native_tissues_t1w": 84, "mni_tissu": 84, "mni_tissues_t1w": 84, "matrix_affin": 84, "itk": 84, "matrix_affine_native_to_mni_t1w": 84, "report_pdf": [84, 100], "volumetri": 84, "pdf": [84, 96, 97, 98, 99, 100, 101, 114, 132, 134, 135, 136, 152, 153, 181], "report_t1w": 84, "report_csv": 84, "cerebrum": [85, 86], "subcortoc": [85, 86], "cerebellum": [85, 86, 89], "brainstem": [85, 86], "volbrain": [85, 86, 131, 154, 161], "labels_nam": 86, "ex2": 86, "aspect": [87, 88], "compar": [87, 88, 133, 148, 170], "ground": [87, 88], "truth": [87, 88], "json": [87, 88, 96, 98, 113, 114, 128, 155, 173, 181], "in_ra": [87, 139], "airmask": [87, 170], "artmask": [87, 170], "hatmask": 87, "headmask": [87, 170], "n4c_t1w_clipped_brain_outskin_mask": 87, "in_fwhm": 87, "fwhm_t1w": 87, "in_inu": 87, "n4c_t1w_clipped_bia": [87, 141], "in_noinu": 87, "n4c_t1w_clipped_harmon": 87, "mni_tpm": [87, 139], "csf_tpl": [87, 139], "01_label": [87, 139], "csf_probseg": [87, 139], "gm_tpl": [87, 139], "gm_probseg": [87, 139], "wm_tpl": [87, 139], "wm_probseg": [87, 139], "pvm": [87, 170], "probal": 87, "ss_n4c_t1w_clippep_pve_0": 87, "ss_n4c_t1w_clippep_pve_1": 87, "ss_n4c_t1w_clippep_pve_2": 87, "rotmask": [87, 170], "ss_n4c_t1w_clippep_seg": [87, 96], "t1w_anat_qc": [87, 96], "qc": [87, 88, 181], "in_fd_thresh": 88, "fd": [88, 89, 98, 170], "in_dummy_tr": 88, "dummi": [88, 89], "in_dvars_fil": [88, 89], "dvar": [88, 89, 98, 155, 170], "dvars_reg_func_valid": [88, 89, 91, 155], "in_fd_fil": [88, 89], "fd_reg_func_valid_on": [88, 89, 92, 155], "in_fwhm_fil": 88, "in_gcor": 88, "0612": 88, "in_hmc": 88, "automask_reg_func_valid": 88, "in_outliers_fil": [88, 89], "in_qi_fil": 88, "qi_reg_func_valid": 88, "in_spikes_fil": [88, 89], "spikes_reg_func_valid": [88, 89], "in_tsnr": 88, "tsnr": [88, 131, 153, 155, 161, 168], "reg_func_valid_tsnr": [88, 155], "mean_reg_func_valid_functional_qc": 88, "plot": [89, 96, 97, 98, 101, 132, 136, 153, 154, 170, 181], "figur": [89, 98, 170, 181], "wise": [89, 155, 170], "identif": [89, 170], "carpetplot": [89, 170], "carpet": [89, 90, 98, 114, 144, 153, 155], "voxelwis": 89, "crown": [89, 170], "band": 89, "fmriplot": 89, "in_func": 89, "drop_tr": 89, "drop": [89, 113, 128], "fd_thresh": [89, 155], "carpet_seg": [89, 153, 155], "cseg_t_tpl": [89, 90, 153, 155], "carpet_dseg": [89, 90, 144, 153, 155], "func_valid_fmriplot": [89, 98], "png": [89, 93, 95, 98, 99, 154, 181], "cseg": 90, "cseg_": 90, "parcelatt": 90, "dramat": 91, "cofund": [91, 92], "intensity_norm": 91, "divid": 91, "x10": 91, "2012": 91, "altogeth": 91, "dvars_": 91, "remove_zero_vari": 91, "variance_tol": 91, "0000001000": 91, "purpos": [91, 133, 134, 135, 149, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 179], "iqm": [91, 92, 96, 98, 100, 170, 178, 179, 181], "reproduc": [92, 170], "fsl_motion_outli": [92, 170], "reg_func_valid_on": 92, "fd_": 92, "parameter_sourc": 92, "afni": [92, 131, 140, 155, 160, 161, 177, 178], "fsfast": 92, "nipi": [92, 158, 168], "reli": 93, "hemispher": [93, 102, 156, 170], "domin": [93, 99, 135], "approach": [93, 132, 134, 135, 170], "python": [93, 116, 126, 127, 170, 173], "curv": [93, 99, 128, 170], "softwar": [93, 131, 134, 135, 161], "packag": [93, 182], "investig": 93, "wilk": [93, 170], "lidzba": [93, 170], "mr": [93, 97, 101, 102, 132, 136, 156, 170, 181], "j": [93, 170], "neurosci": [93, 134, 170], "meth": [93, 170], "2007": [93, 170], "163": [93, 170], "128": [93, 106, 170], "136": [93, 170], "miaresourc": [93, 123, 173], "prefer": [93, 105], "frontal": 93, "pariet": 93, "occipit": 93, "cingul": 93, "central": 93, "cerebellar": 93, "out_png": [93, 95, 170], "derived_dat": [93, 99], "stats_gen": [93, 99], "spmt_0002_li_front": [93, 99], "spmt_0002_li_tempor": [93, 99], "wilke2007": 93, "rois_fil": [94, 95, 123, 170], "parametric_map": [94, 170], "roi_analysi": [94, 170], "_": [94, 102, 165, 168, 170], "deduct": 94, "prefix_to_delet": 94, "underscor": [94, 123], "contrast_typ": 94, "spmt_0001": [94, 97, 99, 101, 104, 156, 157], "beta_0001": [94, 97, 101, 104, 105, 156, 157], "deduc": 94, "mean_out_fil": 94, "std_out_fil": 94, "aca_l_mean_spmt_bold": [94, 102], "aca_r_mean_spmt_bold": [94, 102], "acm_l_mean_spmt_bold": [94, 102], "acm_r_mean_spmt_bold": [94, 102], "aca_l_mean_beta_bold": 94, "aca_r_mean_beta_bold": 94, "acm_l_mean_beta_bold": 94, "acm_r_mean_beta_bold": 94, "aca_l_std_spmt_bold": 94, "aca_r_std_spmt_bold": 94, "acm_l_std_spmt_bold": 94, "acm_r_std_spmt_bold": 94, "aca_l_std_beta_bold": 94, "aca_r_std_beta_bold": 94, "acm_l_std_beta_bold": 94, "acm_r_std_beta_bold": 94, "001_bold_space_concate_47_48": 95, "001_bold_space_47": 95, "001_bold_space_48": 95, "001_bold_space_1": 95, "signals_whole_brain": 95, "001_bold_space_47_48": 95, "iqms_fil": [96, 98, 181], "art_mask": 96, "air_mask": 96, "pre_n4c_t1w_clipped_desc": 96, "anat_fig_col": 96, "anat_fig_row": 96, "spikes_": [96, 98, 103], "norm_anat": [96, 97, 99, 101], "norm_anat_fig_col": [96, 97, 101], "norm_anat_fig_row": [96, 97, 101], "anat_inf_slice_start": 96, "displai": [96, 97, 98, 101, 134, 159, 181], "anat_slices_gap": 96, "gap": [96, 97, 98, 101, 181], "norm_anat_inf_slice_start": [96, 97, 101], "norm_anat_slices_gap": [96, 97, 101], "t1w_ref_anatomical_mriqcreport_2023_03_31_11_42_10_75": [96, 152], "v22": [96, 98, 139, 141, 177, 178], "06": [96, 98, 106, 122, 139, 141, 142, 143, 144, 155, 165, 177, 178], "norm_anat_cmap": [97, 101], "color": [97, 101, 181], "greys_r": [97, 101, 181], "norm_anat_vmin": [97, 101], "colormap": [97, 101], "vmin": [97, 101], "norm_anat_vmax": [97, 101], "vmax": [97, 101], "norm_func": [97, 98, 101], "wrfunc": [97, 101, 145, 147], "norm_func_fig_row": [97, 98, 101], "norm_func_fig_col": [97, 98, 101], "norm_func_inf_slice_start": [97, 98, 101], "norm_func_slices_gap": [97, 98, 101], "norm_func_cmap": [97, 101], "norm_func_vmin": [97, 101], "norm_func_vmax": [97, 101], "record": [97, 99, 101, 102, 113, 128, 130], "regressor_physio": 97, "physiolog": [97, 132, 173], "etco2": [97, 130, 132], "thought": 97, "patient_ref_data": [97, 101], "cvr_physio_reg": [97, 130], "beta_imag": [97, 101, 104, 105, 156, 157], "regress": [97, 101, 104, 105, 106, 156, 170, 172], "predictor": [97, 101, 157], "condit": [97, 101, 104, 105, 106, 113, 118, 119, 173], "regressor": [97, 101, 106, 107, 108, 109, 110, 122, 132, 134, 157, 173], "glm": [97, 99, 101, 130, 132, 134, 135, 172, 180], "activ": [97, 101, 106, 107, 108, 109, 110, 132, 134, 165, 170], "deactiv": [97, 101], "beta_cmap": [97, 101], "beta": [97, 101, 132, 157, 179], "rainbow": [97, 101, 181], "beta_vmin": [97, 101], "beta_vmax": [97, 101], "spmt_imag": [97, 101, 104, 105, 156, 157], "strength": [97, 99, 101], "spmt_cmap": [97, 101], "spmt": [97, 101, 102, 170, 179], "spmt_vmin": [97, 101], "spmt_vmax": [97, 101], "patient_info": [97, 99, 101, 102, 132, 135, 136, 156], "dictionari": [97, 99, 101, 102, 105, 106, 120, 122, 132, 135, 136, 156, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 181], "kei": [97, 101, 102, 105, 106, 120, 122, 128, 156, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 181], "patientref": [97, 101, 132, 136], "pathologi": [97, 99, 101, 102, 132, 135, 136, 156], "ag": [97, 99, 101, 102, 132, 135, 136, 156], "sex": [97, 99, 101, 102, 132, 135, 136, 156], "ga": [97, 101, 102, 132, 156], "gasadmin": [97, 101, 102, 132, 156], "acmd": [97, 101, 102, 132, 136], "3t": [97, 101, 102, 132, 136], "bactal": [97, 101, 102, 132], "1_co2_inhal_cvr_report_2024_01_24_09_34_58_08": [97, 101], "func_func_qc": 98, "func_fig_col": 98, "func_fig_row": 98, "automask_mean_func_valid": 98, "func_inf_slice_start": 98, "func_slices_gap": 98, "iqms_plot": 98, "w_n4c_mean_reg_func_valid": [98, 144], "stddev_func": 98, "reg_func_valid_stddev": 98, "func_ref_functional_mriqcreport_2023_03_31_11_42_10_75": [98, 153], "norm_func_gen": 99, "task": [99, 104, 134, 170], "wrfunc_gen": 99, "norm_func_reco": 99, "recognit": [99, 134, 135], "wrfunc_reco": 99, "norm_func_recal": 99, "recal": [99, 134, 135], "wrfunc_recal": 99, "realignment_parameters_gen": 99, "rp_func_gen": 99, "realignment_parameters_reco": 99, "rp_func_reco": 99, "realignment_parameters_recal": 99, "rp_func_recal": 99, "spmt_gene": 99, "spmt_reco": 99, "stats_reco": 99, "spmt_recal": 99, "stats_recal": 99, "li_curv": 99, "correct_answ": 99, "behaviour": [99, 113, 128, 131, 134], "correct_respons": 99, "lateralizationpathologi": [99, 135], "dominanthand": [99, 135], "hand": [99, 124, 135, 158], "002": [99, 117, 135], "epilepsi": [99, 134, 135], "57": [99, 132, 135, 136], "l": [99, 102, 111, 112, 123, 135, 170], "1_ge2rec_report_2024_01_24_09_34_58_08": 99, "boxplot": [100, 181], "quartil": 100, "q1": 100, "q3": 100, "whisker": 100, "5x": 100, "iqr": 100, "tsv": [100, 118, 173, 181], "out_tsv": [100, 181], "matplotlib": 100, "parameter_fil": [102, 170], "results_aggreg": [102, 132, 156, 170], "overwrit": [102, 170], "doublet": 102, "letter": 102, "apath": 102, "apat": 102, "collect": [102, 170], "territori": [102, 132], "notion": 102, "cours": [102, 168], "todo": 102, "asap": 102, "exactli": [102, 170], "hemi": [102, 170], "aca": [102, 111, 112, 123, 170], "laterality_index": 102, "ablair": 102, "64": [102, 106, 119, 122, 165], "xml": 102, "bold_std_beta": [102, 132, 156], "xl": [102, 132, 156], "bold_il_mean_spmt": [102, 132, 156], "bold_mean_spmt": [102, 132, 156], "spikes_mask": [103, 170], "no_zscor": 103, "zscore": [103, 168], "skip_fram": 103, "spike_thresh": [103, 170], "score": [103, 128, 168], "call": 103, "spki": [103, 155], "detect": [103, 113, 128, 153, 155, 168, 170], "spikes_func": [103, 155], "t_contrast_nam": 104, "t_condition_nam": 104, "t_contrast_weight": 104, "session": [104, 106, 118, 119, 122, 173, 181], "f_contrast_nam": 104, "f_contrast_t_nam": 104, "spm_mat_fil": [104, 105, 106], "out_dir_nam": [104, 105, 106, 107, 108, 109, 110], "stat": [104, 105, 106, 131, 159, 160, 170, 174], "project": [104, 105, 106, 107, 108, 109, 110, 170, 181], "subjectname_data": [104, 105, 106], "download": [104, 105], "button": [104, 105, 124, 134], "folder": [104, 105, 106, 107, 108, 109, 110], "beta_0002": [104, 105, 156, 157], "beta_0003": [104, 105, 156, 157], "beta_0004": [104, 105, 156, 157], "beta_0005": [104, 105, 156, 157], "beta_0006": [104, 105, 156, 157], "beta_0007": [104, 105, 156, 157], "beta_0008": [104, 105, 156, 157], "residual_imag": [104, 105], "residu": [104, 105, 113, 173], "resm": [104, 105], "baselin": [104, 128], "r1_1": 104, "use_deriv": 104, "group_contrast": 104, "elsewher": 104, "positif": 104, "out_spm_mat_fil": [104, 105, 107, 108, 109, 110, 157], "smp_mat_fil": [104, 105, 107, 108, 109, 110], "con_imag": [104, 105], "con_0001": 104, "con_0002": 104, "con_0003": 104, "con_0004": 104, "spmt_0002": 104, "spmt_0003": 104, "spmt_0004": 104, "ess_imag": [104, 105], "ess_0001": [104, 105], "ess_0002": [104, 105], "ess_0003": [104, 105], "ess_0004": [104, 105], "spmf_imag": [104, 105], "spmf_0001": [104, 105], "spmf_0002": [104, 105], "spmf_0003": [104, 105], "spmf_0004": [104, 105], "estimatecontrast": [104, 131, 134, 135, 156, 157, 171, 172], "\u03b2": 105, "bayesian": 105, "open": [105, 124, 158], "ticket": [105, 152, 153], "v2": 105, "risk": [105, 113], "strongli": 105, "v1": 105, "spmmat": 105, "estimation_method": 105, "independ": [105, 106, 110], "iid": 105, "yet": 105, "write_residu": 105, "dynamiqu": 105, "tot_reg_num": 105, "factor_info": [105, 106], "level1design": [105, 118, 119, 120, 122, 131, 134, 135, 157, 171, 172, 173], "factori": [105, 106], "interact": [105, 106, 107, 108, 109, 110, 172], "factor1": [105, 106], "factor2": [105, 106], "hrf": [105, 106, 130, 173], "fourier_han": [105, 106], "gamma": [105, 106, 173], "fir": [105, 106, 173], "hemodynam": [105, 106, 130, 173], "beta_000k": [105, 156], "kth": [105, 156], "varianc": [105, 110], "res_000k": 105, "res_0001": 105, "res_0002": 105, "res_0003": 105, "res_0238": 105, "res_0239": 105, "res_0240": 105, "rpvimag": 105, "rpv": 105, "con_0005": 105, "con_0006": 105, "con_0007": 105, "con_0008": 105, "spmt_0005": 105, "spmt_0006": 105, "spmt_0007": 105, "spmt_0008": 105, "timing_unit": 106, "event": [106, 118, 119, 134, 135], "sec": 106, "interscan_interv": 106, "rt": [106, 173], "microtime_resolut": 106, "fmri_t": 106, "build": [106, 173, 175, 176, 177, 178, 179, 180], "previous": [106, 113, 124, 134, 156, 157], "microtime_onset": 106, "fmri_t0": 106, "coincid": [106, 107, 108, 109, 110], "sess_scan": 106, "sess": 106, "wai": 106, "sess_1_scanpath_1": 106, "sess_2_scanpath_2": 106, "sess_n_scanpath_n": 106, "func_1": 106, "func_2": 106, "sess_cond_nam": 106, "cond": 106, "sess_1_condname_1": 106, "sess_1_condname_2": 106, "sess_1_condname_n": 106, "sess_2_condname_1": 106, "sess_2_condname_2": 106, "sess_2_condname_n": 106, "sess_n_condname_1": 106, "sess_n_condname_2": 106, "sess_n_condname_n": 106, "cond1": 106, "cond2": 106, "sess_cond_onset": 106, "epoch": 106, "sess_1_cond_1_onset_1": 106, "sess_1_cond_1_onset_2": 106, "sess_1_cond_1_onset_n": 106, "sess_1_cond_2_onset_1": 106, "sess_1_cond_2_onset_2": 106, "sess_1_cond_2_onset_n": 106, "sess_1_cond_n_onset_1": 106, "sess_1_cond_n_onset_2": 106, "sess_1_cond_n_onset_n": 106, "sess_2_cond_1_onset_1": 106, "sess_2_cond_1_onset_2": 106, "sess_2_cond_1_onset_n": 106, "sess_2_cond_2_onset_1": 106, "sess_2_cond_2_onset_2": 106, "sess_2_cond_2_onset_n": 106, "sess_2_cond_n_onset_1": 106, "sess_2_cond_n_onset_2": 106, "sess_2_cond_n_onset_n": 106, "sess_n_cond_1_onset_1": 106, "sess_n_cond_1_onset_2": 106, "sess_n_cond_1_onset_n": 106, "sess_n_cond_2_onset_1": 106, "sess_n_cond_2_onset_2": 106, "sess_n_cond_2_onset_n": 106, "sess_n_cond_n_onset_1": 106, "sess_n_cond_n_onset_2": 106, "sess_n_cond_n_onset_n": 106, "72": 106, "117": 106, "152": [106, 119], "59": [106, 170], "225": 106, "98": [106, 119, 122, 170], "206": 106, "282": 106, "sess_cond_dur": 106, "durat": [106, 118, 119, 173], "compli": 106, "sess_1_cond_1_duration_1": 106, "sess_1_cond_1_duration_2": 106, "sess_1_cond_1_duration_n": 106, "sess_1_cond_2_duration_1": 106, "sess_1_cond_2_duration_2": 106, "sess_1_cond_2_duration_n": 106, "sess_1_cond_n_duration_1": 106, "sess_1_cond_n_duration_2": 106, "sess_1_cond_n_duration_n": 106, "sess_2_cond_1_duration_1": 106, "sess_2_cond_1_duration_2": 106, "sess_2_cond_1_duration_n": 106, "sess_2_cond_2_duration_1": 106, "sess_2_cond_2_duration_2": 106, "sess_2_cond_2_duration_n": 106, "sess_2_cond_n_duration_1": 106, "sess_2_cond_n_duration_2": 106, "sess_2_cond_n_duration_n": 106, "sess_n_cond_1_duration_1": 106, "sess_n_cond_1_duration_2": 106, "sess_n_cond_1_duration_n": 106, "sess_n_cond_2_duration_1": 106, "sess_n_cond_2_duration_2": 106, "sess_n_cond_2_duration_n": 106, "sess_n_cond_n_duration_1": 106, "sess_n_cond_n_duration_2": 106, "sess_n_cond_n_duration_n": 106, "54": 106, "81": 106, "sess_cond_tmod": 106, "tmod": 106, "characteris": 106, "nonlinear": 106, "6th": 106, "sess_1_cond_1_tmod": 106, "sess_1_cond_2_tmod": 106, "sess_1_cond_n_tmod": 106, "sess_2_cond_1_tmod": 106, "sess_2_cond_2_tmod": 106, "sess2_cond_n_tmod": 106, "sess_n_cond_1_tmod": 106, "sess_n_cond_2_tmod": 106, "sess_n_cond_n_tmod": 106, "sess_cond_pmod_nam": 106, "pmod": 106, "relat": [106, 119, 134, 135, 170, 172], "sess_1_cond_1_pmodname_1": 106, "sess_1_cond_1_pmodname_2": 106, "sess_1_cond_1_pmodname_n": 106, "sess_1_cond_2_pmodname_1": 106, "sess_1_cond_2_pmodname_2": 106, "sess_1_cond_2_pmodname_n": 106, "sess_1_cond_n_pmodname_1": 106, "sess_1_cond_n_pmodname_2": 106, "sess_1_cond_n_pmodname_n": 106, "sess_2_cond_1_pmodname_1": 106, "sess_2_cond_1_pmodname_2": 106, "sess_2_cond_1_pmodname_n": 106, "sess_2_cond_2_pmodname_1": 106, "sess_2_cond_2_pmodname_2": 106, "sess_2_cond_2_pmodname_n": 106, "sess_2_cond_n_pmodname_1": 106, "sess_2_cond_n_pmodname_2": 106, "sess_2_cond_n_pmodname_n": 106, "sess_n_cond_1_pmodname_1": 106, "sess_n_cond_1_pmodname_2": 106, "sess_n_cond_1_pmodname_n": 106, "sess_n_cond_2_pmodname_1": 106, "sess_n_cond_2_pmodname_2": 106, "sess_n_cond_2_pmodname_n": 106, "sess_n_cond_n_pmodname_1": 106, "sess_n_cond_n_pmodname_2": 106, "sess_n_cond_n_pmodname_n": 106, "pmod1": 106, "pmod2": 106, "sess_cond_pmod_valu": 106, "occurr": 106, "sess_1_cond_1_pmod_1_val_1": 106, "sess_1_cond_1_pmod_1_val_2": 106, "sess_1_cond_1_pmod_1_val_n": 106, "sess_1_cond_1_pmod_2_val_1": 106, "sess_1_cond_1_pmod_2_val_2": 106, "sess_1_cond_1_pmod_2_val_n": 106, "sess_1_cond_1_pmod_n_val_1": 106, "sess_1_cond_1_pmod_n_val_2": 106, "sess_1_cond_1_pmod_n_val_n": 106, "sess_1_cond_2_pmod_1_val_1": 106, "sess_1_cond_2_pmod_1_val_2": 106, "sess_1_cond_2_pmod_1_val_n": 106, "sess_1_cond_2_pmod_2_val_1": 106, "sess_1_cond_2_pmod_2_val_2": 106, "sess_1_cond_2_pmod_2_val_n": 106, "sess_1_cond_2_pmod_n_val_1": 106, "sess_1_cond_2_pmod_n_val_2": 106, "sess_1_cond_2_pmod_n_val_n": 106, "sess_1_cond_n_pmod_1_val_1": 106, "sess_1_cond_n_pmod_1_val_2": 106, "sess_1_cond_n_pmod_1_val_n": 106, "sess_1_cond_n_pmod_2_val_1": 106, "sess_1_cond_n_pmod_2_val_2": 106, "sess_1_cond_n_pmod_2_val_n": 106, "sess_1_cond_n_pmod_n_val_1": 106, "sess_1_cond_n_pmod_n_val_2": 106, "sess_1_cond_n_pmod_n_val_n": 106, "sess_2_cond_1_pmod_1_val_1": 106, "sess_2_cond_1_pmod_1_val_2": 106, "sess_2_cond_1_pmod_1_val_n": 106, "sess_2_cond_1_pmod_2_val_1": 106, "sess_2_cond_1_pmod_2_val_2": 106, "sess_2_cond_1_pmod_2_val_n": 106, "sess_2_cond_1_pmod_n_val_1": 106, "sess_2_cond_1_pmod_n_val_2": 106, "sess_2_cond_1_pmod_n_val_n": 106, "sess_2_cond_2_pmod_1_val_1": 106, "sess_2_cond_2_pmod_1_val_2": 106, "sess_2_cond_2_pmod_1_val_n": 106, "sess_2_cond_2_pmod_2_val_1": 106, "sess_2_cond_2_pmod_2_val_2": 106, "sess_2_cond_2_pmod_2_val_n": 106, "sess_2_cond_2_pmod_n_val_1": 106, "sess_2_cond_2_pmod_n_val_2": 106, "sess_2_cond_2_pmod_n_val_n": 106, "sess_2_cond_n_pmod_1_val_1": 106, "sess_2_cond_n_pmod_1_val_2": 106, "sess_2_cond_n_pmod_1_val_n": 106, "sess_2_cond_n_pmod_2_val_1": 106, "sess_2_cond_n_pmod_2_val_2": 106, "sess_2_cond_n_pmod_2_val_n": 106, "sess_2_cond_n_pmod_n_val_1": 106, "sess_2_cond_n_pmod_n_val_2": 106, "sess_2_cond_n_pmod_n_val_n": 106, "sess_n_cond_1_pmod_1_val_1": 106, "sess_n_cond_1_pmod_1_val_2": 106, "sess_n_cond_1_pmod_1_val_n": 106, "sess_n_cond_1_pmod_2_val_1": 106, "sess_n_cond_1_pmod_2_val_2": 106, "sess_n_cond_1_pmod_2_val_n": 106, "sess_n_cond_1_pmod_n_val_1": 106, "sess_n_cond_1_pmod_n_val_2": 106, "sess_n_cond_1_pmod_n_val_n": 106, "sess_n_cond_2_pmod_1_val_1": 106, "sess_n_cond_2_pmod_1_val_2": 106, "sess_n_cond_2_pmod_1_val_n": 106, "sess_n_cond_2_pmod_2_val_1": 106, "sess_n_cond_2_pmod_2_val_2": 106, "sess_n_cond_2_pmod_2_val_n": 106, "sess_n_cond_2_pmod_n_val_1": 106, "sess_n_cond_2_pmod_n_val_2": 106, "sess_n_cond_2_pmod_n_val_n": 106, "sess_n_cond_n_pmod_1_val_1": 106, "sess_n_cond_n_pmod_1_val_2": 106, "sess_n_cond_n_pmod_1_val_n": 106, "sess_n_cond_n_pmod_2_val_1": 106, "sess_n_cond_n_pmod_2_val_2": 106, "sess_n_cond_n_pmod_2_val_n": 106, "sess_n_cond_n_pmod_n_val_1": 106, "sess_n_cond_n_pmod_n_val_2": 106, "sess_n_cond_n_pmod_n_val_n": 106, "61": [106, 122], "105": [106, 119], "178": 106, "221": 106, "sess_cond_pmod_poli": 106, "poli": 106, "stick": 106, "height": [106, 181], "further": [106, 128, 152, 153, 157], "cube": 106, "sess_1_cond_1_pmod_1_poli": 106, "sess_1_cond_1_pmod_2_poli": 106, "sess_1_cond_1_pmod_n_poli": 106, "sess_1_cond_2_pmod_1_poli": 106, "sess_1_cond_2_pmod_2_poli": 106, "sess_1_cond_2_pmod_n_poli": 106, "sess_1_cond_n_pmod_1_poli": 106, "sess_1_cond_n_pmod_2_poli": 106, "sess_1_cond_n_pmod_n_poli": 106, "sess_2_cond_1_pmod_1_poli": 106, "sess_2_cond_1_pmod_2_poli": 106, "sess_2_cond_1_pmod_n_poli": 106, "sess_2_cond_2_pmod_1_poli": 106, "sess_2_cond_2_pmod_2_poli": 106, "sess_2_cond_2_pmod_n_poli": 106, "sess_2_cond_n_pmod_1_poli": 106, "sess_2_cond_n_pmod_2_poli": 106, "sess_2_cond_n_pmod_n_poli": 106, "sess_n_cond_1_pmod_1_poli": 106, "sess_n_cond_1_pmod_2_poli": 106, "sess_n_cond_1_pmod_n_poli": 106, "sess_n_cond_2_pmod_1_poli": 106, "sess_n_cond_2_pmod_2_poli": 106, "sess_n_cond_2_pmod_n_poli": 106, "sess_n_cond_n_pmod_1_poli": 106, "sess_n_cond_n_pmod_2_poli": 106, "sess_n_cond_n_pmod_n_poli": 106, "sess_cond_orth": 106, "orth": 106, "orthogonalis": 106, "othogonalis": 106, "sess_1_cond_1_orth": 106, "sess_1_cond_2_orth": 106, "sess_1_cond_n_orth": 106, "sess_2_cond_1_orth": 106, "sess_2_cond_2_orth": 106, "sess2_cond_n_orth": 106, "sess_n_cond_1_orth": 106, "sess_n_cond_2_orth": 106, "sess_n_cond_n_orth": 106, "sess_multi": 106, "detail": [106, 128, 157], "experiment": [106, 107, 108, 109, 110, 118, 120], "cell": 106, "arrai": [106, 168, 170, 173], "load": [106, 123, 128], "go": [106, 118], "sess_1_multi": 106, "sess_2_multi": 106, "sess_n_multi": 106, "sess_regress": [106, 120, 122], "haemodynam": 106, "val": [106, 120, 122], "sess_1_dict_1": 106, "sess_1_dict_2": 106, "sess_1_dict_n": 106, "sess_2_dict_1": 106, "sess_2_dict_2": 106, "sess_2_dict_n": 106, "sess_n_dict_1": 106, "sess_n_dict_2": 106, "sess_n_dict_n": 106, "reg1": [106, 122], "79": [106, 122], "585": [106, 122], "805": [106, 122], "155": [106, 119, 122], "66": [106, 122], "195": [106, 122], "045": [106, 122], "82": [106, 122], "765": [106, 122], "67": [106, 119, 122], "955": [106, 122], "935": [106, 122], "865": [106, 122], "reg2": [106, 122], "58": [106, 122], "09": [106, 122], "91": [106, 122, 170], "87": [106, 122], "73": [106, 122], "sess_multi_reg": 106, "multi_reg": 106, "sess_1_file_1": 106, "sess_1_file_2": 106, "sess_1_file_n": 106, "sess_2_file_1": 106, "sess_2_file_2": 106, "sess_2_file_n": 106, "sess_n_file_1": 106, "sess_n_file_2": 106, "sess_n_file_n": 106, "file1": [106, 115], "file2": [106, 115], "sess_hpf": 106, "hpf": 106, "slow": 106, "drift": 106, "period": [106, 134], "longer": [106, 133], "427": 106, "major": 106, "variabl": [106, 107, 108, 109, 110, 132, 152, 153, 159], "subdivis": 106, "peak": [106, 113, 128, 133, 136, 167], "vari": [106, 149], "plu": 106, "dispers": 106, "finit": 106, "impuls": 106, "post": [106, 128], "stimulu": 106, "span": 106, "volterra_expansion_ord": 106, "volt": 106, "volterra": 106, "formul": 106, "global_intensity_norm": 106, "mask_threshold": 106, "mthresh": 106, "analys": [106, 113, 128, 134, 135, 149, 177], "mask_swc1anat": 106, "model_serial_correl": 106, "cvi": 106, "serial": [106, 173], "alias": 106, "biorhythm": 106, "unmodel": 106, "neuron": 106, "autoregress": 106, "reml": [106, 172], "001_data": [107, 108, 109, 110], "con_001": [107, 108, 110], "002_data": [107, 108, 109, 110], "spm_stat_2ndlevel": [107, 108, 109, 110], "include_intercept": 107, "intercept": 107, "threshold_mask": [107, 108, 109, 110], "exce": [107, 108, 109, 110, 113], "threshold_mask_valu": [107, 108, 109, 110], "use_implicit_mask": [107, 108, 109, 110], "nan": [107, 108, 109, 110], "global_calc": [107, 108, 109, 110], "vbm": [107, 108, 109, 110], "own": [107, 108, 109, 110], "global_calc_valu": [107, 108, 109, 110], "fullmean": [107, 108, 109, 110], "no_grand_mean_sc": [107, 108, 109, 110], "overal": [107, 108, 109, 110], "grand": [107, 108, 109, 110], "scall": [107, 108, 109, 110], "ancova": [107, 108, 109, 110], "user_covariates_nam": 107, "covari": [107, 108, 109, 110, 172], "user_covariates_vector": 107, "user_covariates_cent": 107, "reaction": [107, 108, 109, 110], "usercovariates_cent": 107, "covariates_nam": [107, 108, 109, 110], "nuisanc": [107, 108, 109, 110], "examin": [107, 108, 109, 110], "additionl": [107, 108, 109, 110], "covariates_vector": [107, 108, 109, 110], "covariates_interact": [107, 108, 109, 110], "covariates_cent": [107, 108, 109, 110], "opportun": [107, 108, 109, 110], "facto": [107, 108, 109, 110], "explicit_mask_fil": [107, 108, 109, 110], "explicit": [107, 108, 109, 110], "paired_fil": 109, "beta_001": 109, "beta_002": 109, "onesamplettestdesign": [109, 110, 131, 171, 172], "group1_fil": 110, "grouop": 110, "group2_fil": 110, "con_002": 110, "unequal_vari": 110, "unequ": 110, "acm": [111, 112, 123], "out_list": [111, 125], "acp": 112, "pica": 112, "roi_c": 112, "roi_fron": 112, "roi_insula": 112, "roi_occ": 112, "roi_par": 112, "roi_str": 112, "roi_temp": 112, "roi_tha": 112, "sca": 112, "listoflist": 112, "perfus": [113, 131, 170, 181], "arteri": [113, 173], "evalu": [113, 128, 175, 180], "blood": [113, 130, 132, 136], "flow": [113, 130, 132, 136], "often": 113, "diagnos": 113, "stroke": 113, "tumor": 113, "vascular": 113, "abnorm": 113, "broader": [113, 128], "categori": 113, "suscept": [113, 173], "dsc": [113, 128, 136, 170, 173, 181], "techniqu": [113, 136, 168], "inject": [113, 136], "agent": [113, 136, 173], "gadolinium": [113, 128, 136, 173], "rapid": [113, 128, 136], "vessel": [113, 136], "reflect": [113, 132], "concentr": [113, 136, 170, 173], "therebi": 113, "cerebr": [113, 130, 132, 136], "cbf": [113, 136], "cbv": [113, 136], "transit": [113, 128, 136], "mtt": [113, 136], "ttp": [113, 136], "tmax": 113, "bolu": [113, 128, 173], "arriv": [113, 128, 173], "t0": [113, 128, 173], "func_fil": [113, 128, 130, 132, 136, 145, 146, 147, 153], "magnet": [113, 128, 130, 132, 136, 170, 173], "reson": [113, 128, 130, 132, 170, 173], "experi": [113, 120, 128, 130, 132, 134, 135], "ideal": [113, 128], "swrfunc": [113, 128, 145, 146, 147, 157], "aif_fil": [113, 128], "make_aif": [113, 131, 136, 160, 173], "swrfunc_aif": [113, 128], "mask_swc1_anat_003": 113, "cbv_imag": 113, "millilit": 113, "gram": 113, "ml": 113, "100g": 113, "characterist": [113, 128], "swrfunc_cbv_deconv": 113, "cbf_imag": 113, "deliv": [113, 136], "minut": 113, "valuabl": 113, "adequaci": 113, "neurolog": 113, "swrfunc_cbf_deconv": 113, "mtt_imag": 113, "effici": 113, "alongsid": 113, "health": 113, "swrfunc_mtt_deconv": 113, "ttp_imag": 113, "insight": [113, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157], "particularli": [113, 173], "cerebrovascular": [113, 175, 177], "disord": 113, "swrfunc_ttp_deconv": 113, "tmax_imag": 113, "delai": [113, 128], "swrfunc_tmax_deconv": 113, "t0_imag": 113, "essenti": 113, "mark": 113, "passag": [113, 136], "swrfunc_t0_deconv": 113, "histori": 114, "to_keep_filt": 114, "regex": 114, "to_remove_filt": 114, "to_remove_fil": 114, "01_anatomical_mriqcreport_2023_05_12_16_26_12_58": 114, "_qc": 114, "exclusif": 114, "files_remov": 114, "file3": 115, "file_list": [115, 127], "in_list": [116, 117], "index_filt": [116, 126, 127], "filtered_list": 116, "pars": 117, "anat1_001": 117, "anat1_002": 117, "anat1_003": 117, "anat2_002": 117, "bid": [118, 173], "trial_typ": 118, "primari": 118, "categoris": 118, "instanc": 118, "bloc": 118, "tsv_file": 118, "conten": [118, 119, 122], "sgould": 118, "organ": 118, "mia_project": [118, 119, 120, 121, 122], "001_se": 118, "01_task": 118, "bloc_ev": 118, "02_task": 118, "event_ev": 118, "cond_nam": [118, 119], "trial1": 118, "trial2": 118, "cond_onset": [118, 119], "cond_dur": [118, 119], "evetn": 118, "csv_file": [119, 122], "sess01_block_onset": 119, "sess02_event_onset": 119, "design_typ": 119, "inc": 119, "con": 119, "n1": 119, "n2": 119, "f1": 119, "f2": 119, "88": [119, 122], "144": 119, "174": 119, "236": 119, "248": 119, "274": 119, "102": 119, "116": 119, "154": 119, "164": 119, "184": 119, "196": 119, "208": 119, "222": 119, "74996667": 119, "99996667": 119, "24996667": 119, "49996667": 119, "74": 119, "92": 119, "119": 119, "123": 119, "125": 119, "137": 119, "141": 119, "143": 119, "146": 119, "159": 119, "161": 119, "204": 119, "238": 119, "89": 119, "94": 119, "134": 119, "148": 119, "191": 119, "202": 119, "215": 119, "233": 119, "242": 119, "245": 119, "281": 119, "290": 119, "303": 119, "310": 119, "319": 119, "339": 119, "341": 119, "33333333e": 119, "2499667": 119, "4999667": 119, "9999667": 119, "7499667": 119, "62": 119, "101": 119, "249967": 119, "103": 119, "499967": 119, "999967": 119, "749967": 119, "170": 119, "188": 119, "227": 119, "265": 119, "283": 119, "285": 119, "287": 119, "344": 119, "157": 119, "168": [119, 122], "177": 119, "179": 119, "182": 119, "197": 119, "240": 119, "254": 119, "267": 119, "269": 119, "294": 119, "299": 119, "301": 119, "314": 119, "317": 119, "326": 119, "332": 119, "335": 119, "337": 119, "346": 119, "eprime_fil": [120, 134], "xlsx": [120, 134], "001_eprim": 120, "csv_correct_respons": 120, "reco": [120, 134, 135], "001_eprime_correct_respons": 120, "csv_encodage_reco": 120, "ge": [120, 134, 135], "indirectli": [120, 134], "bad": 120, "question": 120, "rest": [120, 134], "001_eprime_encodage_reco": 120, "sess_regress_level1design": [120, 122], "encodag": 120, "patient_nam": 121, "sess01_regressor": 122, "sess02_regressor": 122, "563": 122, "596": 122, "752": 122, "75": 122, "77": 122, "63": 122, "86": 122, "rois_list": [123, 173], "lib_dir": [123, 173], "roi_list": [123, 173], "charact": 123, "foo": [123, 173], "faa": [123, 173], "foo_1": [123, 173], "faa_2": [123, 173], "file_in_db": [123, 173], "output_directori": [123, 168, 173, 181], "resourc": [123, 170], "catch": [113, 123, 128], "starts_with": 123, "properli": [124, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173], "node": 124, "databrows": 124, "send": 124, "manag": [124, 158], "click": 124, "database_scan": 124, "file_nam": [125, 168, 181], "list_of_list": 126, "og": 126, "relev": 128, "noisi": 128, "candid": 128, "unrealist": 128, "behavior": [128, 134, 173], "accuraci": 128, "properti": [128, 173], "finer": 128, "warn": 128, "too": 128, "problem": [128, 173], "10th": 128, "obj1": 129, "obj2": 129, "obj_list": 129, "tidal": [130, 132], "carbon": 130, "dioxid": 130, "relationship": 130, "magdata": 130, "coolterm": 130, "trigger": [130, 132], "hypercapn": 130, "challeng": [130, 175, 181], "metadata": 130, "trigger_data": [130, 132], "synchron": [130, 132], "vaso_trigger_tim": 130, "physio_data": [130, 132], "cvr_reg": 130, "brick": [131, 132, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 177, 178, 179, 181, 182], "atom": [131, 158, 159, 162, 163, 164, 165, 166, 168, 169, 177, 178], "parti": [131, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173], "calcdroptr": [131, 161, 162], "despik": [131, 143, 161, 162], "fwhmx": [131, 152, 155, 161, 162], "gcor": [131, 155, 161, 162], "outlierscount": 131, "qualityindex": [131, 161, 162], "refitdeobliqu": [131, 161, 162], "tshift": [131, 161, 162], "tstatmean": [131, 161, 162], "volreg": [131, 161, 162], "affineiniti": [131, 161, 163], "applytransform": [131, 137, 139, 161, 163], "n4biasfieldcorrect": [131, 140, 141, 144, 161, 163], "computedki": [131, 161, 164], "binar": [131, 140, 161, 165, 168], "synthstrip": [131, 152, 161, 165, 177], "synthstripmriqc": [131, 161, 165], "bet": [131, 152, 161, 166], "convertxfm": [131, 154, 161, 166], "epireg": [131, 154, 161, 166], "extractroi": [131, 161, 166], "matlab_wrap": [131, 161], "computebrainvolum": 131, "constrainedsphericaldeconvolut": [131, 161, 167], "dwibiascorrect": [131, 161, 167], "dwibrainmask": [131, 161, 167], "dwicat": [131, 161, 167], "dwidenois": [131, 161, 167], "dwiextract": [131, 161, 167], "editingtrack": [131, 161, 167], "filteringtrack": [131, 161, 167], "fittensor": [131, 161, 167], "generate5tt2gmwmi": [131, 161, 167], "mrcat": [131, 161, 167], "mrdegibb": [131, 161, 167], "mrgridregrid": [131, 161, 167], "mrmath": [131, 161, 167], "mrtransform": [131, 161, 167], "mtnormalis": [131, 161, 167], "responsesdtourni": [131, 161, 167], "sphericalharmonicextract": [131, 161, 167], "tensormetr": [131, 161, 167], "transformfslconvert": [131, 161, 167], "applybiascorrect": [131, 161, 168], "artifactmask": [131, 161, 168], "conformimag": [131, 152, 161, 168], "convroi": [131, 156, 161, 168], "enhanc": [131, 138, 161, 168], "estimatesnr": [131, 161, 168], "extractroibylabel": [131, 154, 161, 168], "extractsignalroi": [131, 154, 161, 168], "gradientthreshold": [131, 161, 168], "intensityclip": [131, 161, 168], "nonsteadydetector": 131, "resample1": [131, 151, 161, 168], "resample2": [131, 161, 168], "rotationmask": [131, 161, 168], "sanit": [131, 153, 161, 168], "templatefromtemplateflow": [131, 161, 168], "gm_wm_normal": [131, 151, 161, 169], "newseg": [131, 145, 147, 161, 169], "slicetim": [131, 161, 169], "assemblynetdock": [131, 154], "getlabel": [131, 154], "labelscorrespond": [131, 154], "anatiqm": [131, 160, 170], "boldiqm": [131, 160, 170], "boldiqmsplot": [131, 160, 170], "carpetparcel": [131, 160, 170], "computedvar": [131, 160, 170], "framewisedisplac": [131, 160, 170], "lateralizationindexcurv": [131, 160, 170], "mean_stddev_calc": [131, 156, 160, 170], "plotsignalroi": [131, 154, 160, 170], "reportanatmriqc": [131, 160, 170], "reportco2inhalcvr": [131, 132, 160, 170], "reportfuncmriqc": [131, 160, 170], "reportge2rec": [131, 160, 170], "reportgroupmriqc": [131, 160, 170], "reportperfdsc": [131, 136, 160, 170], "result_collector": [131, 156, 160, 170], "estimatemodel": [131, 134, 135, 156, 157, 171, 172], "multipleregressiondesign": [131, 171, 172], "pairedttestdesign": [131, 171, 172], "twosamplettestdesign": [131, 171, 172], "concat_to_list": [131, 156, 160, 173], "concat_to_list_of_list": [131, 156, 160, 173], "deconv_from_aif": [131, 136, 160, 173], "delete_data": [131, 160, 173], "files_to_list": [131, 132, 156, 160, 173], "find_in_list": [131, 156, 160, 173], "get_conditions_from_bids_tsv": [131, 160, 173], "get_conditions_from_csv": [131, 160, 173], "get_eprime_info_ge2rec": [131, 160, 173], "get_patient_nam": [131, 160, 173], "get_regressors_from_csv": [131, 160, 173], "import_data": [131, 156, 160, 173], "input_filt": [131, 160, 173], "list_dupl": [131, 145, 160, 173], "list_of_list_to_list": [131, 160, 173], "list_to_fil": [131, 132, 152, 160, 173], "make_a_list": [131, 157, 160, 173], "make_cvr_reg_physio": [131, 132, 160, 173], "cerebvascularreact": [131, 159, 174], "co2_inhal": [131, 159, 174], "dwitractographi": [131, 159, 174], "dwi_whole_brain_tractograpi": 131, "functionallangagememori": 131, "ge2rec": [131, 170, 173, 181], "perfdsc": 131, "anat_airmask": [131, 159, 174], "anat_headmask": [131, 159, 174], "anat_mni_tpm": [131, 152, 159, 174], "anat_skullstrip": [131, 159, 174], "anat_skullstrip_synthstrip": [131, 159, 174], "anat_spatial_norm": [131, 159, 174], "bold_hmc": [131, 159, 174], "bold_mni_align": [131, 159, 174], "bold_spatial_preprocessing1": [131, 132, 136, 159, 174], "bold_spatial_preprocessing2": [131, 147, 159, 174], "bold_spatial_preprocessing3": 131, "dwi_fod_msmt_csd": [131, 159, 174], "dwi_preprocess": [131, 174, 177], "dwi_tissue_boundari": 131, "spatial_mask": [131, 132, 136, 156, 157, 159, 174], "qualitycontrol": [131, 159, 174], "anat_mriqc": [131, 159, 174], "bold_mri_qc": 131, "bold_signals_roi": 131, "bold_iqm": [131, 159, 174], "extract_roi_param": [131, 132, 159, 174], "bold_stat_cvr": [131, 132, 159, 174], "hypercapnia": [132, 175], "induc": [132, 170], "administ": 132, "deliveri": 132, "system": [132, 170], "particip": [132, 134], "breath": 132, "respiratori": 132, "apparatu": 132, "captur": 132, "oxygen": 132, "throughout": 132, "heart": 132, "monitor": 132, "induct": 132, "analyz": [132, 134, 135], "anat_fil": [132, 134, 135, 136, 145, 146, 147, 152, 181], "turbo": [132, 136, 145, 146, 147], "trigger_tim": 132, "stimul": 132, "carbogen": 132, "variocap": 132, "administr": 132, "cannula": 132, "bob_01": [132, 136], "xls_file": [132, 156], "tab": [132, 173], "delimit": 132, "summari": [132, 136, 152, 153, 155, 167], "patientref_data": 132, "bold_il_std_beta": [132, 156], "bold_mean_beta": [132, 156], "bold_il_mean_beta": [132, 156], "bold_std_spmt": [132, 156], "bold_il_std_spmt": [132, 156], "patientref_co2_inhal_cvr_report_2024_03_19_11_01_15_04": 132, "tractogram": 133, "multishel": [133, 149], "implaus": 133, "overestim": 133, "msmtt": 133, "exploit": 133, "sensit": [113, 128, 133], "atc": 133, "coregistr": [133, 150], "million": 133, "randomli": 133, "subset": [133, 167], "200k": 133, "10k": 133, "shorter": 133, "softawr": 133, "tractseg": 133, "tutori": [133, 150], "andi": 133, "book": 133, "suggest": [133, 150], "howev": [113, 128, 133, 150], "seem": [133, 150], "perfectli": [133, 150], "edit": [133, 167], "in_dwi_pe_dir": [133, 149], "in_diw": [133, 149], "in_dwi_ro_tim": [133, 149], "in_b0_revers": [133, 149], "topup": [133, 149, 167], "b0_revers": [133, 149], "in_t1w": [133, 150], "sh_peak": 133, "dwi_denoised_unringed_dwifslpreproc_unbias_wm_odf_norm_peak": 133, "tracks_10mio": 133, "dwi_denoised_unringed_dwifslpreproc_unbias_wm_odf_norm_tracto": 133, "tracks_200k": 133, "dwi_denoised_unringed_dwifslpreproc_unbias_wm_odf_norm_tracto_200k": 133, "tracks_10k": 133, "dwi_denoised_unringed_dwifslpreproc_unbias_wm_odf_norm_tracto_10k": 133, "dwi_denoised_unringed_dwifslpreproc_unbias_wm_odf_norm_tracto_sift": 133, "tracks_sift_10k": 133, "t1w_coreg": [133, 150], "t1w_transform": [133, 150], "advanc": 133, "neurophil": 133, "prime": [134, 135, 173], "psychologi": [134, 135], "lmn": 134, "interdepend": 134, "sentenc": 134, "heard": 134, "word": 134, "headphon": 134, "pseudoword": 134, "broadcast": 134, "listen": 134, "talk": 134, "covertli": 134, "fixat": 134, "paradigm": 134, "pseudo": 134, "modeand": 134, "recognis": 134, "had": 134, "choic": 134, "press": 134, "motor": 134, "ra": [134, 135], "auditori": 134, "hear": 134, "rememb": 134, "repeat": [134, 173], "we": [134, 148], "via": [134, 165], "banjac": 134, "cartographi": 134, "focal": 134, "pharmaco": 134, "resist": 134, "pilepsi": 134, "multimod": 134, "universit\u00e9": 134, "grenobl": 134, "alp": 134, "2021": 134, "english": 134, "nnt": 134, "2021grals037": 134, "tel": 134, "03641888": 134, "front": [134, 170], "hum": 134, "2022": 134, "jan": 134, "752138": 134, "doi": [134, 170], "3389": [134, 170], "fnhum": 134, "pmid": 134, "35069148": 134, "pmcid": 134, "pmc8772037": 134, "behav": 134, "1562": 134, "1579": 134, "1007": [134, 170], "s11682": 134, "020": 134, "00355": 134, "func_gene_fil": [134, 135], "func_gen": [134, 135], "func_reco_fil": [134, 135], "func_reco": [134, 135], "func_recall_fil": [134, 135], "func_recal": [134, 135], "eprim": 134, "patientname_ge2rec_report_2024_03_19_11_01_15_04": [134, 135], "behavouri": 135, "pilelin": 135, "explan": [135, 157], "wide": 136, "clinic": [136, 170], "research": 136, "vasculatur": 136, "lead": [113, 128, 136], "bob_01_perf_dsc_report_2024_10_23_06_11_12_36": 136, "templateflow": [137, 139, 142, 144, 168], "t1w_brain_outskin": 137, "t1w_masked_inversecomposit": [137, 139, 142], "out_rot_mask": 137, "rot_t1w_mask": 137, "ss_t1w_seg": 138, "denoise_ss_t1w_enh_grad": 138, "bias_correct": 140, "n4c_t1w_bia": 140, "ss_orig_t1w": 140, "ss_orig_t1w_bin": 140, "out_correct": 141, "n4c_t1w_clip": 141, "ss_n4c_t1w_clip": 141, "pre_n4c_t1w_clipped_desc_brain_mask": 141, "moving_mask": 142, "t1w_masked_composit": 142, "w_t1w_mask": 142, "mric": 142, "hcm": 143, "bold_hcm": 143, "deobliqu": [143, 162], "deobliq": 143, "reg_d_func_on": [143, 155], "reg_d_func": 143, "mriq": [143, 144], "hmc": 143, "boldref": 144, "dseg": 144, "epi_mask": 144, "epi_mean": [144, 155], "reg_convergence_threshold": 144, "reg_convergence_window_s": 144, "reg_interpol": 144, "reg_metr": 144, "reg_metric_weight": 144, "reg_number_of_iter": 144, "reg_radius_or_number_of_bin": 144, "reg_sampling_percentag": 144, "reg_sampling_strategi": 144, "reg_shrink_factor": 144, "reg_smoothing_sigma": 144, "reg_transform_paramet": 144, "reg_transform": 144, "seg_template_r": 144, "template_r": 144, "n4c_mean_reg_func_valid_composit": 144, "n4c_mean_reg_func_valid_bia": 144, "epi_mni": 144, "epi_parc": [144, 155], "n4c_mean_reg_func_valid_inversecomposit": 144, "normalized_anat": [145, 146, 147], "smoothed_func": [145, 146, 147, 151, 157], "normalized_func": [145, 147], "sush": [146, 147], "st_acquist": 147, "func_out_voxel_s": 147, "anat_out_voxel_s": 147, "rf": 148, "everi": [148, 162, 169], "studi": [148, 170], "dwi_denoised_unringed_dwifslpreproc_unbia": [148, 149, 150], "dwi_denoised_unringed_dwifslpreproc_unbias_brain_mask": [148, 149], "voxel_fin": 148, "dwi_denoised_unringed_dwifslpreproc_unbias_response_voxel": 148, "dwi_denoised_unringed_dwifslpreproc_unbias_odf_predicted_sign": 148, "wm_odf_norm": 148, "dwi_denoised_unringed_dwifslpreproc_unbias_wm_odf_norm": 148, "gm_odf_norm": 148, "dwi_denoised_unringed_dwifslpreproc_unbias_gm_odf_norm": 148, "csf_odf_norm": 148, "dwi_denoised_unringed_dwifslpreproc_unbias_csf_odf_norm": 148, "gibb": [149, 167], "ring": [149, 167], "distrort": 149, "eddi": [149, 167], "convers": [149, 150, 167], "distorst": 149, "preproc_dwi": 149, "creation": 150, "subcort": 150, "patholog": 150, "t1w_5tt_transform": 150, "t1w_5tt_transformed_gmwmse": 150, "c6anat": 151, "mask_003": [151, 156, 157], "mask_swc1anat_003": 151, "special": [152, 153, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173], "effort": [152, 153], "much": [113, 152, 153], "sought": [152, 153], "environ": [152, 153, 158], "ants_random_se": [152, 153], "bare": 152, "metal": 152, "itk_global_default_number_of_thread": 152, "omp_num_thread": 152, "discuss": [152, 153], "anat_report": 152, "nterpol": 153, "func_report": 153, "assemblynet": 154, "labels_structur": 154, "le": 154, "hippocampu": 154, "out_png_tissu": 154, "func_extracted_signals_tissu": 154, "out_png_lob": 154, "func_extracted_signals_lob": 154, "out_png_macrostructur": 154, "func_extracted_signals_macrostructur": 154, "out_png_structur": 154, "func_extracted_signals_47_48": 154, "bold_mriqc": [155, 159, 174], "parcel": [155, 170], "hmc_motion": 155, "ras_epi": 155, "dummy_tr": 155, "dvars_intensity_norm": 155, "dvars_remove_zero_vari": 155, "epi_tsnr": 155, "fd_normal": 155, "fd_parameter_sourc": 155, "fd_radiu": 155, "fwhm_combin": 155, "fwhm_detrend": 155, "hmc_epi": 155, "quality_index_automask": 155, "outlier_fract": 155, "spikes_detrend": 155, "spikes_no_zscor": 155, "spikes_skip_fram": 155, "spikes_skipe_thresh": 155, "boldqc_out_fil": 155, "mean_reg_func_valid_bold_qc": 155, "dvars_fil": 155, "fd_file": 155, "framewis": [155, 170], "outliercount_fil": 155, "spike_fil": 155, "mask_anat_002": [156, 157], "preced": 156, "il": 156, "conv_roi_mak": 156, "roi_dat": 156, "convacp_l": 156, "convacp_r": 156, "convpica_l": 156, "convpica_r": 156, "cing_l": 156, "cing_r": 156, "fron_l": 156, "fron_r": 156, "insula_l": 156, "insula_r": 156, "occ_l": 156, "occ_r": 156, "par_l": 156, "par_r": 156, "str_l": 156, "str_r": 156, "temp_l": 156, "temp_r": 156, "tha_l": 156, "tha_r": 156, "convsca_l": 156, "convsca_r": 156, "directli": [157, 158, 162, 163, 164, 165, 166, 167, 169, 172], "regressor_physio_etco2_ctl": 157, "populse_mia": [158, 159, 162, 163, 164, 165, 166, 167, 169, 172], "ergonom": 158, "easili": 158, "offer": 158, "known": [158, 170, 181], "commun": 158, "under": [158, 175, 181], "umbrella": 158, "websit": [158, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 180], "On": [158, 181], "inherit": 158, "page": [158, 181], "offici": 159, "dwi_whole_brain_tractographi": [159, 174], "dwipreprocess": [159, 174], "__init__": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 181, 182], "co2_inhal_cvr_make_report": [159, 181], "ge2rec_make_report": [159, 181], "get_iqms_data": [159, 181], "mriqc_anat_make_report": [159, 181], "mriqc_func_make_report": [159, 181], "mriqc_group_make_report": [159, 181], "perf_dsc_make_report": [159, 181], "pagenumcanva": [159, 181], "draw_page_numb": [159, 181], "showpag": [159, 181], "reportlin": [159, 181], "draw": [159, 181], "checkfileext": [159, 181], "check_orient": [159, 181], "del_dbfieldvalu": [159, 181], "dict4runtime_upd": [159, 181], "get_dbfieldvalu": [159, 181], "mriqc_get_all_run": [159, 181], "mriqc_group_iqms_tsv": [159, 181], "plot_boxplot_point": [159, 181], "plot_qi2": [159, 181], "plot_realignment_paramet": [159, 181], "plot_segment": [159, 181], "plot_slice_plan": [159, 181], "set_dbfieldvalu": [159, 181], "dedic": [159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 181], "py": [159, 165, 168, 181], "mainli": 159, "setup": 159, "get_gitvers": [159, 182], "commit": 159, "git": 159, "launch": [159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173], "processmatlab": [159, 182], "processmia": [159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173], "overrid": 159, "get_input_spec": [159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 180], "trait": [159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 180], "get_output_spec": [159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 180], "add_exit": [159, 182], "add_path": [159, 182], "change_directori": [159, 182], "display_paramet": [159, 182], "parameter_nam": 159, "set_global_vari": [159, 182], "variable_nam": 159, "set_vari": [159, 182], "treatment": [160, 177], "submodul": [160, 161, 171, 174, 182], "spatial_preprocess": [160, 161], "list_output": [160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 181], "run_process_mia": [160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 181], "art_qi1": [160, 170], "art_qi2": [160, 170], "cjv": [160, 170], "cnr": [160, 170], "efc": [160, 170], "fber": [160, 170], "find_peak": [160, 170], "find_spik": [160, 170], "fuzzy_jaccard": [160, 170], "gsr": [160, 170], "image_binary_dil": [160, 170], "lateralization_index_iter_curv": [160, 170], "normalize_mc_param": [160, 170], "regress_poli": [160, 170], "rpve": [160, 170], "snr_dietrich": [160, 170], "summary_stat": [160, 170], "volume_fract": [160, 170], "wm2max": [160, 170], "bol_ar_tim": [160, 173], "deconv_osvd": [160, 173], "delta_r2star": [160, 173], "round_half_up": [160, 173], "convert_to_native_typ": [160, 173], "gaussfir": [160, 173], "gfb_conv": [160, 173], "spm_hrf": [160, 173], "encapsul": 161, "mrtrix3": [161, 167], "homemad": 161, "outliercount": [161, 162], "convblock": [161, 165], "stripmodel": [161, 165], "conform": [161, 165, 168], "resample_lik": [161, 165], "artifact_mask": [161, 168], "is_outli": [161, 168], "customis": [162, 163, 164, 165, 166, 167, 169, 172], "thing": [162, 163, 164, 165, 166, 167, 169, 172], "3dautomask": 162, "instanti": [162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173], "plug": [162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173], "self": [162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 181], "is_plug": [162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173], "inheritance_d": [162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173], "notindb": [162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173], "make_initresult": [162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173], "inheritance_dict": [162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173], "arithmet": 162, "droptr": 162, "3dcalc": 162, "surround": [162, 170], "3dtstat": 162, "3dvolreg": [162, 177], "http": [163, 165, 168, 169, 170, 181], "io": [163, 165, 168, 169], "html": [163, 165, 168, 169], "com": [163, 165, 168, 181], "niprep": [163, 165, 168, 181], "tree": 163, "master": 163, "mri_binar": 165, "statement": 165, "OF": 165, "blob": [165, 168, 181], "2995ded957961a7f3704de57eee88eb6cc30d52d": 165, "ndim": 165, "in_channel": 165, "out_channel": 165, "stride": 165, "leaki": 165, "leakyrelu": 165, "unet": 165, "blabla": [165, 170, 179], "bool": [165, 170], "nb_featur": 165, "nb_level": 165, "feat_mult": 165, "max_featur": 165, "nb_conv_per_level": 165, "max_pool": 165, "return_mask": 165, "input_nii": 165, "output_dtyp": 165, "cval": 165, "convert_xfm": 166, "fslroi": 166, "intra": 166, "b1": 167, "domain": 167, "dholland": 167, "applymask": 168, "e021008da0a2ef1c48e882baf932139a673349f9": 168, "l301": 168, "45ab13e1bf6fdbf5e29c90cef44055b0b9cf391b": 168, "l92": 168, "common": 168, "conform_imag": 168, "l75": 168, "l974": 168, "l970": 168, "l1039": 168, "l405": 168, "prescrib": 168, "percentil": [168, 170], "l474": 168, "f662acfce8def4717e0c3414618f3a5de5913b31": 168, "resample_to_img": 168, "l448": 168, "l394": 168, "l899": 168, "imdata": 168, "airdata": 168, "thresh": 168, "nparrai": 168, "numobserv": 168, "numdimens": 168, "numpi": [168, 170, 173, 181], "observ": 168, "iglewicz": 168, "david": 168, "hoaglin": 168, "1993": 168, "handl": 168, "asqc": 168, "edward": 168, "mykytka": 168, "ph": 168, "editor": 168, "_ar_est_yw": 170, "_flatten_dict": 170, "_prepare_mask": 170, "_robust_zscor": 170, "atkinson1997": 170, "atkinson": 170, "focu": 170, "ieee": 170, "med": 170, "903": 170, "910": 170, "1997": 170, "1109": 170, "650886": 170, "dietrich2007": 170, "dietrich": 170, "influenc": 170, "multichannel": 170, "coil": 170, "parallel": 170, "jmri": 170, "375": 170, "385": 170, "1002": 170, "20969": 170, "ganzetti2016": 170, "ganzetti": 170, "driven": 170, "neuroinform": 170, "2016": 170, "fninf": 170, "00010": 170, "giannelli2010": 170, "giannelli": 170, "character": 170, "nyquist": 170, "ghost": 170, "bandwidth": [170, 173], "app": 170, "clin": 170, "phy": 170, "2010": 170, "1120": 170, "jacmp": 170, "v11i4": 170, "3237": 170, "magnota2006": 170, "magnotta": 170, "va": 170, "friedman": 170, "fbirn": 170, "multicent": 170, "dig": 170, "147": 170, "2006": 170, "s10278": 170, "006": 170, "0264": 170, "shehzad2015": 170, "shehzad": 170, "connectom": 170, "confer": 170, "abstract": 170, "neuroinformat": 170, "2015": 170, "conf": 170, "fnin": 170, "00047": 170, "union": 170, "subtract": 170, "power2012": 170, "spuriou": 170, "systemat": 170, "xlm": 170, "mortamet2009": [170, 177], "_1": 170, "limits_": 170, "x_": 170, "art": 170, "ndarrai": [170, 173, 181], "min_voxel": 170, "max_voxel": 170, "300000": 170, "chi": 170, "onto": 170, "artifactu": 170, "2_n": 170, "2n": 170, "mu_wm": 170, "mu_gm": 170, "sigma_wm": 170, "sigma_gm": 170, "proxi": 170, "inu": 170, "sigma_": 170, "mu_": 170, "sigma_air": 170, "sigma_b": 170, "framemask": 170, "shannon": 170, "energi": 170, "sum_": 170, "x_j": 170, "ln": 170, "2_j": 170, "equat": 170, "empti": [170, 181], "insert": 170, "skin": 170, "in_tpm": 170, "in_mni_tpm": 170, "epi_data": 170, "ref_fil": 170, "circl": 170, "intersect": 170, "str": 170, "ball": 170, "footprint": 170, "mask_right": 170, "mask_left": 170, "roi_nam": 170, "www": 170, "fil": 170, "ion": 170, "ucl": 170, "ac": 170, "uk": 170, "ext": [170, 181], "li_it": 170, "filepath": 170, "inferior": 170, "rx": 170, "pitch": 170, "ry": 170, "roll": 170, "rz": 170, "yaw": 170, "remove_mean": 170, "failure_mod": 170, "p": [170, 173], "k_i": 170, "p_": 170, "mu_fg": 170, "sigma_fg": 170, "foreground": 170, "mu_f": 170, "sigma_f": 170, "mad_air": 170, "eq": 170, "rayleigh": 170, "pi": 170, "sometim": 170, "bg": 170, "icv": 170, "sum_i": 170, "cvr": [170, 173, 175, 177, 180, 181], "co2": [170, 181], "inhal": 170, "get_covari": [171, 172], "restrict": 172, "likelihood": 172, "manipul": 173, "list1": 173, "list2": 173, "aif": 173, "vol_4d": 173, "t0_mask": 173, "nb_row": 173, "nb_col": 173, "nb_sli": 173, "nb_dyn": 173, "u": 173, "c_func_pad": 173, "data_mask": 173, "osvd": [113, 173], "oscillatori": [113, 173], "singular": [113, 173], "decomposit": [113, 173], "oscil": [113, 173], "instabl": [113, 173], "svd": 173, "c_aif_toeplitz": 173, "residu_f": 173, "te": 173, "deltar2": 173, "\u03b4r2": 173, "transvers": 173, "relax": [128, 173], "r2": 173, "paramagnet": 173, "gd": 173, "c_vol_4d": 173, "round": 173, "rule": 173, "1rst": 173, "info": [173, 182], "browser": 173, "anoth": 173, "bt": 173, "nt": 173, "tap": 173, "subsect": 173, "section": 173, "microtim": 173, "pipeline_definit": [174, 175, 176, 177, 178, 179, 180], "reactiv": 175, "autoexport_nodes_paramet": [175, 176, 177, 178, 179, 180], "kwarg": [175, 176, 177, 178, 179, 180, 181], "reserv": 177, "anat_mriqc_pipelin": 178, "irm": 179, "bold_stat": 180, "report_fil": 181, "dict4runtim": 181, "constructor": 181, "specialis": 181, "mriqc_group": 181, "perf_dsc": 181, "canva": 181, "footer": 181, "page_count": 181, "break": 181, "flowabl": 181, "ext_dic": 181, "valid_bool": 181, "in_ext": 181, "verbos": 181, "statu": 181, "tags2del": 181, "db": 181, "tag_to_del": 181, "db_filenam": 181, "dict": 181, "recov": 181, "raw": 181, "files_nam": 181, "datafram": 181, "panda": 181, "titl": 181, "ylabel": 181, "tabular": 181, "x_grid": 181, "ref_pdf": 181, "fit_pdf": 181, "ref_data": 181, "cutoff_idx": 181, "bla": 181, "vox_siz": 181, "out_file_tra": 181, "out_file_rot": 181, "figsiz": 181, "inch": 181, "out_dir": 181, "5a0f0408bd0c176dbc46088c6ffe279269180f3f": 181, "viz": 181, "l550": 181, "data_1": 181, "data_2": 181, "fig_row": 181, "fig_col": 181, "slice_start": 181, "slice_step": 181, "dyn": 181, "cmap_1": 181, "vmin_1": 181, "vmax_1": 181, "cmap_2": 181, "vmin_2": 181, "vmax_2": 181, "only_nois": 181, "mosaic": 181, "overlaid": 181, "superimpos": 181, "sag": 181, "cor": 181, "panel": 181, "rgb": 181, "255": 181, "cmap": 181, "gist_rainbow": 181, "rdylbu": 181, "spectral": 181, "rainbow_r": 181, "jet_r": 181, "seismic_r": 181, "bwr_r": 181, "tag_to_add": 181, "field_typ": 181, "visibl": 181, "subpackag": 182, "process_matlab": 182, "bat_window_s": [113, 128], "slide": [113, 128], "sudden": [113, 128], "stabil": [113, 128], "sharp": [113, 128], "pick": [113, 128], "fluctuat": [113, 128], "moder": [113, 128], "term": [113, 128], "signific": [113, 128], "bat_th": [113, 128], "th": 128, "pronounc": [113, 128], "miss": [113, 128], "subtl": [113, 128], "gradual": [113, 128], "natur": [113, 128], "incorrectli": [113, 128], "wmaxr": 128, "wider": 128, "might": 128, "noisier": 128, "decreas": 128, "stricter": [113, 128], "permit": 128, "narrow": 128, "nb_vox_cand": 128, "nb_vox_best_scor": 128, "perf_normalis": 113, "zero_pad": 113, "complex": 113, "outcom": 113, "zero_pad_fact": 113, "strike": 113, "oscil_th": 113, "highlight": 113, "adjust": 113, "lose": 113, "know": 113}, "objects": {"": [[159, 0, 0, "-", "mia_processes"]], "mia_processes": [[160, 0, 0, "-", "bricks"], [159, 0, 0, "-", "info"], [174, 0, 0, "-", "pipelines"], [159, 0, 0, "-", "process_matlab"], [181, 0, 0, "-", "utils"]], "mia_processes.bricks": [[161, 0, 0, "-", "preprocess"], [170, 0, 0, "-", "reports"], [171, 0, 0, "-", "stat"], [173, 0, 0, "-", "tools"]], "mia_processes.bricks.preprocess": [[162, 0, 0, "-", "afni"], [163, 0, 0, "-", "ants"], [164, 0, 0, "-", "dipy"], [165, 0, 0, "-", "freesurfer"], [166, 0, 0, "-", "fsl"], [167, 0, 0, "-", "mrtrix"], [168, 0, 0, "-", "others"], [169, 0, 0, "-", "spm"]], "mia_processes.bricks.preprocess.afni": [[162, 0, 0, "-", "processes"]], "mia_processes.bricks.preprocess.afni.processes": [[162, 1, 1, "", "Automask"], [162, 1, 1, "", "Calc"], [162, 1, 1, "", "CalcDropTRs"], [162, 1, 1, "", "Despike"], [162, 1, 1, "", "FWHMx"], [162, 1, 1, "", "GCOR"], [162, 1, 1, "", "OutlierCount"], [162, 1, 1, "", "QualityIndex"], [162, 1, 1, "", "RefitDeoblique"], [162, 1, 1, "", "SkullStrip"], [162, 1, 1, "", "TShift"], [162, 1, 1, "", "TStatMean"], [162, 1, 1, "", "Volreg"]], "mia_processes.bricks.preprocess.afni.processes.Automask": [[162, 2, 1, "", "__init__"], [162, 2, 1, "", "list_outputs"], [162, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.Calc": [[162, 2, 1, "", "__init__"], [162, 2, 1, "", "list_outputs"], [162, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.CalcDropTRs": [[162, 2, 1, "", "__init__"], [162, 2, 1, "", "list_outputs"], [162, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.Despike": [[162, 2, 1, "", "__init__"], [162, 2, 1, "", "list_outputs"], [162, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.FWHMx": [[162, 2, 1, "", "__init__"], [162, 2, 1, "", "list_outputs"], [162, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.GCOR": [[162, 2, 1, "", "__init__"], [162, 2, 1, "", "list_outputs"], [162, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.OutlierCount": [[162, 2, 1, "", "__init__"], [162, 2, 1, "", "list_outputs"], [162, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.QualityIndex": [[162, 2, 1, "", "__init__"], [162, 2, 1, "", "list_outputs"], [162, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.RefitDeoblique": [[162, 2, 1, "", "__init__"], [162, 2, 1, "", "list_outputs"], [162, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.SkullStrip": [[162, 2, 1, "", "__init__"], [162, 2, 1, "", "list_outputs"], [162, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.TShift": [[162, 2, 1, "", "__init__"], [162, 2, 1, "", "list_outputs"], [162, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.TStatMean": [[162, 2, 1, "", "__init__"], [162, 2, 1, "", "list_outputs"], [162, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.Volreg": [[162, 2, 1, "", "__init__"], [162, 2, 1, "", "list_outputs"], [162, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.ants": [[163, 0, 0, "-", "processes"]], "mia_processes.bricks.preprocess.ants.processes": [[163, 1, 1, "", "AffineInitializer"], [163, 1, 1, "", "ApplyTransforms"], [163, 1, 1, "", "N4BiasFieldCorrection"], [163, 1, 1, "", "Registration"]], "mia_processes.bricks.preprocess.ants.processes.AffineInitializer": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "list_outputs"], [163, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.ants.processes.ApplyTransforms": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "list_outputs"], [163, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.ants.processes.N4BiasFieldCorrection": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "list_outputs"], [163, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.ants.processes.Registration": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "list_outputs"], [163, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.dipy": [[164, 0, 0, "-", "processes"]], "mia_processes.bricks.preprocess.dipy.processes": [[164, 1, 1, "", "ComputeDKI"], [164, 1, 1, "", "Denoise"]], "mia_processes.bricks.preprocess.dipy.processes.ComputeDKI": [[164, 2, 1, "", "__init__"], [164, 2, 1, "", "list_outputs"], [164, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.dipy.processes.Denoise": [[164, 2, 1, "", "__init__"], [164, 2, 1, "", "list_outputs"], [164, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.freesurfer": [[165, 0, 0, "-", "processes"]], "mia_processes.bricks.preprocess.freesurfer.processes": [[165, 1, 1, "", "Binarize"], [165, 1, 1, "", "SynthStrip"], [165, 1, 1, "", "SynthStripMriqc"]], "mia_processes.bricks.preprocess.freesurfer.processes.Binarize": [[165, 2, 1, "", "__init__"], [165, 2, 1, "", "list_outputs"], [165, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.freesurfer.processes.SynthStrip": [[165, 2, 1, "", "__init__"], [165, 2, 1, "", "list_outputs"], [165, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc": [[165, 1, 1, "", "ConvBlock"], [165, 1, 1, "", "StripModel"], [165, 2, 1, "", "__init__"], [165, 2, 1, "", "conform"], [165, 2, 1, "", "list_outputs"], [165, 2, 1, "", "resample_like"], [165, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.ConvBlock": [[165, 2, 1, "", "__init__"], [165, 2, 1, "", "forward"], [165, 3, 1, "", "training"]], "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.StripModel": [[165, 2, 1, "", "__init__"], [165, 2, 1, "", "forward"], [165, 3, 1, "", "training"]], "mia_processes.bricks.preprocess.fsl": [[166, 0, 0, "-", "processes"]], "mia_processes.bricks.preprocess.fsl.processes": [[166, 1, 1, "", "Bet"], [166, 1, 1, "", "BetSurfacesExtraction"], [166, 1, 1, "", "ConvertXFM"], [166, 1, 1, "", "EpiReg"], [166, 1, 1, "", "ExtractROI"], [166, 1, 1, "", "FastSegment"], [166, 1, 1, "", "Flirt"], [166, 1, 1, "", "Smooth"]], "mia_processes.bricks.preprocess.fsl.processes.Bet": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "list_outputs"], [166, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.fsl.processes.BetSurfacesExtraction": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "list_outputs"], [166, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.fsl.processes.ConvertXFM": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "list_outputs"], [166, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.fsl.processes.EpiReg": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "list_outputs"], [166, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.fsl.processes.ExtractROI": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "list_outputs"], [166, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.fsl.processes.FastSegment": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "list_outputs"], [166, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.fsl.processes.Flirt": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "list_outputs"], [166, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.fsl.processes.Smooth": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "list_outputs"], [166, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix": [[167, 0, 0, "-", "processes"]], "mia_processes.bricks.preprocess.mrtrix.processes": [[167, 1, 1, "", "ConstrainedSphericalDeconvolution"], [167, 1, 1, "", "DWIBiasCorrect"], [167, 1, 1, "", "DWIBrainMask"], [167, 1, 1, "", "DWICat"], [167, 1, 1, "", "DWIDenoise"], [167, 1, 1, "", "DWIExtract"], [167, 1, 1, "", "DWIPreproc"], [167, 1, 1, "", "EditingTrack"], [167, 1, 1, "", "FilteringTrack"], [167, 1, 1, "", "FitTensor"], [167, 1, 1, "", "Generate5tt2gmwmi"], [167, 1, 1, "", "Generate5ttfsl"], [167, 1, 1, "", "MRCat"], [167, 1, 1, "", "MRConvert"], [167, 1, 1, "", "MRDeGibbs"], [167, 1, 1, "", "MRGridRegrid"], [167, 1, 1, "", "MRMath"], [167, 1, 1, "", "MRTransform"], [167, 1, 1, "", "MTNormalise"], [167, 1, 1, "", "ResponseSDDhollander"], [167, 1, 1, "", "ResponseSDTournier"], [167, 1, 1, "", "SphericalHarmonicExtraction"], [167, 1, 1, "", "TensorMetrics"], [167, 1, 1, "", "Tractography"], [167, 1, 1, "", "TransformFSLConvert"]], "mia_processes.bricks.preprocess.mrtrix.processes.ConstrainedSphericalDeconvolution": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "list_outputs"], [167, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.DWIBiasCorrect": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "list_outputs"], [167, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.DWIBrainMask": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "list_outputs"], [167, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.DWICat": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "list_outputs"], [167, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.DWIDenoise": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "list_outputs"], [167, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.DWIExtract": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "list_outputs"], [167, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.DWIPreproc": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "list_outputs"], [167, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.EditingTrack": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "list_outputs"], [167, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.FilteringTrack": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "list_outputs"], [167, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.FitTensor": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "list_outputs"], [167, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.Generate5tt2gmwmi": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "list_outputs"], [167, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.Generate5ttfsl": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "list_outputs"], [167, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.MRCat": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "list_outputs"], [167, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.MRConvert": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "list_outputs"], [167, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.MRDeGibbs": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "list_outputs"], [167, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.MRGridRegrid": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "list_outputs"], [167, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.MRMath": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "list_outputs"], [167, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.MRTransform": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "list_outputs"], [167, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.MTNormalise": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "list_outputs"], [167, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.ResponseSDDhollander": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "list_outputs"], [167, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.ResponseSDTournier": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "list_outputs"], [167, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.SphericalHarmonicExtraction": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "list_outputs"], [167, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.TensorMetrics": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "list_outputs"], [167, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.Tractography": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "list_outputs"], [167, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.TransformFSLConvert": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "list_outputs"], [167, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others": [[168, 0, 0, "-", "processing"]], "mia_processes.bricks.preprocess.others.processing": [[168, 1, 1, "", "ApplyBiasCorrection"], [168, 1, 1, "", "ArtifactMask"], [168, 1, 1, "", "Binarize"], [168, 1, 1, "", "ConformImage"], [168, 1, 1, "", "ConvROI"], [168, 1, 1, "", "Enhance"], [168, 1, 1, "", "EstimateSNR"], [168, 1, 1, "", "ExtractROIbyLabel"], [168, 1, 1, "", "ExtractSignalROI"], [168, 1, 1, "", "GradientThreshold"], [168, 1, 1, "", "Harmonize"], [168, 1, 1, "", "IntensityClip"], [168, 1, 1, "", "Mask"], [168, 1, 1, "", "NonSteadyStateDetector"], [168, 1, 1, "", "Resample1"], [168, 1, 1, "", "Resample2"], [168, 1, 1, "", "RotationMask"], [168, 1, 1, "", "Sanitize"], [168, 1, 1, "", "TSNR"], [168, 1, 1, "", "TemplateFromTemplateFlow"], [168, 1, 1, "", "Threshold"], [168, 4, 1, "", "artifact_mask"], [168, 4, 1, "", "is_outlier"], [168, 4, 1, "", "threshold"]], "mia_processes.bricks.preprocess.others.processing.ApplyBiasCorrection": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "list_outputs"], [168, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.ArtifactMask": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "list_outputs"], [168, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.Binarize": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "list_outputs"], [168, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.ConformImage": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "list_outputs"], [168, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.ConvROI": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "list_outputs"], [168, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.Enhance": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "list_outputs"], [168, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.EstimateSNR": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "list_outputs"], [168, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.ExtractROIbyLabel": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "list_outputs"], [168, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.ExtractSignalROI": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "list_outputs"], [168, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.GradientThreshold": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "list_outputs"], [168, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.Harmonize": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "list_outputs"], [168, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.IntensityClip": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "list_outputs"], [168, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.Mask": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "list_outputs"], [168, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.NonSteadyStateDetector": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "list_outputs"], [168, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.Resample1": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "list_outputs"], [168, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.Resample2": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "list_outputs"], [168, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.RotationMask": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "list_outputs"], [168, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.Sanitize": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "list_outputs"], [168, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.TSNR": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "list_outputs"], [168, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.TemplateFromTemplateFlow": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "list_outputs"], [168, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.Threshold": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "list_outputs"], [168, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.spm": [[169, 0, 0, "-", "spatial_preprocessing"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing": [[169, 1, 1, "", "Coregister"], [169, 1, 1, "", "GM_WM_Normalize"], [169, 1, 1, "", "NewSegment"], [169, 1, 1, "", "Normalize12"], [169, 1, 1, "", "Realign"], [169, 1, 1, "", "SliceTiming"], [169, 1, 1, "", "Smooth"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Coregister": [[169, 2, 1, "", "__init__"], [169, 2, 1, "", "list_outputs"], [169, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing.GM_WM_Normalize": [[169, 2, 1, "", "__init__"], [169, 2, 1, "", "list_outputs"], [169, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing.NewSegment": [[169, 2, 1, "", "__init__"], [169, 2, 1, "", "list_outputs"], [169, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Normalize12": [[169, 2, 1, "", "__init__"], [169, 2, 1, "", "list_outputs"], [169, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Realign": [[169, 2, 1, "", "__init__"], [169, 2, 1, "", "list_outputs"], [169, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing.SliceTiming": [[169, 2, 1, "", "__init__"], [169, 2, 1, "", "list_outputs"], [169, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Smooth": [[169, 2, 1, "", "__init__"], [169, 2, 1, "", "list_outputs"], [169, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports": [[170, 0, 0, "-", "processes"], [170, 0, 0, "-", "reporting"]], "mia_processes.bricks.reports.processes": [[170, 1, 1, "", "AnatIQMs"], [170, 1, 1, "", "BoldIQMs"], [170, 1, 1, "", "BoldIQMsPlot"], [170, 1, 1, "", "CarpetParcellation"], [170, 1, 1, "", "ComputeDVARS"], [170, 1, 1, "", "FramewiseDisplacement"], [170, 1, 1, "", "LateralizationIndexCurve"], [170, 1, 1, "", "Mean_stdDev_calc"], [170, 1, 1, "", "PlotSignalROI"], [170, 1, 1, "", "Result_collector"], [170, 1, 1, "", "Spikes"], [170, 4, 1, "", "art_qi1"], [170, 4, 1, "", "art_qi2"], [170, 4, 1, "", "cjv"], [170, 4, 1, "", "cnr"], [170, 4, 1, "", "efc"], [170, 4, 1, "", "fber"], [170, 4, 1, "", "find_peaks"], [170, 4, 1, "", "find_spikes"], [170, 4, 1, "", "fuzzy_jaccard"], [170, 4, 1, "", "gsr"], [170, 4, 1, "", "image_binary_dilation"], [170, 4, 1, "", "lateralization_index_iter_curves"], [170, 4, 1, "", "normalize_mc_params"], [170, 4, 1, "", "regress_poly"], [170, 4, 1, "", "rpve"], [170, 4, 1, "", "snr"], [170, 4, 1, "", "snr_dietrich"], [170, 4, 1, "", "summary_stats"], [170, 4, 1, "", "volume_fraction"], [170, 4, 1, "", "wm2max"]], "mia_processes.bricks.reports.processes.AnatIQMs": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "list_outputs"], [170, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.processes.BoldIQMs": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "list_outputs"], [170, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.processes.BoldIQMsPlot": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "list_outputs"], [170, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.processes.CarpetParcellation": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "list_outputs"], [170, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.processes.ComputeDVARS": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "list_outputs"], [170, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.processes.FramewiseDisplacement": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "list_outputs"], [170, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.processes.LateralizationIndexCurve": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "list_outputs"], [170, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.processes.Mean_stdDev_calc": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "list_outputs"], [170, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.processes.PlotSignalROI": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "list_outputs"], [170, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.processes.Result_collector": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "list_outputs"], [170, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.processes.Spikes": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "list_outputs"], [170, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.reporting": [[170, 1, 1, "", "ReportAnatMriqc"], [170, 1, 1, "", "ReportCO2inhalCvr"], [170, 1, 1, "", "ReportFuncMriqc"], [170, 1, 1, "", "ReportGE2REC"], [170, 1, 1, "", "ReportGroupMriqc"], [170, 1, 1, "", "ReportPerfDsc"]], "mia_processes.bricks.reports.reporting.ReportAnatMriqc": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "list_outputs"], [170, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.reporting.ReportCO2inhalCvr": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "list_outputs"], [170, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.reporting.ReportFuncMriqc": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "list_outputs"], [170, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.reporting.ReportGE2REC": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "list_outputs"], [170, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.reporting.ReportGroupMriqc": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "list_outputs"], [170, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.reporting.ReportPerfDsc": [[170, 2, 1, "", "__init__"], [170, 2, 1, "", "list_outputs"], [170, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.stat": [[172, 0, 0, "-", "spm"]], "mia_processes.bricks.stat.spm": [[172, 0, 0, "-", "model"]], "mia_processes.bricks.stat.spm.model": [[172, 1, 1, "", "EstimateContrast"], [172, 1, 1, "", "EstimateModel"], [172, 1, 1, "", "Level1Design"], [172, 1, 1, "", "MultipleRegressionDesign"], [172, 1, 1, "", "OneSampleTTestDesign"], [172, 1, 1, "", "PairedTTestDesign"], [172, 1, 1, "", "TwoSampleTTestDesign"], [172, 4, 1, "", "get_covariates"]], "mia_processes.bricks.stat.spm.model.EstimateContrast": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "list_outputs"], [172, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.stat.spm.model.EstimateModel": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "list_outputs"], [172, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.stat.spm.model.Level1Design": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "list_outputs"], [172, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.stat.spm.model.MultipleRegressionDesign": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "list_outputs"], [172, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.stat.spm.model.OneSampleTTestDesign": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "list_outputs"], [172, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.stat.spm.model.PairedTTestDesign": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "list_outputs"], [172, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.stat.spm.model.TwoSampleTTestDesign": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "list_outputs"], [172, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools": [[173, 0, 0, "-", "tools"]], "mia_processes.bricks.tools.tools": [[173, 1, 1, "", "Concat_to_list"], [173, 1, 1, "", "Concat_to_list_of_list"], [173, 1, 1, "", "Deconv_from_aif"], [173, 1, 1, "", "Delete_data"], [173, 1, 1, "", "Files_To_List"], [173, 1, 1, "", "Filter_Files_List"], [173, 1, 1, "", "Find_In_List"], [173, 1, 1, "", "Get_Conditions_From_BIDS_tsv"], [173, 1, 1, "", "Get_Conditions_From_csv"], [173, 1, 1, "", "Get_Eprime_Info_GE2REC"], [173, 1, 1, "", "Get_Patient_Name"], [173, 1, 1, "", "Get_Regressors_From_csv"], [173, 1, 1, "", "Import_Data"], [173, 1, 1, "", "Input_Filter"], [173, 1, 1, "", "List_Duplicate"], [173, 1, 1, "", "List_Of_List_To_List"], [173, 1, 1, "", "List_To_File"], [173, 1, 1, "", "Make_AIF"], [173, 1, 1, "", "Make_A_List"], [173, 1, 1, "", "Make_CVR_reg_physio"]], "mia_processes.bricks.tools.tools.Concat_to_list": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "list_outputs"], [173, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Concat_to_list_of_list": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "list_outputs"], [173, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Deconv_from_aif": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "bol_ar_time"], [173, 2, 1, "", "deconv_osvd"], [173, 2, 1, "", "delta_r2star"], [173, 2, 1, "", "list_outputs"], [173, 2, 1, "", "round_half_up"], [173, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Delete_data": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "list_outputs"], [173, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Files_To_List": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "list_outputs"], [173, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Filter_Files_List": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "list_outputs"], [173, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Find_In_List": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "list_outputs"], [173, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Get_Conditions_From_BIDS_tsv": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "list_outputs"], [173, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Get_Conditions_From_csv": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "list_outputs"], [173, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Get_Eprime_Info_GE2REC": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "list_outputs"], [173, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Get_Patient_Name": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "list_outputs"], [173, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Get_Regressors_From_csv": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "list_outputs"], [173, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Import_Data": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "list_outputs"], [173, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Input_Filter": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "list_outputs"], [173, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.List_Duplicate": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "list_outputs"], [173, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.List_Of_List_To_List": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "list_outputs"], [173, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.List_To_File": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "list_outputs"], [173, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Make_AIF": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "bol_ar_time"], [173, 2, 1, "", "convert_to_native_types"], [173, 2, 1, "", "list_outputs"], [173, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Make_A_List": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "list_outputs"], [173, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Make_CVR_reg_physio": [[173, 2, 1, "", "__init__"], [173, 2, 1, "", "gaussfir"], [173, 2, 1, "", "gfb_conv"], [173, 2, 1, "", "list_outputs"], [173, 2, 1, "", "run_process_mia"], [173, 2, 1, "", "spm_hrf"]], "mia_processes.info": [[159, 4, 1, "", "get_gitversion"]], "mia_processes.pipelines": [[175, 0, 0, "-", "CerebVascularReact"], [176, 0, 0, "-", "DWITractography"], [177, 0, 0, "-", "preprocess"], [178, 0, 0, "-", "qualityControl"], [179, 0, 0, "-", "reports"], [180, 0, 0, "-", "stat"]], "mia_processes.pipelines.CerebVascularReact": [[175, 0, 0, "-", "co2_inhalation"]], "mia_processes.pipelines.CerebVascularReact.co2_inhalation": [[175, 1, 1, "", "CO2_inhalation"]], "mia_processes.pipelines.CerebVascularReact.co2_inhalation.CO2_inhalation": [[175, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.DWITractography": [[176, 0, 0, "-", "dwi_whole_brain_tractography"]], "mia_processes.pipelines.DWITractography.dwi_whole_brain_tractography": [[176, 1, 1, "", "Dwi_whole_brain_tractography"]], "mia_processes.pipelines.DWITractography.dwi_whole_brain_tractography.Dwi_whole_brain_tractography": [[176, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess": [[177, 0, 0, "-", "anat_airmask"], [177, 0, 0, "-", "anat_headmask"], [177, 0, 0, "-", "anat_mni_tpms"], [177, 0, 0, "-", "anat_skullstrip"], [177, 0, 0, "-", "anat_skullstrip_synthstrip"], [177, 0, 0, "-", "anat_spatial_norm"], [177, 0, 0, "-", "bold_hmc"], [177, 0, 0, "-", "bold_mni_align"], [177, 0, 0, "-", "bold_spatial_preprocessing1"], [177, 0, 0, "-", "bold_spatial_preprocessing2"], [177, 0, 0, "-", "dwi_fod_msmt_csd"], [177, 0, 0, "-", "dwi_preprocessing"], [177, 0, 0, "-", "spatial_mask"]], "mia_processes.pipelines.preprocess.anat_airmask": [[177, 1, 1, "", "Anat_airmask"]], "mia_processes.pipelines.preprocess.anat_airmask.Anat_airmask": [[177, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.anat_headmask": [[177, 1, 1, "", "Anat_headmask"]], "mia_processes.pipelines.preprocess.anat_headmask.Anat_headmask": [[177, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.anat_mni_tpms": [[177, 1, 1, "", "Anat_mni_tpms"]], "mia_processes.pipelines.preprocess.anat_mni_tpms.Anat_mni_tpms": [[177, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.anat_skullstrip": [[177, 1, 1, "", "Anat_skullstrip"]], "mia_processes.pipelines.preprocess.anat_skullstrip.Anat_skullstrip": [[177, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip": [[177, 1, 1, "", "Anat_skullstrip_synthstrip"]], "mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip.Anat_skullstrip_synthstrip": [[177, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.anat_spatial_norm": [[177, 1, 1, "", "Anat_spatial_norm"]], "mia_processes.pipelines.preprocess.anat_spatial_norm.Anat_spatial_norm": [[177, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.bold_hmc": [[177, 1, 1, "", "Bold_hmc"]], "mia_processes.pipelines.preprocess.bold_hmc.Bold_hmc": [[177, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.bold_mni_align": [[177, 1, 1, "", "Bold_mni_align"]], "mia_processes.pipelines.preprocess.bold_mni_align.Bold_mni_align": [[177, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.bold_spatial_preprocessing1": [[177, 1, 1, "", "Bold_spatial_preprocessing1"]], "mia_processes.pipelines.preprocess.bold_spatial_preprocessing1.Bold_spatial_preprocessing1": [[177, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.bold_spatial_preprocessing2": [[177, 1, 1, "", "Bold_spatial_preprocessing2"]], "mia_processes.pipelines.preprocess.bold_spatial_preprocessing2.Bold_spatial_preprocessing2": [[177, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.dwi_fod_msmt_csd": [[177, 1, 1, "", "Dwi_fod_msmt_csd"]], "mia_processes.pipelines.preprocess.dwi_fod_msmt_csd.Dwi_fod_msmt_csd": [[177, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.dwi_preprocessing": [[177, 1, 1, "", "Dwi_preprocessing"]], "mia_processes.pipelines.preprocess.dwi_preprocessing.Dwi_preprocessing": [[177, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.spatial_mask": [[177, 1, 1, "", "Spatial_mask"]], "mia_processes.pipelines.preprocess.spatial_mask.Spatial_mask": [[177, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.qualityControl": [[178, 0, 0, "-", "anat_mriqc"], [178, 0, 0, "-", "bold_mriqc"]], "mia_processes.pipelines.qualityControl.anat_mriqc": [[178, 1, 1, "", "Anat_mriqc"]], "mia_processes.pipelines.qualityControl.anat_mriqc.Anat_mriqc": [[178, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.qualityControl.bold_mriqc": [[178, 1, 1, "", "Bold_mriqc"]], "mia_processes.pipelines.qualityControl.bold_mriqc.Bold_mriqc": [[178, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.reports": [[179, 0, 0, "-", "bold_iqms"], [179, 0, 0, "-", "extract_roi_param"]], "mia_processes.pipelines.reports.bold_iqms": [[179, 1, 1, "", "Bold_iqms"]], "mia_processes.pipelines.reports.bold_iqms.Bold_iqms": [[179, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.reports.extract_roi_param": [[179, 1, 1, "", "Extract_roi_param"]], "mia_processes.pipelines.reports.extract_roi_param.Extract_roi_param": [[179, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.stat": [[180, 0, 0, "-", "bold_stat_cvr"]], "mia_processes.pipelines.stat.bold_stat_cvr": [[180, 1, 1, "", "Bold_stat_cvr"]], "mia_processes.pipelines.stat.bold_stat_cvr.Bold_stat_cvr": [[180, 2, 1, "", "pipeline_definition"]], "mia_processes.process_matlab": [[159, 1, 1, "", "ProcessMatlab"]], "mia_processes.process_matlab.ProcessMatlab": [[159, 2, 1, "", "__init__"], [159, 2, 1, "", "add_exit"], [159, 2, 1, "", "add_path"], [159, 2, 1, "", "change_directory"], [159, 2, 1, "", "display_parameter"], [159, 2, 1, "", "run"], [159, 2, 1, "", "set_global_variable"], [159, 2, 1, "", "set_variable"]], "mia_processes.utils": [[181, 0, 0, "-", "report"], [181, 0, 0, "-", "tools"]], "mia_processes.utils.report": [[181, 1, 1, "", "Report"]], "mia_processes.utils.report.Report": [[181, 2, 1, "", "__init__"], [181, 2, 1, "", "co2_inhal_cvr_make_report"], [181, 2, 1, "", "ge2rec_make_report"], [181, 2, 1, "", "get_iqms_data"], [181, 2, 1, "", "mriqc_anat_make_report"], [181, 2, 1, "", "mriqc_func_make_report"], [181, 2, 1, "", "mriqc_group_make_report"], [181, 2, 1, "", "perf_dsc_make_report"]], "mia_processes.utils.tools": [[181, 1, 1, "", "PageNumCanvas"], [181, 1, 1, "", "ReportLine"], [181, 4, 1, "", "checkFileExt"], [181, 4, 1, "", "check_orientations"], [181, 4, 1, "", "del_dbFieldValue"], [181, 4, 1, "", "dict4runtime_update"], [181, 4, 1, "", "get_dbFieldValue"], [181, 4, 1, "", "mriqc_get_all_run"], [181, 4, 1, "", "mriqc_group_iqms_tsv"], [181, 4, 1, "", "plot_boxplot_points"], [181, 4, 1, "", "plot_qi2"], [181, 4, 1, "", "plot_realignment_parameters"], [181, 4, 1, "", "plot_segmentation"], [181, 4, 1, "", "plot_slice_planes"], [181, 4, 1, "", "set_dbFieldValue"]], "mia_processes.utils.tools.PageNumCanvas": [[181, 2, 1, "", "__init__"], [181, 2, 1, "", "draw_page_number"], [181, 2, 1, "", "save"], [181, 2, 1, "", "showPage"]], "mia_processes.utils.tools.ReportLine": [[181, 2, 1, "", "__init__"], [181, 2, 1, "", "draw"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"]}, "titleterms": {"automask": 0, "brick": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "creat": [0, 107, 108, 109, 110, 141, 150], "brain": [0, 9, 22, 27, 28, 33, 84, 133, 141], "onli": [0, 78], "mask": [0, 5, 33, 41, 57, 66, 68, 72, 76, 90, 137, 138, 151, 156], "imag": [0, 9, 10, 11, 14, 16, 18, 25, 26, 28, 29, 32, 33, 37, 41, 42, 43, 44, 46, 47, 48, 56, 58, 59, 60, 61, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 78, 80, 81, 82, 83, 87, 88, 138, 140, 143, 144, 151, 152, 153, 155], "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 23, 24, 26, 27, 28, 37, 50, 51, 56, 62, 63, 64, 65, 66, 70, 71, 84, 95, 97, 101, 105, 138, 141, 142, 149, 152, 153, 157], "afni": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 162], "3dautomask": 0, "calc": 1, "voxel": [1, 5, 46, 52], "arithmet": 1, "3d": [1, 3, 6, 7, 12, 29, 83, 84], "dataset": [1, 2, 3, 6, 7, 8, 12], "1": [1, 137], "3dcalc": [1, 2], "calcdroptr": 2, "drop": 2, "volum": [2, 6, 7, 12, 19, 29, 36, 83], "bold": [2, 10, 11, 69, 73, 82, 143, 153, 155], "despik": 3, "remov": [3, 45], "spike": [3, 103], "from": [3, 8, 9, 12, 26, 33, 36, 53, 63, 64, 65, 75, 78, 81, 86, 90, 95, 114, 115, 116, 117, 120, 125, 126, 127, 128, 129, 137, 138, 151, 152, 153, 155], "time": [3, 7, 10, 74, 81, 82], "input": [3, 6, 12, 14, 19, 44, 56, 58, 65, 66, 73, 112, 128], "3ddespik": 3, "fwhmx": 4, "comput": [4, 5, 6, 7, 47, 53, 57, 65, 72, 74, 80, 87, 88, 91, 93, 103, 128, 137, 138, 155], "fwhm": 4, "gcor": 5, "averag": 5, "correl": 5, "between": [5, 44, 55], "everi": [5, 82], "other": [5, 168], "over": 5, "ani": 5, "given": [5, 58, 76], "outliercount": 6, "3dtoutcount": 6, "outlier": 6, "all": [6, 79, 115, 129], "sub": [6, 7], "each": [6, 7, 12, 52, 102, 112], "tr": [6, 7], "qualityindex": 7, "qualiti": [7, 87, 88, 152, 153, 155], "index": 7, "3dtqual": 7, "refitdeobliqu": 8, "deobliqu": 8, "ie": 8, "transform": [8, 13, 14, 24, 48, 55], "obliqu": 8, "cardin": 8, "3drefit": 8, "skullstrip": 9, "3dskullstrip": 9, "t1": 9, "weight": 9, "mri": [9, 84, 93, 101, 128, 136], "extract": [9, 22, 23, 26, 36, 44, 52, 63, 64, 141], "surround": 9, "tissu": [9, 27, 42, 49, 113, 139, 150], "tshift": 10, "slice": [10, 82, 116], "correct": [10, 15, 32, 56, 79, 140, 143], "mean": [10, 11, 18, 94, 144, 156], "option": [10, 11, 44], "3dtshift": 10, "tstatmean": 11, "3dtstat": 11, "volreg": 12, "regist": [12, 25, 139, 144], "base": [12, 157], "3dvolreg": 12, "affineiniti": 13, "initi": 13, "an": [13, 14, 19, 26, 56, 68, 70, 80, 111, 112, 145, 146, 147], "affin": [13, 28], "ant": [13, 14, 15, 16, 163], "affineinit": 13, "applytransform": 14, "accord": 14, "refer": [14, 70, 71, 82, 123, 152, 153, 155, 170], "set": [14, 71, 78], "n4biasfieldcorrect": 15, "n4": 15, "bia": [15, 56, 79, 140], "field": [15, 32, 56], "registr": [16, 28, 144], "computedki": 17, "reconstruct": 17, "diffus": [17, 37, 40], "signal": [17, 64, 95], "kurtosi": 17, "tensor": [17, 40, 53], "model": [17, 79, 80, 105, 106, 172], "denois": [18, 35, 138], "non": [18, 69], "local": 18, "algorithm": [18, 50, 51], "nlmean": 18, "binar": [19, 58], "encod": [19, 149], "surfac": [19, 23], "file": [19, 38, 44, 56, 62, 63, 64, 95, 102, 115, 117, 120, 125, 127], "synthstrip": [20, 21, 141], "synthstripmriqc": 21, "skull": [21, 23, 138, 140], "strip": [21, 138, 140], "tool": [21, 37, 173, 181], "mri_synthstrip": 21, "freesurf": [21, 141, 165], "done": 21, "mriqc": [21, 87, 88, 96, 98, 100, 152, 153], "v22": [21, 87, 88, 152, 153], "06": [21, 87, 88, 152, 153], "bet": [22, 23], "fsl": [22, 23, 24, 26, 27, 28, 37, 42, 55, 166], "betsurfacesextract": 23, "inskul": 23, "outskul": 23, "outskin": 23, "convertxfm": 24, "modifi": 24, "matrix": [24, 55], "convert_xfm": 24, "epireg": 25, "epi": [25, 90, 144], "structur": [25, 137, 138, 140, 152], "extractroi": 26, "region": [26, 102], "interest": [26, 102, 104], "roi": [26, 63, 64, 95, 156], "fslroi": 26, "fastseg": 27, "segment": [27, 42, 62, 63, 64, 65, 79, 84, 85, 95, 151], "fast": 27, "flirt": 28, "linear": 28, "intra": 28, "inter": 28, "modal": [28, 77], "smooth": [29, 83], "gaussian": [29, 83], "computebrainvolum": 30, "constrainedsphericaldeconvolut": 31, "estim": [31, 40, 50, 51, 62, 104, 105, 148], "fibr": 31, "orient": [31, 148], "distribut": [31, 148], "fod": [31, 148], "dwibiascorrect": 32, "perform": [32, 37, 38, 44, 46, 54, 55], "b1": 32, "inhomogen": 32, "dwi": [32, 33, 34, 35, 36, 148, 149, 150], "dwibrainmask": 33, "gener": [33, 41, 42, 90, 96, 97, 98, 99, 100, 101, 102, 115, 125, 126, 127, 129, 130], "whole": [33, 84], "dwicat": 34, "concaten": [34, 43, 111], "multipl": [34, 107], "seri": [34, 74, 81], "dwidenois": 35, "data": [35, 36, 39, 93, 96, 98, 102, 114, 123, 124, 128, 135, 137, 145, 146, 147, 152, 153], "dwiextract": 36, "shell": 36, "b": 36, "0": 36, "dwipreproc": 37, "pre": [37, 145, 146, 147], "process": [37, 145, 146, 147, 162, 163, 164, 165, 166, 167, 168, 170], "": [37, 50, 55, 131], "topup": 37, "eddi": 37, "editingtrack": 38, "variou": [38, 156], "edit": 38, "oper": 38, "track": [38, 39], "filteringtrack": 39, "filter": [39, 124], "fittensor": 40, "generate5tt2gmwmi": 41, "appropri": 41, "seed": 41, "streamlin": [41, 54], "grei": [41, 78, 151], "matter": [41, 66, 78, 151, 156], "white": [41, 66, 78], "interfac": 41, "generate5ttfsl": 42, "five": 42, "type": [42, 44], "5tt": 42, "mrcat": 43, "sever": 43, "one": [43, 60, 108, 116], "mrconvert": 44, "convers": [44, 55], "differ": [44, 77], "subset": 44, "mrdegibb": 45, "gibb": 45, "ring": 45, "artifact": [45, 57, 137], "mrgridregrid": 46, "chang": 46, "grid": 46, "requir": 46, "interpol": 46, "mrmath": 47, "summari": [47, 102], "statist": 47, "intens": [47, 49, 67], "along": 47, "specifi": 47, "axi": 47, "singl": [47, 126, 127], "mrtransform": 48, "appli": [48, 56, 58, 68, 80], "spatial": [48, 79, 80, 142], "reslic": 48, "mtnormalis": 49, "multi": 49, "inform": [49, 120], "log": 49, "domain": 49, "normalis": [49, 78, 79], "responsesddholland": 50, "respons": [50, 51, 113], "function": [50, 51, 52, 88, 93, 98, 128, 144, 153, 155], "spheric": [50, 51, 52], "deconvolut": [50, 51, 113], "dholland": 50, "responsestrourni": 51, "tournier": 51, "sphericalharmonicextract": 52, "peak": 52, "harmon": [52, 66], "tensormetr": 53, "metric": [53, 87, 88, 152, 153, 155], "tractographi": [54, 133], "transformfslconvert": 55, "format": 55, "mrtrix3": 55, "applybiascorrect": 56, "artifactmask": 57, "lower": 58, "threshold": [58, 65, 76], "conformimag": 59, "conform": 59, "t1w": [59, 150, 152], "convroi": 60, "convolut": 60, "enhanc": 61, "estimatesnr": 62, "snr": [62, 74], "extractroibylabel": 63, "specif": [63, 106], "label": [63, 64, 85, 86, 95], "extractsignalroi": 64, "gradientthreshold": 65, "histogram": 65, "magnitud": 65, "gradient": 65, "intensityclip": 67, "clip": 67, "rang": 67, "prescrib": 67, "percentil": 67, "binari": [68, 76], "nonsteadydetector": 69, "detect": 69, "steadi": 69, "state": 69, "begin": 69, "4d": 69, "resample1": 70, "resampl": 70, "resolut": [70, 71], "nilearn": [70, 71], "resample_to_img": [70, 71], "resample2": 71, "rotationmask": 72, "rotat": [72, 137], "sanit": 73, "tsnr": 74, "cours": 74, "templatefromtemplateflow": 75, "get": [75, 85, 86, 139, 152, 153], "templat": [75, 139, 142], "templateflow": 75, "make": [76, 94, 111, 112], "coregist": 77, "align": [77, 80], "togeth": 77, "scan": 77, "gm_wm_normal": 78, "newseg": 79, "same": [79, 81], "normalize12": 80, "deform": 80, "best": 80, "atla": 80, "necessari": 80, "thi": [80, 125], "normal": [80, 142], "realign": 81, "acquir": 81, "subject": [81, 139], "slicetim": 82, "bring": 82, "back": 82, "assemblynetdock": 84, "assemblynet": [84, 85, 86], "volbrain": 84, "getlabel": 85, "labelscorrespond": 86, "name": [86, 115, 125], "anatiqm": 87, "anatom": [87, 96, 152], "iqm": [87, 88, 152, 153, 155], "defin": [87, 88], "boldqm": 88, "boldiqmsplot": 89, "carpetparcel": 90, "dilat": 90, "brainmask": 90, "subtract": 90, "itself": [90, 125], "union": 90, "obtain": [90, 120], "crown": 90, "parcel": 90, "computedvar": 91, "dvar": 91, "deriv": 91, "varianc": 91, "framewisedisplac": 92, "calcul": 92, "fd": 92, "framewis": 92, "displac": 92, "power2012": 92, "lateralizationindexcurv": 93, "iter": [93, 112], "later": [93, 156], "activ": 93, "mean_stddev_calc": 94, "standard": [94, 156], "deviat": [94, 156], "parametr": 94, "map": [94, 134, 135, 139], "plotsignalroi": 95, "plot": 95, "reportanatmriqc": 96, "report": [96, 97, 98, 99, 100, 101, 170, 179, 181], "pipelin": [96, 97, 98, 99, 100, 120, 123, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 174, 175, 176, 177, 178, 179, 180], "reportco2inhalcvr": 97, "cvr": [97, 132, 157], "evalu": [97, 130, 132, 157], "hypercapnia": 97, "challeng": [97, 132], "reportfuncmriqc": 98, "reportge2rec": 99, "ge2rec": [99, 120, 134, 135], "languag": [99, 134, 135], "memori": [99, 134, 135], "reportgroupmriqc": 100, "group": 100, "reportperfdsc": 101, "perfus": [101, 128, 136], "studi": 101, "dsc": 101, "result_collector": 102, "contain": [102, 112, 115, 117, 125, 129], "number": 103, "estimateconstrast": 104, "contrast": [104, 136], "spm12": [104, 105, 107, 108, 109, 110], "fmri": [104, 105, 106, 107, 108, 109, 110, 145, 146, 147], "manag": 104, "estimatemodel": 105, "classic": 105, "reml": 105, "restrict": 105, "maximum": 105, "likelihood": 105, "procedur": 105, "level1design": 106, "glm": [106, 157], "analysi": [106, 157], "multipleregressiondesign": 107, "spm": [107, 108, 109, 110, 157, 169, 172], "design": [107, 108, 109, 110], "regress": 107, "factori": [107, 108, 109, 110], "onesamplettestdesign": 108, "sampl": [108, 110], "t": [108, 109, 110], "test": [108, 109, 110], "pairedttestdesign": 109, "pair": 109, "twosamplettestdesign": 110, "two": 110, "concat_to_list": 111, "output": [111, 112, 124], "list": [111, 112, 115, 116, 117, 125, 126, 127, 129, 151], "correspond": 111, "list1": [111, 112], "list2": [111, 112], "concat_to_list_of_list": 112, "element": [112, 116, 117], "deconv_from_aif": 113, "curv": 113, "aif": [113, 128], "delete_data": 114, "delet": 114, "databas": 114, "files_to_list": 115, "3": 115, "filter_files_list": 116, "select": [116, 117], "more": 116, "find_in_list": 117, "1rst": 117, "pattern": 117, "get_conditions_from_bids_tsv": 118, "get_conditions_from_csv": 119, "get_eprime_info_ge2rec": 120, "usu": 120, "e": 120, "prime": 120, "get_patient_nam": 121, "get_regressors_from_csv": 122, "import_data": 123, "import": 123, "current": 123, "input_filt": 124, "To": 124, "content": 124, "browser": 124, "tab": 124, "anoth": 124, "list_dupl": 125, "list_of_list_to_list": 126, "list_to_fil": 127, "make_aif": 128, "arteri": 128, "dynam": [128, 136], "make_a_list": 129, "2": 129, "object": 129, "make_cvr_reg_physio": 130, "physiolog": 130, "regressor": 130, "cerebrovascular": [130, 132], "reactiv": [130, 132], "mia_process": [131, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "document": 131, "co2_inhal": [132, 175], "under": 132, "co2": 132, "dwi_whole_brain_tractograpi": 133, "mrtrix": [133, 167], "interact": [134, 135], "protocol": [134, 135], "ge2rec_without_behavioural_data": 135, "without": 135, "behaviour": 135, "perfdsc": 136, "suscept": 136, "anat_airmask": [137, 177], "air": 137, "hat": 137, "follow": 137, "step": 137, "mortamet2009": 137, "anat_headmask": [138, 177], "head": [138, 143], "dipi": [138, 164], "anat_mni_tpm": [139, 177], "probabl": 139, "them": 139, "space": [139, 144, 150], "anat_skullstrip": [140, 177], "anat_skullstrip_synthstrip": [141, 177], "workflow": [141, 152, 153], "anat_spatial_norm": [142, 177], "mni": [142, 144], "mni152nlin2009casym": 142, "bold_hmc": [143, 177], "motion": 143, "bold_mni_align": [144, 177], "check": 144, "out": 144, "bold_spatial_preprocessing1": [145, 177], "exampl": [145, 146, 147], "bold_spatial_preprocessing2": [146, 177], "bold_spatial_preprocessing3": 147, "dwi_fod_msmt_csd": [148, 177], "fiber": 148, "dwi_preprocess": 149, "preprocess": [149, 161, 162, 163, 164, 165, 166, 167, 168, 169, 177], "revers": 149, "phase": 149, "b0": 149, "dwi_tissue_boundari": 150, "boundari": 150, "registratiojn": 150, "spatial_mask": [151, 177], "result": 151, "previou": 151, "produc": [151, 156], "anat_mriqc": [152, 178], "t2w": 152, "bold_mriqc": [153, 178], "bold_signals_roi": 154, "bold_iqm": [155, 179], "extract_roi_param": [156, 179], "grai": 156, "indic": [156, 158], "beta": 156, "spmt": 156, "valu": 156, "bold_stat_cvr": [157, 180], "first": 157, "level": 157, "purpos": 158, "tabl": 158, "develop": 158, "packag": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "subpackag": [159, 160, 161, 171, 174], "submodul": [159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 180, 181], "info": 159, "modul": [159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 176, 177, 178, 179, 180, 181], "process_matlab": 159, "spatial_preprocess": 169, "stat": [171, 172, 180], "cerebvascularreact": 175, "dwitractographi": 176, "dwi_whole_brain_tractographi": 176, "dwipreprocess": 177, "qualitycontrol": 178, "util": 181}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Automask brick": [[0, "automask-brick"]], "Create a brain-only mask of the image using AFNI 3dAutomask": [[0, "create-a-brain-only-mask-of-the-image-using-afni-3dautomask"]], "Calc brick": [[1, "calc-brick"]], "Voxel-by-voxel arithmetic on 3D datasets 1, using AFNI 3dcalc": [[1, "voxel-by-voxel-arithmetic-on-3d-datasets-using-afni-3dcalc"]], "CalcDropTRs brick": [[2, "calcdroptrs-brick"]], "Drop volumes of bold datasets, using AFNI 3dcalc": [[2, "drop-volumes-of-bold-datasets-using-afni-3dcalc"]], "Despike brick": [[3, "despike-brick"]], "Removes spikes from the 3D+time input dataset using AFNI 3dDespike": [[3, "removes-spikes-from-the-3d-time-input-dataset-using-afni-3ddespike"]], "FWHMx brick": [[4, "fwhmx-brick"]], "Computes FWHMs using AFNI FWHMx": [[4, "computes-fwhms-using-afni-fwhmx"]], "GCOR brick": [[5, "gcor-brick"]], "Using AFNI GCOR, computes the average correlation between every voxel and every other voxel, over any given mask": [[5, "using-afni-gcor-computes-the-average-correlation-between-every-voxel-and-every-other-voxel-over-any-given-mask"]], "OutlierCount brick": [[6, "outliercount-brick"]], "Using AFNI 3dToutcount, computes outliers for all sub-bricks (3D volumes for each TR) in the input dataset": [[6, "using-afni-3dtoutcount-computes-outliers-for-all-sub-bricks-3d-volumes-for-each-tr-in-the-input-dataset"]], "QualityIndex brick": [[7, "qualityindex-brick"]], "Computes a quality index for each sub-brick (3D volumes for each TR) in a 3D+time dataset using AFNI 3dTqual": [[7, "computes-a-quality-index-for-each-sub-brick-3d-volumes-for-each-tr-in-a-3d-time-dataset-using-afni-3dtqual"]], "RefitDeoblique brick": [[8, "refitdeoblique-brick"]], "Deoblique dataset (ie transform dataset from oblique to cardinal) using AFNI 3drefit": [[8, "deoblique-dataset-ie-transform-dataset-from-oblique-to-cardinal-using-afni-3drefit"]], "SkullStrip brick": [[9, "skullstrip-brick"]], "Using AFNI 3dSkullStrip, from T1-weighted MRI images, extract the brain from surrounding tissue": [[9, "using-afni-3dskullstrip-from-t1-weighted-mri-images-extract-the-brain-from-surrounding-tissue"]], "TShift brick": [[10, "tshift-brick"]], "Slice-time correction of bold images (using mean option of the AFNI 3dTshift)": [[10, "slice-time-correction-of-bold-images-using-mean-option-of-the-afni-3dtshift"]], "TStatMean brick": [[11, "tstatmean-brick"]], "Mean of bold images (using mean option of the AFNI 3dTstat)": [[11, "mean-of-bold-images-using-mean-option-of-the-afni-3dtstat"]], "Volreg brick": [[12, "volreg-brick"]], "Registers each 3D volume from the input dataset to the base volume using AFNI 3dvolreg": [[12, "registers-each-3d-volume-from-the-input-dataset-to-the-base-volume-using-afni-3dvolreg"]], "AffineInitializer brick": [[13, "affineinitializer-brick"]], "Initialize an affine transform using ANTs AffineInitizer": [[13, "initialize-an-affine-transform-using-ants-affineinitizer"]], "ApplyTransforms brick": [[14, "applytransforms-brick"]], "Using ANTs ApplyTransforms, transforms an input image according to a reference image and a transform (or a set of transforms)": [[14, "using-ants-applytransforms-transforms-an-input-image-according-to-a-reference-image-and-a-transform-or-a-set-of-transforms"]], "N4BiasFieldCorrection brick": [[15, "n4biasfieldcorrection-brick"]], "N4 Bias field correction using ANTs N4BiasFieldCorrection": [[15, "n4-bias-field-correction-using-ants-n4biasfieldcorrection"]], "Registration brick": [[16, "registration-brick"]], "Image registration using ANTs Registration": [[16, "image-registration-using-ants-registration"]], "ComputeDKI brick": [[17, "computedki-brick"]], "Reconstruction of the diffusion signal with the kurtosis tensor model": [[17, "reconstruction-of-the-diffusion-signal-with-the-kurtosis-tensor-model"]], "Denoise brick": [[18, "denoise-brick"]], "Denoise image using Non-Local Means algorithm (NLMEANS)": [[18, "denoise-image-using-non-local-means-algorithm-nlmeans"]], "Binarize brick": [[19, "binarize-brick"], [58, "binarize-brick"]], "Binarize an input volume (or volume-encoded surface file)": [[19, "binarize-an-input-volume-or-volume-encoded-surface-file"]], "SynthStrip brick": [[20, "synthstrip-brick"]], "SynthStripMriqc brick": [[21, "synthstripmriqc-brick"]], "Skull-stripping using SynthStrip tool (mri_synthstrip in FreeSurfer) as done in mriqc v22.06": [[21, "skull-stripping-using-synthstrip-tool-mri-synthstrip-in-freesurfer-as-done-in-mriqc-v22-06"]], "Bet brick": [[22, "bet-brick"]], "Brain Extraction with BET (FSL)": [[22, "brain-extraction-with-bet-fsl"]], "BetSurfacesExtraction brick": [[23, "betsurfacesextraction-brick"]], "Surfaces (skull, inskull, outskull, outskin) extraction using BET (FSL)": [[23, "surfaces-skull-inskull-outskull-outskin-extraction-using-bet-fsl"]], "ConvertXFM brick": [[24, "convertxfm-brick"]], "Modify transformation matrix using convert_xfm (FSL)": [[24, "modify-transformation-matrix-using-convert-xfm-fsl"]], "EpiReg brick": [[25, "epireg-brick"]], "Register EPI images to structural images": [[25, "register-epi-images-to-structural-images"]], "ExtractROI brick": [[26, "extractroi-brick"]], "Extract region of interest (ROI) from an image using fslroi (FSL)": [[26, "extract-region-of-interest-roi-from-an-image-using-fslroi-fsl"]], "FastSegment brick": [[27, "fastsegment-brick"]], "Brain tissue segmentation using FAST (FSL)": [[27, "brain-tissue-segmentation-using-fast-fsl"]], "Flirt brick": [[28, "flirt-brick"]], "Linear (affine) intra- and inter-modal brain image registration using FLIRT (FSL)": [[28, "linear-affine-intra-and-inter-modal-brain-image-registration-using-flirt-fsl"]], "Smooth brick": [[29, "smooth-brick"], [83, "smooth-brick"]], "3D Gaussian smoothing of image volumes": [[29, "d-gaussian-smoothing-of-image-volumes"], [83, "d-gaussian-smoothing-of-image-volumes"]], "ComputeBrainVolume brick": [[30, "computebrainvolume-brick"]], "ConstrainedSphericalDeconvolution brick": [[31, "constrainedsphericaldeconvolution-brick"]], "Estimate fibre orientation distributions (FOD)": [[31, "estimate-fibre-orientation-distributions-fod"]], "DWIBiasCorrect brick": [[32, "dwibiascorrect-brick"]], "Perform B1 field inhomogeneity correction for a DWI image": [[32, "perform-b1-field-inhomogeneity-correction-for-a-dwi-image"]], "DWIBrainMask brick": [[33, "dwibrainmask-brick"]], "Generates a whole brain mask from a DWI image.": [[33, "generates-a-whole-brain-mask-from-a-dwi-image"]], "DWICat brick": [[34, "dwicat-brick"]], "Concatenating multiple DWI series": [[34, "concatenating-multiple-dwi-series"]], "DWIDenoise brick": [[35, "dwidenoise-brick"]], "Denoise DWI data": [[35, "denoise-dwi-data"]], "DWIExtract brick": [[36, "dwiextract-brick"]], "Extract shell or b=0 volumes from DWI data": [[36, "extract-shell-or-b-0-volumes-from-dwi-data"]], "DWIPreproc brick": [[37, "dwipreproc-brick"]], "Perform diffusion image pre-processing using FSL\u2019s topup and eddy tool": [[37, "perform-diffusion-image-pre-processing-using-fsls-topup-and-eddy-tool"]], "EditingTrack brick": [[38, "editingtrack-brick"]], "Perform various editing operations on track files": [[38, "perform-various-editing-operations-on-track-files"]], "FilteringTrack brick": [[39, "filteringtrack-brick"]], "Filter tracking data": [[39, "filter-tracking-data"]], "FitTensor brick": [[40, "fittensor-brick"]], "Diffusion tensor estimation": [[40, "diffusion-tensor-estimation"]], "Generate5tt2gmwmi brick": [[41, "generate5tt2gmwmi-brick"]], "Generate a mask image appropriate for seeding streamlines on the grey matter-white matter interface": [[41, "generate-a-mask-image-appropriate-for-seeding-streamlines-on-the-grey-matter-white-matter-interface"]], "Generate5ttfsl brick": [[42, "generate5ttfsl-brick"]], "Generate a five-tissues-type (5TT) segmented tissue image with FSL": [[42, "generate-a-five-tissues-type-5tt-segmented-tissue-image-with-fsl"]], "MRCat brick": [[43, "mrcat-brick"]], "Concatenate several images into one": [[43, "concatenate-several-images-into-one"]], "MRConvert brick": [[44, "mrconvert-brick"]], "Perform conversion between different file types and optionally extract a subset of the input image": [[44, "perform-conversion-between-different-file-types-and-optionally-extract-a-subset-of-the-input-image"]], "MRDeGibbs brick": [[45, "mrdegibbs-brick"]], "Remove Gibbs ringing artifacts": [[45, "remove-gibbs-ringing-artifacts"]], "MRGridRegrid brick": [[46, "mrgridregrid-brick"]], "Perform changes of the voxel grid that require interpolation of the image": [[46, "perform-changes-of-the-voxel-grid-that-require-interpolation-of-the-image"]], "MRMath brick": [[47, "mrmath-brick"]], "Compute summary statistic on image intensities along a specified axis of a single image": [[47, "compute-summary-statistic-on-image-intensities-along-a-specified-axis-of-a-single-image"]], "MRTransform brick": [[48, "mrtransform-brick"]], "Apply spatial transformations or reslice images": [[48, "apply-spatial-transformations-or-reslice-images"]], "MTNormalise brick": [[49, "mtnormalise-brick"]], "Multi-tissue informed log-domain intensity normalisation": [[49, "multi-tissue-informed-log-domain-intensity-normalisation"]], "ResponseSDDhollander brick": [[50, "responsesddhollander-brick"]], "Estimate response function(s) for spherical deconvolution using the Dhollander algorithm": [[50, "estimate-response-function-s-for-spherical-deconvolution-using-the-dhollander-algorithm"]], "ResponseSTrournie brick": [[51, "responsestrournie-brick"]], "Estimate response function for spherical deconvolution using the Tournier algorithm": [[51, "estimate-response-function-for-spherical-deconvolution-using-the-tournier-algorithm"]], "SphericalHarmonicExtraction brick": [[52, "sphericalharmonicextraction-brick"]], "Extract the peaks of a spherical harmonic function in each voxel": [[52, "extract-the-peaks-of-a-spherical-harmonic-function-in-each-voxel"]], "TensorMetrics brick": [[53, "tensormetrics-brick"]], "Compute metrics from tensors": [[53, "compute-metrics-from-tensors"]], "Tractography brick": [[54, "tractography-brick"]], "Performs streamlines tractography": [[54, "performs-streamlines-tractography"]], "TransformFSLConvert brick": [[55, "transformfslconvert-brick"]], "Perform conversion between FSL\u2019s transformation matrix format to mrtrix3\u2019s": [[55, "perform-conversion-between-fsls-transformation-matrix-format-to-mrtrix3s"]], "ApplyBiasCorrection brick": [[56, "applybiascorrection-brick"]], "Apply bias field correction to an input file using the bias image": [[56, "apply-bias-field-correction-to-an-input-file-using-the-bias-image"]], "ArtifactMask brick": [[57, "artifactmask-brick"]], "Computes artifact mask": [[57, "computes-artifact-mask"]], "Binarizes the input image applying the given lower threshold": [[58, "binarizes-the-input-image-applying-the-given-lower-threshold"]], "ConformImage brick": [[59, "conformimage-brick"]], "Conform T1w image": [[59, "conform-t1w-image"]], "ConvROI brick": [[60, "convroi-brick"]], "Image convolution with one image": [[60, "image-convolution-with-one-image"]], "Enhance brick": [[61, "enhance-brick"]], "Image enhancing": [[61, "image-enhancing"]], "EstimateSNR brick": [[62, "estimatesnr-brick"]], "Estimate SNR using a segmentation file": [[62, "estimate-snr-using-a-segmentation-file"]], "ExtractROIbyLabel brick": [[63, "extractroibylabel-brick"]], "Extract a specific ROI from a segmentation file using labels": [[63, "extract-a-specific-roi-from-a-segmentation-file-using-labels"]], "ExtractSignalROI brick": [[64, "extractsignalroi-brick"]], "Extract signals from ROI using a segmentation file with label": [[64, "extract-signals-from-roi-using-a-segmentation-file-with-label"]], "GradientThreshold brick": [[65, "gradientthreshold-brick"]], "Computes a threshold from the histogram of the magnitude gradient image using a segmentation of the input image": [[65, "computes-a-threshold-from-the-histogram-of-the-magnitude-gradient-image-using-a-segmentation-of-the-input-image"]], "Harmonize brick": [[66, "harmonize-brick"]], "Harmonize input image using a white matter mask": [[66, "harmonize-input-image-using-a-white-matter-mask"]], "IntensityClip brick": [[67, "intensityclip-brick"]], "Clip the intensity range as prescribed by the percentiles": [[67, "clip-the-intensity-range-as-prescribed-by-the-percentiles"]], "Mask brick": [[68, "mask-brick"]], "Apply a binary mask to an image": [[68, "apply-a-binary-mask-to-an-image"]], "NonSteadyDetector brick": [[69, "nonsteadydetector-brick"]], "Detect non-steady-state at the beginning of a bold 4D image": [[69, "detect-non-steady-state-at-the-beginning-of-a-bold-4d-image"]], "Resample1 brick": [[70, "resample1-brick"]], "Resamples an image to the resolution of a reference image using nilearn.image.resample_to_img()": [[70, "resamples-an-image-to-the-resolution-of-a-reference-image-using-nilearn-image-resample-to-img"]], "Resample2 brick": [[71, "resample2-brick"]], "Sets images to the resolution of a reference image using using nilearn.image.resample_to_img()": [[71, "sets-images-to-the-resolution-of-a-reference-image-using-using-nilearn-image-resample-to-img"]], "RotationMask brick": [[72, "rotationmask-brick"]], "Compute the rotation mask image": [[72, "compute-the-rotation-mask-image"]], "Sanitize brick": [[73, "sanitize-brick"]], "Sanitize input bold image": [[73, "sanitize-input-bold-image"]], "TSNR brick": [[74, "tsnr-brick"]], "Computes the time-course SNR for a time series": [[74, "computes-the-time-course-snr-for-a-time-series"]], "TemplateFromTemplateFlow brick": [[75, "templatefromtemplateflow-brick"]], "Get template image from TemplateFlow": [[75, "get-template-image-from-templateflow"]], "Threshold brick": [[76, "threshold-brick"]], "Makes a binary mask image at a given threshold": [[76, "makes-a-binary-mask-image-at-a-given-threshold"]], "Coregister brick": [[77, "coregister-brick"]], "Align together scans of different modalities": [[77, "align-together-scans-of-different-modalities"]], "GM_WM_Normalize brick": [[78, "gm-wm-normalize-brick"]], "Normalises only the grey or/and white matter from a set of images": [[78, "normalises-only-the-grey-or-and-white-matter-from-a-set-of-images"]], "NewSegment brick": [[79, "newsegment-brick"]], "Segments,  bias  corrects  and  spatially normalises - all in the same model": [[79, "segments-bias-corrects-and-spatially-normalises-all-in-the-same-model"]], "Normalize12 brick": [[80, "normalize12-brick"]], "Computes the deformation that best aligns the model (atlas) with an image, then if necessary, apply this deformation to spatially normalize images": [[80, "computes-the-deformation-that-best-aligns-the-model-atlas-with-an-image-then-if-necessary-apply-this-deformation-to-spatially-normalize-images"]], "Realign brick": [[81, "realign-brick"]], "Realigns a time-series of images acquired from the same subject": [[81, "realigns-a-time-series-of-images-acquired-from-the-same-subject"]], "SliceTiming brick": [[82, "slicetiming-brick"]], "Bring back every slice of a BOLD image to the reference slice time.": [[82, "bring-back-every-slice-of-a-bold-image-to-the-reference-slice-time"]], "AssemblyNetDocker brick": [[84, "assemblynetdocker-brick"]], "3D Whole Brain MRI Segmentation using AssemblyNet (volBrain)": [[84, "d-whole-brain-mri-segmentation-using-assemblynet-volbrain"]], "GetLabels brick": [[85, "getlabels-brick"]], "Get Assemblynet segmentation labels": [[85, "get-assemblynet-segmentation-labels"]], "LabelsCorrespondence brick": [[86, "labelscorrespondence-brick"]], "Get AssemblyNet labels names or get labels from names": [[86, "get-assemblynet-labels-names-or-get-labels-from-names"]], "AnatIQMs brick": [[87, "anatiqms-brick"]], "Computes the anatomical Image Quality Metrics (IQMs) as defined in mriqc v22.06": [[87, "computes-the-anatomical-image-quality-metrics-iqms-as-defined-in-mriqc-v22-06"]], "BoldQMs brick": [[88, "boldqms-brick"]], "Computes the functional Image Quality Metrics (IQMs) as defined in mriqc v22.06": [[88, "computes-the-functional-image-quality-metrics-iqms-as-defined-in-mriqc-v22-06"]], "BoldIQMsPlot brick": [[89, "boldiqmsplot-brick"]], "CarpetParcellation brick": [[90, "carpetparcellation-brick"]], "Dilate brainmask, subtract from itself then generate the union of obtained crown mask and epi parcellation": [[90, "dilate-brainmask-subtract-from-itself-then-generate-the-union-of-obtained-crown-mask-and-epi-parcellation"]], "ComputeDVARS brick": [[91, "computedvars-brick"]], "Computes DVARS (derivative of variance)": [[91, "computes-dvars-derivative-of-variance"]], "FramewiseDisplacement brick": [[92, "framewisedisplacement-brick"]], "Calculate the FD (framewise displacement) as in [Power2012]": [[92, "calculate-the-fd-framewise-displacement-as-in-power2012"]], "LateralizationIndexCurve brick": [[93, "lateralizationindexcurve-brick"]], "Compute iteratively the lateralization of activation in functional MRI data.": [[93, "compute-iteratively-the-lateralization-of-activation-in-functional-mri-data"]], "Mean_stdDev_calc brick": [[94, "mean-stddev-calc-brick"]], "Makes the mean and standard deviation of parametric maps": [[94, "makes-the-mean-and-standard-deviation-of-parametric-maps"]], "PlotSignalROI brick": [[95, "plotsignalroi-brick"]], "Plot signals from ROI using a segmentation file with label": [[95, "plot-signals-from-roi-using-a-segmentation-file-with-label"]], "ReportAnatMriqc brick": [[96, "reportanatmriqc-brick"]], "Generates the report for anatomical data in mriqc pipeline": [[96, "generates-the-report-for-anatomical-data-in-mriqc-pipeline"]], "ReportCO2inhalCvr brick": [[97, "reportco2inhalcvr-brick"]], "Generates the report for CVR evaluation using hypercapnia challenge pipeline": [[97, "generates-the-report-for-cvr-evaluation-using-hypercapnia-challenge-pipeline"]], "ReportFuncMriqc brick": [[98, "reportfuncmriqc-brick"]], "Generates the report for functional data in mriqc pipeline": [[98, "generates-the-report-for-functional-data-in-mriqc-pipeline"]], "ReportGE2REC brick": [[99, "reportge2rec-brick"]], "Generates the report for GE2REC pipeline (language and memory)": [[99, "generates-the-report-for-ge2rec-pipeline-language-and-memory"]], "ReportGroupMriqc brick": [[100, "reportgroupmriqc-brick"]], "Generate a group report for mriqc pipeline": [[100, "generate-a-group-report-for-mriqc-pipeline"]], "ReportPerfDsc brick": [[101, "reportperfdsc-brick"]], "Generates report for Perfusion study using DSC-MRI": [[101, "generates-report-for-perfusion-study-using-dsc-mri"]], "Result_collector brick": [[102, "result-collector-brick"]], "Generates files containing summary data for each region of interest": [[102, "generates-files-containing-summary-data-for-each-region-of-interest"]], "Spikes brick": [[103, "spikes-brick"]], "Computes the number of spikes": [[103, "computes-the-number-of-spikes"]], "EstimateConstrast brick": [[104, "estimateconstrast-brick"]], "Estimate contrasts of interest (SPM12 fMRI contrast manager)": [[104, "estimate-contrasts-of-interest-spm12-fmri-contrast-manager"]], "EstimateModel brick": [[105, "estimatemodel-brick"]], "Model Estimation using classical (ReML - Restricted Maximum Likelihood) procedure (SPM12 fMRI model estimation)": [[105, "model-estimation-using-classical-reml-restricted-maximum-likelihood-procedure-spm12-fmri-model-estimation"]], "Level1Design brick": [[106, "level1design-brick"]], "fMRI model specification for GLM analysis.": [[106, "fmri-model-specification-for-glm-analysis"]], "MultipleRegressionDesign brick": [[107, "multipleregressiondesign-brick"]], "Create SPM design for multiple regression (SPM12 fMRI factorial Design)": [[107, "create-spm-design-for-multiple-regression-spm12-fmri-factorial-design"]], "OneSampleTTestDesign brick": [[108, "onesamplettestdesign-brick"]], "Create SPM design for one sample t-test (SPM12 fMRI factorial Design)": [[108, "create-spm-design-for-one-sample-t-test-spm12-fmri-factorial-design"]], "PairedTTestDesign brick": [[109, "pairedttestdesign-brick"]], "Create SPM design for paired t-test (SPM12 fMRI factorial Design)": [[109, "create-spm-design-for-paired-t-test-spm12-fmri-factorial-design"]], "TwoSampleTTestDesign brick": [[110, "twosamplettestdesign-brick"]], "Create SPM design for two sample t-test (SPM12 fMRI factorial Design)": [[110, "create-spm-design-for-two-sample-t-test-spm12-fmri-factorial-design"]], "Concat_to_list  brick": [[111, "concat-to-list-brick"]], "Make an output list corresponding to the concatenation of list1 and list2": [[111, "make-an-output-list-corresponding-to-the-concatenation-of-list1-and-list2"]], "Concat_to_list_of_list brick": [[112, "concat-to-list-of-list-brick"]], "Make an output list of list containing the iteration of the input list1 with each element of the input list2": [[112, "make-an-output-list-of-list-containing-the-iteration-of-the-input-list1-with-each-element-of-the-input-list2"]], "Deconv_from_aif brick": [[113, "deconv-from-aif-brick"]], "Deconvolution of the tissue response curve with AIF": [[113, "deconvolution-of-the-tissue-response-curve-with-aif"]], "Delete_data brick": [[114, "delete-data-brick"]], "Delete data from database": [[114, "delete-data-from-database"]], "Files_To_List brick": [[115, "files-to-list-brick"]], "From 3 file names, generate a list containing all these file names": [[115, "from-3-file-names-generate-a-list-containing-all-these-file-names"]], "Filter_Files_List brick": [[116, "filter-files-list-brick"]], "Selects one or more (slicing) elements from a list": [[116, "selects-one-or-more-slicing-elements-from-a-list"]], "Find_In_List brick": [[117, "find-in-list-brick"]], "From a list of files, select the 1rst element that contains a pattern": [[117, "from-a-list-of-files-select-the-1rst-element-that-contains-a-pattern"]], "Get_Conditions_From_BIDS_tsv brick": [[118, "get-conditions-from-bids-tsv-brick"]], "Get_Conditions_From_csv brick": [[119, "get-conditions-from-csv-brick"]], "Get_Eprime_info_GE2REC brick": [[120, "get-eprime-info-ge2rec-brick"]], "Obtain usuful information for GE2REC pipeline from E-Prime file": [[120, "obtain-usuful-information-for-ge2rec-pipeline-from-e-prime-file"]], "Get_Patient_Name brick": [[121, "get-patient-name-brick"]], "Get_Regressors_From_csv brick": [[122, "get-regressors-from-csv-brick"]], "Import_Data  brick": [[123, "import-data-brick"]], "Import reference data into the current pipeline": [[123, "import-reference-data-into-the-current-pipeline"]], "Input_Filter brick": [[124, "input-filter-brick"]], "To filter the content of the Data Browser tab or the output data of another brick": [[124, "to-filter-the-content-of-the-data-browser-tab-or-the-output-data-of-another-brick"]], "List_Duplicate brick": [[125, "list-duplicate-brick"]], "From a file name, generating a list containing this file name and the file name itself": [[125, "from-a-file-name-generating-a-list-containing-this-file-name-and-the-file-name-itself"]], "List_Of_List_To_List brick": [[126, "list-of-list-to-list-brick"]], "From a list of list, generation of a single list": [[126, "from-a-list-of-list-generation-of-a-single-list"]], "List_To_File brick": [[127, "list-to-file-brick"]], "From a list of files, generation of a single file": [[127, "from-a-list-of-files-generation-of-a-single-file"]], "Make_AIF brick": [[128, "make-aif-brick"]], "Compute the Arterial Input Function (AIF) from dynamic MRI perfusion data": [[128, "compute-the-arterial-input-function-aif-from-dynamic-mri-perfusion-data"]], "Make_a_list brick": [[129, "make-a-list-brick"]], "From 2 objects, generating a list containing all these objects": [[129, "from-2-objects-generating-a-list-containing-all-these-objects"]], "Make_CVR_reg_physio brick": [[130, "make-cvr-reg-physio-brick"]], "Generate the physiological regressor for cerebrovascular reactivity evaluation": [[130, "generate-the-physiological-regressor-for-cerebrovascular-reactivity-evaluation"]], "Mia_processes\u2019s documentation": [[131, "mia-processes-s-documentation"]], "CO2_inhalation pipeline": [[132, "co2-inhalation-pipeline"]], "Cerebrovascular reactivity (CVR) evaluation under CO2 challenge": [[132, "cerebrovascular-reactivity-cvr-evaluation-under-co2-challenge"]], "Dwi_whole_brain_tractograpy pipeline": [[133, "dwi-whole-brain-tractograpy-pipeline"]], "Brain Tractography with MRTrix": [[133, "brain-tractography-with-mrtrix"]], "GE2REC pipeline": [[134, "ge2rec-pipeline"]], "Interactive mapping of language and memory with the GE2REC protocol": [[134, "interactive-mapping-of-language-and-memory-with-the-ge2rec-protocol"]], "GE2REC_without_behavioural_data pipeline": [[135, "ge2rec-without-behavioural-data-pipeline"]], "Interactive mapping of language and memory with the GE2REC protocol without behavioural data": [[135, "interactive-mapping-of-language-and-memory-with-the-ge2rec-protocol-without-behavioural-data"]], "Perfdsc pipeline": [[136, "perfdsc-pipeline"]], "Perfusion Dynamic Susceptibility Contrast MRI": [[136, "perfusion-dynamic-susceptibility-contrast-mri"]], "Anat_airmask pipeline": [[137, "anat-airmask-pipeline"]], "Compute rotation mask, air mask, artifact mask and hat mask for structural data following step 1 from [Mortamet2009]": [[137, "compute-rotation-mask-air-mask-artifact-mask-and-hat-mask-for-structural-data-following-step-1-from-mortamet2009"]], "Anat_headmask pipeline": [[138, "anat-headmask-pipeline"]], "Compute head mask from skull stripped structural image using Denoise from Dipy": [[138, "compute-head-mask-from-skull-stripped-structural-image-using-denoise-from-dipy"]], "Anat_mni_tpms pipeline": [[139, "anat-mni-tpms-pipeline"]], "Get templates tissues probability map and register them in subject space": [[139, "get-templates-tissues-probability-map-and-register-them-in-subject-space"]], "Anat_skullstrip pipeline": [[140, "anat-skullstrip-pipeline"]], "Bias correction and skull stripping of a structural image": [[140, "bias-correction-and-skull-stripping-of-a-structural-image"]], "Anat_skullstrip_synthstrip pipeline": [[141, "anat-skullstrip-synthstrip-pipeline"]], "Create a brain-extraction workflow using SynthStrip (Freesurfer)": [[141, "create-a-brain-extraction-workflow-using-synthstrip-freesurfer"]], "Anat_spatial_norm pipeline": [[142, "anat-spatial-norm-pipeline"]], "Spatial normalization to MNI (using MNI152NLin2009cAsym template)": [[142, "spatial-normalization-to-mni-using-mni152nlin2009casym-template"]], "Bold_hmc pipeline": [[143, "bold-hmc-pipeline"]], "Head motion correction of a bold image": [[143, "head-motion-correction-of-a-bold-image"]], "Bold_mni_align pipeline": [[144, "bold-mni-align-pipeline"]], "Register a mean functional image EPI in MNI space (for checking out registration)": [[144, "register-a-mean-functional-image-epi-in-mni-space-for-checking-out-registration"]], "Bold_spatial_preprocessing1 pipeline": [[145, "bold-spatial-preprocessing1-pipeline"]], "An example of fMRI data pre-processing": [[145, "an-example-of-fmri-data-pre-processing"], [146, "an-example-of-fmri-data-pre-processing"], [147, "an-example-of-fmri-data-pre-processing"]], "Bold_spatial_preprocessing2 pipeline": [[146, "bold-spatial-preprocessing2-pipeline"]], "Bold_spatial_preprocessing3 pipeline": [[147, "bold-spatial-preprocessing3-pipeline"]], "Dwi_fod_msmt_csd pipeline": [[148, "dwi-fod-msmt-csd-pipeline"]], "Estimate DWI fiber orientation distribution (FOD)": [[148, "estimate-dwi-fiber-orientation-distribution-fod"]], "Dwi_preprocessing pipeline": [[149, "dwi-preprocessing-pipeline"]], "DWI preprocessing using a reverse-phase encoded b0": [[149, "dwi-preprocessing-using-a-reverse-phase-encoded-b0"]], "Dwi_tissue_boundaries pipeline": [[150, "dwi-tissue-boundaries-pipeline"]], "Create tissue boundaries with a T1w and registratiojn in DWI space": [[150, "create-tissue-boundaries-with-a-t1w-and-registratiojn-in-dwi-space"]], "Spatial_mask pipeline": [[151, "spatial-mask-pipeline"]], "From a list of images resulting from a previous segmentation, produces a grey matter mask": [[151, "from-a-list-of-images-resulting-from-a-previous-segmentation-produces-a-grey-matter-mask"]], "Anat_mriqc pipeline": [[152, "anat-mriqc-pipeline"]], "Get no-reference IQMs (image quality metrics) from structural (T1w and T2w) data using mriqc anatomical workflow (mriqc v22.06)": [[152, "get-no-reference-iqms-image-quality-metrics-from-structural-t1w-and-t2w-data-using-mriqc-anatomical-workflow-mriqc-v22-06"]], "Bold_mriqc pipeline": [[153, "bold-mriqc-pipeline"]], "Get no-reference IQMs (image quality metrics) from functional (BOLD) data using mriqc functional workflow (mriqc v22.06)": [[153, "get-no-reference-iqms-image-quality-metrics-from-functional-bold-data-using-mriqc-functional-workflow-mriqc-v22-06"]], "Bold_signals_roi pipeline": [[154, "bold-signals-roi-pipeline"]], "Bold_iqms pipeline": [[155, "bold-iqms-pipeline"]], "Compute no-reference IQMs (image quality metrics) from functional (BOLD)": [[155, "compute-no-reference-iqms-image-quality-metrics-from-functional-bold"]], "Extract_roi_param pipeline": [[156, "extract-roi-param-pipeline"]], "Produces gray matter masks for various ROIs and means, standard deviations, laterality indices for beta and spmT values in these ROIs": [[156, "produces-gray-matter-masks-for-various-rois-and-means-standard-deviations-laterality-indices-for-beta-and-spmt-values-in-these-rois"]], "Bold_stat_cvr brick": [[157, "bold-stat-cvr-brick"]], "SPM-based first level GLM analysis used in the CVR evaluation": [[157, "spm-based-first-level-glm-analysis-used-in-the-cvr-evaluation"]], "Purpose": [[158, "purpose"]], "Indices and tables for developers": [[158, "indices-and-tables-for-developers"]], "mia_processes package": [[159, "module-mia_processes"]], "Subpackages": [[159, "subpackages"], [160, "subpackages"], [161, "subpackages"], [171, "subpackages"], [174, "subpackages"]], "Submodules": [[159, "submodules"], [162, "submodules"], [163, "submodules"], [164, "submodules"], [165, "submodules"], [166, "submodules"], [167, "submodules"], [168, "submodules"], [169, "submodules"], [170, "submodules"], [172, "submodules"], [173, "submodules"], [175, "submodules"], [176, "submodules"], [177, "submodules"], [178, "submodules"], [179, "submodules"], [180, "submodules"], [181, "submodules"]], "mia_processes.info module": [[159, "module-mia_processes.info"]], "mia_processes.process_matlab module": [[159, "module-mia_processes.process_matlab"]], "mia_processes.bricks package": [[160, "module-mia_processes.bricks"]], "mia_processes.bricks.preprocess package": [[161, "module-mia_processes.bricks.preprocess"]], "mia_processes.bricks.preprocess.afni package": [[162, "module-mia_processes.bricks.preprocess.afni"]], "mia_processes.bricks.preprocess.afni.processes module": [[162, "module-mia_processes.bricks.preprocess.afni.processes"]], "mia_processes.bricks.preprocess.ants package": [[163, "module-mia_processes.bricks.preprocess.ants"]], "mia_processes.bricks.preprocess.ants.processes module": [[163, "module-mia_processes.bricks.preprocess.ants.processes"]], "mia_processes.bricks.preprocess.dipy package": [[164, "module-mia_processes.bricks.preprocess.dipy"]], "mia_processes.bricks.preprocess.dipy.processes module": [[164, "module-mia_processes.bricks.preprocess.dipy.processes"]], "mia_processes.bricks.preprocess.freesurfer package": [[165, "module-mia_processes.bricks.preprocess.freesurfer"]], "mia_processes.bricks.preprocess.freesurfer.processes module": [[165, "module-mia_processes.bricks.preprocess.freesurfer.processes"]], "mia_processes.bricks.preprocess.fsl package": [[166, "module-mia_processes.bricks.preprocess.fsl"]], "mia_processes.bricks.preprocess.fsl.processes module": [[166, "module-mia_processes.bricks.preprocess.fsl.processes"]], "mia_processes.bricks.preprocess.mrtrix package": [[167, "module-mia_processes.bricks.preprocess.mrtrix"]], "mia_processes.bricks.preprocess.mrtrix.processes module": [[167, "module-mia_processes.bricks.preprocess.mrtrix.processes"]], "mia_processes.bricks.preprocess.others package": [[168, "module-mia_processes.bricks.preprocess.others"]], "mia_processes.bricks.preprocess.others.processing module": [[168, "module-mia_processes.bricks.preprocess.others.processing"]], "mia_processes.bricks.preprocess.spm package": [[169, "module-mia_processes.bricks.preprocess.spm"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing module": [[169, "module-mia_processes.bricks.preprocess.spm.spatial_preprocessing"]], "mia_processes.bricks.reports package": [[170, "module-mia_processes.bricks.reports"]], "mia_processes.bricks.reports.processes module": [[170, "module-mia_processes.bricks.reports.processes"]], "References": [[170, null]], "mia_processes.bricks.reports.reporting module": [[170, "module-mia_processes.bricks.reports.reporting"]], "mia_processes.bricks.stat package": [[171, "module-mia_processes.bricks.stat"]], "mia_processes.bricks.stat.spm package": [[172, "module-mia_processes.bricks.stat.spm"]], "mia_processes.bricks.stat.spm.model module": [[172, "module-mia_processes.bricks.stat.spm.model"]], "mia_processes.bricks.tools package": [[173, "module-mia_processes.bricks.tools"]], "mia_processes.bricks.tools.tools module": [[173, "module-mia_processes.bricks.tools.tools"]], "mia_processes.pipelines package": [[174, "module-mia_processes.pipelines"]], "mia_processes.pipelines.CerebVascularReact package": [[175, "module-mia_processes.pipelines.CerebVascularReact"]], "mia_processes.pipelines.CerebVascularReact.co2_inhalation module": [[175, "module-mia_processes.pipelines.CerebVascularReact.co2_inhalation"]], "mia_processes.pipelines.DWITractography package": [[176, "module-mia_processes.pipelines.DWITractography"]], "mia_processes.pipelines.DWITractography.dwi_whole_brain_tractography module": [[176, "module-mia_processes.pipelines.DWITractography.dwi_whole_brain_tractography"]], "mia_processes.pipelines.preprocess package": [[177, "module-mia_processes.pipelines.preprocess"]], "mia_processes.pipelines.preprocess.anat_airmask module": [[177, "module-mia_processes.pipelines.preprocess.anat_airmask"]], "mia_processes.pipelines.preprocess.anat_headmask module": [[177, "module-mia_processes.pipelines.preprocess.anat_headmask"]], "mia_processes.pipelines.preprocess.anat_mni_tpms module": [[177, "module-mia_processes.pipelines.preprocess.anat_mni_tpms"]], "mia_processes.pipelines.preprocess.anat_skullstrip module": [[177, "module-mia_processes.pipelines.preprocess.anat_skullstrip"]], "mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip module": [[177, "module-mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip"]], "mia_processes.pipelines.preprocess.anat_spatial_norm module": [[177, "module-mia_processes.pipelines.preprocess.anat_spatial_norm"]], "mia_processes.pipelines.preprocess.bold_hmc module": [[177, "module-mia_processes.pipelines.preprocess.bold_hmc"]], "mia_processes.pipelines.preprocess.bold_mni_align module": [[177, "module-mia_processes.pipelines.preprocess.bold_mni_align"]], "mia_processes.pipelines.preprocess.bold_spatial_preprocessing1 module": [[177, "module-mia_processes.pipelines.preprocess.bold_spatial_preprocessing1"]], "mia_processes.pipelines.preprocess.bold_spatial_preprocessing2 module": [[177, "module-mia_processes.pipelines.preprocess.bold_spatial_preprocessing2"]], "mia_processes.pipelines.preprocess.dwi_fod_msmt_csd module": [[177, "module-mia_processes.pipelines.preprocess.dwi_fod_msmt_csd"]], "mia_processes.pipelines.preprocess.dwipreprocessing module": [[177, "module-mia_processes.pipelines.preprocess.dwi_preprocessing"]], "mia_processes.pipelines.preprocess.spatial_mask module": [[177, "module-mia_processes.pipelines.preprocess.spatial_mask"]], "mia_processes.pipelines.qualityControl package": [[178, "module-mia_processes.pipelines.qualityControl"]], "mia_processes.pipelines.qualityControl.anat_mriqc module": [[178, "module-mia_processes.pipelines.qualityControl.anat_mriqc"]], "mia_processes.pipelines.qualityControl.bold_mriqc module": [[178, "module-mia_processes.pipelines.qualityControl.bold_mriqc"]], "mia_processes.pipelines.reports package": [[179, "module-mia_processes.pipelines.reports"]], "mia_processes.pipelines.reports.bold_iqms module": [[179, "module-mia_processes.pipelines.reports.bold_iqms"]], "mia_processes.pipelines.reports.extract_roi_param module": [[179, "module-mia_processes.pipelines.reports.extract_roi_param"]], "mia_processes.pipelines.stat package": [[180, "module-mia_processes.pipelines.stat"]], "mia_processes.pipelines.stat.bold_stat_cvr module": [[180, "module-mia_processes.pipelines.stat.bold_stat_cvr"]], "mia_processes.utils package": [[181, "module-mia_processes.utils"]], "mia_processes.utils.report module": [[181, "module-mia_processes.utils.report"]], "mia_processes.utils.tools module": [[181, "module-mia_processes.utils.tools"]], "mia_processes": [[182, "mia-processes"]]}, "indexentries": {"processmatlab (class in mia_processes.process_matlab)": [[159, "mia_processes.process_matlab.ProcessMatlab"]], "__init__() (mia_processes.process_matlab.processmatlab method)": [[159, "mia_processes.process_matlab.ProcessMatlab.__init__"]], "add_exit() (mia_processes.process_matlab.processmatlab method)": [[159, "mia_processes.process_matlab.ProcessMatlab.add_exit"]], "add_path() (mia_processes.process_matlab.processmatlab method)": [[159, "mia_processes.process_matlab.ProcessMatlab.add_path"]], "change_directory() (mia_processes.process_matlab.processmatlab method)": [[159, "mia_processes.process_matlab.ProcessMatlab.change_directory"]], "display_parameter() (mia_processes.process_matlab.processmatlab method)": [[159, "mia_processes.process_matlab.ProcessMatlab.display_parameter"]], "get_gitversion() (in module mia_processes.info)": [[159, "mia_processes.info.get_gitversion"]], "mia_processes": [[159, "module-mia_processes"]], "mia_processes.info": [[159, "module-mia_processes.info"]], "mia_processes.process_matlab": [[159, "module-mia_processes.process_matlab"]], "module": [[159, "module-mia_processes"], [159, "module-mia_processes.info"], [159, "module-mia_processes.process_matlab"], [160, "module-mia_processes.bricks"], [161, "module-mia_processes.bricks.preprocess"], [162, "module-mia_processes.bricks.preprocess.afni"], [162, "module-mia_processes.bricks.preprocess.afni.processes"], [163, "module-mia_processes.bricks.preprocess.ants"], [163, "module-mia_processes.bricks.preprocess.ants.processes"], [164, "module-mia_processes.bricks.preprocess.dipy"], [164, "module-mia_processes.bricks.preprocess.dipy.processes"], [165, "module-mia_processes.bricks.preprocess.freesurfer"], [165, "module-mia_processes.bricks.preprocess.freesurfer.processes"], [166, "module-mia_processes.bricks.preprocess.fsl"], [166, "module-mia_processes.bricks.preprocess.fsl.processes"], [167, "module-mia_processes.bricks.preprocess.mrtrix"], [167, "module-mia_processes.bricks.preprocess.mrtrix.processes"], [168, "module-mia_processes.bricks.preprocess.others"], [168, "module-mia_processes.bricks.preprocess.others.processing"], [169, "module-mia_processes.bricks.preprocess.spm"], [169, "module-mia_processes.bricks.preprocess.spm.spatial_preprocessing"], [170, "module-mia_processes.bricks.reports"], [170, "module-mia_processes.bricks.reports.processes"], [170, "module-mia_processes.bricks.reports.reporting"], [171, "module-mia_processes.bricks.stat"], [172, "module-mia_processes.bricks.stat.spm"], [172, "module-mia_processes.bricks.stat.spm.model"], [173, "module-mia_processes.bricks.tools"], [173, "module-mia_processes.bricks.tools.tools"], [174, "module-mia_processes.pipelines"], [175, "module-mia_processes.pipelines.CerebVascularReact"], [175, "module-mia_processes.pipelines.CerebVascularReact.co2_inhalation"], [176, "module-mia_processes.pipelines.DWITractography"], [176, "module-mia_processes.pipelines.DWITractography.dwi_whole_brain_tractography"], [177, "module-mia_processes.pipelines.preprocess"], [177, "module-mia_processes.pipelines.preprocess.anat_airmask"], [177, "module-mia_processes.pipelines.preprocess.anat_headmask"], [177, "module-mia_processes.pipelines.preprocess.anat_mni_tpms"], [177, "module-mia_processes.pipelines.preprocess.anat_skullstrip"], [177, "module-mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip"], [177, "module-mia_processes.pipelines.preprocess.anat_spatial_norm"], [177, "module-mia_processes.pipelines.preprocess.bold_hmc"], [177, "module-mia_processes.pipelines.preprocess.bold_mni_align"], [177, "module-mia_processes.pipelines.preprocess.bold_spatial_preprocessing1"], [177, "module-mia_processes.pipelines.preprocess.bold_spatial_preprocessing2"], [177, "module-mia_processes.pipelines.preprocess.dwi_fod_msmt_csd"], [177, "module-mia_processes.pipelines.preprocess.dwi_preprocessing"], [177, "module-mia_processes.pipelines.preprocess.spatial_mask"], [178, "module-mia_processes.pipelines.qualityControl"], [178, "module-mia_processes.pipelines.qualityControl.anat_mriqc"], [178, "module-mia_processes.pipelines.qualityControl.bold_mriqc"], [179, "module-mia_processes.pipelines.reports"], [179, "module-mia_processes.pipelines.reports.bold_iqms"], [179, "module-mia_processes.pipelines.reports.extract_roi_param"], [180, "module-mia_processes.pipelines.stat"], [180, "module-mia_processes.pipelines.stat.bold_stat_cvr"], [181, "module-mia_processes.utils"], [181, "module-mia_processes.utils.report"], [181, "module-mia_processes.utils.tools"]], "run() (mia_processes.process_matlab.processmatlab method)": [[159, "mia_processes.process_matlab.ProcessMatlab.run"]], "set_global_variable() (mia_processes.process_matlab.processmatlab method)": [[159, "mia_processes.process_matlab.ProcessMatlab.set_global_variable"]], "set_variable() (mia_processes.process_matlab.processmatlab method)": [[159, "mia_processes.process_matlab.ProcessMatlab.set_variable"]], "mia_processes.bricks": [[160, "module-mia_processes.bricks"]], "mia_processes.bricks.preprocess": [[161, "module-mia_processes.bricks.preprocess"]], "automask (class in mia_processes.bricks.preprocess.afni.processes)": [[162, "mia_processes.bricks.preprocess.afni.processes.Automask"]], "calc (class in mia_processes.bricks.preprocess.afni.processes)": [[162, "mia_processes.bricks.preprocess.afni.processes.Calc"]], "calcdroptrs (class in mia_processes.bricks.preprocess.afni.processes)": [[162, "mia_processes.bricks.preprocess.afni.processes.CalcDropTRs"]], "despike (class in mia_processes.bricks.preprocess.afni.processes)": [[162, "mia_processes.bricks.preprocess.afni.processes.Despike"]], "fwhmx (class in mia_processes.bricks.preprocess.afni.processes)": [[162, "mia_processes.bricks.preprocess.afni.processes.FWHMx"]], "gcor (class in mia_processes.bricks.preprocess.afni.processes)": [[162, "mia_processes.bricks.preprocess.afni.processes.GCOR"]], "outliercount (class in mia_processes.bricks.preprocess.afni.processes)": [[162, "mia_processes.bricks.preprocess.afni.processes.OutlierCount"]], "qualityindex (class in mia_processes.bricks.preprocess.afni.processes)": [[162, "mia_processes.bricks.preprocess.afni.processes.QualityIndex"]], "refitdeoblique (class in mia_processes.bricks.preprocess.afni.processes)": [[162, "mia_processes.bricks.preprocess.afni.processes.RefitDeoblique"]], "skullstrip (class in mia_processes.bricks.preprocess.afni.processes)": [[162, "mia_processes.bricks.preprocess.afni.processes.SkullStrip"]], "tshift (class in mia_processes.bricks.preprocess.afni.processes)": [[162, "mia_processes.bricks.preprocess.afni.processes.TShift"]], "tstatmean (class in mia_processes.bricks.preprocess.afni.processes)": [[162, "mia_processes.bricks.preprocess.afni.processes.TStatMean"]], "volreg (class in mia_processes.bricks.preprocess.afni.processes)": [[162, "mia_processes.bricks.preprocess.afni.processes.Volreg"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.automask method)": [[162, "mia_processes.bricks.preprocess.afni.processes.Automask.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.calc method)": [[162, "mia_processes.bricks.preprocess.afni.processes.Calc.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.calcdroptrs method)": [[162, "mia_processes.bricks.preprocess.afni.processes.CalcDropTRs.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.despike method)": [[162, "mia_processes.bricks.preprocess.afni.processes.Despike.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.fwhmx method)": [[162, "mia_processes.bricks.preprocess.afni.processes.FWHMx.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.gcor method)": [[162, "mia_processes.bricks.preprocess.afni.processes.GCOR.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.outliercount method)": [[162, "mia_processes.bricks.preprocess.afni.processes.OutlierCount.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.qualityindex method)": [[162, "mia_processes.bricks.preprocess.afni.processes.QualityIndex.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.refitdeoblique method)": [[162, "mia_processes.bricks.preprocess.afni.processes.RefitDeoblique.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.skullstrip method)": [[162, "mia_processes.bricks.preprocess.afni.processes.SkullStrip.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.tshift method)": [[162, "mia_processes.bricks.preprocess.afni.processes.TShift.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.tstatmean method)": [[162, "mia_processes.bricks.preprocess.afni.processes.TStatMean.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.volreg method)": [[162, "mia_processes.bricks.preprocess.afni.processes.Volreg.__init__"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.automask method)": [[162, "mia_processes.bricks.preprocess.afni.processes.Automask.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.calc method)": [[162, "mia_processes.bricks.preprocess.afni.processes.Calc.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.calcdroptrs method)": [[162, "mia_processes.bricks.preprocess.afni.processes.CalcDropTRs.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.despike method)": [[162, "mia_processes.bricks.preprocess.afni.processes.Despike.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.fwhmx method)": [[162, "mia_processes.bricks.preprocess.afni.processes.FWHMx.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.gcor method)": [[162, "mia_processes.bricks.preprocess.afni.processes.GCOR.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.outliercount method)": [[162, "mia_processes.bricks.preprocess.afni.processes.OutlierCount.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.qualityindex method)": [[162, "mia_processes.bricks.preprocess.afni.processes.QualityIndex.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.refitdeoblique method)": [[162, "mia_processes.bricks.preprocess.afni.processes.RefitDeoblique.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.skullstrip method)": [[162, "mia_processes.bricks.preprocess.afni.processes.SkullStrip.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.tshift method)": [[162, "mia_processes.bricks.preprocess.afni.processes.TShift.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.tstatmean method)": [[162, "mia_processes.bricks.preprocess.afni.processes.TStatMean.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.volreg method)": [[162, "mia_processes.bricks.preprocess.afni.processes.Volreg.list_outputs"]], "mia_processes.bricks.preprocess.afni": [[162, "module-mia_processes.bricks.preprocess.afni"]], "mia_processes.bricks.preprocess.afni.processes": [[162, "module-mia_processes.bricks.preprocess.afni.processes"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.automask method)": [[162, "mia_processes.bricks.preprocess.afni.processes.Automask.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.calc method)": [[162, "mia_processes.bricks.preprocess.afni.processes.Calc.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.calcdroptrs method)": [[162, "mia_processes.bricks.preprocess.afni.processes.CalcDropTRs.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.despike method)": [[162, "mia_processes.bricks.preprocess.afni.processes.Despike.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.fwhmx method)": [[162, "mia_processes.bricks.preprocess.afni.processes.FWHMx.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.gcor method)": [[162, "mia_processes.bricks.preprocess.afni.processes.GCOR.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.outliercount method)": [[162, "mia_processes.bricks.preprocess.afni.processes.OutlierCount.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.qualityindex method)": [[162, "mia_processes.bricks.preprocess.afni.processes.QualityIndex.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.refitdeoblique method)": [[162, "mia_processes.bricks.preprocess.afni.processes.RefitDeoblique.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.skullstrip method)": [[162, "mia_processes.bricks.preprocess.afni.processes.SkullStrip.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.tshift method)": [[162, "mia_processes.bricks.preprocess.afni.processes.TShift.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.tstatmean method)": [[162, "mia_processes.bricks.preprocess.afni.processes.TStatMean.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.volreg method)": [[162, "mia_processes.bricks.preprocess.afni.processes.Volreg.run_process_mia"]], "affineinitializer (class in mia_processes.bricks.preprocess.ants.processes)": [[163, "mia_processes.bricks.preprocess.ants.processes.AffineInitializer"]], "applytransforms (class in mia_processes.bricks.preprocess.ants.processes)": [[163, "mia_processes.bricks.preprocess.ants.processes.ApplyTransforms"]], "n4biasfieldcorrection (class in mia_processes.bricks.preprocess.ants.processes)": [[163, "mia_processes.bricks.preprocess.ants.processes.N4BiasFieldCorrection"]], "registration (class in mia_processes.bricks.preprocess.ants.processes)": [[163, "mia_processes.bricks.preprocess.ants.processes.Registration"]], "__init__() (mia_processes.bricks.preprocess.ants.processes.affineinitializer method)": [[163, "mia_processes.bricks.preprocess.ants.processes.AffineInitializer.__init__"]], "__init__() (mia_processes.bricks.preprocess.ants.processes.applytransforms method)": [[163, "mia_processes.bricks.preprocess.ants.processes.ApplyTransforms.__init__"]], "__init__() (mia_processes.bricks.preprocess.ants.processes.n4biasfieldcorrection method)": [[163, "mia_processes.bricks.preprocess.ants.processes.N4BiasFieldCorrection.__init__"]], "__init__() (mia_processes.bricks.preprocess.ants.processes.registration method)": [[163, "mia_processes.bricks.preprocess.ants.processes.Registration.__init__"]], "list_outputs() (mia_processes.bricks.preprocess.ants.processes.affineinitializer method)": [[163, "mia_processes.bricks.preprocess.ants.processes.AffineInitializer.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.ants.processes.applytransforms method)": [[163, "mia_processes.bricks.preprocess.ants.processes.ApplyTransforms.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.ants.processes.n4biasfieldcorrection method)": [[163, "mia_processes.bricks.preprocess.ants.processes.N4BiasFieldCorrection.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.ants.processes.registration method)": [[163, "mia_processes.bricks.preprocess.ants.processes.Registration.list_outputs"]], "mia_processes.bricks.preprocess.ants": [[163, "module-mia_processes.bricks.preprocess.ants"]], "mia_processes.bricks.preprocess.ants.processes": [[163, "module-mia_processes.bricks.preprocess.ants.processes"]], "run_process_mia() (mia_processes.bricks.preprocess.ants.processes.affineinitializer method)": [[163, "mia_processes.bricks.preprocess.ants.processes.AffineInitializer.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.ants.processes.applytransforms method)": [[163, "mia_processes.bricks.preprocess.ants.processes.ApplyTransforms.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.ants.processes.n4biasfieldcorrection method)": [[163, "mia_processes.bricks.preprocess.ants.processes.N4BiasFieldCorrection.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.ants.processes.registration method)": [[163, "mia_processes.bricks.preprocess.ants.processes.Registration.run_process_mia"]], "computedki (class in mia_processes.bricks.preprocess.dipy.processes)": [[164, "mia_processes.bricks.preprocess.dipy.processes.ComputeDKI"]], "denoise (class in mia_processes.bricks.preprocess.dipy.processes)": [[164, "mia_processes.bricks.preprocess.dipy.processes.Denoise"]], "__init__() (mia_processes.bricks.preprocess.dipy.processes.computedki method)": [[164, "mia_processes.bricks.preprocess.dipy.processes.ComputeDKI.__init__"]], "__init__() (mia_processes.bricks.preprocess.dipy.processes.denoise method)": [[164, "mia_processes.bricks.preprocess.dipy.processes.Denoise.__init__"]], "list_outputs() (mia_processes.bricks.preprocess.dipy.processes.computedki method)": [[164, "mia_processes.bricks.preprocess.dipy.processes.ComputeDKI.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.dipy.processes.denoise method)": [[164, "mia_processes.bricks.preprocess.dipy.processes.Denoise.list_outputs"]], "mia_processes.bricks.preprocess.dipy": [[164, "module-mia_processes.bricks.preprocess.dipy"]], "mia_processes.bricks.preprocess.dipy.processes": [[164, "module-mia_processes.bricks.preprocess.dipy.processes"]], "run_process_mia() (mia_processes.bricks.preprocess.dipy.processes.computedki method)": [[164, "mia_processes.bricks.preprocess.dipy.processes.ComputeDKI.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.dipy.processes.denoise method)": [[164, "mia_processes.bricks.preprocess.dipy.processes.Denoise.run_process_mia"]], "binarize (class in mia_processes.bricks.preprocess.freesurfer.processes)": [[165, "mia_processes.bricks.preprocess.freesurfer.processes.Binarize"]], "synthstrip (class in mia_processes.bricks.preprocess.freesurfer.processes)": [[165, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStrip"]], "synthstripmriqc (class in mia_processes.bricks.preprocess.freesurfer.processes)": [[165, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc"]], "synthstripmriqc.convblock (class in mia_processes.bricks.preprocess.freesurfer.processes)": [[165, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.ConvBlock"]], "synthstripmriqc.stripmodel (class in mia_processes.bricks.preprocess.freesurfer.processes)": [[165, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.StripModel"]], "__init__() (mia_processes.bricks.preprocess.freesurfer.processes.binarize method)": [[165, "mia_processes.bricks.preprocess.freesurfer.processes.Binarize.__init__"]], "__init__() (mia_processes.bricks.preprocess.freesurfer.processes.synthstrip method)": [[165, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStrip.__init__"]], "__init__() (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc method)": [[165, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.__init__"]], "__init__() (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc.convblock method)": [[165, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.ConvBlock.__init__"]], "__init__() (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc.stripmodel method)": [[165, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.StripModel.__init__"]], "conform() (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc method)": [[165, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.conform"]], "forward() (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc.convblock method)": [[165, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.ConvBlock.forward"]], "forward() (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc.stripmodel method)": [[165, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.StripModel.forward"]], "list_outputs() (mia_processes.bricks.preprocess.freesurfer.processes.binarize method)": [[165, "mia_processes.bricks.preprocess.freesurfer.processes.Binarize.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.freesurfer.processes.synthstrip method)": [[165, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStrip.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc method)": [[165, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.list_outputs"]], "mia_processes.bricks.preprocess.freesurfer": [[165, "module-mia_processes.bricks.preprocess.freesurfer"]], "mia_processes.bricks.preprocess.freesurfer.processes": [[165, "module-mia_processes.bricks.preprocess.freesurfer.processes"]], "resample_like() (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc method)": [[165, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.resample_like"]], "run_process_mia() (mia_processes.bricks.preprocess.freesurfer.processes.binarize method)": [[165, "mia_processes.bricks.preprocess.freesurfer.processes.Binarize.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.freesurfer.processes.synthstrip method)": [[165, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStrip.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc method)": [[165, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.run_process_mia"]], "training (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc.convblock attribute)": [[165, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.ConvBlock.training"]], "training (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc.stripmodel attribute)": [[165, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.StripModel.training"]], "bet (class in mia_processes.bricks.preprocess.fsl.processes)": [[166, "mia_processes.bricks.preprocess.fsl.processes.Bet"]], "betsurfacesextraction (class in mia_processes.bricks.preprocess.fsl.processes)": [[166, "mia_processes.bricks.preprocess.fsl.processes.BetSurfacesExtraction"]], "convertxfm (class in mia_processes.bricks.preprocess.fsl.processes)": [[166, "mia_processes.bricks.preprocess.fsl.processes.ConvertXFM"]], "epireg (class in mia_processes.bricks.preprocess.fsl.processes)": [[166, "mia_processes.bricks.preprocess.fsl.processes.EpiReg"]], "extractroi (class in mia_processes.bricks.preprocess.fsl.processes)": [[166, "mia_processes.bricks.preprocess.fsl.processes.ExtractROI"]], "fastsegment (class in mia_processes.bricks.preprocess.fsl.processes)": [[166, "mia_processes.bricks.preprocess.fsl.processes.FastSegment"]], "flirt (class in mia_processes.bricks.preprocess.fsl.processes)": [[166, "mia_processes.bricks.preprocess.fsl.processes.Flirt"]], "smooth (class in mia_processes.bricks.preprocess.fsl.processes)": [[166, "mia_processes.bricks.preprocess.fsl.processes.Smooth"]], "__init__() (mia_processes.bricks.preprocess.fsl.processes.bet method)": [[166, "mia_processes.bricks.preprocess.fsl.processes.Bet.__init__"]], "__init__() (mia_processes.bricks.preprocess.fsl.processes.betsurfacesextraction method)": [[166, "mia_processes.bricks.preprocess.fsl.processes.BetSurfacesExtraction.__init__"]], "__init__() (mia_processes.bricks.preprocess.fsl.processes.convertxfm method)": [[166, "mia_processes.bricks.preprocess.fsl.processes.ConvertXFM.__init__"]], "__init__() (mia_processes.bricks.preprocess.fsl.processes.epireg method)": [[166, "mia_processes.bricks.preprocess.fsl.processes.EpiReg.__init__"]], "__init__() (mia_processes.bricks.preprocess.fsl.processes.extractroi method)": [[166, "mia_processes.bricks.preprocess.fsl.processes.ExtractROI.__init__"]], "__init__() (mia_processes.bricks.preprocess.fsl.processes.fastsegment method)": [[166, "mia_processes.bricks.preprocess.fsl.processes.FastSegment.__init__"]], "__init__() (mia_processes.bricks.preprocess.fsl.processes.flirt method)": [[166, "mia_processes.bricks.preprocess.fsl.processes.Flirt.__init__"]], "__init__() (mia_processes.bricks.preprocess.fsl.processes.smooth method)": [[166, "mia_processes.bricks.preprocess.fsl.processes.Smooth.__init__"]], "list_outputs() (mia_processes.bricks.preprocess.fsl.processes.bet method)": [[166, "mia_processes.bricks.preprocess.fsl.processes.Bet.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.fsl.processes.betsurfacesextraction method)": [[166, "mia_processes.bricks.preprocess.fsl.processes.BetSurfacesExtraction.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.fsl.processes.convertxfm method)": [[166, "mia_processes.bricks.preprocess.fsl.processes.ConvertXFM.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.fsl.processes.epireg method)": [[166, "mia_processes.bricks.preprocess.fsl.processes.EpiReg.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.fsl.processes.extractroi method)": [[166, "mia_processes.bricks.preprocess.fsl.processes.ExtractROI.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.fsl.processes.fastsegment method)": [[166, "mia_processes.bricks.preprocess.fsl.processes.FastSegment.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.fsl.processes.flirt method)": [[166, "mia_processes.bricks.preprocess.fsl.processes.Flirt.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.fsl.processes.smooth method)": [[166, "mia_processes.bricks.preprocess.fsl.processes.Smooth.list_outputs"]], "mia_processes.bricks.preprocess.fsl": [[166, "module-mia_processes.bricks.preprocess.fsl"]], "mia_processes.bricks.preprocess.fsl.processes": [[166, "module-mia_processes.bricks.preprocess.fsl.processes"]], "run_process_mia() (mia_processes.bricks.preprocess.fsl.processes.bet method)": [[166, "mia_processes.bricks.preprocess.fsl.processes.Bet.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.fsl.processes.betsurfacesextraction method)": [[166, "mia_processes.bricks.preprocess.fsl.processes.BetSurfacesExtraction.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.fsl.processes.convertxfm method)": [[166, "mia_processes.bricks.preprocess.fsl.processes.ConvertXFM.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.fsl.processes.epireg method)": [[166, "mia_processes.bricks.preprocess.fsl.processes.EpiReg.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.fsl.processes.extractroi method)": [[166, "mia_processes.bricks.preprocess.fsl.processes.ExtractROI.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.fsl.processes.fastsegment method)": [[166, "mia_processes.bricks.preprocess.fsl.processes.FastSegment.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.fsl.processes.flirt method)": [[166, "mia_processes.bricks.preprocess.fsl.processes.Flirt.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.fsl.processes.smooth method)": [[166, "mia_processes.bricks.preprocess.fsl.processes.Smooth.run_process_mia"]], "constrainedsphericaldeconvolution (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.ConstrainedSphericalDeconvolution"]], "dwibiascorrect (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.DWIBiasCorrect"]], "dwibrainmask (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.DWIBrainMask"]], "dwicat (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.DWICat"]], "dwidenoise (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.DWIDenoise"]], "dwiextract (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.DWIExtract"]], "dwipreproc (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.DWIPreproc"]], "editingtrack (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.EditingTrack"]], "filteringtrack (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.FilteringTrack"]], "fittensor (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.FitTensor"]], "generate5tt2gmwmi (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.Generate5tt2gmwmi"]], "generate5ttfsl (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.Generate5ttfsl"]], "mrcat (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.MRCat"]], "mrconvert (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.MRConvert"]], "mrdegibbs (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.MRDeGibbs"]], "mrgridregrid (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.MRGridRegrid"]], "mrmath (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.MRMath"]], "mrtransform (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.MRTransform"]], "mtnormalise (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.MTNormalise"]], "responsesddhollander (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.ResponseSDDhollander"]], "responsesdtournier (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.ResponseSDTournier"]], "sphericalharmonicextraction (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.SphericalHarmonicExtraction"]], "tensormetrics (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.TensorMetrics"]], "tractography (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.Tractography"]], "transformfslconvert (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.TransformFSLConvert"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.constrainedsphericaldeconvolution method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.ConstrainedSphericalDeconvolution.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.dwibiascorrect method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.DWIBiasCorrect.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.dwibrainmask method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.DWIBrainMask.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.dwicat method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.DWICat.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.dwidenoise method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.DWIDenoise.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.dwiextract method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.DWIExtract.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.dwipreproc method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.DWIPreproc.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.editingtrack method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.EditingTrack.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.filteringtrack method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.FilteringTrack.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.fittensor method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.FitTensor.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.generate5tt2gmwmi method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.Generate5tt2gmwmi.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.generate5ttfsl method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.Generate5ttfsl.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.mrcat method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.MRCat.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.mrconvert method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.MRConvert.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.mrdegibbs method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.MRDeGibbs.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.mrgridregrid method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.MRGridRegrid.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.mrmath method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.MRMath.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.mrtransform method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.MRTransform.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.mtnormalise method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.MTNormalise.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.responsesddhollander method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.ResponseSDDhollander.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.responsesdtournier method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.ResponseSDTournier.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.sphericalharmonicextraction method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.SphericalHarmonicExtraction.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.tensormetrics method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.TensorMetrics.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.tractography method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.Tractography.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.transformfslconvert method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.TransformFSLConvert.__init__"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.constrainedsphericaldeconvolution method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.ConstrainedSphericalDeconvolution.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.dwibiascorrect method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.DWIBiasCorrect.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.dwibrainmask method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.DWIBrainMask.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.dwicat method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.DWICat.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.dwidenoise method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.DWIDenoise.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.dwiextract method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.DWIExtract.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.dwipreproc method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.DWIPreproc.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.editingtrack method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.EditingTrack.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.filteringtrack method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.FilteringTrack.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.fittensor method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.FitTensor.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.generate5tt2gmwmi method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.Generate5tt2gmwmi.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.generate5ttfsl method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.Generate5ttfsl.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.mrcat method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.MRCat.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.mrconvert method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.MRConvert.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.mrdegibbs method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.MRDeGibbs.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.mrgridregrid method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.MRGridRegrid.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.mrmath method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.MRMath.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.mrtransform method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.MRTransform.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.mtnormalise method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.MTNormalise.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.responsesddhollander method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.ResponseSDDhollander.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.responsesdtournier method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.ResponseSDTournier.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.sphericalharmonicextraction method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.SphericalHarmonicExtraction.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.tensormetrics method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.TensorMetrics.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.tractography method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.Tractography.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.transformfslconvert method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.TransformFSLConvert.list_outputs"]], "mia_processes.bricks.preprocess.mrtrix": [[167, "module-mia_processes.bricks.preprocess.mrtrix"]], "mia_processes.bricks.preprocess.mrtrix.processes": [[167, "module-mia_processes.bricks.preprocess.mrtrix.processes"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.constrainedsphericaldeconvolution method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.ConstrainedSphericalDeconvolution.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.dwibiascorrect method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.DWIBiasCorrect.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.dwibrainmask method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.DWIBrainMask.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.dwicat method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.DWICat.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.dwidenoise method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.DWIDenoise.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.dwiextract method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.DWIExtract.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.dwipreproc method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.DWIPreproc.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.editingtrack method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.EditingTrack.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.filteringtrack method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.FilteringTrack.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.fittensor method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.FitTensor.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.generate5tt2gmwmi method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.Generate5tt2gmwmi.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.generate5ttfsl method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.Generate5ttfsl.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.mrcat method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.MRCat.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.mrconvert method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.MRConvert.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.mrdegibbs method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.MRDeGibbs.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.mrgridregrid method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.MRGridRegrid.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.mrmath method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.MRMath.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.mrtransform method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.MRTransform.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.mtnormalise method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.MTNormalise.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.responsesddhollander method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.ResponseSDDhollander.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.responsesdtournier method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.ResponseSDTournier.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.sphericalharmonicextraction method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.SphericalHarmonicExtraction.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.tensormetrics method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.TensorMetrics.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.tractography method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.Tractography.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.transformfslconvert method)": [[167, "mia_processes.bricks.preprocess.mrtrix.processes.TransformFSLConvert.run_process_mia"]], "applybiascorrection (class in mia_processes.bricks.preprocess.others.processing)": [[168, "mia_processes.bricks.preprocess.others.processing.ApplyBiasCorrection"]], "artifactmask (class in mia_processes.bricks.preprocess.others.processing)": [[168, "mia_processes.bricks.preprocess.others.processing.ArtifactMask"]], "binarize (class in mia_processes.bricks.preprocess.others.processing)": [[168, "mia_processes.bricks.preprocess.others.processing.Binarize"]], "conformimage (class in mia_processes.bricks.preprocess.others.processing)": [[168, "mia_processes.bricks.preprocess.others.processing.ConformImage"]], "convroi (class in mia_processes.bricks.preprocess.others.processing)": [[168, "mia_processes.bricks.preprocess.others.processing.ConvROI"]], "enhance (class in mia_processes.bricks.preprocess.others.processing)": [[168, "mia_processes.bricks.preprocess.others.processing.Enhance"]], "estimatesnr (class in mia_processes.bricks.preprocess.others.processing)": [[168, "mia_processes.bricks.preprocess.others.processing.EstimateSNR"]], "extractroibylabel (class in mia_processes.bricks.preprocess.others.processing)": [[168, "mia_processes.bricks.preprocess.others.processing.ExtractROIbyLabel"]], "extractsignalroi (class in mia_processes.bricks.preprocess.others.processing)": [[168, "mia_processes.bricks.preprocess.others.processing.ExtractSignalROI"]], "gradientthreshold (class in mia_processes.bricks.preprocess.others.processing)": [[168, "mia_processes.bricks.preprocess.others.processing.GradientThreshold"]], "harmonize (class in mia_processes.bricks.preprocess.others.processing)": [[168, "mia_processes.bricks.preprocess.others.processing.Harmonize"]], "intensityclip (class in mia_processes.bricks.preprocess.others.processing)": [[168, "mia_processes.bricks.preprocess.others.processing.IntensityClip"]], "mask (class in mia_processes.bricks.preprocess.others.processing)": [[168, "mia_processes.bricks.preprocess.others.processing.Mask"]], "nonsteadystatedetector (class in mia_processes.bricks.preprocess.others.processing)": [[168, "mia_processes.bricks.preprocess.others.processing.NonSteadyStateDetector"]], "resample1 (class in mia_processes.bricks.preprocess.others.processing)": [[168, "mia_processes.bricks.preprocess.others.processing.Resample1"]], "resample2 (class in mia_processes.bricks.preprocess.others.processing)": [[168, "mia_processes.bricks.preprocess.others.processing.Resample2"]], "rotationmask (class in mia_processes.bricks.preprocess.others.processing)": [[168, "mia_processes.bricks.preprocess.others.processing.RotationMask"]], "sanitize (class in mia_processes.bricks.preprocess.others.processing)": [[168, "mia_processes.bricks.preprocess.others.processing.Sanitize"]], "tsnr (class in mia_processes.bricks.preprocess.others.processing)": [[168, "mia_processes.bricks.preprocess.others.processing.TSNR"]], "templatefromtemplateflow (class in mia_processes.bricks.preprocess.others.processing)": [[168, "mia_processes.bricks.preprocess.others.processing.TemplateFromTemplateFlow"]], "threshold (class in mia_processes.bricks.preprocess.others.processing)": [[168, "mia_processes.bricks.preprocess.others.processing.Threshold"]], "__init__() (mia_processes.bricks.preprocess.others.processing.applybiascorrection method)": [[168, "mia_processes.bricks.preprocess.others.processing.ApplyBiasCorrection.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.artifactmask method)": [[168, "mia_processes.bricks.preprocess.others.processing.ArtifactMask.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.binarize method)": [[168, "mia_processes.bricks.preprocess.others.processing.Binarize.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.conformimage method)": [[168, "mia_processes.bricks.preprocess.others.processing.ConformImage.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.convroi method)": [[168, "mia_processes.bricks.preprocess.others.processing.ConvROI.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.enhance method)": [[168, "mia_processes.bricks.preprocess.others.processing.Enhance.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.estimatesnr method)": [[168, "mia_processes.bricks.preprocess.others.processing.EstimateSNR.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.extractroibylabel method)": [[168, "mia_processes.bricks.preprocess.others.processing.ExtractROIbyLabel.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.extractsignalroi method)": [[168, "mia_processes.bricks.preprocess.others.processing.ExtractSignalROI.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.gradientthreshold method)": [[168, "mia_processes.bricks.preprocess.others.processing.GradientThreshold.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.harmonize method)": [[168, "mia_processes.bricks.preprocess.others.processing.Harmonize.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.intensityclip method)": [[168, "mia_processes.bricks.preprocess.others.processing.IntensityClip.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.mask method)": [[168, "mia_processes.bricks.preprocess.others.processing.Mask.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.nonsteadystatedetector method)": [[168, "mia_processes.bricks.preprocess.others.processing.NonSteadyStateDetector.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.resample1 method)": [[168, "mia_processes.bricks.preprocess.others.processing.Resample1.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.resample2 method)": [[168, "mia_processes.bricks.preprocess.others.processing.Resample2.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.rotationmask method)": [[168, "mia_processes.bricks.preprocess.others.processing.RotationMask.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.sanitize method)": [[168, "mia_processes.bricks.preprocess.others.processing.Sanitize.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.tsnr method)": [[168, "mia_processes.bricks.preprocess.others.processing.TSNR.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.templatefromtemplateflow method)": [[168, "mia_processes.bricks.preprocess.others.processing.TemplateFromTemplateFlow.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.threshold method)": [[168, "mia_processes.bricks.preprocess.others.processing.Threshold.__init__"]], "artifact_mask() (in module mia_processes.bricks.preprocess.others.processing)": [[168, "mia_processes.bricks.preprocess.others.processing.artifact_mask"]], "is_outlier() (in module mia_processes.bricks.preprocess.others.processing)": [[168, "mia_processes.bricks.preprocess.others.processing.is_outlier"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.applybiascorrection method)": [[168, "mia_processes.bricks.preprocess.others.processing.ApplyBiasCorrection.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.artifactmask method)": [[168, "mia_processes.bricks.preprocess.others.processing.ArtifactMask.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.binarize method)": [[168, "mia_processes.bricks.preprocess.others.processing.Binarize.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.conformimage method)": [[168, "mia_processes.bricks.preprocess.others.processing.ConformImage.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.convroi method)": [[168, "mia_processes.bricks.preprocess.others.processing.ConvROI.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.enhance method)": [[168, "mia_processes.bricks.preprocess.others.processing.Enhance.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.estimatesnr method)": [[168, "mia_processes.bricks.preprocess.others.processing.EstimateSNR.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.extractroibylabel method)": [[168, "mia_processes.bricks.preprocess.others.processing.ExtractROIbyLabel.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.extractsignalroi method)": [[168, "mia_processes.bricks.preprocess.others.processing.ExtractSignalROI.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.gradientthreshold method)": [[168, "mia_processes.bricks.preprocess.others.processing.GradientThreshold.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.harmonize method)": [[168, "mia_processes.bricks.preprocess.others.processing.Harmonize.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.intensityclip method)": [[168, "mia_processes.bricks.preprocess.others.processing.IntensityClip.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.mask method)": [[168, "mia_processes.bricks.preprocess.others.processing.Mask.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.nonsteadystatedetector method)": [[168, "mia_processes.bricks.preprocess.others.processing.NonSteadyStateDetector.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.resample1 method)": [[168, "mia_processes.bricks.preprocess.others.processing.Resample1.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.resample2 method)": [[168, "mia_processes.bricks.preprocess.others.processing.Resample2.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.rotationmask method)": [[168, "mia_processes.bricks.preprocess.others.processing.RotationMask.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.sanitize method)": [[168, "mia_processes.bricks.preprocess.others.processing.Sanitize.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.tsnr method)": [[168, "mia_processes.bricks.preprocess.others.processing.TSNR.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.templatefromtemplateflow method)": [[168, "mia_processes.bricks.preprocess.others.processing.TemplateFromTemplateFlow.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.threshold method)": [[168, "mia_processes.bricks.preprocess.others.processing.Threshold.list_outputs"]], "mia_processes.bricks.preprocess.others": [[168, "module-mia_processes.bricks.preprocess.others"]], "mia_processes.bricks.preprocess.others.processing": [[168, "module-mia_processes.bricks.preprocess.others.processing"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.applybiascorrection method)": [[168, "mia_processes.bricks.preprocess.others.processing.ApplyBiasCorrection.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.artifactmask method)": [[168, "mia_processes.bricks.preprocess.others.processing.ArtifactMask.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.binarize method)": [[168, "mia_processes.bricks.preprocess.others.processing.Binarize.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.conformimage method)": [[168, "mia_processes.bricks.preprocess.others.processing.ConformImage.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.convroi method)": [[168, "mia_processes.bricks.preprocess.others.processing.ConvROI.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.enhance method)": [[168, "mia_processes.bricks.preprocess.others.processing.Enhance.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.estimatesnr method)": [[168, "mia_processes.bricks.preprocess.others.processing.EstimateSNR.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.extractroibylabel method)": [[168, "mia_processes.bricks.preprocess.others.processing.ExtractROIbyLabel.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.extractsignalroi method)": [[168, "mia_processes.bricks.preprocess.others.processing.ExtractSignalROI.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.gradientthreshold method)": [[168, "mia_processes.bricks.preprocess.others.processing.GradientThreshold.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.harmonize method)": [[168, "mia_processes.bricks.preprocess.others.processing.Harmonize.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.intensityclip method)": [[168, "mia_processes.bricks.preprocess.others.processing.IntensityClip.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.mask method)": [[168, "mia_processes.bricks.preprocess.others.processing.Mask.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.nonsteadystatedetector method)": [[168, "mia_processes.bricks.preprocess.others.processing.NonSteadyStateDetector.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.resample1 method)": [[168, "mia_processes.bricks.preprocess.others.processing.Resample1.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.resample2 method)": [[168, "mia_processes.bricks.preprocess.others.processing.Resample2.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.rotationmask method)": [[168, "mia_processes.bricks.preprocess.others.processing.RotationMask.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.sanitize method)": [[168, "mia_processes.bricks.preprocess.others.processing.Sanitize.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.tsnr method)": [[168, "mia_processes.bricks.preprocess.others.processing.TSNR.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.templatefromtemplateflow method)": [[168, "mia_processes.bricks.preprocess.others.processing.TemplateFromTemplateFlow.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.threshold method)": [[168, "mia_processes.bricks.preprocess.others.processing.Threshold.run_process_mia"]], "threshold() (in module mia_processes.bricks.preprocess.others.processing)": [[168, "mia_processes.bricks.preprocess.others.processing.threshold"]], "coregister (class in mia_processes.bricks.preprocess.spm.spatial_preprocessing)": [[169, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Coregister"]], "gm_wm_normalize (class in mia_processes.bricks.preprocess.spm.spatial_preprocessing)": [[169, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.GM_WM_Normalize"]], "newsegment (class in mia_processes.bricks.preprocess.spm.spatial_preprocessing)": [[169, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.NewSegment"]], "normalize12 (class in mia_processes.bricks.preprocess.spm.spatial_preprocessing)": [[169, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Normalize12"]], "realign (class in mia_processes.bricks.preprocess.spm.spatial_preprocessing)": [[169, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Realign"]], "slicetiming (class in mia_processes.bricks.preprocess.spm.spatial_preprocessing)": [[169, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.SliceTiming"]], "smooth (class in mia_processes.bricks.preprocess.spm.spatial_preprocessing)": [[169, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Smooth"]], "__init__() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.coregister method)": [[169, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Coregister.__init__"]], "__init__() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.gm_wm_normalize method)": [[169, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.GM_WM_Normalize.__init__"]], "__init__() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.newsegment method)": [[169, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.NewSegment.__init__"]], "__init__() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.normalize12 method)": [[169, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Normalize12.__init__"]], "__init__() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.realign method)": [[169, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Realign.__init__"]], "__init__() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.slicetiming method)": [[169, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.SliceTiming.__init__"]], "__init__() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.smooth method)": [[169, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Smooth.__init__"]], "list_outputs() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.coregister method)": [[169, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Coregister.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.gm_wm_normalize method)": [[169, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.GM_WM_Normalize.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.newsegment method)": [[169, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.NewSegment.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.normalize12 method)": [[169, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Normalize12.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.realign method)": [[169, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Realign.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.slicetiming method)": [[169, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.SliceTiming.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.smooth method)": [[169, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Smooth.list_outputs"]], "mia_processes.bricks.preprocess.spm": [[169, "module-mia_processes.bricks.preprocess.spm"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing": [[169, "module-mia_processes.bricks.preprocess.spm.spatial_preprocessing"]], "run_process_mia() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.coregister method)": [[169, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Coregister.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.gm_wm_normalize method)": [[169, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.GM_WM_Normalize.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.newsegment method)": [[169, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.NewSegment.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.normalize12 method)": [[169, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Normalize12.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.realign method)": [[169, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Realign.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.slicetiming method)": [[169, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.SliceTiming.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.smooth method)": [[169, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Smooth.run_process_mia"]], "anatiqms (class in mia_processes.bricks.reports.processes)": [[170, "mia_processes.bricks.reports.processes.AnatIQMs"]], "boldiqms (class in mia_processes.bricks.reports.processes)": [[170, "mia_processes.bricks.reports.processes.BoldIQMs"]], "boldiqmsplot (class in mia_processes.bricks.reports.processes)": [[170, "mia_processes.bricks.reports.processes.BoldIQMsPlot"]], "carpetparcellation (class in mia_processes.bricks.reports.processes)": [[170, "mia_processes.bricks.reports.processes.CarpetParcellation"]], "computedvars (class in mia_processes.bricks.reports.processes)": [[170, "mia_processes.bricks.reports.processes.ComputeDVARS"]], "framewisedisplacement (class in mia_processes.bricks.reports.processes)": [[170, "mia_processes.bricks.reports.processes.FramewiseDisplacement"]], "lateralizationindexcurve (class in mia_processes.bricks.reports.processes)": [[170, "mia_processes.bricks.reports.processes.LateralizationIndexCurve"]], "mean_stddev_calc (class in mia_processes.bricks.reports.processes)": [[170, "mia_processes.bricks.reports.processes.Mean_stdDev_calc"]], "plotsignalroi (class in mia_processes.bricks.reports.processes)": [[170, "mia_processes.bricks.reports.processes.PlotSignalROI"]], "reportanatmriqc (class in mia_processes.bricks.reports.reporting)": [[170, "mia_processes.bricks.reports.reporting.ReportAnatMriqc"]], "reportco2inhalcvr (class in mia_processes.bricks.reports.reporting)": [[170, "mia_processes.bricks.reports.reporting.ReportCO2inhalCvr"]], "reportfuncmriqc (class in mia_processes.bricks.reports.reporting)": [[170, "mia_processes.bricks.reports.reporting.ReportFuncMriqc"]], "reportge2rec (class in mia_processes.bricks.reports.reporting)": [[170, "mia_processes.bricks.reports.reporting.ReportGE2REC"]], "reportgroupmriqc (class in mia_processes.bricks.reports.reporting)": [[170, "mia_processes.bricks.reports.reporting.ReportGroupMriqc"]], "reportperfdsc (class in mia_processes.bricks.reports.reporting)": [[170, "mia_processes.bricks.reports.reporting.ReportPerfDsc"]], "result_collector (class in mia_processes.bricks.reports.processes)": [[170, "mia_processes.bricks.reports.processes.Result_collector"]], "spikes (class in mia_processes.bricks.reports.processes)": [[170, "mia_processes.bricks.reports.processes.Spikes"]], "__init__() (mia_processes.bricks.reports.processes.anatiqms method)": [[170, "mia_processes.bricks.reports.processes.AnatIQMs.__init__"]], "__init__() (mia_processes.bricks.reports.processes.boldiqms method)": [[170, "mia_processes.bricks.reports.processes.BoldIQMs.__init__"]], "__init__() (mia_processes.bricks.reports.processes.boldiqmsplot method)": [[170, "mia_processes.bricks.reports.processes.BoldIQMsPlot.__init__"]], "__init__() (mia_processes.bricks.reports.processes.carpetparcellation method)": [[170, "mia_processes.bricks.reports.processes.CarpetParcellation.__init__"]], "__init__() (mia_processes.bricks.reports.processes.computedvars method)": [[170, "mia_processes.bricks.reports.processes.ComputeDVARS.__init__"]], "__init__() (mia_processes.bricks.reports.processes.framewisedisplacement method)": [[170, "mia_processes.bricks.reports.processes.FramewiseDisplacement.__init__"]], "__init__() (mia_processes.bricks.reports.processes.lateralizationindexcurve method)": [[170, "mia_processes.bricks.reports.processes.LateralizationIndexCurve.__init__"]], "__init__() (mia_processes.bricks.reports.processes.mean_stddev_calc method)": [[170, "mia_processes.bricks.reports.processes.Mean_stdDev_calc.__init__"]], "__init__() (mia_processes.bricks.reports.processes.plotsignalroi method)": [[170, "mia_processes.bricks.reports.processes.PlotSignalROI.__init__"]], "__init__() (mia_processes.bricks.reports.processes.result_collector method)": [[170, "mia_processes.bricks.reports.processes.Result_collector.__init__"]], "__init__() (mia_processes.bricks.reports.processes.spikes method)": [[170, "mia_processes.bricks.reports.processes.Spikes.__init__"]], "__init__() (mia_processes.bricks.reports.reporting.reportanatmriqc method)": [[170, "mia_processes.bricks.reports.reporting.ReportAnatMriqc.__init__"]], "__init__() (mia_processes.bricks.reports.reporting.reportco2inhalcvr method)": [[170, "mia_processes.bricks.reports.reporting.ReportCO2inhalCvr.__init__"]], "__init__() (mia_processes.bricks.reports.reporting.reportfuncmriqc method)": [[170, "mia_processes.bricks.reports.reporting.ReportFuncMriqc.__init__"]], "__init__() (mia_processes.bricks.reports.reporting.reportge2rec method)": [[170, "mia_processes.bricks.reports.reporting.ReportGE2REC.__init__"]], "__init__() (mia_processes.bricks.reports.reporting.reportgroupmriqc method)": [[170, "mia_processes.bricks.reports.reporting.ReportGroupMriqc.__init__"]], "__init__() (mia_processes.bricks.reports.reporting.reportperfdsc method)": [[170, "mia_processes.bricks.reports.reporting.ReportPerfDsc.__init__"]], "art_qi1() (in module mia_processes.bricks.reports.processes)": [[170, "mia_processes.bricks.reports.processes.art_qi1"]], "art_qi2() (in module mia_processes.bricks.reports.processes)": [[170, "mia_processes.bricks.reports.processes.art_qi2"]], "cjv() (in module mia_processes.bricks.reports.processes)": [[170, "mia_processes.bricks.reports.processes.cjv"]], "cnr() (in module mia_processes.bricks.reports.processes)": [[170, "mia_processes.bricks.reports.processes.cnr"]], "efc() (in module mia_processes.bricks.reports.processes)": [[170, "mia_processes.bricks.reports.processes.efc"]], "fber() (in module mia_processes.bricks.reports.processes)": [[170, "mia_processes.bricks.reports.processes.fber"]], "find_peaks() (in module mia_processes.bricks.reports.processes)": [[170, "mia_processes.bricks.reports.processes.find_peaks"]], "find_spikes() (in module mia_processes.bricks.reports.processes)": [[170, "mia_processes.bricks.reports.processes.find_spikes"]], "fuzzy_jaccard() (in module mia_processes.bricks.reports.processes)": [[170, "mia_processes.bricks.reports.processes.fuzzy_jaccard"]], "gsr() (in module mia_processes.bricks.reports.processes)": [[170, "mia_processes.bricks.reports.processes.gsr"]], "image_binary_dilation() (in module mia_processes.bricks.reports.processes)": [[170, "mia_processes.bricks.reports.processes.image_binary_dilation"]], "lateralization_index_iter_curves() (in module mia_processes.bricks.reports.processes)": [[170, "mia_processes.bricks.reports.processes.lateralization_index_iter_curves"]], "list_outputs() (mia_processes.bricks.reports.processes.anatiqms method)": [[170, "mia_processes.bricks.reports.processes.AnatIQMs.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.processes.boldiqms method)": [[170, "mia_processes.bricks.reports.processes.BoldIQMs.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.processes.boldiqmsplot method)": [[170, "mia_processes.bricks.reports.processes.BoldIQMsPlot.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.processes.carpetparcellation method)": [[170, "mia_processes.bricks.reports.processes.CarpetParcellation.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.processes.computedvars method)": [[170, "mia_processes.bricks.reports.processes.ComputeDVARS.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.processes.framewisedisplacement method)": [[170, "mia_processes.bricks.reports.processes.FramewiseDisplacement.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.processes.lateralizationindexcurve method)": [[170, "mia_processes.bricks.reports.processes.LateralizationIndexCurve.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.processes.mean_stddev_calc method)": [[170, "mia_processes.bricks.reports.processes.Mean_stdDev_calc.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.processes.plotsignalroi method)": [[170, "mia_processes.bricks.reports.processes.PlotSignalROI.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.processes.result_collector method)": [[170, "mia_processes.bricks.reports.processes.Result_collector.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.processes.spikes method)": [[170, "mia_processes.bricks.reports.processes.Spikes.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.reporting.reportanatmriqc method)": [[170, "mia_processes.bricks.reports.reporting.ReportAnatMriqc.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.reporting.reportco2inhalcvr method)": [[170, "mia_processes.bricks.reports.reporting.ReportCO2inhalCvr.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.reporting.reportfuncmriqc method)": [[170, "mia_processes.bricks.reports.reporting.ReportFuncMriqc.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.reporting.reportge2rec method)": [[170, "mia_processes.bricks.reports.reporting.ReportGE2REC.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.reporting.reportgroupmriqc method)": [[170, "mia_processes.bricks.reports.reporting.ReportGroupMriqc.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.reporting.reportperfdsc method)": [[170, "mia_processes.bricks.reports.reporting.ReportPerfDsc.list_outputs"]], "mia_processes.bricks.reports": [[170, "module-mia_processes.bricks.reports"]], "mia_processes.bricks.reports.processes": [[170, "module-mia_processes.bricks.reports.processes"]], "mia_processes.bricks.reports.reporting": [[170, "module-mia_processes.bricks.reports.reporting"]], "normalize_mc_params() (in module mia_processes.bricks.reports.processes)": [[170, "mia_processes.bricks.reports.processes.normalize_mc_params"]], "regress_poly() (in module mia_processes.bricks.reports.processes)": [[170, "mia_processes.bricks.reports.processes.regress_poly"]], "rpve() (in module mia_processes.bricks.reports.processes)": [[170, "mia_processes.bricks.reports.processes.rpve"]], "run_process_mia() (mia_processes.bricks.reports.processes.anatiqms method)": [[170, "mia_processes.bricks.reports.processes.AnatIQMs.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.processes.boldiqms method)": [[170, "mia_processes.bricks.reports.processes.BoldIQMs.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.processes.boldiqmsplot method)": [[170, "mia_processes.bricks.reports.processes.BoldIQMsPlot.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.processes.carpetparcellation method)": [[170, "mia_processes.bricks.reports.processes.CarpetParcellation.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.processes.computedvars method)": [[170, "mia_processes.bricks.reports.processes.ComputeDVARS.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.processes.framewisedisplacement method)": [[170, "mia_processes.bricks.reports.processes.FramewiseDisplacement.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.processes.lateralizationindexcurve method)": [[170, "mia_processes.bricks.reports.processes.LateralizationIndexCurve.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.processes.mean_stddev_calc method)": [[170, "mia_processes.bricks.reports.processes.Mean_stdDev_calc.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.processes.plotsignalroi method)": [[170, "mia_processes.bricks.reports.processes.PlotSignalROI.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.processes.result_collector method)": [[170, "mia_processes.bricks.reports.processes.Result_collector.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.processes.spikes method)": [[170, "mia_processes.bricks.reports.processes.Spikes.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.reporting.reportanatmriqc method)": [[170, "mia_processes.bricks.reports.reporting.ReportAnatMriqc.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.reporting.reportco2inhalcvr method)": [[170, "mia_processes.bricks.reports.reporting.ReportCO2inhalCvr.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.reporting.reportfuncmriqc method)": [[170, "mia_processes.bricks.reports.reporting.ReportFuncMriqc.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.reporting.reportge2rec method)": [[170, "mia_processes.bricks.reports.reporting.ReportGE2REC.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.reporting.reportgroupmriqc method)": [[170, "mia_processes.bricks.reports.reporting.ReportGroupMriqc.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.reporting.reportperfdsc method)": [[170, "mia_processes.bricks.reports.reporting.ReportPerfDsc.run_process_mia"]], "snr() (in module mia_processes.bricks.reports.processes)": [[170, "mia_processes.bricks.reports.processes.snr"]], "snr_dietrich() (in module mia_processes.bricks.reports.processes)": [[170, "mia_processes.bricks.reports.processes.snr_dietrich"]], "summary_stats() (in module mia_processes.bricks.reports.processes)": [[170, "mia_processes.bricks.reports.processes.summary_stats"]], "volume_fraction() (in module mia_processes.bricks.reports.processes)": [[170, "mia_processes.bricks.reports.processes.volume_fraction"]], "wm2max() (in module mia_processes.bricks.reports.processes)": [[170, "mia_processes.bricks.reports.processes.wm2max"]], "mia_processes.bricks.stat": [[171, "module-mia_processes.bricks.stat"]], "estimatecontrast (class in mia_processes.bricks.stat.spm.model)": [[172, "mia_processes.bricks.stat.spm.model.EstimateContrast"]], "estimatemodel (class in mia_processes.bricks.stat.spm.model)": [[172, "mia_processes.bricks.stat.spm.model.EstimateModel"]], "level1design (class in mia_processes.bricks.stat.spm.model)": [[172, "mia_processes.bricks.stat.spm.model.Level1Design"]], "multipleregressiondesign (class in mia_processes.bricks.stat.spm.model)": [[172, "mia_processes.bricks.stat.spm.model.MultipleRegressionDesign"]], "onesamplettestdesign (class in mia_processes.bricks.stat.spm.model)": [[172, "mia_processes.bricks.stat.spm.model.OneSampleTTestDesign"]], "pairedttestdesign (class in mia_processes.bricks.stat.spm.model)": [[172, "mia_processes.bricks.stat.spm.model.PairedTTestDesign"]], "twosamplettestdesign (class in mia_processes.bricks.stat.spm.model)": [[172, "mia_processes.bricks.stat.spm.model.TwoSampleTTestDesign"]], "__init__() (mia_processes.bricks.stat.spm.model.estimatecontrast method)": [[172, "mia_processes.bricks.stat.spm.model.EstimateContrast.__init__"]], "__init__() (mia_processes.bricks.stat.spm.model.estimatemodel method)": [[172, "mia_processes.bricks.stat.spm.model.EstimateModel.__init__"]], "__init__() (mia_processes.bricks.stat.spm.model.level1design method)": [[172, "mia_processes.bricks.stat.spm.model.Level1Design.__init__"]], "__init__() (mia_processes.bricks.stat.spm.model.multipleregressiondesign method)": [[172, "mia_processes.bricks.stat.spm.model.MultipleRegressionDesign.__init__"]], "__init__() (mia_processes.bricks.stat.spm.model.onesamplettestdesign method)": [[172, "mia_processes.bricks.stat.spm.model.OneSampleTTestDesign.__init__"]], "__init__() (mia_processes.bricks.stat.spm.model.pairedttestdesign method)": [[172, "mia_processes.bricks.stat.spm.model.PairedTTestDesign.__init__"]], "__init__() (mia_processes.bricks.stat.spm.model.twosamplettestdesign method)": [[172, "mia_processes.bricks.stat.spm.model.TwoSampleTTestDesign.__init__"]], "get_covariates() (in module mia_processes.bricks.stat.spm.model)": [[172, "mia_processes.bricks.stat.spm.model.get_covariates"]], "list_outputs() (mia_processes.bricks.stat.spm.model.estimatecontrast method)": [[172, "mia_processes.bricks.stat.spm.model.EstimateContrast.list_outputs"]], "list_outputs() (mia_processes.bricks.stat.spm.model.estimatemodel method)": [[172, "mia_processes.bricks.stat.spm.model.EstimateModel.list_outputs"]], "list_outputs() (mia_processes.bricks.stat.spm.model.level1design method)": [[172, "mia_processes.bricks.stat.spm.model.Level1Design.list_outputs"]], "list_outputs() (mia_processes.bricks.stat.spm.model.multipleregressiondesign method)": [[172, "mia_processes.bricks.stat.spm.model.MultipleRegressionDesign.list_outputs"]], "list_outputs() (mia_processes.bricks.stat.spm.model.onesamplettestdesign method)": [[172, "mia_processes.bricks.stat.spm.model.OneSampleTTestDesign.list_outputs"]], "list_outputs() (mia_processes.bricks.stat.spm.model.pairedttestdesign method)": [[172, "mia_processes.bricks.stat.spm.model.PairedTTestDesign.list_outputs"]], "list_outputs() (mia_processes.bricks.stat.spm.model.twosamplettestdesign method)": [[172, "mia_processes.bricks.stat.spm.model.TwoSampleTTestDesign.list_outputs"]], "mia_processes.bricks.stat.spm": [[172, "module-mia_processes.bricks.stat.spm"]], "mia_processes.bricks.stat.spm.model": [[172, "module-mia_processes.bricks.stat.spm.model"]], "run_process_mia() (mia_processes.bricks.stat.spm.model.estimatecontrast method)": [[172, "mia_processes.bricks.stat.spm.model.EstimateContrast.run_process_mia"]], "run_process_mia() (mia_processes.bricks.stat.spm.model.estimatemodel method)": [[172, "mia_processes.bricks.stat.spm.model.EstimateModel.run_process_mia"]], "run_process_mia() (mia_processes.bricks.stat.spm.model.level1design method)": [[172, "mia_processes.bricks.stat.spm.model.Level1Design.run_process_mia"]], "run_process_mia() (mia_processes.bricks.stat.spm.model.multipleregressiondesign method)": [[172, "mia_processes.bricks.stat.spm.model.MultipleRegressionDesign.run_process_mia"]], "run_process_mia() (mia_processes.bricks.stat.spm.model.onesamplettestdesign method)": [[172, "mia_processes.bricks.stat.spm.model.OneSampleTTestDesign.run_process_mia"]], "run_process_mia() (mia_processes.bricks.stat.spm.model.pairedttestdesign method)": [[172, "mia_processes.bricks.stat.spm.model.PairedTTestDesign.run_process_mia"]], "run_process_mia() (mia_processes.bricks.stat.spm.model.twosamplettestdesign method)": [[172, "mia_processes.bricks.stat.spm.model.TwoSampleTTestDesign.run_process_mia"]], "concat_to_list (class in mia_processes.bricks.tools.tools)": [[173, "mia_processes.bricks.tools.tools.Concat_to_list"]], "concat_to_list_of_list (class in mia_processes.bricks.tools.tools)": [[173, "mia_processes.bricks.tools.tools.Concat_to_list_of_list"]], "deconv_from_aif (class in mia_processes.bricks.tools.tools)": [[173, "mia_processes.bricks.tools.tools.Deconv_from_aif"]], "delete_data (class in mia_processes.bricks.tools.tools)": [[173, "mia_processes.bricks.tools.tools.Delete_data"]], "files_to_list (class in mia_processes.bricks.tools.tools)": [[173, "mia_processes.bricks.tools.tools.Files_To_List"]], "filter_files_list (class in mia_processes.bricks.tools.tools)": [[173, "mia_processes.bricks.tools.tools.Filter_Files_List"]], "find_in_list (class in mia_processes.bricks.tools.tools)": [[173, "mia_processes.bricks.tools.tools.Find_In_List"]], "get_conditions_from_bids_tsv (class in mia_processes.bricks.tools.tools)": [[173, "mia_processes.bricks.tools.tools.Get_Conditions_From_BIDS_tsv"]], "get_conditions_from_csv (class in mia_processes.bricks.tools.tools)": [[173, "mia_processes.bricks.tools.tools.Get_Conditions_From_csv"]], "get_eprime_info_ge2rec (class in mia_processes.bricks.tools.tools)": [[173, "mia_processes.bricks.tools.tools.Get_Eprime_Info_GE2REC"]], "get_patient_name (class in mia_processes.bricks.tools.tools)": [[173, "mia_processes.bricks.tools.tools.Get_Patient_Name"]], "get_regressors_from_csv (class in mia_processes.bricks.tools.tools)": [[173, "mia_processes.bricks.tools.tools.Get_Regressors_From_csv"]], "import_data (class in mia_processes.bricks.tools.tools)": [[173, "mia_processes.bricks.tools.tools.Import_Data"]], "input_filter (class in mia_processes.bricks.tools.tools)": [[173, "mia_processes.bricks.tools.tools.Input_Filter"]], "list_duplicate (class in mia_processes.bricks.tools.tools)": [[173, "mia_processes.bricks.tools.tools.List_Duplicate"]], "list_of_list_to_list (class in mia_processes.bricks.tools.tools)": [[173, "mia_processes.bricks.tools.tools.List_Of_List_To_List"]], "list_to_file (class in mia_processes.bricks.tools.tools)": [[173, "mia_processes.bricks.tools.tools.List_To_File"]], "make_aif (class in mia_processes.bricks.tools.tools)": [[173, "mia_processes.bricks.tools.tools.Make_AIF"]], "make_a_list (class in mia_processes.bricks.tools.tools)": [[173, "mia_processes.bricks.tools.tools.Make_A_List"]], "make_cvr_reg_physio (class in mia_processes.bricks.tools.tools)": [[173, "mia_processes.bricks.tools.tools.Make_CVR_reg_physio"]], "__init__() (mia_processes.bricks.tools.tools.concat_to_list method)": [[173, "mia_processes.bricks.tools.tools.Concat_to_list.__init__"]], "__init__() (mia_processes.bricks.tools.tools.concat_to_list_of_list method)": [[173, "mia_processes.bricks.tools.tools.Concat_to_list_of_list.__init__"]], "__init__() (mia_processes.bricks.tools.tools.deconv_from_aif method)": [[173, "mia_processes.bricks.tools.tools.Deconv_from_aif.__init__"]], "__init__() (mia_processes.bricks.tools.tools.delete_data method)": [[173, "mia_processes.bricks.tools.tools.Delete_data.__init__"]], "__init__() (mia_processes.bricks.tools.tools.files_to_list method)": [[173, "mia_processes.bricks.tools.tools.Files_To_List.__init__"]], "__init__() (mia_processes.bricks.tools.tools.filter_files_list method)": [[173, "mia_processes.bricks.tools.tools.Filter_Files_List.__init__"]], "__init__() (mia_processes.bricks.tools.tools.find_in_list method)": [[173, "mia_processes.bricks.tools.tools.Find_In_List.__init__"]], "__init__() (mia_processes.bricks.tools.tools.get_conditions_from_bids_tsv method)": [[173, "mia_processes.bricks.tools.tools.Get_Conditions_From_BIDS_tsv.__init__"]], "__init__() (mia_processes.bricks.tools.tools.get_conditions_from_csv method)": [[173, "mia_processes.bricks.tools.tools.Get_Conditions_From_csv.__init__"]], "__init__() (mia_processes.bricks.tools.tools.get_eprime_info_ge2rec method)": [[173, "mia_processes.bricks.tools.tools.Get_Eprime_Info_GE2REC.__init__"]], "__init__() (mia_processes.bricks.tools.tools.get_patient_name method)": [[173, "mia_processes.bricks.tools.tools.Get_Patient_Name.__init__"]], "__init__() (mia_processes.bricks.tools.tools.get_regressors_from_csv method)": [[173, "mia_processes.bricks.tools.tools.Get_Regressors_From_csv.__init__"]], "__init__() (mia_processes.bricks.tools.tools.import_data method)": [[173, "mia_processes.bricks.tools.tools.Import_Data.__init__"]], "__init__() (mia_processes.bricks.tools.tools.input_filter method)": [[173, "mia_processes.bricks.tools.tools.Input_Filter.__init__"]], "__init__() (mia_processes.bricks.tools.tools.list_duplicate method)": [[173, "mia_processes.bricks.tools.tools.List_Duplicate.__init__"]], "__init__() (mia_processes.bricks.tools.tools.list_of_list_to_list method)": [[173, "mia_processes.bricks.tools.tools.List_Of_List_To_List.__init__"]], "__init__() (mia_processes.bricks.tools.tools.list_to_file method)": [[173, "mia_processes.bricks.tools.tools.List_To_File.__init__"]], "__init__() (mia_processes.bricks.tools.tools.make_aif method)": [[173, "mia_processes.bricks.tools.tools.Make_AIF.__init__"]], "__init__() (mia_processes.bricks.tools.tools.make_a_list method)": [[173, "mia_processes.bricks.tools.tools.Make_A_List.__init__"]], "__init__() (mia_processes.bricks.tools.tools.make_cvr_reg_physio method)": [[173, "mia_processes.bricks.tools.tools.Make_CVR_reg_physio.__init__"]], "bol_ar_time() (mia_processes.bricks.tools.tools.deconv_from_aif method)": [[173, "mia_processes.bricks.tools.tools.Deconv_from_aif.bol_ar_time"]], "bol_ar_time() (mia_processes.bricks.tools.tools.make_aif method)": [[173, "mia_processes.bricks.tools.tools.Make_AIF.bol_ar_time"]], "convert_to_native_types() (mia_processes.bricks.tools.tools.make_aif method)": [[173, "mia_processes.bricks.tools.tools.Make_AIF.convert_to_native_types"]], "deconv_osvd() (mia_processes.bricks.tools.tools.deconv_from_aif method)": [[173, "mia_processes.bricks.tools.tools.Deconv_from_aif.deconv_osvd"]], "delta_r2star() (mia_processes.bricks.tools.tools.deconv_from_aif method)": [[173, "mia_processes.bricks.tools.tools.Deconv_from_aif.delta_r2star"]], "gaussfir() (mia_processes.bricks.tools.tools.make_cvr_reg_physio method)": [[173, "mia_processes.bricks.tools.tools.Make_CVR_reg_physio.gaussfir"]], "gfb_conv() (mia_processes.bricks.tools.tools.make_cvr_reg_physio method)": [[173, "mia_processes.bricks.tools.tools.Make_CVR_reg_physio.gfb_conv"]], "list_outputs() (mia_processes.bricks.tools.tools.concat_to_list method)": [[173, "mia_processes.bricks.tools.tools.Concat_to_list.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.concat_to_list_of_list method)": [[173, "mia_processes.bricks.tools.tools.Concat_to_list_of_list.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.deconv_from_aif method)": [[173, "mia_processes.bricks.tools.tools.Deconv_from_aif.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.delete_data method)": [[173, "mia_processes.bricks.tools.tools.Delete_data.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.files_to_list method)": [[173, "mia_processes.bricks.tools.tools.Files_To_List.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.filter_files_list method)": [[173, "mia_processes.bricks.tools.tools.Filter_Files_List.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.find_in_list method)": [[173, "mia_processes.bricks.tools.tools.Find_In_List.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.get_conditions_from_bids_tsv method)": [[173, "mia_processes.bricks.tools.tools.Get_Conditions_From_BIDS_tsv.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.get_conditions_from_csv method)": [[173, "mia_processes.bricks.tools.tools.Get_Conditions_From_csv.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.get_eprime_info_ge2rec method)": [[173, "mia_processes.bricks.tools.tools.Get_Eprime_Info_GE2REC.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.get_patient_name method)": [[173, "mia_processes.bricks.tools.tools.Get_Patient_Name.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.get_regressors_from_csv method)": [[173, "mia_processes.bricks.tools.tools.Get_Regressors_From_csv.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.import_data method)": [[173, "mia_processes.bricks.tools.tools.Import_Data.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.input_filter method)": [[173, "mia_processes.bricks.tools.tools.Input_Filter.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.list_duplicate method)": [[173, "mia_processes.bricks.tools.tools.List_Duplicate.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.list_of_list_to_list method)": [[173, "mia_processes.bricks.tools.tools.List_Of_List_To_List.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.list_to_file method)": [[173, "mia_processes.bricks.tools.tools.List_To_File.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.make_aif method)": [[173, "mia_processes.bricks.tools.tools.Make_AIF.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.make_a_list method)": [[173, "mia_processes.bricks.tools.tools.Make_A_List.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.make_cvr_reg_physio method)": [[173, "mia_processes.bricks.tools.tools.Make_CVR_reg_physio.list_outputs"]], "mia_processes.bricks.tools": [[173, "module-mia_processes.bricks.tools"]], "mia_processes.bricks.tools.tools": [[173, "module-mia_processes.bricks.tools.tools"]], "round_half_up() (mia_processes.bricks.tools.tools.deconv_from_aif method)": [[173, "mia_processes.bricks.tools.tools.Deconv_from_aif.round_half_up"]], "run_process_mia() (mia_processes.bricks.tools.tools.concat_to_list method)": [[173, "mia_processes.bricks.tools.tools.Concat_to_list.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.concat_to_list_of_list method)": [[173, "mia_processes.bricks.tools.tools.Concat_to_list_of_list.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.deconv_from_aif method)": [[173, "mia_processes.bricks.tools.tools.Deconv_from_aif.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.delete_data method)": [[173, "mia_processes.bricks.tools.tools.Delete_data.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.files_to_list method)": [[173, "mia_processes.bricks.tools.tools.Files_To_List.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.filter_files_list method)": [[173, "mia_processes.bricks.tools.tools.Filter_Files_List.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.find_in_list method)": [[173, "mia_processes.bricks.tools.tools.Find_In_List.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.get_conditions_from_bids_tsv method)": [[173, "mia_processes.bricks.tools.tools.Get_Conditions_From_BIDS_tsv.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.get_conditions_from_csv method)": [[173, "mia_processes.bricks.tools.tools.Get_Conditions_From_csv.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.get_eprime_info_ge2rec method)": [[173, "mia_processes.bricks.tools.tools.Get_Eprime_Info_GE2REC.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.get_patient_name method)": [[173, "mia_processes.bricks.tools.tools.Get_Patient_Name.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.get_regressors_from_csv method)": [[173, "mia_processes.bricks.tools.tools.Get_Regressors_From_csv.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.import_data method)": [[173, "mia_processes.bricks.tools.tools.Import_Data.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.input_filter method)": [[173, "mia_processes.bricks.tools.tools.Input_Filter.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.list_duplicate method)": [[173, "mia_processes.bricks.tools.tools.List_Duplicate.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.list_of_list_to_list method)": [[173, "mia_processes.bricks.tools.tools.List_Of_List_To_List.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.list_to_file method)": [[173, "mia_processes.bricks.tools.tools.List_To_File.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.make_aif method)": [[173, "mia_processes.bricks.tools.tools.Make_AIF.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.make_a_list method)": [[173, "mia_processes.bricks.tools.tools.Make_A_List.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.make_cvr_reg_physio method)": [[173, "mia_processes.bricks.tools.tools.Make_CVR_reg_physio.run_process_mia"]], "spm_hrf() (mia_processes.bricks.tools.tools.make_cvr_reg_physio method)": [[173, "mia_processes.bricks.tools.tools.Make_CVR_reg_physio.spm_hrf"]], "mia_processes.pipelines": [[174, "module-mia_processes.pipelines"]], "co2_inhalation (class in mia_processes.pipelines.cerebvascularreact.co2_inhalation)": [[175, "mia_processes.pipelines.CerebVascularReact.co2_inhalation.CO2_inhalation"]], "mia_processes.pipelines.cerebvascularreact": [[175, "module-mia_processes.pipelines.CerebVascularReact"]], "mia_processes.pipelines.cerebvascularreact.co2_inhalation": [[175, "module-mia_processes.pipelines.CerebVascularReact.co2_inhalation"]], "pipeline_definition() (mia_processes.pipelines.cerebvascularreact.co2_inhalation.co2_inhalation method)": [[175, "mia_processes.pipelines.CerebVascularReact.co2_inhalation.CO2_inhalation.pipeline_definition"]], "dwi_whole_brain_tractography (class in mia_processes.pipelines.dwitractography.dwi_whole_brain_tractography)": [[176, "mia_processes.pipelines.DWITractography.dwi_whole_brain_tractography.Dwi_whole_brain_tractography"]], "mia_processes.pipelines.dwitractography": [[176, "module-mia_processes.pipelines.DWITractography"]], "mia_processes.pipelines.dwitractography.dwi_whole_brain_tractography": [[176, "module-mia_processes.pipelines.DWITractography.dwi_whole_brain_tractography"]], "pipeline_definition() (mia_processes.pipelines.dwitractography.dwi_whole_brain_tractography.dwi_whole_brain_tractography method)": [[176, "mia_processes.pipelines.DWITractography.dwi_whole_brain_tractography.Dwi_whole_brain_tractography.pipeline_definition"]], "anat_airmask (class in mia_processes.pipelines.preprocess.anat_airmask)": [[177, "mia_processes.pipelines.preprocess.anat_airmask.Anat_airmask"]], "anat_headmask (class in mia_processes.pipelines.preprocess.anat_headmask)": [[177, "mia_processes.pipelines.preprocess.anat_headmask.Anat_headmask"]], "anat_mni_tpms (class in mia_processes.pipelines.preprocess.anat_mni_tpms)": [[177, "mia_processes.pipelines.preprocess.anat_mni_tpms.Anat_mni_tpms"]], "anat_skullstrip (class in mia_processes.pipelines.preprocess.anat_skullstrip)": [[177, "mia_processes.pipelines.preprocess.anat_skullstrip.Anat_skullstrip"]], "anat_skullstrip_synthstrip (class in mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip)": [[177, "mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip.Anat_skullstrip_synthstrip"]], "anat_spatial_norm (class in mia_processes.pipelines.preprocess.anat_spatial_norm)": [[177, "mia_processes.pipelines.preprocess.anat_spatial_norm.Anat_spatial_norm"]], "bold_hmc (class in mia_processes.pipelines.preprocess.bold_hmc)": [[177, "mia_processes.pipelines.preprocess.bold_hmc.Bold_hmc"]], "bold_mni_align (class in mia_processes.pipelines.preprocess.bold_mni_align)": [[177, "mia_processes.pipelines.preprocess.bold_mni_align.Bold_mni_align"]], "bold_spatial_preprocessing1 (class in mia_processes.pipelines.preprocess.bold_spatial_preprocessing1)": [[177, "mia_processes.pipelines.preprocess.bold_spatial_preprocessing1.Bold_spatial_preprocessing1"]], "bold_spatial_preprocessing2 (class in mia_processes.pipelines.preprocess.bold_spatial_preprocessing2)": [[177, "mia_processes.pipelines.preprocess.bold_spatial_preprocessing2.Bold_spatial_preprocessing2"]], "dwi_fod_msmt_csd (class in mia_processes.pipelines.preprocess.dwi_fod_msmt_csd)": [[177, "mia_processes.pipelines.preprocess.dwi_fod_msmt_csd.Dwi_fod_msmt_csd"]], "dwi_preprocessing (class in mia_processes.pipelines.preprocess.dwi_preprocessing)": [[177, "mia_processes.pipelines.preprocess.dwi_preprocessing.Dwi_preprocessing"]], "spatial_mask (class in mia_processes.pipelines.preprocess.spatial_mask)": [[177, "mia_processes.pipelines.preprocess.spatial_mask.Spatial_mask"]], "mia_processes.pipelines.preprocess": [[177, "module-mia_processes.pipelines.preprocess"]], "mia_processes.pipelines.preprocess.anat_airmask": [[177, "module-mia_processes.pipelines.preprocess.anat_airmask"]], "mia_processes.pipelines.preprocess.anat_headmask": [[177, "module-mia_processes.pipelines.preprocess.anat_headmask"]], "mia_processes.pipelines.preprocess.anat_mni_tpms": [[177, "module-mia_processes.pipelines.preprocess.anat_mni_tpms"]], "mia_processes.pipelines.preprocess.anat_skullstrip": [[177, "module-mia_processes.pipelines.preprocess.anat_skullstrip"]], "mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip": [[177, "module-mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip"]], "mia_processes.pipelines.preprocess.anat_spatial_norm": [[177, "module-mia_processes.pipelines.preprocess.anat_spatial_norm"]], "mia_processes.pipelines.preprocess.bold_hmc": [[177, "module-mia_processes.pipelines.preprocess.bold_hmc"]], "mia_processes.pipelines.preprocess.bold_mni_align": [[177, "module-mia_processes.pipelines.preprocess.bold_mni_align"]], "mia_processes.pipelines.preprocess.bold_spatial_preprocessing1": [[177, "module-mia_processes.pipelines.preprocess.bold_spatial_preprocessing1"]], "mia_processes.pipelines.preprocess.bold_spatial_preprocessing2": [[177, "module-mia_processes.pipelines.preprocess.bold_spatial_preprocessing2"]], "mia_processes.pipelines.preprocess.dwi_fod_msmt_csd": [[177, "module-mia_processes.pipelines.preprocess.dwi_fod_msmt_csd"]], "mia_processes.pipelines.preprocess.dwi_preprocessing": [[177, "module-mia_processes.pipelines.preprocess.dwi_preprocessing"]], "mia_processes.pipelines.preprocess.spatial_mask": [[177, "module-mia_processes.pipelines.preprocess.spatial_mask"]], "pipeline_definition() (mia_processes.pipelines.preprocess.anat_airmask.anat_airmask method)": [[177, "mia_processes.pipelines.preprocess.anat_airmask.Anat_airmask.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.anat_headmask.anat_headmask method)": [[177, "mia_processes.pipelines.preprocess.anat_headmask.Anat_headmask.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.anat_mni_tpms.anat_mni_tpms method)": [[177, "mia_processes.pipelines.preprocess.anat_mni_tpms.Anat_mni_tpms.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.anat_skullstrip.anat_skullstrip method)": [[177, "mia_processes.pipelines.preprocess.anat_skullstrip.Anat_skullstrip.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip.anat_skullstrip_synthstrip method)": [[177, "mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip.Anat_skullstrip_synthstrip.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.anat_spatial_norm.anat_spatial_norm method)": [[177, "mia_processes.pipelines.preprocess.anat_spatial_norm.Anat_spatial_norm.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.bold_hmc.bold_hmc method)": [[177, "mia_processes.pipelines.preprocess.bold_hmc.Bold_hmc.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.bold_mni_align.bold_mni_align method)": [[177, "mia_processes.pipelines.preprocess.bold_mni_align.Bold_mni_align.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.bold_spatial_preprocessing1.bold_spatial_preprocessing1 method)": [[177, "mia_processes.pipelines.preprocess.bold_spatial_preprocessing1.Bold_spatial_preprocessing1.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.bold_spatial_preprocessing2.bold_spatial_preprocessing2 method)": [[177, "mia_processes.pipelines.preprocess.bold_spatial_preprocessing2.Bold_spatial_preprocessing2.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.dwi_fod_msmt_csd.dwi_fod_msmt_csd method)": [[177, "mia_processes.pipelines.preprocess.dwi_fod_msmt_csd.Dwi_fod_msmt_csd.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.dwi_preprocessing.dwi_preprocessing method)": [[177, "mia_processes.pipelines.preprocess.dwi_preprocessing.Dwi_preprocessing.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.spatial_mask.spatial_mask method)": [[177, "mia_processes.pipelines.preprocess.spatial_mask.Spatial_mask.pipeline_definition"]], "anat_mriqc (class in mia_processes.pipelines.qualitycontrol.anat_mriqc)": [[178, "mia_processes.pipelines.qualityControl.anat_mriqc.Anat_mriqc"]], "bold_mriqc (class in mia_processes.pipelines.qualitycontrol.bold_mriqc)": [[178, "mia_processes.pipelines.qualityControl.bold_mriqc.Bold_mriqc"]], "mia_processes.pipelines.qualitycontrol": [[178, "module-mia_processes.pipelines.qualityControl"]], "mia_processes.pipelines.qualitycontrol.anat_mriqc": [[178, "module-mia_processes.pipelines.qualityControl.anat_mriqc"]], "mia_processes.pipelines.qualitycontrol.bold_mriqc": [[178, "module-mia_processes.pipelines.qualityControl.bold_mriqc"]], "pipeline_definition() (mia_processes.pipelines.qualitycontrol.anat_mriqc.anat_mriqc method)": [[178, "mia_processes.pipelines.qualityControl.anat_mriqc.Anat_mriqc.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.qualitycontrol.bold_mriqc.bold_mriqc method)": [[178, "mia_processes.pipelines.qualityControl.bold_mriqc.Bold_mriqc.pipeline_definition"]], "bold_iqms (class in mia_processes.pipelines.reports.bold_iqms)": [[179, "mia_processes.pipelines.reports.bold_iqms.Bold_iqms"]], "extract_roi_param (class in mia_processes.pipelines.reports.extract_roi_param)": [[179, "mia_processes.pipelines.reports.extract_roi_param.Extract_roi_param"]], "mia_processes.pipelines.reports": [[179, "module-mia_processes.pipelines.reports"]], "mia_processes.pipelines.reports.bold_iqms": [[179, "module-mia_processes.pipelines.reports.bold_iqms"]], "mia_processes.pipelines.reports.extract_roi_param": [[179, "module-mia_processes.pipelines.reports.extract_roi_param"]], "pipeline_definition() (mia_processes.pipelines.reports.bold_iqms.bold_iqms method)": [[179, "mia_processes.pipelines.reports.bold_iqms.Bold_iqms.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.reports.extract_roi_param.extract_roi_param method)": [[179, "mia_processes.pipelines.reports.extract_roi_param.Extract_roi_param.pipeline_definition"]], "bold_stat_cvr (class in mia_processes.pipelines.stat.bold_stat_cvr)": [[180, "mia_processes.pipelines.stat.bold_stat_cvr.Bold_stat_cvr"]], "mia_processes.pipelines.stat": [[180, "module-mia_processes.pipelines.stat"]], "mia_processes.pipelines.stat.bold_stat_cvr": [[180, "module-mia_processes.pipelines.stat.bold_stat_cvr"]], "pipeline_definition() (mia_processes.pipelines.stat.bold_stat_cvr.bold_stat_cvr method)": [[180, "mia_processes.pipelines.stat.bold_stat_cvr.Bold_stat_cvr.pipeline_definition"]], "pagenumcanvas (class in mia_processes.utils.tools)": [[181, "mia_processes.utils.tools.PageNumCanvas"]], "report (class in mia_processes.utils.report)": [[181, "mia_processes.utils.report.Report"]], "reportline (class in mia_processes.utils.tools)": [[181, "mia_processes.utils.tools.ReportLine"]], "__init__() (mia_processes.utils.report.report method)": [[181, "mia_processes.utils.report.Report.__init__"]], "__init__() (mia_processes.utils.tools.pagenumcanvas method)": [[181, "mia_processes.utils.tools.PageNumCanvas.__init__"]], "__init__() (mia_processes.utils.tools.reportline method)": [[181, "mia_processes.utils.tools.ReportLine.__init__"]], "checkfileext() (in module mia_processes.utils.tools)": [[181, "mia_processes.utils.tools.checkFileExt"]], "check_orientations() (in module mia_processes.utils.tools)": [[181, "mia_processes.utils.tools.check_orientations"]], "co2_inhal_cvr_make_report() (mia_processes.utils.report.report method)": [[181, "mia_processes.utils.report.Report.co2_inhal_cvr_make_report"]], "del_dbfieldvalue() (in module mia_processes.utils.tools)": [[181, "mia_processes.utils.tools.del_dbFieldValue"]], "dict4runtime_update() (in module mia_processes.utils.tools)": [[181, "mia_processes.utils.tools.dict4runtime_update"]], "draw() (mia_processes.utils.tools.reportline method)": [[181, "mia_processes.utils.tools.ReportLine.draw"]], "draw_page_number() (mia_processes.utils.tools.pagenumcanvas method)": [[181, "mia_processes.utils.tools.PageNumCanvas.draw_page_number"]], "ge2rec_make_report() (mia_processes.utils.report.report method)": [[181, "mia_processes.utils.report.Report.ge2rec_make_report"]], "get_dbfieldvalue() (in module mia_processes.utils.tools)": [[181, "mia_processes.utils.tools.get_dbFieldValue"]], "get_iqms_data() (mia_processes.utils.report.report method)": [[181, "mia_processes.utils.report.Report.get_iqms_data"]], "mia_processes.utils": [[181, "module-mia_processes.utils"]], "mia_processes.utils.report": [[181, "module-mia_processes.utils.report"]], "mia_processes.utils.tools": [[181, "module-mia_processes.utils.tools"]], "mriqc_anat_make_report() (mia_processes.utils.report.report method)": [[181, "mia_processes.utils.report.Report.mriqc_anat_make_report"]], "mriqc_func_make_report() (mia_processes.utils.report.report method)": [[181, "mia_processes.utils.report.Report.mriqc_func_make_report"]], "mriqc_get_all_run() (in module mia_processes.utils.tools)": [[181, "mia_processes.utils.tools.mriqc_get_all_run"]], "mriqc_group_iqms_tsv() (in module mia_processes.utils.tools)": [[181, "mia_processes.utils.tools.mriqc_group_iqms_tsv"]], "mriqc_group_make_report() (mia_processes.utils.report.report method)": [[181, "mia_processes.utils.report.Report.mriqc_group_make_report"]], "perf_dsc_make_report() (mia_processes.utils.report.report method)": [[181, "mia_processes.utils.report.Report.perf_dsc_make_report"]], "plot_boxplot_points() (in module mia_processes.utils.tools)": [[181, "mia_processes.utils.tools.plot_boxplot_points"]], "plot_qi2() (in module mia_processes.utils.tools)": [[181, "mia_processes.utils.tools.plot_qi2"]], "plot_realignment_parameters() (in module mia_processes.utils.tools)": [[181, "mia_processes.utils.tools.plot_realignment_parameters"]], "plot_segmentation() (in module mia_processes.utils.tools)": [[181, "mia_processes.utils.tools.plot_segmentation"]], "plot_slice_planes() (in module mia_processes.utils.tools)": [[181, "mia_processes.utils.tools.plot_slice_planes"]], "save() (mia_processes.utils.tools.pagenumcanvas method)": [[181, "mia_processes.utils.tools.PageNumCanvas.save"]], "set_dbfieldvalue() (in module mia_processes.utils.tools)": [[181, "mia_processes.utils.tools.set_dbFieldValue"]], "showpage() (mia_processes.utils.tools.pagenumcanvas method)": [[181, "mia_processes.utils.tools.PageNumCanvas.showPage"]]}})