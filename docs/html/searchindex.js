Search.setIndex({"docnames": ["documentation/bricks/preprocess/afni/Automask", "documentation/bricks/preprocess/afni/Calc", "documentation/bricks/preprocess/afni/CalcDropTRs", "documentation/bricks/preprocess/afni/Despike", "documentation/bricks/preprocess/afni/FWHMx", "documentation/bricks/preprocess/afni/GCOR", "documentation/bricks/preprocess/afni/OutlierCount", "documentation/bricks/preprocess/afni/QualityIndex", "documentation/bricks/preprocess/afni/RefitDeoblique", "documentation/bricks/preprocess/afni/SkullStrip", "documentation/bricks/preprocess/afni/TShift", "documentation/bricks/preprocess/afni/TStatMean", "documentation/bricks/preprocess/afni/Volreg", "documentation/bricks/preprocess/ants/AffineInitializer", "documentation/bricks/preprocess/ants/ApplyTransform", "documentation/bricks/preprocess/ants/N4BiasFieldCorrection", "documentation/bricks/preprocess/ants/Registration", "documentation/bricks/preprocess/dipy/ComputeDKI", "documentation/bricks/preprocess/dipy/Denoise", "documentation/bricks/preprocess/freesurfer/Binarize", "documentation/bricks/preprocess/freesurfer/SynthStrip", "documentation/bricks/preprocess/freesurfer/SynthStripMriqc", "documentation/bricks/preprocess/fsl/BetSurfacesExtraction", "documentation/bricks/preprocess/fsl/ConvertXFM", "documentation/bricks/preprocess/fsl/EpiReg", "documentation/bricks/preprocess/fsl/ExtractROI", "documentation/bricks/preprocess/fsl/FastSegment", "documentation/bricks/preprocess/fsl/Flirt", "documentation/bricks/preprocess/fsl/Smooth", "documentation/bricks/preprocess/matlab_wrap/ComputeBrainVolume", "documentation/bricks/preprocess/mrtrix/ConstrainedSphericalDeconvolution", "documentation/bricks/preprocess/mrtrix/DWIBiasCorrect", "documentation/bricks/preprocess/mrtrix/DWIBrainMask", "documentation/bricks/preprocess/mrtrix/DWIDenoise", "documentation/bricks/preprocess/mrtrix/DWIExtract", "documentation/bricks/preprocess/mrtrix/DWIPreproc", "documentation/bricks/preprocess/mrtrix/EditingTrack", "documentation/bricks/preprocess/mrtrix/FilteringTrack", "documentation/bricks/preprocess/mrtrix/FitTensor", "documentation/bricks/preprocess/mrtrix/Generate5tt2gmwmi", "documentation/bricks/preprocess/mrtrix/Generate5ttfsl", "documentation/bricks/preprocess/mrtrix/MRCat", "documentation/bricks/preprocess/mrtrix/MRConvert", "documentation/bricks/preprocess/mrtrix/MRDeGibbs", "documentation/bricks/preprocess/mrtrix/MRMath", "documentation/bricks/preprocess/mrtrix/MRTransform", "documentation/bricks/preprocess/mrtrix/MTNormalise", "documentation/bricks/preprocess/mrtrix/ResponseSDDhollander", "documentation/bricks/preprocess/mrtrix/SphericalHarmonicExtraction", "documentation/bricks/preprocess/mrtrix/TensorMetrics", "documentation/bricks/preprocess/mrtrix/Tractography", "documentation/bricks/preprocess/mrtrix/TransformFSLConvert", "documentation/bricks/preprocess/others/ApplyBiasCorrection", "documentation/bricks/preprocess/others/ArtifactMask", "documentation/bricks/preprocess/others/Binarize", "documentation/bricks/preprocess/others/ConformImage", "documentation/bricks/preprocess/others/ConvROI", "documentation/bricks/preprocess/others/Enhance", "documentation/bricks/preprocess/others/EstimateSNR", "documentation/bricks/preprocess/others/ExtractROIbyLabel", "documentation/bricks/preprocess/others/ExtractSignalROI", "documentation/bricks/preprocess/others/GradientThreshold", "documentation/bricks/preprocess/others/Harmonize", "documentation/bricks/preprocess/others/IntensityClip", "documentation/bricks/preprocess/others/Mask", "documentation/bricks/preprocess/others/NonSteadyDetector", "documentation/bricks/preprocess/others/Resample1", "documentation/bricks/preprocess/others/Resample2", "documentation/bricks/preprocess/others/RotationMask", "documentation/bricks/preprocess/others/Sanitize", "documentation/bricks/preprocess/others/TSNR", "documentation/bricks/preprocess/others/TemplateFromTemplateFlow", "documentation/bricks/preprocess/others/Threshold", "documentation/bricks/preprocess/spm/Coregister", "documentation/bricks/preprocess/spm/GM_WM_Normalize", "documentation/bricks/preprocess/spm/NewSegment", "documentation/bricks/preprocess/spm/Normalize12", "documentation/bricks/preprocess/spm/Realign", "documentation/bricks/preprocess/spm/SliceTiming", "documentation/bricks/preprocess/spm/Smooth", "documentation/bricks/preprocess/volbrain/AssemblyNetDocker", "documentation/bricks/preprocess/volbrain/GetLabels", "documentation/bricks/preprocess/volbrain/LabelsCorrespondence", "documentation/bricks/reports/AnatIQMs", "documentation/bricks/reports/BoldIQMs", "documentation/bricks/reports/BoldIQMsPlot", "documentation/bricks/reports/CarpetParcellation", "documentation/bricks/reports/ComputeDVARS", "documentation/bricks/reports/FramewiseDisplacement", "documentation/bricks/reports/Mean_stdDev_calc", "documentation/bricks/reports/PlotSignalROI", "documentation/bricks/reports/ReportAnatMriqc", "documentation/bricks/reports/ReportCO2inhalCvr", "documentation/bricks/reports/ReportFuncMriqc", "documentation/bricks/reports/ReportGroupMriqc", "documentation/bricks/reports/Result_collector", "documentation/bricks/reports/Spikes", "documentation/bricks/stats/spm/EstimateContrast", "documentation/bricks/stats/spm/EstimateModel", "documentation/bricks/stats/spm/Level1Design", "documentation/bricks/stats/spm/MultipleRegressionDesign", "documentation/bricks/stats/spm/OneSampleTTestDesign", "documentation/bricks/stats/spm/PairedTTestDesign", "documentation/bricks/stats/spm/TwoSampleTTestDesign", "documentation/bricks/tools/Concat_to_list", "documentation/bricks/tools/Concat_to_list_of_list", "documentation/bricks/tools/Delete_data", "documentation/bricks/tools/Files_To_List", "documentation/bricks/tools/Filter_Files_List", "documentation/bricks/tools/Find_In_List", "documentation/bricks/tools/Get_Conditions_From_csv", "documentation/bricks/tools/Get_Patient_Name", "documentation/bricks/tools/Import_Data", "documentation/bricks/tools/Input_Filter", "documentation/bricks/tools/List_Duplicate", "documentation/bricks/tools/List_To_File", "documentation/bricks/tools/Make_A_List", "documentation/bricks/tools/Make_CVR_reg_physio", "documentation/documentation", "documentation/pipelines/CerebVascularReact/CO2_inhalation", "documentation/pipelines/DWITractography/DWI_whole_brain_tractograpy", "documentation/pipelines/preprocess/Anat_airmask", "documentation/pipelines/preprocess/Anat_headmask", "documentation/pipelines/preprocess/Anat_mni_tpms", "documentation/pipelines/preprocess/Anat_skullstrip", "documentation/pipelines/preprocess/Anat_skullstrip_synthstrip", "documentation/pipelines/preprocess/Anat_spatial_norm", "documentation/pipelines/preprocess/Bold_hmc", "documentation/pipelines/preprocess/Bold_mni_align", "documentation/pipelines/preprocess/Bold_spatial_preprocessing1", "documentation/pipelines/preprocess/Bold_spatial_preprocessing2", "documentation/pipelines/preprocess/Dwi_fod_msmt_csd", "documentation/pipelines/preprocess/Dwi_preprocessing", "documentation/pipelines/preprocess/Dwi_tissue_boundaries", "documentation/pipelines/preprocess/Spatial_mask", "documentation/pipelines/qualityControl/Anat_mriqc", "documentation/pipelines/qualityControl/Bold_mriqc", "documentation/pipelines/qualityControl/Bold_signals_roi", "documentation/pipelines/reports/Bold_iqms", "documentation/pipelines/reports/Extract_roi_param", "documentation/pipelines/stat/Bold_stat_cvr", "index", "mia_processes", "mia_processes.bricks", "mia_processes.bricks.preprocess", "mia_processes.bricks.preprocess.afni", "mia_processes.bricks.preprocess.ants", "mia_processes.bricks.preprocess.dipy", "mia_processes.bricks.preprocess.freesurfer", "mia_processes.bricks.preprocess.fsl", "mia_processes.bricks.preprocess.mrtrix", "mia_processes.bricks.preprocess.others", "mia_processes.bricks.preprocess.spm", "mia_processes.bricks.reports", "mia_processes.bricks.stat", "mia_processes.bricks.stat.spm", "mia_processes.bricks.tools", "mia_processes.pipelines", "mia_processes.pipelines.CerebVascularReact", "mia_processes.pipelines.DWITractography", "mia_processes.pipelines.preprocess", "mia_processes.pipelines.qualityControl", "mia_processes.pipelines.reports", "mia_processes.pipelines.stat", "mia_processes.utils", "modules"], "filenames": ["documentation/bricks/preprocess/afni/Automask.rst", "documentation/bricks/preprocess/afni/Calc.rst", "documentation/bricks/preprocess/afni/CalcDropTRs.rst", "documentation/bricks/preprocess/afni/Despike.rst", "documentation/bricks/preprocess/afni/FWHMx.rst", "documentation/bricks/preprocess/afni/GCOR.rst", "documentation/bricks/preprocess/afni/OutlierCount.rst", "documentation/bricks/preprocess/afni/QualityIndex.rst", "documentation/bricks/preprocess/afni/RefitDeoblique.rst", "documentation/bricks/preprocess/afni/SkullStrip.rst", "documentation/bricks/preprocess/afni/TShift.rst", "documentation/bricks/preprocess/afni/TStatMean.rst", "documentation/bricks/preprocess/afni/Volreg.rst", "documentation/bricks/preprocess/ants/AffineInitializer.rst", "documentation/bricks/preprocess/ants/ApplyTransform.rst", "documentation/bricks/preprocess/ants/N4BiasFieldCorrection.rst", "documentation/bricks/preprocess/ants/Registration.rst", "documentation/bricks/preprocess/dipy/ComputeDKI.rst", "documentation/bricks/preprocess/dipy/Denoise.rst", "documentation/bricks/preprocess/freesurfer/Binarize.rst", "documentation/bricks/preprocess/freesurfer/SynthStrip.rst", "documentation/bricks/preprocess/freesurfer/SynthStripMriqc.rst", "documentation/bricks/preprocess/fsl/BetSurfacesExtraction.rst", "documentation/bricks/preprocess/fsl/ConvertXFM.rst", "documentation/bricks/preprocess/fsl/EpiReg.rst", "documentation/bricks/preprocess/fsl/ExtractROI.rst", "documentation/bricks/preprocess/fsl/FastSegment.rst", "documentation/bricks/preprocess/fsl/Flirt.rst", "documentation/bricks/preprocess/fsl/Smooth.rst", "documentation/bricks/preprocess/matlab_wrap/ComputeBrainVolume.rst", "documentation/bricks/preprocess/mrtrix/ConstrainedSphericalDeconvolution.rst", "documentation/bricks/preprocess/mrtrix/DWIBiasCorrect.rst", "documentation/bricks/preprocess/mrtrix/DWIBrainMask.rst", "documentation/bricks/preprocess/mrtrix/DWIDenoise.rst", "documentation/bricks/preprocess/mrtrix/DWIExtract.rst", "documentation/bricks/preprocess/mrtrix/DWIPreproc.rst", "documentation/bricks/preprocess/mrtrix/EditingTrack.rst", "documentation/bricks/preprocess/mrtrix/FilteringTrack.rst", "documentation/bricks/preprocess/mrtrix/FitTensor.rst", "documentation/bricks/preprocess/mrtrix/Generate5tt2gmwmi.rst", "documentation/bricks/preprocess/mrtrix/Generate5ttfsl.rst", "documentation/bricks/preprocess/mrtrix/MRCat.rst", "documentation/bricks/preprocess/mrtrix/MRConvert.rst", "documentation/bricks/preprocess/mrtrix/MRDeGibbs.rst", "documentation/bricks/preprocess/mrtrix/MRMath.rst", "documentation/bricks/preprocess/mrtrix/MRTransform.rst", "documentation/bricks/preprocess/mrtrix/MTNormalise.rst", "documentation/bricks/preprocess/mrtrix/ResponseSDDhollander.rst", "documentation/bricks/preprocess/mrtrix/SphericalHarmonicExtraction.rst", "documentation/bricks/preprocess/mrtrix/TensorMetrics.rst", "documentation/bricks/preprocess/mrtrix/Tractography.rst", "documentation/bricks/preprocess/mrtrix/TransformFSLConvert.rst", "documentation/bricks/preprocess/others/ApplyBiasCorrection.rst", "documentation/bricks/preprocess/others/ArtifactMask.rst", "documentation/bricks/preprocess/others/Binarize.rst", "documentation/bricks/preprocess/others/ConformImage.rst", "documentation/bricks/preprocess/others/ConvROI.rst", "documentation/bricks/preprocess/others/Enhance.rst", "documentation/bricks/preprocess/others/EstimateSNR.rst", "documentation/bricks/preprocess/others/ExtractROIbyLabel.rst", "documentation/bricks/preprocess/others/ExtractSignalROI.rst", "documentation/bricks/preprocess/others/GradientThreshold.rst", "documentation/bricks/preprocess/others/Harmonize.rst", "documentation/bricks/preprocess/others/IntensityClip.rst", "documentation/bricks/preprocess/others/Mask.rst", "documentation/bricks/preprocess/others/NonSteadyDetector.rst", "documentation/bricks/preprocess/others/Resample1.rst", "documentation/bricks/preprocess/others/Resample2.rst", "documentation/bricks/preprocess/others/RotationMask.rst", "documentation/bricks/preprocess/others/Sanitize.rst", "documentation/bricks/preprocess/others/TSNR.rst", "documentation/bricks/preprocess/others/TemplateFromTemplateFlow.rst", "documentation/bricks/preprocess/others/Threshold.rst", "documentation/bricks/preprocess/spm/Coregister.rst", "documentation/bricks/preprocess/spm/GM_WM_Normalize.rst", "documentation/bricks/preprocess/spm/NewSegment.rst", "documentation/bricks/preprocess/spm/Normalize12.rst", "documentation/bricks/preprocess/spm/Realign.rst", "documentation/bricks/preprocess/spm/SliceTiming.rst", "documentation/bricks/preprocess/spm/Smooth.rst", "documentation/bricks/preprocess/volbrain/AssemblyNetDocker.rst", "documentation/bricks/preprocess/volbrain/GetLabels.rst", "documentation/bricks/preprocess/volbrain/LabelsCorrespondence.rst", "documentation/bricks/reports/AnatIQMs.rst", "documentation/bricks/reports/BoldIQMs.rst", "documentation/bricks/reports/BoldIQMsPlot.rst", "documentation/bricks/reports/CarpetParcellation.rst", "documentation/bricks/reports/ComputeDVARS.rst", "documentation/bricks/reports/FramewiseDisplacement.rst", "documentation/bricks/reports/Mean_stdDev_calc.rst", "documentation/bricks/reports/PlotSignalROI.rst", "documentation/bricks/reports/ReportAnatMriqc.rst", "documentation/bricks/reports/ReportCO2inhalCvr.rst", "documentation/bricks/reports/ReportFuncMriqc.rst", "documentation/bricks/reports/ReportGroupMriqc.rst", "documentation/bricks/reports/Result_collector.rst", "documentation/bricks/reports/Spikes.rst", "documentation/bricks/stats/spm/EstimateContrast.rst", "documentation/bricks/stats/spm/EstimateModel.rst", "documentation/bricks/stats/spm/Level1Design.rst", "documentation/bricks/stats/spm/MultipleRegressionDesign.rst", "documentation/bricks/stats/spm/OneSampleTTestDesign.rst", "documentation/bricks/stats/spm/PairedTTestDesign.rst", "documentation/bricks/stats/spm/TwoSampleTTestDesign.rst", "documentation/bricks/tools/Concat_to_list.rst", "documentation/bricks/tools/Concat_to_list_of_list.rst", "documentation/bricks/tools/Delete_data.rst", "documentation/bricks/tools/Files_To_List.rst", "documentation/bricks/tools/Filter_Files_List.rst", "documentation/bricks/tools/Find_In_List.rst", "documentation/bricks/tools/Get_Conditions_From_csv.rst", "documentation/bricks/tools/Get_Patient_Name.rst", "documentation/bricks/tools/Import_Data.rst", "documentation/bricks/tools/Input_Filter.rst", "documentation/bricks/tools/List_Duplicate.rst", "documentation/bricks/tools/List_To_File.rst", "documentation/bricks/tools/Make_A_List.rst", "documentation/bricks/tools/Make_CVR_reg_physio.rst", "documentation/documentation.rst", "documentation/pipelines/CerebVascularReact/CO2_inhalation.rst", "documentation/pipelines/DWITractography/DWI_whole_brain_tractograpy.rst", "documentation/pipelines/preprocess/Anat_airmask.rst", "documentation/pipelines/preprocess/Anat_headmask.rst", "documentation/pipelines/preprocess/Anat_mni_tpms.rst", "documentation/pipelines/preprocess/Anat_skullstrip.rst", "documentation/pipelines/preprocess/Anat_skullstrip_synthstrip.rst", "documentation/pipelines/preprocess/Anat_spatial_norm.rst", "documentation/pipelines/preprocess/Bold_hmc.rst", "documentation/pipelines/preprocess/Bold_mni_align.rst", "documentation/pipelines/preprocess/Bold_spatial_preprocessing1.rst", "documentation/pipelines/preprocess/Bold_spatial_preprocessing2.rst", "documentation/pipelines/preprocess/Dwi_fod_msmt_csd.rst", "documentation/pipelines/preprocess/Dwi_preprocessing.rst", "documentation/pipelines/preprocess/Dwi_tissue_boundaries.rst", "documentation/pipelines/preprocess/Spatial_mask.rst", "documentation/pipelines/qualityControl/Anat_mriqc.rst", "documentation/pipelines/qualityControl/Bold_mriqc.rst", "documentation/pipelines/qualityControl/Bold_signals_roi.rst", "documentation/pipelines/reports/Bold_iqms.rst", "documentation/pipelines/reports/Extract_roi_param.rst", "documentation/pipelines/stat/Bold_stat_cvr.rst", "index.rst", "mia_processes.rst", "mia_processes.bricks.rst", "mia_processes.bricks.preprocess.rst", "mia_processes.bricks.preprocess.afni.rst", "mia_processes.bricks.preprocess.ants.rst", "mia_processes.bricks.preprocess.dipy.rst", "mia_processes.bricks.preprocess.freesurfer.rst", "mia_processes.bricks.preprocess.fsl.rst", "mia_processes.bricks.preprocess.mrtrix.rst", "mia_processes.bricks.preprocess.others.rst", "mia_processes.bricks.preprocess.spm.rst", "mia_processes.bricks.reports.rst", "mia_processes.bricks.stat.rst", "mia_processes.bricks.stat.spm.rst", "mia_processes.bricks.tools.rst", "mia_processes.pipelines.rst", "mia_processes.pipelines.CerebVascularReact.rst", "mia_processes.pipelines.DWITractography.rst", "mia_processes.pipelines.preprocess.rst", "mia_processes.pipelines.qualityControl.rst", "mia_processes.pipelines.reports.rst", "mia_processes.pipelines.stat.rst", "mia_processes.utils.rst", "modules.rst"], "titles": ["Automask brick", "Calc brick", "CalcDropTRs brick", "Despike brick", "FWHMx brick", "GCOR brick", "OutlierCount brick", "QualityIndex brick", "RefitDeoblique brick", "SkullStrip brick", "TShift brick", "TStatMean brick", "Volreg brick", "AffineInitializer brick", "ApplyTransforms brick", "N4BiasFieldCorrection brick", "Registration brick", "ComputeDKI brick", "Denoise brick", "Binarize brick", "SynthStrip brick", "SynthStripMriqc brick", "BetSurfacesExtraction brick", "ConvertXFM brick", "EpiReg brick", "ExtractROI brick", "FastSegment brick", "Flirt brick", "Smooth brick", "ComputeBrainVolume brick", "ConstrainedSphericalDeconvolution brick", "DWIBiasCorrect brick", "DWIBrainMask brick", "DWIDenoise brick", "DWIExtract brick", "DWIPreproc brick", "EditingTrack brick", "FilteringTrack brick", "FitTensor brick", "Generate5tt2gmwmi brick", "Generate5ttfsl brick", "MRCat brick", "MRConvert brick", "MRDeGibbs brick", "MRMath brick", "MRTransform brick", "MTNormalise brick", "ResponseSDDhollander brick", "SphericalHarmonicExtraction brick", "TensorMetrics brick", "Tractography brick", "TransformFSLConvert brick", "ApplyBiasCorrection brick", "ArtifactMask brick", "Binarize brick", "ConformImage brick", "ConvROI brick", "Enhance brick", "EstimateSNR brick", "ExtractROIbyLabel brick", "ExtractSignalROI brick", "GradientThreshold brick", "Harmonize brick", "IntensityClip brick", "Mask brick", "NonSteadyDetector brick", "Resample1 brick", "Resample2 brick", "RotationMask brick", "Sanitize brick", "TSNR brick", "TemplateFromTemplateFlow brick", "Threshold brick", "Coregister brick", "GM_WM_Normalize brick", "NewSegment brick", "Normalize12 brick", "Realign brick", "SliceTiming brick", "Smooth brick", "AssemblyNetDocker brick", "GetLabels brick", "LabelsCorrespondence brick", "AnatIQMs brick", "BoldQMs brick", "BoldIQMsPlot brick", "CarpetParcellation brick", "ComputeDVARS brick", "FramewiseDisplacement brick", "Mean_stdDev_calc brick", "PlotSignalROI brick", "ReportAnatMriqc brick", "ReportCO2inhalCvr brick", "ReportFuncMriqc brick", "ReportGroupMriqc brick", "Result_collector brick", "Spikes brick", "EstimateConstrast brick", "EstimateModel brick", "Level1Design brick", "MultipleRegressionDesign brick", "OneSampleTTestDesign brick", "PairedTTestDesign brick", "TwoSampleTTestDesign brick", "Concat_to_list  brick", "Concat_to_list_of_list brick", "Delete_data brick", "Files_To_List brick", "Filter_Files_List brick", "Find_In_List brick", "Get_Conditions_From_csv brick", "Get_Patient_Name brick", "Import_Data  brick", "Input_Filter brick", "List_Duplicate brick", "List_To_File brick", "Make_a_list brick", "Make_CVR_reg_physio brick", "Mia_processes\u2019s documentation", "CO2_inhalation pipeline", "DWI_whole_brain_tractograpy pipeline", "Anat_airmask pipeline", "Anat_headmask pipeline", "Anat_mni_tpms pipeline", "Anat_skullstrip pipeline", "Anat_skullstrip_synthstrip pipeline", "Anat_spatial_norm pipeline", "Bold_hmc pipeline", "Bold_mni_align pipeline", "Bold_spatial_preprocessing1 pipeline", "Bold_spatial_preprocessing2 pipeline", "Dwi_fod_msmt_csd pipeline", "Dwi_preprocessing pipeline", "Dwi_tissue_boundaries pipeline", "Spatial_mask pipeline", "Anat_mriqc pipeline", "Bold_mriqc pipeline", "Bold_signals_roi pipeline", "Bold_iqms pipeline", "Extract_roi_param pipeline", "Bold_stat_cvr brick", "Purpose", "mia_processes package", "mia_processes.bricks package", "mia_processes.bricks.preprocess package", "mia_processes.bricks.preprocess.afni package", "mia_processes.bricks.preprocess.ants package", "mia_processes.bricks.preprocess.dipy package", "mia_processes.bricks.preprocess.freesurfer package", "mia_processes.bricks.preprocess.fsl package", "mia_processes.bricks.preprocess.mrtrix package", "mia_processes.bricks.preprocess.others package", "mia_processes.bricks.preprocess.spm package", "mia_processes.bricks.reports package", "mia_processes.bricks.stat package", "mia_processes.bricks.stat.spm package", "mia_processes.bricks.tools package", "mia_processes.pipelines package", "mia_processes.pipelines.CerebVascularReact package", "mia_processes.pipelines.DWITractography package", "mia_processes.pipelines.preprocess package", "mia_processes.pipelines.qualityControl package", "mia_processes.pipelines.reports package", "mia_processes.pipelines.stat package", "mia_processes.utils package", "mia_processes"], "terms": {"home": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140], "document": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 159, 160, 161, 162, 163, 164], "github": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 146, 148, 151, 152, 164], "3dcliplevel": 0, "algorithm": [0, 12, 15, 30, 38, 50, 75, 76, 120, 131, 150, 151, 153], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 112, 115, 117, 119, 120, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 160, 162, 164], "find": [0, 22, 48, 50, 73], "clip": [0, 6, 7, 16, 69, 92, 125, 151], "level": [0, 97, 98, 99, 100, 101, 102, 103, 113, 117, 119, 150, 156], "after": [0, 19, 45, 50, 54, 66, 72, 74, 78, 87, 89, 139, 150, 151, 153], "an": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 109, 111, 114, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 164], "eros": [0, 19, 47], "dilat": [0, 19, 37, 153], "step": [0, 1, 5, 15, 33, 38, 42, 50, 53, 98, 120, 124, 127, 131, 132, 133, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 160], "largest": [0, 10, 26], "connect": [0, 153], "compon": [0, 46, 48, 120], "supra": 0, "threshold": [0, 15, 16, 19, 20, 21, 37, 47, 48, 56, 63, 66, 67, 84, 85, 99, 100, 101, 102, 103, 118, 122, 134, 138, 144, 148, 150, 151], "voxel": [0, 6, 7, 10, 11, 12, 15, 19, 25, 26, 27, 28, 33, 37, 39, 42, 47, 50, 54, 57, 73, 76, 77, 79, 85, 87, 92, 98, 99, 100, 101, 102, 103, 120, 131, 140, 145, 150, 153], "ar": [0, 1, 10, 15, 16, 17, 18, 19, 22, 25, 26, 27, 30, 32, 34, 35, 36, 38, 41, 42, 43, 44, 45, 46, 47, 50, 54, 55, 56, 57, 62, 63, 64, 66, 67, 68, 72, 73, 75, 76, 77, 78, 79, 83, 84, 85, 89, 92, 94, 95, 97, 98, 99, 100, 101, 102, 103, 106, 107, 109, 110, 117, 119, 120, 128, 129, 130, 131, 132, 133, 135, 136, 140, 141, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 164], "kept": [0, 72, 106], "Be": [0, 54, 55, 57, 62, 64, 68, 106], "carr": 0, "thi": [0, 1, 4, 10, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 56, 60, 67, 72, 73, 75, 77, 78, 80, 81, 82, 83, 84, 87, 88, 89, 95, 97, 98, 99, 100, 101, 102, 103, 106, 111, 112, 113, 119, 120, 131, 132, 133, 137, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 159, 160, 161, 162, 163], "program": [0, 22, 48, 73, 77], "itself": [0, 15, 50, 153, 156], "doe": [0, 27, 47], "NOT": [0, 37, 40, 50], "do": [0, 5, 12, 24, 27, 35, 37, 40, 50, 96, 99, 100, 101, 102, 103, 145, 146, 147, 148, 149, 150, 151, 152, 155], "skull": [0, 9, 20, 125, 135, 148, 149, 153, 160], "strip": [0, 9, 20, 22, 125, 135, 148, 160], "mandatori": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 100, 101, 102, 103, 106, 107, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 135, 136, 137, 138, 164], "input": [0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 159, 160, 161, 162, 163], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 159, 160, 161, 162, 163, 164], "in_fil": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 72, 77, 78, 79, 80, 87, 88, 90, 96, 100, 101, 106, 111, 121, 122, 124, 125, 127, 164], "string": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 109, 110, 111, 112, 114, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 156, 164], "repres": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 78, 80, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 164], "exist": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 75, 76, 77, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 109, 110, 111, 114, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 151, 153, 164], "file": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 106, 110, 111, 112, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 148, 150, 151, 153, 155, 156, 164], "valid": [0, 1, 2, 3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 90, 91, 92, 93, 96, 109, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 156, 164], "extens": [0, 1, 2, 3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 96, 109, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 164], "nii": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 164], "gz": [0, 1, 2, 3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 80, 83, 84, 85, 86, 87, 90, 91, 92, 93, 96, 120, 121, 122, 123, 124, 125, 126, 127, 128, 132, 133, 134, 135, 136, 137, 138, 164], "dataset": [0, 4, 11, 34, 145, 150, 153], "can": [0, 10, 15, 16, 17, 19, 26, 27, 45, 73, 74, 75, 76, 79, 95, 98, 99, 100, 101, 102, 103, 106, 117, 119, 141, 142, 146, 148, 153, 164], "4depi": 0, "anatom": [0, 37, 39, 40, 50, 53, 55, 57, 58, 61, 62, 68, 92, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 133, 151, 153, 160, 161], "ex": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 153, 156, 164], "usernam": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140], "data": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 107, 108, 109, 110, 111, 114, 115, 116, 117, 119, 120, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 137, 138, 139, 140, 146, 150, 153, 155, 156, 160, 161, 162, 164], "raw_data": [0, 1, 2, 3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 89, 90, 91, 92, 93, 95, 96, 99, 107, 108, 112, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 156], "func": [0, 2, 3, 8, 10, 11, 12, 18, 28, 65, 69, 70, 73, 77, 78, 79, 84, 93, 94, 96, 107, 108, 113, 114, 115, 117, 119, 127, 129, 130, 134, 136, 137], "option": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 57, 59, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 73, 77, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 113, 120, 127, 128, 131, 132, 137, 138, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 164], "default": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 57, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 83, 84, 85, 86, 87, 88, 91, 92, 93, 96, 97, 98, 100, 101, 102, 103, 105, 106, 112, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 136, 137, 141, 156, 164], "valu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 83, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 112, 119, 120, 121, 123, 126, 127, 128, 130, 131, 132, 133, 136, 137, 140, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 162, 164], "clfrac": 0, "float": [0, 3, 5, 6, 10, 13, 14, 15, 16, 18, 19, 24, 27, 28, 30, 34, 35, 36, 42, 46, 47, 48, 50, 54, 58, 63, 72, 73, 75, 76, 77, 78, 79, 84, 85, 87, 88, 92, 96, 97, 98, 99, 100, 101, 102, 103, 110, 120, 128, 132, 135, 136, 138, 151, 153, 164], "0": [0, 1, 2, 5, 6, 10, 12, 13, 14, 15, 16, 18, 19, 24, 25, 26, 27, 28, 30, 32, 35, 36, 38, 42, 43, 44, 45, 46, 47, 50, 54, 56, 63, 66, 67, 69, 72, 73, 75, 76, 77, 78, 79, 84, 85, 87, 88, 91, 93, 96, 97, 99, 100, 101, 102, 103, 108, 110, 115, 116, 120, 126, 128, 130, 132, 138, 148, 150, 151, 153, 156, 164], "5": [0, 1, 6, 7, 10, 14, 15, 16, 18, 19, 27, 33, 38, 42, 50, 56, 66, 67, 75, 76, 77, 78, 81, 82, 91, 92, 93, 99, 100, 101, 102, 103, 120, 126, 133, 151, 153], "set": [0, 2, 10, 13, 15, 18, 19, 25, 26, 27, 30, 33, 35, 37, 38, 42, 45, 47, 48, 50, 54, 57, 73, 77, 78, 79, 87, 99, 112, 135, 136, 146, 150, 156], "fraction": [0, 6, 17, 26, 49, 153], "must": [0, 10, 16, 27, 35, 36, 50, 56, 63, 67, 72, 73, 77, 78, 89, 95, 99, 118, 133, 140, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156], "1": [0, 2, 6, 7, 12, 13, 14, 16, 18, 19, 20, 21, 25, 26, 27, 35, 42, 43, 44, 45, 50, 53, 54, 55, 65, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 92, 94, 97, 98, 99, 100, 101, 102, 103, 105, 112, 115, 120, 123, 126, 128, 135, 136, 140, 148, 151, 153, 156, 160, 164], "9": [0, 27, 38, 50, 63, 77, 78, 99], "A": [0, 9, 15, 16, 22, 26, 30, 35, 37, 50, 54, 56, 66, 72, 73, 74, 75, 76, 77, 79, 80, 83, 84, 85, 89, 91, 92, 93, 94, 95, 99, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 117, 119, 120, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 142, 146, 151, 153], "small": [0, 6, 7, 27, 135, 136], "tend": [0, 120], "make": [0, 19, 78, 131, 151, 153, 156, 160, 164], "larger": 0, "out_brain_suffix": 0, "_mask": [0, 53, 64], "suffix": [0, 10, 19, 24, 25, 36, 37, 42, 48, 53, 54, 55, 57, 61, 62, 64, 66, 67, 68, 69, 70, 71, 72, 121, 123, 126, 128, 164], "output_typ": [0, 1, 2, 3, 9, 10, 11, 12, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "nifti": [0, 1, 2, 3, 9, 10, 11, 12, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 59, 76, 120, 132, 133, 164], "nifti_gz": [0, 1, 2, 3, 9, 10, 11, 12, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 42, 164], "format": [0, 1, 2, 3, 9, 10, 11, 12, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 80, 117, 119, 132, 133, 150, 153], "output": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 159, 160, 161, 162, 163, 164], "one": [0, 1, 2, 3, 4, 9, 10, 11, 12, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 34, 35, 36, 40, 49, 50, 54, 55, 57, 62, 63, 64, 68, 73, 75, 79, 90, 96, 98, 99, 100, 102, 103, 107, 110, 113, 114, 141, 145, 150, 151, 153, 155, 156, 164], "out_prefix": [0, 1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 28, 73, 76, 77, 78, 79, 86, 87, 88, 91, 93, 96], "prefix": [0, 1, 2, 3, 9, 10, 11, 12, 13, 14, 15, 16, 18, 54, 55, 56, 57, 61, 62, 64, 66, 68, 69, 70, 72, 73, 76, 77, 78, 79, 91, 93, 96], "automask_": 0, "integ": [0, 1, 2, 4, 5, 6, 7, 10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 25, 27, 29, 30, 33, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 50, 59, 60, 66, 73, 76, 77, 78, 79, 81, 82, 84, 90, 91, 92, 93, 96, 98, 99, 108, 115, 128, 137, 138, 164], "outward": 0, "undefin": [0, 1, 5, 7, 10, 12, 14, 15, 16, 18, 19, 24, 34, 78, 85, 91, 92, 93, 95, 97, 98, 99, 107, 112, 129, 139], "ie": [0, 1, 5, 10, 12, 14, 15, 16, 18, 19, 34, 47, 50, 91, 92, 93], "erod": [0, 19, 47, 62, 153], "inward": 0, "out_brain": [0, 125], "derived_data": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 62, 63, 64, 66, 67, 68, 69, 70, 72, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 106, 111, 112, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140], "func_mask": 0, "out_fil": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 27, 28, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50, 52, 54, 55, 57, 59, 61, 62, 63, 64, 66, 68, 69, 72, 83, 84, 85, 86, 87, 88, 95, 96, 109, 114, 122, 124, 127, 153, 164], "automask_func": [0, 106], "useful": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 120, 121, 122, 123, 125, 126, 127, 128, 135, 136, 137, 138, 140], "link": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 120, 121, 122, 123, 125, 126, 127, 128, 135, 136, 137, 138, 140, 141, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156], "nipyp": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 38, 40, 41, 43, 44, 45, 47, 49, 50, 53, 65, 70, 73, 75, 76, 77, 78, 79, 87, 88, 97, 98, 99, 100, 101, 102, 103, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155], "assum": [1, 35, 78, 99, 100, 101, 102, 103], "comput": [1, 11, 14, 16, 17, 18, 19, 29, 30, 38, 43, 46, 48, 50, 58, 62, 85, 135, 136, 141, 145, 147, 150, 151, 152, 153, 160], "being": [1, 50, 73, 76, 77], "perform": [1, 15, 24, 27, 30, 33, 38, 41, 44, 45, 48, 56, 66, 67, 73, 92, 99, 100, 101, 102, 103, 131, 133, 150, 153], "occupi": 1, "same": [1, 8, 10, 17, 19, 25, 27, 35, 40, 42, 73, 78, 79, 95, 99, 110, 135, 136, 152, 153, 156], "space": [1, 13, 14, 16, 22, 24, 25, 27, 43, 45, 53, 54, 55, 57, 62, 64, 68, 71, 73, 74, 75, 76, 77, 80, 83, 86, 120, 121, 126, 129, 138, 153, 160, 164], "have": [1, 15, 16, 26, 27, 30, 35, 37, 50, 56, 67, 73, 74, 75, 76, 77, 89, 90, 95, 99, 100, 101, 102, 103, 151, 153], "orient": [1, 37, 45, 47, 50, 99, 100, 101, 102, 103, 120, 150, 160, 164], "in_file_a": [1, 2], "first": [1, 5, 10, 14, 16, 19, 26, 27, 33, 35, 38, 42, 46, 50, 72, 77, 89, 91, 92, 93, 94, 95, 100, 101, 102, 103, 108, 109, 110, 115, 125, 131, 153], "img_1": 1, "expr": [1, 124], "b": [1, 15, 17, 30, 32, 35, 42, 73, 76, 77, 97, 104, 105, 120, 124, 131, 132, 133, 150, 153, 156], "express": [1, 87], "appli": [1, 14, 16, 18, 27, 30, 40, 46, 47, 50, 63, 72, 73, 74, 77, 78, 89, 99, 100, 101, 102, 103, 112, 113, 121, 123, 128, 133, 150, 151, 156], "between": [1, 6, 10, 13, 15, 16, 24, 35, 37, 50, 66, 72, 73, 75, 76, 78, 81, 82, 87, 91, 92, 93, 94, 99, 100, 101, 102, 103, 108, 117, 131, 135, 136, 139, 145, 150, 151, 164], "c": [1, 97, 104, 105, 156], "allow": [1, 17, 19, 22, 27, 50, 73, 80, 99, 100, 101, 102, 103, 113, 133, 137, 139], "parenthes": 1, "It": [1, 16, 17, 20, 24, 25, 26, 27, 29, 45, 78, 95, 98, 117, 133], "also": [1, 10, 17, 24, 26, 27, 50, 73, 76, 77, 94, 95, 99, 106, 119, 120, 132, 139], "possibl": [1, 16, 24, 25, 26, 27, 35, 73, 77, 135, 136, 150], "built": [1, 30, 47, 89, 141, 160], "function": [1, 16, 17, 27, 30, 37, 45, 55, 58, 73, 87, 92, 96, 98, 99, 117, 119, 120, 127, 129, 130, 131, 134, 137, 140, 150, 151, 153, 156, 160, 161, 162, 164], "sin": 1, "co": [1, 117, 119, 120, 133], "sqrt": [1, 153], "mean": [1, 12, 16, 17, 44, 49, 75, 76, 77, 84, 87, 93, 95, 97, 100, 101, 102, 103, 119, 136, 138, 145, 147, 153, 160, 162, 164], "stdev": 1, "some": [1, 16, 24, 25, 42, 73, 83, 84, 97, 98, 99, 120, 133, 141, 145, 146, 147, 148, 149, 150, 152, 155], "design": [1, 35, 97, 98, 99, 110, 140, 155, 158], "help": [1, 131, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 159, 160, 161, 162, 163], "implement": [1, 88, 98, 153], "logic": 1, "x": [1, 18, 24, 25, 27, 45, 48, 50, 73, 76, 77, 79, 99, 120, 134, 148, 153, 164], "For": [1, 10, 14, 16, 19, 24, 27, 42, 57, 59, 60, 61, 73, 74, 77, 95, 100, 101, 102, 103, 110, 160, 164], "more": [1, 3, 12, 16, 17, 30, 34, 35, 50, 54, 55, 57, 62, 63, 64, 68, 73, 77, 87, 99, 156], "exampl": [1, 10, 14, 16, 19, 24, 30, 39, 59, 60, 61, 71, 73, 74, 77, 90, 95, 164], "refer": [1, 13, 27, 46, 51, 73, 77, 83, 84, 99, 121, 146, 151, 156, 161], "imag": [1, 2, 3, 4, 5, 6, 7, 12, 13, 15, 17, 19, 20, 21, 22, 23, 26, 29, 30, 33, 34, 37, 38, 43, 46, 47, 48, 49, 50, 51, 53, 58, 59, 60, 63, 70, 73, 75, 80, 85, 87, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 117, 119, 120, 121, 123, 125, 126, 129, 130, 131, 132, 133, 137, 139, 140, 141, 145, 146, 147, 148, 149, 150, 151, 152, 153, 160, 161, 164], "c_": 1, "in_file_b": 1, "second": [1, 10, 23, 27, 35, 38, 40, 42, 46, 50, 77, 78, 99, 100, 101, 102, 103, 108, 120, 125, 132], "img_2": 1, "in_file_c": 1, "third": [1, 42, 94, 118, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156], "img_3": 1, "single_idx": 1, "volum": [1, 4, 10, 26, 27, 29, 32, 35, 38, 42, 44, 45, 48, 65, 69, 76, 77, 78, 84, 87, 99, 120, 127, 132, 136, 138, 145, 148, 149, 150, 151, 152, 153, 164], "index": [1, 2, 10, 25, 75, 78, 84, 91, 92, 93, 95, 98, 108, 115, 138, 139, 141, 145, 162], "The": [1, 3, 7, 10, 12, 13, 16, 17, 18, 22, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 56, 57, 66, 67, 72, 73, 74, 75, 76, 77, 78, 85, 87, 89, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 106, 108, 109, 110, 112, 115, 117, 119, 120, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "onli": [1, 6, 7, 17, 18, 19, 26, 27, 30, 33, 35, 36, 37, 38, 39, 42, 46, 48, 50, 54, 55, 57, 62, 64, 68, 72, 75, 77, 79, 98, 99, 100, 101, 102, 103, 112, 145, 153, 156, 164], "start_idx": [1, 2], "start": [1, 2, 44, 48, 133, 146, 164], "requir": [1, 15, 16, 29, 30, 31, 32, 33, 34, 35, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 73, 75, 80, 95, 100, 101, 102, 103, 120, 137, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156], "stop_idx": [1, 2], "stop": [1, 2, 50, 73], "35": [1, 78, 110], "out": [1, 2, 4, 5, 6, 7, 9, 10, 11, 13, 14, 15, 18, 19, 30, 41, 42, 44, 50, 53, 83, 84, 85, 87, 88, 90, 96, 137, 138, 153, 160, 164], "c_img_1": 1, "current": [1, 18, 75, 77, 78, 95, 98, 100, 101, 102, 103, 132, 156, 164], "initi": [1, 5, 16, 27, 38, 47, 50, 141, 142], "mai": [1, 12, 27, 73, 74, 77, 99, 153], "crash": [1, 98], "execut": [1, 35, 37], "produc": [1, 75, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 162], "ani": [1, 19, 20, 21, 36, 37, 43, 50, 73, 76, 92, 95, 99, 100, 101, 102, 103, 116, 145], "result": [1, 15, 26, 27, 40, 50, 56, 66, 67, 73, 75, 76, 77, 89, 95, 107, 108, 112, 113, 115, 119, 135, 136, 139, 153, 156], "without": [1, 45, 50, 53, 75, 77, 91, 95, 153, 164], "error": [1, 34, 98, 135, 136, 153], "messag": [1, 164], "If": [2, 10, 15, 16, 17, 20, 21, 24, 27, 30, 33, 35, 36, 38, 39, 42, 44, 45, 46, 50, 56, 67, 73, 75, 76, 77, 78, 79, 80, 89, 90, 95, 98, 99, 100, 101, 102, 103, 106, 107, 108, 112, 115, 120, 132, 135, 139, 151, 153, 156, 164], "none": [2, 16, 35, 49, 75, 76, 78, 99, 100, 101, 102, 103, 128, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 159, 160, 161, 162, 163, 164], "automat": [2, 17, 42, 78, 92, 98, 99, 112, 120, 132, 153], "length": [2, 36, 50, 55, 97, 98, 99, 151], "3d": [2, 4, 9, 11, 15, 19, 25, 50, 66, 77, 119, 129, 130, 145, 147, 149, 152, 153], "crop": [2, 40, 50], "cropped_": 2, "cannot": [2, 19, 83, 84], "lower": [2, 16, 63, 77, 92, 153], "than": [2, 10, 12, 17, 40, 45, 48, 54, 73, 75, 76, 92, 99, 119, 151], "equal": [2, 14, 19, 30, 38, 45, 77, 97, 103], "10": [2, 13, 25, 36, 56, 58, 63, 66, 67, 75, 76, 78, 79, 92, 99, 110, 120, 128, 151, 153], "cropped_func": 2, "calc": [2, 118, 124, 144, 145], "replac": [3, 18, 27, 45], "someth": 3, "pleas": [3, 20, 21, 30, 31, 32, 33, 34, 35, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 74, 77, 98, 99, 133, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 159, 160, 161, 162, 163], "ey": [3, 71], "alwai": 3, "store": [3, 38, 73, 164], "boolean": [3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 19, 20, 21, 23, 24, 26, 27, 30, 31, 33, 34, 35, 36, 37, 38, 40, 42, 45, 46, 47, 48, 49, 50, 59, 62, 63, 69, 72, 73, 75, 77, 79, 81, 82, 87, 88, 95, 96, 97, 98, 100, 101, 102, 103, 112, 127, 138, 151, 164], "true": [3, 4, 5, 6, 7, 8, 14, 15, 16, 26, 27, 31, 33, 34, 49, 59, 62, 63, 72, 75, 77, 79, 81, 82, 87, 95, 96, 97, 98, 100, 101, 102, 103, 112, 125, 126, 127, 131, 133, 136, 137, 138, 151, 153, 164], "d": [3, 104, 151, 156], "d_": 3, "d_func": 3, "all": [4, 17, 19, 26, 27, 32, 34, 35, 36, 37, 38, 42, 50, 54, 56, 59, 66, 67, 73, 77, 78, 79, 83, 84, 87, 90, 94, 96, 99, 100, 101, 102, 103, 106, 120, 131, 138, 140, 141, 145, 153, 156, 164], "sub": [4, 40, 60, 90, 92, 100, 101, 102, 103, 106, 145, 156], "each": [4, 5, 10, 13, 16, 25, 26, 27, 30, 36, 37, 47, 50, 56, 57, 59, 60, 71, 73, 75, 77, 81, 82, 87, 89, 90, 92, 94, 97, 98, 99, 100, 101, 102, 103, 110, 112, 120, 131, 137, 140, 144, 145, 150, 151, 153, 156, 164], "tr": [4, 5, 10, 78, 85], "separ": [4, 10, 26, 47, 73, 77, 85, 145], "mean_reg_func_valid": [4, 5, 84, 93, 128, 138], "combin": [4, 5, 6, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140], "final": [4, 5, 6, 10, 15, 23, 27, 37, 47, 63, 89, 113, 129, 130, 131, 140, 153], "measur": [4, 5, 6, 17, 38, 75, 76, 83, 84, 99, 103, 117, 119, 153, 158, 161], "along": [4, 5, 6, 27, 41, 42, 150, 153], "axi": [4, 5, 6, 13, 27, 35, 41, 42, 50, 150, 153, 164], "detrend": [4, 6, 7, 10, 96], "specifi": [4, 6, 7, 10, 12, 14, 15, 19, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 41, 42, 43, 45, 46, 47, 48, 49, 50, 56, 73, 78, 79, 86, 87, 88, 92, 97, 98, 99, 100, 101, 102, 103, 115, 150, 156], "order": [4, 10, 12, 14, 15, 16, 22, 24, 30, 36, 46, 50, 66, 75, 78, 98, 99, 110, 120, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156], "prepend": [4, 6, 7, 28, 56, 73, 79, 86, 87, 88], "filenam": [4, 6, 7, 28, 73, 77, 79, 86, 87, 88, 99, 112, 156], "fwhm_": 4, "arg": [4, 164], "add": [4, 10, 24, 37, 82, 97, 106, 142, 164], "showmeclassicfwhm": 4, "old": [4, 95, 153], "classic": [4, 16, 99, 146, 155], "method": [4, 10, 12, 24, 27, 43, 45, 50, 53, 62, 68, 73, 76, 77, 98, 100, 101, 102, 103, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 164], "mask_fil": [4, 5, 6, 7, 64], "mask": [4, 6, 7, 12, 15, 16, 17, 18, 20, 21, 22, 27, 30, 31, 33, 35, 36, 37, 38, 40, 46, 47, 48, 50, 56, 59, 60, 71, 73, 77, 79, 80, 83, 84, 87, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 118, 119, 120, 123, 124, 125, 126, 128, 131, 132, 133, 135, 136, 138, 140, 144, 145, 150, 151, 153, 160, 162], "automask_mean_reg_func_valid": [4, 5, 6, 7, 86, 87, 128, 138], "fwhm_mean_reg_func_valid": [4, 84], "no_demean": 5, "fals": [5, 6, 7, 10, 12, 13, 14, 15, 16, 19, 20, 21, 23, 24, 27, 30, 31, 34, 35, 36, 37, 38, 40, 42, 45, 46, 47, 48, 49, 50, 59, 63, 69, 73, 75, 77, 79, 81, 82, 88, 95, 96, 97, 98, 126, 127, 138, 148, 151, 164], "need": [5, 12, 22, 27, 55, 73, 75, 76, 77, 90, 98, 99, 113, 153, 156], "demean": [5, 153], "nfirst": 5, "number": [5, 12, 13, 15, 16, 19, 26, 27, 30, 36, 38, 42, 45, 46, 47, 48, 50, 65, 69, 75, 77, 78, 83, 84, 85, 91, 92, 93, 97, 98, 99, 120, 153, 156, 164], "ignor": [5, 10, 27, 99], "3": [5, 6, 7, 13, 14, 15, 16, 24, 25, 26, 27, 30, 38, 41, 42, 43, 44, 45, 46, 47, 48, 50, 66, 72, 73, 75, 76, 77, 78, 79, 81, 82, 99, 100, 101, 102, 103, 110, 116, 120, 124, 125, 126, 128, 134, 138, 151, 153, 156], "global": [5, 16, 84, 99, 100, 101, 102, 103, 131, 142], "06123": 5, "reg_func_valid": [6, 7, 84, 87, 138], "autoclip": [6, 7], "off": [6, 7, 50, 77], "mutual": [6, 7, 10, 16, 27, 28, 73, 76, 97, 106], "exclus": [6, 7, 10, 16, 23, 27, 28, 29, 35, 36, 50, 76, 97, 117, 119, 120, 132], "automask": [6, 7, 118, 137, 144, 145], "interv": [6, 7], "write": [6, 7, 16, 23, 36, 73, 74, 75, 76, 77, 98, 130], "median": [6, 7, 44, 57, 63, 87, 94, 151, 153], "mad": [6, 7, 153], "count": [6, 7, 42, 138], "timepoint": [6, 7, 87, 96], "legendr": [6, 48, 50], "polynomi": [6, 7, 10, 12, 46, 48, 50, 99, 153], "outliers_": 6, "qthr": 6, "001": [6, 59, 73, 75, 76, 111], "indic": [6, 35, 40, 43, 44, 72, 77, 79, 87, 92, 95, 98, 108, 119, 153], "q": 6, "alpha": 6, "correl": [6, 7, 16, 27, 73, 84, 98, 99, 100, 101, 102, 103, 145, 153], "across": [6, 7, 20, 42, 44, 45, 71, 87, 153, 164], "polort": [6, 7], "timeseri": [6, 7], "outliers_reg_func_valid": [6, 7, 84, 85, 138], "1d": [7, 10, 12], "seri": [7, 10, 14, 35, 45, 50, 73, 85, 87, 92, 96, 99, 150, 151, 152], "outlier": [7, 63, 84, 85, 93, 138, 145, 151, 153], "qi": [7, 153], "qi_": 7, "quadrant": 7, "similar": [7, 16, 99, 117, 128], "spearman": 7, "minu": [7, 99], "coeffici": [7, 30, 37, 38, 45, 48, 49, 73, 92, 97, 98, 119, 139], "rank": 7, "e": [7, 15, 17, 30, 35, 36, 42, 43, 45, 50, 75, 76, 87, 92, 95, 98, 100, 101, 102, 103, 104, 108, 112, 115, 119, 133, 135, 136, 153, 156], "name": [8, 17, 24, 26, 41, 42, 44, 71, 72, 73, 79, 81, 89, 92, 95, 97, 98, 99, 100, 101, 102, 103, 109, 110, 111, 112, 119, 128, 129, 130, 139, 142, 153, 155, 156, 164], "refit": 8, "t1w": [9, 13, 14, 15, 16, 19, 20, 21, 22, 24, 26, 27, 29, 40, 51, 52, 53, 54, 57, 58, 61, 62, 63, 64, 68, 71, 80, 83, 91, 111, 116, 120, 121, 122, 123, 124, 125, 126, 137, 151, 161], "ss": 9, "ss_": 9, "ss_t1w": [9, 122], "shift": [10, 12, 43, 153], "from": [10, 16, 17, 20, 21, 26, 27, 30, 38, 39, 42, 43, 44, 45, 47, 48, 50, 53, 54, 55, 56, 57, 58, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 75, 76, 78, 80, 83, 84, 87, 88, 89, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 111, 112, 113, 119, 123, 125, 126, 127, 128, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 160, 161, 164], "so": [10, 25, 29, 50, 73, 75, 76, 77, 78, 95, 99, 131, 153], "align": [10, 12, 13, 16, 27, 35, 75, 128, 136, 152], "tempor": [10, 152], "origin": [10, 12, 15, 16, 27, 45, 63, 73, 75, 77, 79, 112, 141, 148, 153, 156, 164], "you": [10, 14, 16, 17, 20, 21, 24, 25, 73, 77, 80, 98, 100, 101, 102, 103, 106, 135], "either": [10, 24, 26, 27, 45, 73, 78, 90, 98], "slice_tim": 10, "tpattern": 10, "neither": 10, "two": [10, 12, 23, 26, 27, 35, 38, 75, 95, 107, 108, 110, 112, 139, 141, 153, 155, 156], "defin": [10, 16, 36, 37, 45, 46, 50, 54, 55, 57, 62, 64, 68, 72, 76, 81, 82, 89, 97, 98, 99, 100, 101, 102, 103, 107, 112, 133, 134, 137, 139, 140, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156], "process": [10, 15, 29, 30, 33, 34, 37, 50, 72, 75, 78, 92, 113, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 135, 136, 137, 138, 141, 142, 143, 144, 152, 155, 156, 158, 159, 160, 161, 162, 163], "return": [10, 115, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 164], "interpol": [10, 12, 14, 16, 27, 33, 43, 45, 66, 73, 77, 100, 101, 102, 103, 121, 123, 126, 128, 137], "fourier": [10, 12, 98, 99, 136], "linear": [10, 12, 14, 16, 35, 45, 49, 92, 99, 117, 123, 128, 132, 149], "cubic": [10, 12, 45], "quintic": [10, 12], "heptic": [10, 12], "differ": [10, 12, 26, 27, 75, 76, 77, 78, 99, 120, 131, 133, 150, 152, 153], "most": [10, 12, 48, 77], "accur": [10, 12, 77], "slowest": [10, 12], "1st": [10, 12, 92, 99], "least": [10, 12, 27, 30, 36, 38, 50, 76, 100, 101, 103, 131], "3rd": [10, 12, 73, 77, 99], "lagrang": [10, 12], "5th": [10, 12, 99], "7th": [10, 12, 73, 77], "st_corr": 10, "st_corr_": 10, "rlt": 10, "befor": [10, 16, 33, 36, 43, 45, 74, 76, 77, 89, 92, 132], "remov": [10, 37, 55, 63, 87, 89, 99, 106, 132, 145, 150, 153], "trend": 10, "rltplu": 10, "later": [10, 95, 119, 162], "put": [10, 16, 38, 164], "back": [10, 73, 77, 152], "slice_encoding_dir": 10, "k": [10, 98, 139, 153], "direct": [10, 24, 27, 30, 35, 37, 45, 48, 50, 73, 77, 79, 120, 132, 153], "which": [10, 16, 17, 18, 19, 26, 27, 30, 34, 35, 36, 41, 42, 43, 44, 46, 47, 48, 63, 66, 67, 69, 72, 73, 75, 76, 77, 78, 79, 82, 83, 84, 88, 89, 90, 92, 94, 97, 98, 99, 100, 101, 102, 103, 109, 110, 119, 120, 128, 129, 130, 131, 132, 137, 140, 151, 153, 164], "neg": [10, 15, 30, 37], "revers": [10, 14, 35, 45, 160], "entri": [10, 46, 56, 67, 89, 95, 107, 151, 153], "correspond": [10, 30, 42, 48, 54, 73, 81, 82, 83, 84, 85, 89, 95, 107, 108, 113, 114, 115, 120, 129, 139, 144, 153, 155, 156, 164], "zero": [10, 15, 17, 19, 37, 50, 56, 66, 67, 73, 77, 87, 100, 101, 102, 103, 153], "point": [10, 13, 25, 27, 45, 50, 73, 75, 76, 77, 98, 135, 136, 151, 164], "ii": 10, "unchang": [10, 42], "thei": [10, 15, 36, 50, 73, 76, 77, 99, 164], "2": [10, 12, 13, 14, 15, 16, 18, 26, 27, 28, 35, 36, 38, 42, 43, 44, 45, 47, 48, 50, 71, 73, 75, 76, 77, 78, 79, 81, 82, 84, 85, 98, 99, 100, 101, 102, 103, 105, 108, 110, 112, 117, 119, 120, 126, 128, 132, 138, 148, 153, 156], "list": [10, 14, 15, 16, 19, 26, 27, 30, 34, 36, 41, 42, 43, 45, 46, 47, 54, 56, 57, 59, 60, 66, 67, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 89, 90, 95, 97, 98, 99, 100, 101, 102, 103, 106, 110, 112, 113, 119, 123, 128, 129, 130, 137, 139, 140, 153, 155, 156, 164], "offset": [10, 12], "acquisit": [10, 20, 35, 42, 78, 99, 152, 153], "onset": [10, 99, 110, 156], "alt": 10, "z": [10, 24, 25, 27, 45, 48, 50, 73, 76, 77, 79, 96, 120, 134, 151, 153], "altplu": 10, "z2": 10, "altminu": 10, "seq": 10, "seqplu": 10, "seqminu": 10, "pattern": [10, 73, 77, 156], "rather": [10, 40, 45], "header": [10, 15, 35, 42, 45, 73, 77, 151], "One": [10, 73, 76, 77, 99, 110, 140, 141], "manual": [10, 18, 40, 140], "": [10, 16, 24, 26, 27, 28, 36, 49, 57, 73, 77, 79, 80, 88, 99, 119, 120, 132, 133, 140, 148, 150, 152, 156], "m": [10, 78, 92, 95, 120, 133, 156], "millisecond": 10, "tslice": 10, "given": [10, 16, 24, 37, 50, 63, 99, 100, 101, 102, 103, 108, 137, 142, 145, 151], "tzero": 10, "minimum": [10, 19, 25, 27, 36, 50, 92], "maximum": [10, 19, 25, 28, 30, 36, 46, 47, 50, 72, 75, 76, 79, 87, 92, 153, 155], "note": [10, 15, 25, 27, 30, 31, 32, 33, 34, 35, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 75, 97, 98, 100, 101, 102, 103, 113, 115, 120, 133, 134, 156, 164], "when": [10, 12, 16, 45, 50, 66, 73, 75, 76, 77, 89, 133, 135, 136], "averag": [10, 11, 18, 73, 87, 90, 117, 132, 133, 137, 145], "st_corr_func": 10, "time": [11, 12, 14, 25, 35, 50, 73, 85, 92, 96, 99, 100, 101, 102, 103, 120, 130, 132, 145, 151, 152, 156, 164], "mean_": 11, "mean_func": [11, 93], "tstat": 11, "copyorigin": 12, "copi": [12, 15, 77], "coord": [12, 42], "reg": [12, 75, 76], "reg_": 12, "save_oned_matrix": 12, "save": [12, 15, 19, 27, 59, 75, 83, 84, 142, 153, 164], "transform": [12, 16, 24, 27, 73, 75, 76, 77, 80, 121, 123, 126, 128, 146, 148, 149, 150, 151], "matrix": [12, 27, 45, 80, 99, 100, 101, 102, 103, 140, 150, 155], "oned": 12, "save_md1d_fil": 12, "max": [12, 15, 19, 27, 44, 50, 153], "displac": [12, 138, 153], "outputfil": 12, "md1d": 12, "timeshift": 12, "slice": [12, 19, 27, 35, 42, 73, 85, 91, 92, 93, 96, 99, 130, 145, 152, 153, 156, 164], "twopass": [12, 136], "pass": [12, 47, 99, 164], "registr": [12, 24, 35, 53, 73, 75, 76, 118, 120, 126, 127, 133, 136, 144, 146, 149, 160], "smooth": [12, 15, 16, 33, 73, 75, 76, 77, 118, 129, 130, 134, 144, 149, 152], "get": [12, 16, 22, 24, 30, 33, 36, 38, 47, 50, 110, 111, 121, 126, 128, 137, 151, 152, 156, 160, 161, 164], "crude": [12, 47], "fine": [12, 27, 73], "high": [12, 50, 99, 164], "resolut": [12, 20, 71, 98, 121, 123, 126, 128, 134, 139, 140, 151, 156, 160], "move": [12, 13, 16, 45, 73, 126, 146], "few": 12, "zpad": 12, "4": [12, 14, 15, 16, 19, 27, 50, 73, 75, 77, 78, 79, 81, 82, 99, 100, 101, 102, 103, 108, 120, 125, 126, 128, 130, 133, 153, 164], "zeropad": 12, "around": [12, 13, 27, 73, 77, 85, 119, 153], "edg": [12, 19, 24, 85], "n": [12, 77, 99, 120, 133, 153], "dure": [12, 15, 30, 34, 35, 45, 50, 92, 98, 99, 112, 117, 119, 129, 130], "rotat": [12, 13, 27, 53, 77, 83, 92, 129, 130, 151, 153, 160], "in_weight_volum": 12, "tupl": [12, 14, 15, 16, 33, 36, 42, 48, 50, 75, 128, 164], "weight": [12, 15, 16, 21, 24, 27, 32, 34, 36, 37, 38, 40, 42, 50, 77, 97, 133, 145, 150], "md1d_file": 12, "aff12": 12, "reg_func_md": 12, "oned_fil": [12, 127], "movement": [12, 73, 88, 127, 132, 138], "txt": [12, 19, 27, 30, 36, 37, 42, 45, 47, 51, 77, 80, 88, 89, 92, 95, 99, 108, 117, 119, 127, 129, 130, 138, 140, 153], "reg_func_on": 12, "oned_matrix": 12, "reg_func_oned_matrix": 12, "reg_func": 12, "moving_imag": [13, 16, 126], "map": [13, 15, 20, 26, 27, 31, 33, 37, 45, 49, 61, 71, 74, 75, 83, 92, 129, 132, 140, 152, 153, 160, 164], "fix": [13, 16, 23, 50, 74, 146], "fixed_imag": [13, 16], "t1w_templat": 13, "dimens": [13, 14, 15, 16, 19, 27, 40, 42, 45, 75, 76, 99, 124, 125, 128, 134, 153, 164], "local_search": 13, "determin": [13, 27, 38, 45, 50, 63, 77, 92], "local": [13, 43, 147], "optim": [13, 20, 146, 150], "run": [13, 24, 35, 43, 80, 94, 113, 135, 136, 137, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 164, 165], "search": [13, 27, 73, 77, 139, 141], "iter": [13, 15, 16, 37, 38, 46, 73, 156], "affinetransform": 13, "affinetransform_": 13, "principal_ax": 13, "whether": [13, 27, 45, 63, 77, 100, 101, 102, 103, 153, 164], "princip": 13, "radian_fract": 13, "arc": 13, "ax": [13, 42, 43, 44, 45, 55, 153], "search_factor": 13, "15": [13, 16, 45, 46, 47, 50, 78, 110, 126], "increment": 13, "degre": [13, 17, 27, 30, 47, 73, 76, 77, 153], "mat": [13, 14, 16, 23, 24, 27, 51, 75, 92, 97, 98, 99, 100, 101, 102, 103, 117, 140], "affinetransform_t1w": 13, "input_imag": 14, "reference_imag": [14, 66, 67, 151], "wish": [14, 77], "warp": [14, 16, 45, 75, 76, 152], "ref_t1w": 14, "multipl": [14, 16, 48, 99, 135, 136, 140, 155, 164], "last": [14, 19, 142], "post_n4c_t1w_clipped_masked_inversecomposit": 14, "h5": [14, 16, 121, 123, 126, 128], "default_valu": [14, 164], "forc": [14, 27, 34, 139], "treat": 14, "dimension": [14, 98, 133], "instead": [14, 16, 19, 38], "doubl": [14, 16, 27, 79], "input_image_typ": 14, "type": [14, 20, 26, 27, 37, 47, 50, 75, 78, 79, 81, 82, 95, 99, 100, 101, 102, 103, 110, 116, 120, 131, 133, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 159, 160, 161, 162, 163], "scalar": [14, 36], "vector": [14, 48, 73, 100, 101, 102, 103, 120, 155, 156], "tensor": [14, 150], "nearestneighbor": [14, 16, 128], "cosinewindowedsinc": [14, 16, 128], "welchwindowedsinc": [14, 16, 128], "hammingwindowedsinc": [14, 16, 128], "lanczoswindowedsinc": [14, 16, 126, 128], "multilabel": [14, 16, 121, 128], "gaussian": [14, 15, 16, 17, 18, 73, 75, 76, 77, 128, 149, 152, 156], "bspline": [14, 15, 16, 128], "model": [14, 15, 16, 18, 20, 21, 27, 37, 50, 92, 97, 100, 101, 102, 103, 117, 119, 140, 143, 148, 154], "t": [14, 25, 75, 76, 92, 97, 98, 119, 120, 133, 139, 140, 153, 155, 156], "t_": 14, "print_out_composite_warp_fil": 14, "composit": [14, 16, 121, 123, 126, 128], "interpolation_paramet": [14, 16], "form": [14, 15, 16, 33, 35, 36, 42, 48, 50, 75, 76, 128, 164], "sigma": [14, 16, 28, 153], "alphaparamet": [14, 16], "invert_transform_flag": 14, "invert": [14, 19, 23, 45, 63], "flag": 14, "ants_warp": 14, "tran": [14, 16, 153], "follinw": 14, "trnasform": 14, "t_t1w": 14, "variant": 15, "popular": 15, "n3": 15, "nonparameter": 15, "nonuniform": 15, "normal": [15, 27, 50, 80, 87, 88, 119, 120, 129, 131, 153, 160], "retrospect": 15, "base": [15, 19, 24, 27, 30, 35, 36, 37, 38, 43, 50, 72, 75, 80, 98, 99, 120, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 159, 160, 161, 162, 163, 164], "assumpt": 15, "corrupt": [15, 117, 153], "low": [15, 27, 153, 156, 164], "frequenc": 15, "convolut": [15, 80, 139, 148, 151, 156], "intens": [15, 16, 24, 26, 27, 38, 42, 45, 69, 75, 76, 85, 87, 92, 99, 120, 131, 150, 151, 153], "histogram": [15, 16, 27, 73, 151], "basic": [15, 98, 99, 120, 142, 151, 156], "protocol": [15, 35, 80, 81, 82, 153], "deconvolv": [15, 47], "remap": 15, "spatial": [15, 42, 44, 71, 73, 77, 92, 129, 132, 133, 135, 150, 152, 160], "spline": [15, 27, 66, 73, 76, 77], "2d": [15, 19, 27], "4d": [15, 25, 45, 50, 66, 75, 77, 119, 129, 130, 151, 164], "thera": 15, "close": [15, 18, 48, 85, 87, 153], "prior": 15, "copy_head": 15, "optionn": [15, 28, 87, 88], "n4c": [15, 106], "n4c_": 15, "rescale_intens": [15, 125], "rescal": [15, 27, 42], "min": [15, 19, 27, 44, 50, 136], "rang": [15, 16, 19, 20, 26, 27, 92, 94, 151, 153, 164], "theorigin": 15, "within": [15, 17, 30, 33, 37, 38, 48, 50, 73, 87, 99, 100, 101, 102, 103, 119, 140, 153], "user": [15, 78, 99, 100, 101, 102, 103, 139], "save_bia": 15, "estim": [15, 16, 17, 31, 33, 35, 37, 48, 73, 75, 76, 77, 92, 99, 100, 101, 102, 103, 120, 122, 129, 130, 132, 139, 150, 151, 153, 155], "bspline_fitting_dist": 15, "fit": [15, 17, 38, 46, 63, 77, 98, 153], "distanc": [15, 20, 21, 73, 75, 76, 77, 151], "300": [15, 30, 45], "bspline_ord": 15, "convergence_threshold": [15, 16, 126, 128], "converg": [15, 16], "n_iter": [15, 125], "1e": [15, 16, 126, 128], "6": [15, 27, 28, 45, 50, 75, 78, 79, 81, 82, 96, 99, 100, 101, 102, 103, 110, 133, 138, 148, 151, 153, 156], "histogram_sharpen": 15, "three": [15, 26, 30, 42, 44, 45, 49, 79, 100, 101, 102, 103, 131], "sharpen": 15, "fwhm": [15, 28, 73, 75, 76, 77, 79, 83, 84, 145], "wienernos": 15, "numberofhistogrambin": 15, "These": [15, 17, 73, 77, 98, 135, 136], "describ": [15, 53, 62, 68, 71, 73, 75, 76, 153, 164], "deconvolut": [15, 30, 50, 120, 131, 150], "been": [15, 35, 40, 50, 73, 74, 77, 90, 99, 113, 135, 136, 153], "shown": 15, "work": [15, 56, 67, 89, 95, 120, 133, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156], "fairli": 15, "well": 15, "12": [15, 25, 27, 38, 73, 78, 99, 153], "02": [15, 73], "200": [15, 50], "mask_imag": [15, 98, 99], "region": [15, 16, 36, 50, 53, 59, 60, 77, 85, 89, 117, 119, 149, 151, 153, 156], "t1w_mask": [15, 64], "50": [15, 76, 78, 88, 125, 138], "30": [15, 16, 48, 76, 78, 128, 130], "20": [15, 16, 43, 75, 78, 99, 110, 126, 128], "shrink_factor": [15, 16, 126, 128], "shrink": [15, 16], "factor": [15, 16, 46, 99, 100, 101, 102, 103, 153, 156], "weight_imag": [15, 24], "rel": [15, 76, 100, 101, 102, 103, 153], "g": [15, 45, 75, 76, 87, 92, 95, 112, 119, 135, 136, 156], "probabl": [15, 73, 74, 75, 76, 77, 129, 160], "white": [15, 24, 26, 27, 30, 50, 54, 55, 57, 64, 68, 75, 85, 120, 123, 131, 133, 134, 150, 151, 152, 153, 160], "matter": [15, 24, 26, 27, 30, 40, 50, 72, 75, 85, 120, 123, 131, 133, 140, 150, 151, 152, 153, 160, 162], "t1w_pve_0": [15, 26], "bias_imag": [15, 52, 124, 125, 128], "t1w_bia": [15, 52], "negative_valu": 15, "present": [15, 26, 34, 95, 107, 153], "otherwis": [15, 78, 112, 117, 151], "n4c_t1w": [15, 124], "regist": [16, 22, 27, 76, 83, 86, 120, 126, 127, 129, 133, 145, 146, 149, 160], "predefin": 16, "sequenc": [16, 119, 129, 130, 153], "cost": [16, 27, 37], "oper": [16, 44, 112, 142, 150, 156], "metric": [16, 85, 126, 128, 150, 153, 161], "both": [16, 22, 27, 32, 63, 107], "non": [16, 17, 26, 30, 34, 45, 69, 75, 76, 136, 147, 151, 153], "usual": [16, 72, 135, 136, 144], "done": [16, 19, 38, 77, 100, 101, 102, 103, 120, 127, 131, 132, 133, 148, 153], "stage": [16, 98, 129, 130, 143, 160], "affin": [16, 75, 76, 126, 128, 146, 149], "rigid": [16, 24, 27, 126, 128], "ultim": 16, "syn": [16, 128], "see": [16, 24, 27, 50, 74, 77, 98, 99, 128, 138, 140, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 159, 160, 161, 162, 163], "transform_paramet": [16, 126, 128], "initil": [16, 126, 128], "initial_moving_transform": 16, "alreadi": [16, 27, 40, 73, 77], "warpfield": [16, 24], "correct": [16, 24, 34, 35, 43, 78, 84, 87, 99, 120, 125, 128, 129, 131, 132, 138, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 160], "geometr": 16, "distort": [16, 24, 35, 120, 132, 150], "epi": [16, 27, 35, 120, 132, 149, 153, 160], "want": [16, 17, 82, 135], "structur": [16, 27, 59, 60, 77, 80, 81, 82, 137, 149, 153, 160, 161], "could": [16, 30, 31, 32, 33, 34, 35, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 73, 75, 90, 95, 120, 129], "intial_moving_transform": 16, "here": [16, 50, 106, 141, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156], "found": [16, 109, 120, 132, 141, 142, 146, 148, 151, 153], "fmriprep": [16, 128, 146], "mriqc": [16, 53, 55, 57, 58, 61, 62, 68, 86, 87, 88, 96, 121, 122, 123, 125, 126, 127, 128, 138, 146, 148, 151, 153, 160, 161, 164], "niworkflow": [16, 54, 63, 64, 69, 85, 86, 146, 151, 153], "should": [16, 17, 23, 24, 30, 31, 32, 33, 34, 35, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 59, 60, 73, 75, 76, 77, 83, 84, 97, 98, 100, 101, 102, 103, 106, 110, 111, 120, 131, 132, 135, 136, 153], "templat": [16, 45, 53, 66, 67, 76, 83, 86, 121, 128, 138, 151, 152, 160], "collapse_output_transform": 16, "collaps": 16, "initialize_transforms_per_stag": 16, "previou": [16, 38, 74], "genericlabel": [16, 128], "item": [16, 19, 26, 28, 30, 34, 36, 41, 42, 43, 46, 47, 54, 66, 67, 72, 73, 75, 76, 77, 78, 79, 83, 97, 98, 99, 100, 101, 102, 103, 109, 119, 128, 129, 130, 140], "cc": [16, 128], "meansquar": [16, 128], "demon": [16, 128], "gc": [16, 128], "mi": [16, 73, 128], "matt": [16, 126, 128], "avail": [16, 24, 35, 99, 112, 135, 136, 157], "cross": [16, 50, 73, 131], "squar": [16, 27, 38, 42, 45, 97, 99], "inform": [16, 26, 27, 73, 83, 84, 87, 92, 95, 98, 99, 110, 120, 139, 142, 150, 156, 164], "metric_weight": [16, 126, 128], "sum": [16, 44, 46, 75, 76, 153], "per": [16, 26, 37, 46, 50, 75, 78, 92, 98, 99, 100, 101, 102, 103], "output_inverse_warped_imag": 16, "inverse_warped_imag": 16, "w": [16, 76, 153], "w_": 16, "radius_bins_item_trait": 16, "radiu": [16, 50, 88, 153], "bin": [16, 27, 99], "signa_unit": 16, "vox": [16, 37, 42, 76], "mm": [16, 20, 21, 28, 36, 42, 50, 73, 75, 76, 77, 79, 88, 123, 153, 160], "len": 16, "unit": [16, 27, 78, 87, 99, 164], "smoothing_sigma": [16, 126, 128], "compositeaffin": [16, 128], "translat": [16, 77, 92, 128, 129, 130], "gaussiandisplacementfield": [16, 128], "timevaryingvelocityfield": [16, 128], "timevaryingbsplinevelocityfield": [16, 128], "bsplinesyn": [16, 128], "exponenti": [16, 128], "bsplineexponenti": [16, 128], "01": [16, 73], "08": [16, 126, 128], "use_estimate_learning_rate_onc": 16, "learn": [16, 20], "rate": [16, 72, 119], "use_histogram_match": [16, 126], "match": [16, 19, 37, 45, 48, 73, 99, 106, 120, 148, 150], "winsorize_lower_quantil": 16, "005": 16, "quantil": 16, "winsorize_upper_quantil": 16, "995": 16, "upper": [16, 63], "write_composite_transform": 16, "number_of_iter": [16, 38, 126, 128], "07": [16, 126], "8": [16, 30, 38, 57, 75, 78, 79, 98, 99, 100, 101, 102, 103, 110, 119, 128], "convergence_window_s": [16, 126, 128], "window": [16, 27, 33, 43, 99], "size": [16, 18, 25, 27, 33, 40, 42, 50, 56, 73, 76, 77, 89, 92, 99, 100, 101, 102, 103, 151, 153], "fixed_image_mask": 16, "null": [16, 50], "limit": [16, 25], "sampl": [16, 27, 45, 50, 73, 75, 76, 77, 135, 136, 155], "omit": [16, 30, 36, 100, 101, 102, 103], "template_desc": 16, "brain_mask": [16, 20, 21, 48, 86, 91, 93, 126, 131, 132], "initial_moving_transform_com": 16, "center": [16, 18, 100, 101, 102, 103, 153, 155], "invert_initial_moving_transform": 16, "indicatewheth": 16, "invers": [16, 36, 45, 74, 75, 121, 123, 126, 128, 133], "moving_image_mask": 16, "t1w_desc": [16, 19, 20, 21, 126], "10000": [16, 128], "1000": [16, 30, 50, 87, 128, 138, 153], "100": [16, 19, 50, 76, 128], "500": [16, 36, 128], "250": [16, 128], "radius_or_number_of_bin": [16, 126, 128], "other": [16, 18, 50, 54, 73, 75, 76, 78, 99, 100, 101, 102, 103, 106, 113, 118, 119, 120, 141, 143, 144, 145, 153, 156, 160], "56": [16, 92, 110, 126, 128], "random_se": 16, "seed": [16, 48, 50, 120, 133, 150], "random": [16, 50, 57, 126, 128, 135, 136], "gener": [16, 22, 30, 35, 49, 50, 56, 66, 67, 73, 76, 77, 98, 99, 119, 133, 142, 143, 150, 151, 153, 155, 156, 162, 164], "sampling_percentag": [16, 126, 128], "percentag": 16, "strategi": [16, 20], "sampling_strategi": [16, 126, 128], "regular": [16, 128], "composite_transform": [16, 126, 128], "t1w_composit": 16, "inverse_composite_transform": [16, 121, 123, 126, 128], "t1w_inversecomposit": 16, "w_inverse_t1w": 16, "warped_imag": [16, 126], "w_t1w": 16, "dki": [17, 38, 147], "expans": [17, 99], "dti": [17, 38], "quantif": 17, "water": 17, "biolog": [17, 120, 133], "tissu": [17, 30, 32, 37, 50, 59, 60, 61, 75, 76, 80, 81, 82, 83, 120, 131, 137, 145, 149, 150, 153, 160], "us": [17, 19, 20, 24, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 53, 56, 73, 74, 75, 76, 77, 78, 81, 82, 85, 87, 89, 91, 93, 95, 97, 99, 100, 101, 102, 103, 106, 110, 112, 117, 118, 119, 120, 121, 123, 124, 128, 129, 131, 133, 134, 138, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 159, 160, 161, 162, 163, 164], "propos": [17, 43, 160], "dipi": [17, 18, 118, 143, 144, 160], "sinc": [17, 27, 42, 45, 83, 84], "standard": [17, 18, 22, 28, 45, 71, 75, 76, 93, 100, 101, 102, 103, 117, 119, 151, 153, 162], "statist": [17, 35, 37, 92, 119, 139, 140, 143, 150, 151, 154, 155, 163], "anisotropi": [17, 49], "fa": [17, 47, 49, 50], "md": 17, "axial": [17, 43, 49, 96, 164], "ad": [17, 42, 49, 74, 164], "radial": [17, 49], "rd": [17, 49], "In": [17, 30, 31, 32, 33, 34, 35, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 77, 81, 82, 98, 99, 120, 131, 132, 141, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156], "addit": [17, 35, 37, 40, 74, 77, 99, 100, 101, 102, 103], "mk": 17, "ak": 17, "rk": 17, "mkt": 17, "kfa": 17, "depend": [17, 27, 81, 82, 103, 119], "in_dwi": [17, 42, 120, 131, 132, 133], "multi": [17, 30, 47, 99, 120, 146, 150], "shell": [17, 30, 47, 120, 150], "acquir": [17, 35, 43, 99, 119, 152], "dwi": [17, 30, 35, 38, 42, 43, 44, 45, 47, 50, 51, 120, 150, 159, 160], "dwi_bvec": 17, "bvec": [17, 30, 31, 32, 33, 34, 35, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 120, 132], "suppli": [17, 27, 42, 46, 117, 120, 132], "wil": [17, 42], "dwi_bval": 17, "bval": [17, 30, 31, 32, 33, 34, 35, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 120, 132], "in_mask": [17, 18, 30, 31, 33, 38, 39, 40, 47, 84, 87, 121, 153], "brain": [17, 18, 19, 20, 21, 24, 29, 30, 37, 38, 39, 40, 47, 48, 59, 60, 71, 77, 84, 85, 86, 87, 90, 91, 92, 100, 101, 102, 103, 119, 126, 128, 131, 132, 138, 145, 149, 150, 153, 159, 160], "dwi_brainmask": [17, 30, 31, 32, 33, 36, 38, 46, 47], "out_fa": 17, "dwi_dki_fa": 17, "out_md": 17, "dwi_dki_md": 17, "out_rd": 17, "dwi_dki_rd": 17, "out_ad": 17, "dwi_dki_ad": 17, "out_mk": 17, "dwi_dki_mk": 17, "out_rk": 17, "dwi_dki_rk": 17, "out_ak": 17, "dwi_dki_ak": 17, "out_mkt": 17, "dwi_dki_mkt": 17, "out_kfa": 17, "dwi_dki_kfa": 17, "jensen": 17, "jh": 17, "2005": 17, "pixel": [18, 153], "specif": [18, 20, 50, 97, 98, 100, 101, 102, 103, 140, 148, 151, 155], "patch": 18, "contrast": [18, 20, 24, 63, 89, 95, 98, 99, 100, 101, 103, 140, 153, 155], "interest": [18, 27, 36, 50, 89, 92, 117, 119, 149, 153, 155, 156], "block_radiu": 18, "block": [18, 99, 148], "noise_model": 18, "rician": 18, "nois": [18, 33, 56, 66, 67, 132, 150, 153, 164], "distribut": [18, 37, 45, 47, 50, 63, 98, 120, 150, 153, 160], "denoise_": 18, "patch_radiu": 18, "func_brain_mask": 18, "noise_mask": 18, "signal": [18, 20, 30, 38, 47, 57, 85, 92, 99, 119, 131, 137, 151, 153], "signal_mask": 18, "deviat": [18, 28, 93, 119, 151, 153, 162], "snr": [18, 122, 143, 151, 153], "ratio": [18, 27, 37], "260": [18, 110], "denoise_func": 18, "articl": 18, "rmin": 19, "rmax": 19, "binval": 19, "binvalnot": 19, "By": [19, 26, 38, 42, 47, 87, 141], "ab": 19, "take": [19, 25, 26, 50, 74, 108, 139], "absolut": [19, 100, 101, 102, 103, 151, 164], "unsign": [19, 79], "bin_col_nul": 19, "its": [19, 30, 40, 77, 78, 99, 109, 139, 141, 153], "column": [19, 91, 92, 93, 99, 110, 140, 164], "get_count_fil": 19, "hit": 19, "ascii": [19, 45], "ntotvox": 19, "pct": 19, "four": 19, "nhit": 19, "total": [19, 35, 43, 45, 98, 120, 132, 164], "nvoxtot": 19, "percent": 19, "out_suffix": 19, "_thresh": 19, "mgz": [19, 20, 21], "zero_edg": 19, "plane": [19, 43, 91, 92, 93, 99], "sure": [19, 73, 77, 78], "zero_slice_edg": 19, "erode2d": 19, "frame_no": 19, "frame": [19, 75, 96, 138], "extract": [19, 20, 21, 24, 90, 120, 132, 133, 137, 145, 149, 150, 151, 160, 162], "label": [19, 71, 80, 123, 137, 151, 153, 164], "globalmean": 19, "count_fil": 19, "pathlik": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 66, 67, 75, 76, 77, 78, 80, 90, 91, 97, 98, 99, 100, 101, 102, 103, 129, 130, 131, 134, 140], "object": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 66, 67, 73, 75, 76, 77, 78, 80, 90, 91, 97, 98, 99, 100, 101, 102, 103, 129, 130, 131, 134, 140, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 160, 164], "contain": [19, 24, 26, 30, 35, 36, 37, 50, 72, 73, 76, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 103, 110, 119, 131, 134, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 162, 163, 164], "t1w_binarize_count_fil": 19, "freesurf": [19, 20, 118, 135, 143, 144, 160], "tool": [20, 27, 118, 142, 143, 150, 165], "mri_synthstrip": [20, 148], "landscap": 20, "modal": [20, 94, 149, 152, 164], "subject": [20, 27, 73, 83, 86, 94, 100, 101, 102, 103, 131, 152, 153, 160], "popul": 20, "leverag": 20, "deep": [20, 85], "synthes": 20, "arbitrari": 20, "train": [20, 148], "segment": [20, 24, 27, 37, 39, 53, 74, 76, 82, 83, 85, 86, 91, 122, 135, 136, 138, 149, 151, 152, 153, 164], "robust": 20, "agnost": 20, "your": [20, 21, 100, 101, 102, 103, 106, 135], "analysi": [20, 21, 92, 98, 100, 101, 102, 103, 117, 119, 155, 159, 160], "cite": [20, 21, 80], "border_mm": [20, 21], "border": [20, 21, 43], "control": [20, 21, 25, 75, 76, 97, 98, 119, 151, 161], "boundari": [20, 21, 24, 27, 39, 120], "no_csf": 20, "exclud": [20, 21, 27, 34, 36, 50, 100, 101, 102, 103], "csf": [20, 21, 24, 26, 30, 32, 47, 51, 71, 75, 81, 82, 123, 131, 133, 160], "out_mask": [20, 21, 124, 125], "binari": [20, 21, 26, 30, 37, 38, 48, 59, 60, 86, 132, 151, 153], "adapt": [21, 53, 54, 55, 57, 58, 61, 62, 63, 64, 65, 68, 69, 70, 83, 84, 86, 87, 88, 96, 121, 122, 123, 125, 126, 127, 128, 151, 153, 156, 160, 164], "mriqc_1": 21, "mriqc_2": 21, "freeesurfer_path": 21, "pt": 21, "altern": 21, "gpu": 21, "cli": [21, 148], "bet2": 22, "betsurf": 22, "scalp": 22, "creat": [22, 25, 30, 56, 66, 67, 76, 77, 89, 95, 98, 117, 120, 140, 145, 151, 153, 155, 160, 164], "involv": [22, 73, 75, 76, 119], "mesh": [22, 50], "vtk": 22, "inskull_mask_fil": 22, "t1w_brain_inskull_mask": 22, "inskull_mesh_fil": 22, "t1w_brain_inskull_mesh": 22, "skullstrip": [22, 118, 124, 144, 145], "t1w_brain": [22, 24], "outskin_mask_fil": 22, "t1w_brain_outskin_mask": [22, 91], "outskin_mesh_fil": 22, "t1w_brain_outskin_mesh": 22, "outskull_mask_fil": 22, "t1w_brain_outskull_mask": 22, "outskull_mesh_fil": 22, "t1w_brain_outskull_mesh": 22, "skull_mask_fil": 22, "t1w_brain_skull_mask": 22, "fast": [22, 24, 31, 40, 48, 99, 135, 149], "in_transfo": 23, "epi2struct": [23, 24], "invert_xfm": 23, "fix_scale_skew": 23, "concat_xfm": 23, "joint": [23, 73], "matric": [23, 149], "in_trasfo_2": 23, "secondari": 23, "scale": [23, 35, 42, 46, 99, 100, 101, 102, 103], "skew": 23, "in_transfo_2": 23, "struc2mni": 23, "epi2struct_concate_struc2mni": 23, "epi_reg": [24, 149], "script": [24, 29, 35, 40, 142, 144, 149], "fsl": [24, 28, 31, 42, 61, 88, 118, 120, 133, 135, 143, 144, 150, 151], "To": [24, 56, 63, 66, 67, 75, 89, 95, 97, 99, 118, 131, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156], "good": [24, 76, 153], "grei": [24, 26, 30, 40, 50, 72, 75, 123, 139, 140, 150, 152, 160], "fiedmap": 24, "simultan": 24, "provid": [24, 27, 29, 36, 37, 39, 40, 42, 44, 47, 48, 50, 73, 77, 120, 132, 135, 136, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 160], "fmap": 24, "fmapmag": 24, "fmapmagbrain": 24, "informatio": 24, "about": [24, 73, 83, 84, 92, 95, 139], "echospac": [24, 27], "pedir": [24, 27], "in_epi": [24, 84], "bold": [24, 84, 85, 87, 89, 95, 96, 119, 128, 137, 145, 151, 153, 160, 164], "in_t1": 24, "obtain": [24, 27, 32, 74, 81, 82, 90, 119, 135, 139, 153, 164], "betsurfacesextract": [24, 118, 137, 144, 149], "no_clean": 24, "clean": 24, "up": [24, 30, 78, 95], "intermedi": [24, 35], "no_fmapreg": 24, "t1": [24, 26, 40, 47, 80, 119, 129, 130, 133, 145], "wmseg": 24, "t1w_wmseg": 24, "weight_spac": 24, "fieldmap": [24, 27], "rad": [24, 27, 153], "magnitud": [24, 49, 151], "wholehead": 24, "fmap_mag": 24, "y": [24, 25, 27, 45, 48, 50, 73, 76, 77, 79, 120, 134, 153, 164], "phase": [24, 27, 35, 73, 77, 120, 153], "encod": [24, 27, 35, 73, 77, 120, 148, 153], "effect": [24, 75, 76, 92, 95, 97, 98, 99, 100, 101, 102, 103, 119, 153], "echo": [24, 27, 35, 119, 129, 130, 153], "unwarp": 24, "coregist": [24, 118, 120, 129, 130, 133, 144, 152], "epi2str_ma": 24, "epi2str_inv": 24, "epi2struct_inv": 24, "out_1vol": 24, "epi2struct_1vol": 24, "fmap2epi_mat": 24, "epi2struct_fieldmaprads2epi": 24, "fmap2str_mat": 24, "epi2struct_fieldmap2str": 24, "fmap_epi": 24, "fmap_str": 24, "epi2struct_fieldmaprads2str": 24, "fmapmag_str": 24, "fullwarp": 24, "epi2struct_warp": 24, "shiftmap": 24, "epi2struct_fieldmaprads2epi_shift": 24, "seg": [24, 128, 153], "grai": [24, 85, 120, 131, 133, 153, 162], "epi2struct_fast_seg": 24, "wmedg": 24, "visual": [24, 26], "epi2struct_fast_wmedg": 24, "wmseg_out": 24, "flirt": [24, 51, 118, 120, 133, 137, 144, 149], "bbr": [24, 27], "epi2struct_fast_wmseg": 24, "taken": [25, 77], "new": [25, 95, 97, 153], "just": 25, "argument": [25, 27, 50, 164], "inclus": [25, 36, 50], "would": [25, 77, 95, 99], "t1w_5tt": [25, 39, 40, 50], "t_min": 25, "mininum": 25, "t_size": 25, "x_min": 25, "x_size": 25, "y_min": 25, "y_size": 25, "z_min": 25, "z_size": 25, "roi_fil": 25, "5tt_roi": 25, "class": [26, 61, 75, 76, 77, 96, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 159, 160, 161, 162, 163, 164], "t2": [26, 40, 117, 119, 129, 130], "pd": 26, "chang": [26, 27, 42, 87, 98, 99, 119, 142, 148], "img_typ": 26, "int": [26, 27, 45, 65, 69, 71, 77, 79, 85, 99, 100, 101, 102, 103, 153], "aid": 26, "identifi": 26, "mixeltyp": 26, "classif": 26, "mixtur": [26, 119], "That": 26, "again": 26, "those": [26, 33, 36, 39, 48, 75, 76, 99, 106, 153], "t1w_mixeltyp": 26, "partial_volume_fil": 26, "partial": [26, 153], "where": [26, 27, 45, 73, 77, 95, 98, 100, 101, 102, 103, 133, 139, 153, 164], "proport": [26, 99, 100, 101, 102, 103, 153], "t1w_pve_1": 26, "t1w_pve_2": 26, "partial_volume_map": 26, "pveseg": 26, "best": [26, 73, 152, 164], "hard": 26, "follow": [26, 38, 73, 74, 75, 95, 99, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 148, 153, 155, 160], "quick": 26, "assess": [26, 117, 119, 153], "t1w_pveseg": 26, "tissue_class_fil": 26, "t1w_seg_0": 26, "t1w_seg_1": 26, "t1w_seg_2": 26, "tissue_class_map": 26, "classifi": [26, 151], "singl": [26, 27, 30, 34, 35, 47, 75, 79, 95, 99, 150, 153], "necessari": [26, 73, 89, 98, 99, 131, 133, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156], "etc": [26, 27, 45, 50, 75, 95, 99, 119, 134, 151, 153, 156], "t1w_seg": [26, 61, 62], "fmrib": 27, "calcul": [27, 39, 63, 73, 78, 87, 89, 95, 100, 101, 102, 103, 139, 142, 143, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 161, 163], "get_registered_fil": 27, "apply_xfm": [27, 137], "apply_isoxfm": 27, "still": 27, "field": [27, 35, 45, 46, 71, 74, 75, 76, 119, 120, 124, 125, 128, 129, 130, 132, 134, 146, 150, 151, 164], "view": 27, "fov": 27, "b0mean": 27, "in_refer": 27, "in_matrix_fil": 27, "isotrop": [27, 73, 77], "resampl": [27, 56, 57, 67, 76, 99, 139, 148, 151], "4x4": [27, 45], "matrix_struct_to_diff": 27, "angle_rep": 27, "euler": 27, "quaternion": 27, "represent": [27, 100, 101, 102, 103], "angl": [27, 50], "bbrslope": 27, "slope": 27, "bbrtype": 27, "sign": [27, 79], "global_ab": 27, "local_abl": 27, "bgvalu": 27, "background": [27, 53, 75, 153, 164], "outsid": [27, 36, 73, 77, 153], "256": [27, 73, 110], "coarse_search": 27, "60": [27, 48, 50, 75, 76, 110], "coars": [27, 73], "delta": 27, "mutualinfo": 27, "corratio": 27, "normcor": 27, "normi": 27, "leastsq": 27, "labeldiff": 27, "There": [27, 100, 101, 102, 103], "main": [27, 46, 98, 99, 119, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156], "normalis": [27, 73, 76, 91, 92, 93, 99, 100, 101, 102, 103, 129, 130, 135, 150, 152], "recommend": [27, 73, 77, 98], "try": [27, 48, 75, 76, 164], "cost_func": 27, "searchcost": 27, "data_typ": [27, 79], "char": [27, 79], "short": [27, 79], "dof": [27, 133], "7": [27, 46, 47, 73, 75, 76, 77, 78, 81, 82, 99, 100, 101, 102, 103, 148], "freedom": 27, "larg": [27, 80], "appropri": [27, 50, 150], "scanner": [27, 119, 153], "rigid2d": 27, "fine_search": 27, "18": [27, 78], "field_map_regist": 27, "fieldmapmask": 27, "field_map_registered_mask": 27, "force_sc": 27, "even": 27, "re": [27, 71, 73], "interp": [27, 66, 73, 76, 77, 133], "trilinear": [27, 66, 73, 76, 77], "nearestneighbour": [27, 133, 137], "reslic": [27, 73, 77, 150], "applyxfm": 27, "in_weight": 27, "ref_weight": 27, "area": 27, "increas": [27, 75, 76, 119, 133], "import": [27, 75, 156], "ventricl": 27, "introduc": [27, 99], "artifici": 27, "wherea": [27, 77], "min_sampl": 27, "no_clamp": 27, "clampinp": 27, "no_resampl": 27, "no_resample_blur": 27, "blur": [27, 153], "downsampl": [27, 50], "no_search": 27, "angular": [27, 37, 88], "padding_s": 27, "mode": 27, "bodi": 27, "save_log": 27, "log": [27, 38, 117, 119, 150, 153], "schedul": 27, "what": [27, 83, 84], "how": [27, 29, 49, 151], "optimis": [27, 48], "fsldir": 27, "flirtsch": 27, "sch2d_6dof": 27, "searchr_x": 27, "90": [27, 76], "searchr_i": 27, "searchr_z": 27, "sinc_width": 27, "full": [27, 28, 75, 76, 79, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 159, 160, 161, 162, 163], "width": [27, 28, 45, 75, 76, 77, 79, 99, 164], "sinc_window": 27, "rectangular": 27, "han": [27, 99], "blackman": 27, "use_qform": 27, "sform": 27, "qform": 27, "wm_seg": 27, "wmcoord": 27, "coordin": [27, 42, 50], "wm_coor": 27, "wmnorm": 27, "wm_norm": 27, "b0mean_registered_with_t1w": 27, "out_log": 27, "b0mean_flirt_log": 27, "out_matrix": 27, "b0mean_t1w_flirt": 27, "faq": 27, "nput": [28, 32], "uncompress": [28, 73, 76, 77, 78, 79, 89, 91, 109, 117, 119, 129, 130], "img": [28, 67, 73, 75, 76, 77, 79, 109, 117, 119, 129, 134, 153], "hdr": [28, 67, 73, 75, 76, 77, 79, 109, 117, 119, 129, 134], "half": [28, 35, 45, 75, 76, 79], "kernel": [28, 73, 77, 79, 131], "Will": 28, "convert": [28, 30, 31, 32, 33, 34, 35, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 133, 150], "intern": [28, 112, 156], "approxim": [28, 48, 75, 76], "355": 28, "s_": 28, "filter": [28, 33, 39, 63, 72, 74, 80, 99, 106, 108, 112, 115, 120, 150, 153, 155, 156], "55": [28, 50], "s_func": 28, "matlab": [29, 142, 144, 156], "licens": [29, 80], "disclaim": [29, 135, 136], "proof": 29, "concept": 29, "develop": [29, 77, 95], "show": [29, 47, 85, 131, 153, 164], "wrap": [29, 73, 77, 144], "mia": [29, 98, 135, 136], "absenc": 29, "better": [29, 73, 77, 153], "solut": 29, "mcr": 29, "4929083": 29, "fiber": [30, 47, 50, 120, 160], "densiti": [30, 37, 45, 50, 120, 150], "basi": [30, 46, 99], "responsesddholland": [30, 118, 144, 150], "aim": [30, 47, 57, 100, 101, 102, 103, 120, 131, 132, 133], "amount": [30, 45, 99], "diffus": [30, 31, 32, 33, 34, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 120, 131, 132, 133, 150, 159], "orthogon": 30, "spheric": [30, 37, 45, 49, 50, 120, 131, 150], "mrtrix": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 118, 133, 143, 144], "dwi2fod": [30, 150], "command": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 145, 150], "mia_process": [30, 31, 32, 33, 34, 35, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 73, 74, 75, 76, 77, 78, 79, 99, 100, 101, 102, 103, 135, 136, 141], "mif": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 120, 131, 132, 133], "mrconvert": [30, 31, 32, 33, 34, 35, 38, 41, 43, 44, 45, 46, 47, 48, 49, 50, 118, 144, 150], "case": [30, 31, 32, 33, 34, 35, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 95, 98, 153], "wm_txt": 30, "wm": [30, 47, 50, 71, 74, 75, 81, 82, 123, 131, 153, 160], "respons": [30, 51, 98, 99, 117, 120, 131, 150, 156], "text": [30, 35, 36, 37, 42, 47, 51, 119, 153], "csd": [30, 120, 131], "row": [30, 85, 110, 153, 164], "msmt_csd": [30, 131], "dwi_response_wm": [30, 47], "uniqu": [30, 131], "comparti": 30, "get_predicted_sign": [30, 38, 131], "predict": [30, 38, 131], "csf_txt": 30, "cerebrospin": [30, 85, 123, 131, 160], "fluid": [30, 85, 131], "dwi_response_csf": [30, 47], "gm_txt": 30, "gm": [30, 37, 47, 50, 71, 74, 75, 81, 82, 100, 101, 102, 103, 123, 131, 153, 160], "dwi_response_gm": [30, 47], "in_direct": 30, "az": 30, "el": 30, "pair": [30, 35, 87, 132], "over": [30, 45, 50, 99, 139, 145], "constraint": 30, "max_sh": [30, 47], "harmon": [30, 37, 45, 47, 68, 83, 118, 120, 135, 144, 150, 151], "lmax": 30, "3000": [30, 34, 85], "wm_odf": 30, "odf": 30, "dwi_wm_odf": 30, "gm_odf": 30, "dwi_gm_odf": 30, "csf_odf": 30, "dwi_csf_odf": 30, "predicted_signal_fil": [30, 38, 131], "dwi_odf_predicted_sign": 30, "use_fsl": 31, "configur": [31, 35], "populs": [31, 35, 141, 146, 148, 151, 152], "use_an": 31, "ant": [31, 118, 124, 125, 128, 143, 144, 151], "n4": [31, 146], "bia": [31, 34, 76, 83, 120, 125, 128, 129, 132, 146, 151, 152, 160], "dwi_unbia": 31, "bias_field_map": 31, "dwi_bias_field_map": 31, "includ": [32, 34, 35, 36, 50, 71, 77, 92, 97, 98, 99, 100, 101, 102, 103, 117, 119, 141, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156], "dwi2mask": [32, 35, 150], "marchenko": 33, "pastur": 33, "pca": [33, 150], "pipelin": [33, 73, 106, 113, 118, 140, 141, 142, 153, 156, 165], "extend": [33, 94], "dwi_denois": 33, "noise_map": 33, "dwi_noise_map": 33, "certain": [34, 118, 150], "bzero": 34, "nobzero": 34, "singleshel": 34, "enforc": 34, "presenc": [34, 37], "no_bzero": 34, "them": [34, 37, 75, 76, 160, 164], "gradient": [34, 42, 122, 151], "dwi_bzero": 34, "inhomogen": [35, 120, 132, 150, 153], "dwifslpreproc": [35, 150], "rpe_opt": [35, 132], "rpe_non": 35, "rpe_al": 35, "oppos": [35, 120, 132], "parametr": [35, 75, 99, 164], "fill": [35, 56, 67, 89, 95, 100, 101, 102, 103, 111, 151, 153], "concaten": [35, 44, 59, 112, 132, 150, 156], "rpe_pair": 35, "typic": [35, 73, 75, 77, 99, 119], "ha": [35, 40, 50, 73, 99, 113, 135, 136], "se_epi_corr": 35, "consist": [35, 54, 55, 57, 62, 64, 68, 75], "spin": 35, "part": [35, 72, 117], "rpe_air": 35, "se": 35, "possess": 35, "while": [35, 50, 73, 75, 76, 107, 119], "opposit": [35, 120, 132], "ident": [35, 45, 73, 77, 98, 135, 136, 148], "readout": [35, 120, 132, 153], "dwi_b0_inverse_phas": 35, "pe_dir": 35, "ap": [35, 120, 132], "pa": [35, 120, 132], "lr": [35, 120, 132], "rl": [35, 120, 132], "anterior": [35, 76, 120, 132, 153], "posterior": [35, 120, 132, 153], "left": [35, 43, 95, 120, 132, 137, 153], "right": [35, 43, 95, 113, 120, 132, 137, 153], "toleft": [35, 120, 132], "align_seepi": 35, "achiev": [35, 119], "eddyqc_al": 35, "keep": [35, 40, 50], "eddy_qc": 35, "instal": [35, 118, 135], "eddyqc_text": 35, "variou": [35, 119, 142, 143, 150, 157, 160, 162], "nocleanup": 35, "delet": [35, 66, 67, 89, 151, 156, 164], "scratch": 35, "directori": [35, 56, 67, 89, 95, 100, 101, 102, 103, 112, 142, 151, 153, 156, 164], "complet": [35, 141, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 159, 160, 161, 162, 163], "ro_tim": 35, "eddy_mask": 35, "automaticcali": 35, "dwi_brain_mask": 35, "eddy_opt": [35, 132], "line": [35, 91, 92, 93, 94, 164], "slm": [35, 132], "repol": 35, "data_is_shel": [35, 132], "eddy_slspec": 35, "group": [35, 103, 131, 153, 164], "topup_opt": 35, "preprocess": [35, 118, 120, 131, 133, 140, 142, 143, 153, 157], "dwi_fslpreproc": 35, "tckedit": [36, 150], "in_track": [36, 37], "tck": [36, 37, 50, 120], "select": [36, 37, 42, 47, 49, 50, 73, 74, 75, 77, 99, 112, 113, 131, 134, 150, 156], "streamlin": [36, 37, 120, 133, 150], "criteria": [36, 50], "fail": 36, "criterion": [36, 153], "vertic": 36, "written": [36, 73, 76, 77, 100, 101, 102, 103, 111, 112, 156], "ends_onli": 36, "test": [36, 98, 99, 155], "end": [36, 55, 63, 117, 119, 120, 133, 153], "against": 36, "roi": [36, 50, 81, 82, 89, 95, 112, 137, 149, 151, 153, 156, 162], "get_tck_weights_out_desc": 36, "roi_excl": [36, 50], "enter": [36, 50, 79, 100, 101, 102, 103, 119], "discard": [36, 50, 65, 138], "roi_incl": [36, 50], "travers": [36, 50], "accept": [36, 50, 73, 117, 164], "roi_incl_ord": [36, 50], "inclusion_ord": [36, 50], "roi_mask": [36, 50], "exit": [36, 50, 100, 101, 102, 103, 142], "truncat": [36, 50, 56, 66, 67], "maxlength": 36, "26": [36, 78, 99, 110, 153], "minlength": 36, "desir": [36, 50, 95], "propag": [36, 50], "20000": 36, "skip": [36, 96], "commenc": 36, "maxweight": 36, "minweight": 36, "tck_weights_in": 36, "tck_weight": 36, "tracks_out": [36, 37], "tracks_edit": 36, "tck_weights_out": 36, "tracks_tck_weight": 36, "whole": [37, 39, 47, 73, 77, 90, 112, 120, 150, 159], "fibr": [37, 45, 47, 120, 131, 150], "fod": [37, 45, 50, 120, 150], "lobe": [37, 80, 81, 82, 120, 137, 150], "integr": [37, 50, 120, 150], "tcksift": [37, 150], "in_fod": 37, "wm_fod_norm": 37, "sift": [37, 50, 120], "fd_scale_gm": 37, "conjunct": 37, "act": [37, 40, 50, 120, 133, 150], "heurist": 37, "downsiz": 37, "no_dilate_lut": 37, "lookup": [37, 48], "tabl": [37, 48], "precis": [37, 50, 69, 77, 135, 136], "tangent": 37, "li": 37, "spread": [37, 45], "make_null_lob": 37, "cover": [37, 164], "amplitud": [37, 48, 50], "remove_untrack": 37, "attribut": [37, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156], "get_csv_fil": 37, "csv": [37, 60, 80, 90, 110, 117, 119, 156], "get_mu_fil": 37, "get_out_selection_fil": 37, "proc_mask": 37, "act_imag": [37, 50], "five": [37, 50], "deriv": [37, 40, 49, 92, 97, 98, 99, 119, 148], "5tt_coreg": [37, 133], "fd_thresh_valu": 37, "term_ratio_valu": 37, "termin": [37, 50, 120], "reduct": 37, "term_mu_valu": 37, "onc": [37, 50, 63], "proportion": 37, "reach": [37, 50], "tracks_sift": [37, 120], "csv_file_out": 37, "tracks_tcksift_stat": 37, "mu_file_out": 37, "mu": 37, "tracks_tcksift_mu": 37, "selection_file_out": 37, "tracks_tcksift_select": 37, "defaul": [38, 137], "kurtosi": [38, 153], "wl": 38, "empir": 38, "ordinari": 38, "ol": 38, "ols_opt": 38, "iwl": 38, "numbr": 38, "choos": [38, 42, 50, 73, 81, 82, 94, 100, 101, 102, 103, 120], "dwi2tensor": [38, 150], "estimate_dkt": 38, "get_output_b0": 38, "b0": [38, 133, 160], "contribut": [38, 92], "number_of_it": 38, "reweight": 38, "ma": 38, "d11": 38, "d22": 38, "d33": 38, "d12": 38, "d13": 38, "d23": 38, "dwi_dti": [38, 49], "out_dkt": 38, "w1111": 38, "w2222": 38, "w3333": 38, "w1112": 38, "w1113": 38, "w1222": 38, "w1333": 38, "w2223": 38, "w2333": 38, "11": [38, 78, 110, 153], "w1122": 38, "w1133": 38, "w2233": 38, "14": [38, 78, 99], "w1123": 38, "w1223": 38, "w1233": 38, "dwi_dki": 38, "out_b0": 38, "dwi_b0": 38, "dwi_dti_predicted_sign": 38, "5tt2gmwmi": [39, 150], "5tt": [39, 50, 133, 150], "generate5ttfsl": [39, 118, 144, 150], "accord": [39, 72, 78, 80, 146], "lie": 39, "upon": 39, "brainmask": [39, 40, 138], "t1w_5tt_gmwmseed": 39, "suitabl": [40, 73, 77, 150], "constrain": [40, 50, 120, 131, 133], "tractographi": [40, 118, 133, 144, 150, 159], "5ttgen": [40, 150], "no_crop": 40, "reduc": [40, 50, 120], "sgm_amyg_hipp": 40, "amygdala": 40, "hippocampi": 40, "cortic": [40, 81, 82, 85, 133], "premask": 40, "fasl": 40, "t2_imag": 40, "dwi1": 41, "dwi2": 41, "out_file_nam": [41, 44], "out_file_format": 42, "export_bvec_bv": 42, "export": [42, 113], "retain": [42, 72], "fourth": [42, 98], "begin": [42, 89, 96, 112, 151], "24": [42, 78, 99], "report": [42, 80, 118, 119, 135, 136, 142, 143, 157, 165], "25": [42, 50, 78, 128], "0mm": 42, "5mm": 42, "respect": [42, 164], "leav": 42, "bval_scal": 42, "ye": 42, "enabl": [42, 73, 77], "disabl": [42, 87], "dw": 42, "norm": [42, 44, 126, 151], "grad_fil": 42, "scheme": 42, "diff_mrtrix_format": 42, "in_bvec": 42, "in_bval": 42, "bavl": 42, "out_bvec": 42, "out_bval": 42, "artefact": [43, 132], "mri": [43, 73, 75, 76, 77, 119, 145, 153, 161], "subvoxel": 43, "kellner": 43, "et": [43, 87, 153], "al": [43, 87, 153], "motion": [43, 73, 77, 84, 85, 87, 88, 119, 120, 132, 138, 153, 160], "dwipreproc": [43, 118, 144, 150], "wa": [43, 73, 77, 112, 113, 142, 156], "coron": 43, "sagitt": 43, "maxw": 43, "variat": [43, 75, 76, 117, 119, 135, 136], "tv": 43, "minw": 43, "nshift": 43, "discret": 43, "subpixel": 43, "unring": [43, 120, 132], "dwi_unring": 43, "product": [44, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156], "rm": 44, "var": 44, "std": [44, 70, 89], "absmax": 44, "magmax": 44, "sdt": 44, "absmin": 44, "thu": [44, 72], "oerat": 44, "mean_along_axis3": 44, "dwi_mean": 44, "modifi": [45, 99, 149, 151], "reorient": 45, "apodis": 45, "4th": [45, 50, 75, 99], "antipod": 45, "symmetr": 45, "28": [45, 78, 99], "fod_reori": 45, "nearest": [45, 73, 76, 77, 100, 101, 102, 103], "root": 45, "midway_spac": 45, "midwai": 45, "template_imag": 45, "warp_imag": 45, "linear_transform": 45, "3x4": 45, "convent": 45, "flix_ax": 45, "flip": 45, "replace_fil": 45, "oversample_factor": 45, "target": [45, 73, 148], "deform": [45, 74, 75, 129, 134], "deformation_field": [45, 76], "warp_full_imag": 45, "5d": 45, "mrregist": 45, "deformation_field_5d": 45, "fod_modul": 45, "jac": 45, "modul": [45, 49, 75, 99, 141, 143, 144, 154, 157, 165], "preserv": [45, 79], "appar": [45, 49], "bundl": 45, "jacobian": 45, "fod_direction_fil": 45, "dwi_transform": 45, "dwi_wmfod": 46, "dwi_gmfod": 46, "dwi_csffod": 46, "order_numb": 46, "niter_numb": 46, "potenti": [46, 119], "loop": 46, "inner": 46, "updat": [46, 164], "balanc": 46, "reference_numb": 46, "282095": 46, "posit": [46, 50, 63, 77, 108, 115], "compart": [46, 131], "balanced_numb": 46, "incorpor": 46, "nomalis": 46, "dwi_wmfod_norm": 46, "dwi_gmfod_norm": 46, "dwi_csffod_norm": 46, "unsupervis": 47, "decompos": 47, "smaller": [47, 77], "individu": [47, 98, 117, 164], "dwi2respons": [47, 150], "fa_thresh": 47, "versu": [47, 77], "get_final_voxel": 47, "were": [47, 98, 99], "construct": [47, 95], "basu": 47, "tisuu": 47, "40": [47, 76, 78, 110], "wm_algo": 47, "tax": 47, "tournier": 47, "extern": 47, "2019": 47, "csf_file": 47, "wm_file": 47, "gm_file": 47, "voxels_imag": 47, "dwi_response_voxel": 47, "sh2peak": [48, 150], "in_sh_coeff": 48, "sh": 48, "wm_fod": 48, "num": 48, "associ": [48, 59, 60, 92, 98, 99, 112, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156], "faster": [48, 75, 76, 77], "phi": 48, "theta": 48, "peaks_imag": 48, "thresh_valu": 48, "greater": [48, 151], "consid": [48, 87], "seeds_fil": 48, "restart": 48, "output_imag": 48, "turn": [48, 120], "wm_fod_peak": 48, "adc": 49, "planar": [49, 119, 129, 130], "eigenvalu": 49, "eigenvector": 49, "tensor2metr": [49, 150], "eigval": 49, "get_ad": 49, "get_adc": 49, "get_cl": 49, "westin": 49, "shape": [49, 55, 153, 156], "get_cp": 49, "get_c": 49, "get_fa": 49, "get_rd": 49, "get_valu": 49, "get_vector": 49, "computeth": 49, "ad_fil": 49, "dwi_dti_ad": 49, "adc_fil": 49, "dwi_dti_adc": 49, "cl_file": 49, "dwi_dti_cl": 49, "cp_file": 49, "dwi_dti_cp": 49, "cs_file": 49, "dwi_dti_c": 49, "fa_fil": 49, "dwi_dti_fa": 49, "rd_file": 49, "dwi_dti_rd": 49, "value_fil": 49, "dwi_dti_valu": 49, "vector_fil": 49, "dwi_dti_vector": 49, "tckgen": [50, 150], "At": 50, "mechan": 50, "ifod2": 50, "fact": [50, 99, 120], "ifod1": 50, "nulldist": 50, "sd_stream": 50, "tensor_det": 50, "tensor_prob": 50, "assign": [50, 142], "continu": [50, 119], "track": [50, 120, 133, 150], "sd": 50, "determinist": 50, "probabilist": 50, "cutoff": [50, 75, 76], "nopreselectcompt": 50, "pre": [50, 117, 143, 150, 151, 160], "use_rk4": 50, "rung": 50, "kutta": 50, "tracto_seed_unidirect": 50, "tracto_get_output_se": 50, "locat": [50, 85], "success": [50, 73, 141, 142], "backtrack": 50, "crop_at_gmwmi": 50, "endpoint": 50, "interfac": [50, 75, 141, 150, 151], "nulldist1": 50, "45": [50, 78], "nulldist2": 50, "downsample_factor": 50, "max_lenght": 50, "voxels": 50, "min_lenght": 50, "step_siz": 50, "rk4": 50, "32": [50, 78, 99, 110, 156], "trial": [50, 99], "5000": 50, "seed_dynam": 50, "dynam": [50, 98, 117], "improv": [50, 77, 120], "reconstruct": [50, 153], "substitut": 50, "seed_gmwmi": 50, "framework": 50, "gmwmseed_coreg": [50, 133], "seed_grid_voxel": 50, "place": 50, "grid": [50, 148], "grid_siz": 50, "27": [50, 78, 99], "mesh_grid": 50, "seed_imag": 50, "entir": 50, "seed_reject": 50, "reject": [50, 120], "seed_rnd_voxel": 50, "placement": 50, "seed_spher": 50, "xyz": 50, "r": [50, 73, 77, 95, 104, 105, 112, 140, 153], "95": [50, 153], "tracto_seeds_numb": 50, "attempt": 50, "until": 50, "OR": 50, "request": 50, "2000": 50, "tracto_max_attempts_per_seed_numb": 50, "enough": 50, "ensur": [50, 117, 119], "actual": [50, 72, 83, 84, 108, 115], "plausibl": [50, 120, 133], "prematur": 50, "unabl": 50, "tracto_seed_cutoff": 50, "cut": 50, "tracto_seed_direct": 50, "Of": 50, "ifod_pow": 50, "ifod": 50, "rais": 50, "power": [50, 87, 153], "nsampl": 50, "ifod2_n_sampl": 50, "2nd": [50, 73, 76, 77, 99], "dwi_tracto": 50, "dwi__tracto_out_se": 50, "transformconvert": [51, 150], "in_transform": 51, "diff2struct_fsl": 51, "out_transform": 51, "t1w_inu": 52, "paper": [53, 62, 68], "mortamet": [53, 62, 68], "colleagu": [53, 62, 68], "workflow": [53, 55, 57, 58, 61, 62, 68, 96, 121, 122, 123, 126, 151, 160, 161], "head_mask": [53, 91, 121], "head": [53, 73, 77, 78, 83, 87, 121, 124, 125, 135, 138, 153, 160], "t1w_outskin_mask": 53, "nasion_post_mask": 53, "t_tpl": [53, 86, 128, 138], "mni152nlin2009casym_r": [53, 71, 83, 85, 86, 123, 128, 136, 138], "01_desc": [53, 85, 86, 128, 136, 138], "rot_mask": 53, "t1w_rotmask": [53, 68, 83], "out_art_mask": [53, 121], "art_t1w_mask": [53, 83, 91, 121], "out_hat_mask": [53, 121], "hat": [53, 83, 91, 153, 160], "hat_t1w_mask": [53, 83, 121], "out_air_mask": [53, 121], "air": [53, 75, 83, 91, 123, 135, 151, 153, 160], "air_t1w_mask": [53, 83, 91, 121], "carreful": [54, 55, 57, 62, 64, 68, 106], "overwritten": [54, 55, 56, 57, 62, 64, 68, 89, 97, 98, 100, 101, 102, 103, 153], "element": [54, 75, 76, 89, 95, 98, 99, 112, 114, 115, 151, 153, 155, 156], "path": [54, 56, 61, 62, 63, 64, 68, 69, 70, 71, 72, 75, 78, 107, 112, 114, 142, 153, 164], "_bin": 54, "thresh_low": 54, "applic": [54, 72], "t1w_bin": 54, "nibabel": [55, 151, 164], "squeeze_imag": 55, "reorder": 55, "closest": 55, "canon": [55, 99, 117], "as_closest_canon": 55, "images_to_convolv": [56, 151], "convolve_with": [56, 151], "Then": [56, 151], "convolv": [56, 89, 99, 117, 151, 153], "resiz": [56, 66, 67, 89, 151, 153], "patientname_data": [56, 89, 95, 112, 151, 153, 156], "roi_data": [56, 67, 89, 112, 139, 151, 153, 156], "convroi_bold": [56, 139, 151], "receiv": [56, 67, 89, 95, 151, 153], "runtim": [56, 67, 89, 95, 151, 153], "correctli": [56, 67, 89, 95, 151, 153], "databas": [56, 67, 78, 85, 89, 95, 98, 99, 111, 112, 139, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 164], "patientnam": [56, 67, 89, 95, 111, 112, 139, 151, 153, 156], "tag": [56, 67, 89, 95, 111, 112, 139, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 164], "elimin": [56, 66, 67], "below": [56, 66, 67, 72, 78], "therefor": [56, 66, 67, 74, 78, 139], "aca_l": [56, 112], "aca_r": [56, 112], "acm_l": [56, 112], "acm_r": [56, 112], "out_imag": [56, 67], "conv": [56, 89], "patient": [56, 67, 89, 92, 95, 111, 112, 119, 139, 153, 156], "name_data": [56, 67, 89, 95, 112, 139], "convaca_l": [56, 67, 89, 139], "convaca_r": [56, 67, 89, 139], "convacm_l": [56, 67, 89, 139], "convacm_r": [56, 67, 89, 139], "excess": 57, "superior": [57, 153], "99": [57, 63, 153], "among": [57, 100, 101, 102, 103], "_enh": 57, "t1w_enh": 57, "seg_fil": [58, 61, 122], "out_snr": 58, "96": [58, 99, 110], "_estimate_snr": 58, "native_structures_sub": [59, 60, 90], "47": [59, 60, 78, 90, 110, 137], "48": [59, 60, 78, 90, 137], "save_each_roi": 59, "save_concate_roi": 59, "extrat": 59, "001_47": 59, "001_48": 59, "out_conc": 59, "001_concate_47_48": 59, "001_bold": [60, 90], "in_seg": 60, "001_bold_spac": 60, "001_bold_extracted_signals_47_48": [60, 90], "nilearn": 60, "niftilabelsmask": 60, "fastseg": [61, 118, 144, 149], "_grad": 61, "scan": [61, 72, 75, 77, 78, 84, 85, 99, 100, 101, 103, 117, 119, 152, 156], "t1w_grad": 61, "As": [62, 68, 100, 101, 102, 103], "decrib": [62, 68], "arfifact": [62, 68], "wm_mask": 62, "whith": 62, "erodemask": 62, "_harmon": 62, "t1w_harmon": 62, "dtype": [63, 79], "robustli": 63, "spike": [63, 84, 85, 87, 91, 93, 118, 138, 143, 145, 153], "denois": [63, 118, 120, 132, 144, 147, 150, 160], "thrown": 63, "awai": 63, "int16": [63, 79], "float32": [63, 69, 79], "uint8": [63, 79], "datatyp": 63, "nonneg": 63, "p_max": 63, "bound": [63, 76], "p_min": 63, "xtension": 63, "t1w_clip": 63, "niworflow": [63, 64, 69], "confound": [65, 70, 119, 151], "n_volumes_to_discard": [65, 69], "confund": [65, 70], "nonsteadystatedetector": [65, 144, 151], "files_to_resampl": [66, 67], "t1w_002": 66, "_003": 66, "suffix_to_delet": 66, "_002": [66, 72], "reprsent": 66, "t1w_003": 66, "_data": 67, "convroi_bold2": [67, 139, 151], "_2": [67, 153], "convaca_l_2": [67, 139], "convaca_r_2": [67, 139], "convacm_l_2": [67, 139], "convacm_r_2": [67, 139], "_rotmask": 68, "max_32bit": 69, "cast": 69, "higher": [69, 73, 77, 87, 92, 97, 99, 119, 153, 156], "encount": 69, "steadi": [69, 136, 151], "state": [69, 136, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156], "_valid": 69, "func_valid": [69, 85, 138], "sanitizeimag": 69, "prefix_stddev": 70, "stddev": 70, "prefix_tsnr": 70, "suffix_stddev": 70, "_stddev": 70, "dev": 70, "suffix_tnsr": 70, "_tsnr": 70, "out_tsnr_fil": 70, "func_tsnr": 70, "out_stddev_fil": 70, "func_stddev": 70, "repositori": 71, "neuroimag": [71, 80, 117, 119, 153], "tempalt": 71, "mni152nlin2009casym": [71, 121, 123, 128, 160], "mnicolin27": 71, "mnipediatricasym": 71, "sever": [71, 99, 120, 131, 137, 150, 156, 164], "entiti": 71, "atla": [71, 152], "particular": [71, 77, 79], "difumo": 71, "scahefer2018": 71, "desc": [71, 106, 121, 126, 128], "descript": [71, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 159, 160, 161, 162, 163, 164], "256dimens": 71, "in_templ": [71, 121, 123, 126, 128], "t2w": [71, 121, 122, 123, 124, 125, 126, 161], "probseg": [71, 123], "t2map": 71, "cach": 71, "tpl": 71, "02_t1w": 71, "c1anat": [72, 75, 129, 134], "c2anat": [72, 75, 129, 134], "c3anat": [72, 75, 129, 134], "c4anat": [72, 75, 129, 134], "c5anat": [72, 75, 129, 134], "gm_filter": 72, "c1": [72, 74, 134], "spm": [72, 74, 88, 92, 97, 98, 99, 118, 134, 143, 144, 151, 153, 154], "syntax": [72, 73, 74, 75, 76, 77, 78, 79, 99, 100, 101, 102, 103, 134], "everyth": 72, "abov": 72, "becom": 72, "multipli": [72, 87], "c1anat_002": 72, "thinsp": [73, 74, 75, 76, 77, 107, 108, 109, 112, 113, 114, 115, 119, 129], "emsp": [73, 74, 75, 76, 77, 107, 108, 109, 112, 113, 114, 115, 119, 129], "ensp": [73, 74, 75, 76, 77, 107, 108, 109, 112, 113, 114, 115, 119, 129], "nbsp": [73, 74, 75, 76, 77, 107, 108, 109, 112, 113, 114, 115, 119, 129], "ref": 73, "remain": [73, 77, 153], "stationari": 73, "sourc": [73, 88, 129, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 159, 160, 161, 162, 163, 164], "downloaded_data": [73, 76, 110, 117, 119], "meanfunc": [73, 77, 108, 129], "jiggl": 73, "anat": [73, 75, 76, 83, 91, 94, 107, 108, 112, 113, 115, 119, 129, 130, 135, 137, 164], "apply_to_fil": [73, 74, 76], "jobtyp": [73, 74, 76, 77, 130], "estwrit": [73, 76, 77, 130], "except": [73, 99, 106], "procedur": [73, 153], "coregistered_sourc": [73, 129], "coregistered_fil": 73, "whose": [73, 95, 139], "rewritten": [73, 77], "subsequ": 73, "filter_files_list": [73, 118, 143, 156], "librari": [73, 74, 112, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 159, 160], "cost_funct": 73, "eoption": [73, 76, 77], "cost_fun": 73, "nmi": 73, "ecc": 73, "ncc": 73, "maximis": 73, "minimis": 73, "inter": [73, 94, 149], "entropi": [73, 153], "sep": [73, 77], "increasingli": 73, "ones": 73, "toler": 73, "tol": 73, "param": [73, 95, 99, 149, 150, 153, 156, 164], "less": 73, "write_interp": [73, 74, 76, 77, 130], "roption": [73, 77], "long": [73, 76, 77, 79], "neighbour": [73, 76, 77, 100, 101, 102, 103], "fastest": [73, 77], "realign": [73, 76, 118, 129, 130, 144, 152], "ok": [73, 76, 77, 164], "pet": [73, 76, 77, 100, 101, 102, 103], "fmri": [73, 76, 77, 87, 92, 117, 119, 140, 153, 155], "becaus": [73, 75, 76, 77], "give": [73, 75, 76, 77, 104, 105, 112, 135, 136, 156], "although": [73, 77], "slower": [73, 77], "write_wrap": [73, 77], "check": [73, 77, 80, 106, 133, 160, 164], "nose": [73, 77], "poke": [73, 77], "No": [73, 75, 76, 77, 99, 100, 101, 102, 103], "realli": [73, 77], "un": [73, 77], "write_mask": [73, 77], "like": [73, 77, 89, 95, 148, 153], "With": [73, 77, 100, 101, 102, 103], "through": [73, 77, 119], "look": [73, 77, 78, 109], "occur": [73, 75, 76, 77, 99], "coregisterd": 73, "capsul": 73, "spm12": [73, 75, 76, 77, 78, 79, 99, 140, 156], "equival": 74, "normalize12": [74, 118, 129, 130, 144, 152], "in_filt": 74, "nativ": [74, 75, 80, 129, 135, 136, 160], "deformation_fil": [74, 76, 134], "togeth": [74, 119, 152, 164], "write_bounding_box": [74, 76], "write_voxel_s": [74, 76], "normalized_fil": [74, 76], "made": [74, 95, 99, 113, 134, 135, 136], "c2": [74, 134], "channel_fil": 75, "channel": 75, "vol": [75, 76], "channel_info": 75, "biasreg": [75, 76], "biasfwhm": [75, 76], "reguralis": 75, "goal": [75, 76], "aris": [75, 76, 153], "due": [75, 76, 87, 99], "artifact": [75, 76, 77, 83, 91, 150, 151, 153, 160], "physic": [75, 76], "veri": [75, 76], "littl": [75, 76], "uniform": [75, 76], "tell": [75, 76], "doesn": [75, 76], "regularis": [75, 76], "00001": [75, 76], "extrem": [75, 76, 85, 153], "light": [75, 76], "heavi": [75, 76], "infin": 75, "smoother": [75, 76], "fewer": [75, 76], "150": [75, 76, 110], "version": [75, 98, 142], "noth": [75, 142], "0001": [75, 76, 130], "tpm": [75, 76], "ngau": 75, "bone": 75, "soft": 75, "dartel": 75, "unmodul": 75, "inf": [75, 76], "ci": 75, "toobox": [75, 142], "rci": 75, "mcwi": 75, "wci": 75, "warping_regular": [75, 76], "rough": [75, 76], "latter": [75, 107], "05": [75, 76, 110, 128], "affine_regular": 75, "affreg": [75, 76], "mni": [75, 76, 80, 121, 123, 129, 160], "eastern": 75, "subj": [75, 76], "sampling_dist": [75, 76], "samp": [75, 76], "write_deformation_field": 75, "disk": 75, "util": [75, 142, 165], "forward": [75, 129, 148], "bias_corrected_imag": [75, 129], "manat": [75, 129], "bias_field_imag": [75, 129], "biasfield_anat": 75, "native_class_imag": [75, 129, 134], "dartel_input_imag": 75, "toolbox": [75, 156], "rc1anat": 75, "rc2anat": 75, "rc3anat": 75, "rc4anat": 75, "rc5anat": 75, "modulated_class_imag": 75, "mwc1anat": 75, "mwc2anat": 75, "mwc3anat": 75, "mwc4anat": 75, "homeusernam": 75, "mwc5anat": 75, "normalized_class_imag": 75, "wc1anat": 75, "wc2anat": 75, "wc3anat": 75, "wc4anat": 75, "wc5anat": 75, "inverse_deformation_field": 75, "surfac": [75, 148, 149], "gifti": 75, "iy_anat": 75, "forward_deformation_field": [75, 129], "y_anat": [75, 76, 129, 134], "transformation_mat": 75, "anat_seg8": 75, "support": 75, "mrf": 75, "cleanup": 75, "image_to_align": 76, "def": 76, "y_": [76, 134], "est": 76, "come": [76, 151], "normalized_imag": 76, "bias_regular": [76, 130], "bias_fwhm": [76, 130], "70": 76, "80": 76, "110": 76, "120": 76, "130": [76, 110], "140": [76, 153], "affine_regularization_typ": 76, "woption": 76, "bb": 76, "box": [76, 94], "commissur": 76, "78": [76, 110], "112": [76, 110], "76": [76, 110], "85": [76, 110], "7nd": 76, "wanat": [76, 92, 129, 130], "code": [77, 119, 156], "contact": 77, "team": [77, 141], "realignment_paramet": [77, 92, 129, 130], "modified_in_fil": 77, "write_which": 77, "realigned_fil": 77, "mean_imag": 77, "qualiti": [77, 145, 151, 153, 161], "speed": 77, "trade": 77, "highest": 77, "register_to_mean": 77, "rtm": 77, "weight_img": 77, "lot": 77, "extra": 77, "seriou": 77, "account": [77, 99, 117, 119], "rfunc": 77, "rp_func": [77, 92, 108, 129, 130, 140], "compat": [78, 87, 98], "verif": 78, "sequenti": [78, 141], "ascend": 78, "descend": 78, "interleav": 78, "middl": 78, "top": 78, "bottom": 78, "down": 78, "foot": 78, "num_slic": 78, "nslice": 78, "initialis": [78, 99, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156], "53": [78, 99], "repetit": [78, 117], "retriev": [78, 99, 112, 156, 164], "000002": 78, "ta": [78, 80], "slice_ord": 78, "ref_slic": 78, "9433981886792453": 78, "13": [78, 92, 110], "16": [78, 99, 148, 151, 153, 156], "17": [78, 99, 110], "19": [78, 99, 153], "21": [78, 99], "22": [78, 110, 126, 127, 128, 135, 136, 138, 148, 151, 160], "23": [78, 99], "29": [78, 110], "31": [78, 99, 110], "33": [78, 110], "34": [78, 99], "36": [78, 99], "37": 78, "38": 78, "39": [78, 99], "41": [78, 99], "42": [78, 99, 110, 153], "43": [78, 99], "44": [78, 110], "46": 78, "49": [78, 99, 110], "51": [78, 110], "52": [78, 99, 110], "refslic": 78, "chosen": [78, 94, 98, 100, 101, 102, 103], "_undefin": 78, "timed_fil": 78, "afunc": 78, "int32": 79, "prec": 79, "float64": 79, "implicit_mask": 79, "im": 79, "impli": [79, 100, 101, 102, 103], "implicit": [79, 100, 101, 102, 103], "smoothed_fil": 79, "sfunc": 79, "docker": [80, 137], "ensembl": 80, "neural": 80, "network": [80, 153], "133": 80, "braincolor": [80, 81, 82], "pierrick": 80, "coup\u00e9": 80, "bori": [80, 151], "mansenc": 80, "micha\u00ebl": 80, "cl\u00e9ment": 80, "r\u00e9mi": 80, "giraud": 80, "baudouin": 80, "deni": 80, "de": 80, "sennevil": 80, "vinh": 80, "thong": 80, "vincent": 80, "lepetit": 80, "jos\u00e9": 80, "v": [80, 97], "manjon": 80, "cnn": 80, "elsevi": 80, "2020": 80, "219": 80, "pp": 80, "117026": 80, "native_t1": 80, "native_t1_t1w": 80, "mni_t1": 80, "mni_t1_t1w": 80, "native_mask": 80, "intracrani": 80, "caviti": 80, "native_mask_t1w": 80, "mni_mask": 80, "mni_masks_t1w": 80, "native_structur": 80, "native_structures_t1w": 80, "mni_structur": 80, "mni_structures_t1w": 80, "native_macrostructur": 80, "macrostructur": [80, 81, 82, 137], "native_macrostructures_t1w": 80, "mni_macrostructur": 80, "mni_macrostructures_t1w": 80, "native_lob": 80, "native_lobes_t1w": 80, "mni_lob": 80, "mni_lobes_t1w": 80, "native_tissu": 80, "native_tissues_t1w": 80, "mni_tissu": 80, "mni_tissues_t1w": 80, "matrix_affin": 80, "itk": 80, "matrix_affine_native_to_mni_t1w": 80, "report_pdf": [80, 94], "volumetri": 80, "pdf": [80, 91, 92, 93, 94, 106, 119, 135, 136, 164], "report_t1w": 80, "report_csv": 80, "cerebrum": [81, 82], "subcortoc": [81, 82], "cerebellum": [81, 82, 85], "brainstem": [81, 82], "volbrain": [81, 82, 118, 137, 144], "labl": 82, "labels_nam": 82, "ex2": 82, "aspect": [83, 84], "compar": [83, 84, 120, 131, 153], "ground": [83, 84], "truth": [83, 84], "json": [83, 84, 91, 93, 106, 138, 164], "in_ra": [83, 123], "airmask": [83, 153], "artmask": [83, 153], "hatmask": 83, "headmask": [83, 153], "n4c_t1w_clipped_brain_outskin_mask": 83, "in_fwhm": 83, "fwhm_t1w": 83, "in_inu": 83, "n4c_t1w_clipped_bia": [83, 125], "in_noinu": 83, "n4c_t1w_clipped_harmon": 83, "mni_tpm": [83, 123], "csf_tpl": [83, 123], "01_label": [83, 123], "csf_probseg": [83, 123], "gm_tpl": [83, 123], "gm_probseg": [83, 123], "wm_tpl": [83, 123], "wm_probseg": [83, 123], "pvm": [83, 153], "probal": 83, "ss_n4c_t1w_clippep_pve_0": 83, "ss_n4c_t1w_clippep_pve_1": 83, "ss_n4c_t1w_clippep_pve_2": 83, "rotmask": [83, 153], "ss_n4c_t1w_clippep_seg": [83, 91], "t1w_anat_qc": [83, 91], "qc": [83, 84], "in_fd_thresh": 84, "fd": [84, 85, 93, 153], "in_dummy_tr": 84, "dummi": [84, 85], "in_dvars_fil": [84, 85], "dvar": [84, 85, 93, 138, 153], "dvars_reg_func_valid": [84, 85, 87, 138], "in_fd_fil": [84, 85], "fd_reg_func_valid_on": [84, 85, 88, 138], "in_fwhm_fil": 84, "in_gcor": 84, "0612": 84, "in_hmc": 84, "automask_reg_func_valid": 84, "in_outliers_fil": [84, 85], "in_qi_fil": 84, "qi_reg_func_valid": 84, "in_spikes_fil": [84, 85], "spikes_reg_func_valid": [84, 85], "in_tsnr": 84, "tsnr": [84, 118, 136, 138, 144, 151], "reg_func_valid_tsnr": [84, 138], "mean_reg_func_valid_functional_qc": 84, "plot": [85, 91, 92, 93, 119, 136, 137, 153, 164], "figur": [85, 93, 153, 164], "wise": [85, 138, 153], "identif": [85, 153], "carpetplot": [85, 153], "carpet": [85, 86, 93, 106, 128, 136, 138], "voxelwis": 85, "crown": [85, 153], "band": 85, "fmriplot": 85, "in_func": 85, "drop_tr": 85, "drop": 85, "fd_thresh": [85, 138], "carpet_seg": [85, 136, 138], "cseg_t_tpl": [85, 86, 136, 138], "carpet_dseg": [85, 86, 128, 136, 138], "repet": 85, "func_valid_fmriplot": [85, 93], "png": [85, 90, 93, 137, 164], "subtract": [86, 153], "cseg": 86, "cseg_": 86, "parcelatt": 86, "dramat": 87, "cofund": [87, 88], "intensity_norm": 87, "divid": 87, "x10": 87, "2012": 87, "altogeth": 87, "dvars_": 87, "remove_zero_vari": 87, "variance_tol": 87, "0000001000": 87, "purpos": [87, 120, 132, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 162], "iqm": [87, 88, 91, 93, 94, 153, 161, 162, 164], "reproduc": [88, 153], "fsl_motion_outli": [88, 153], "reg_func_valid_on": 88, "fd_": 88, "parameter_sourc": 88, "afni": [88, 118, 124, 138, 143, 144, 160, 161], "fsfast": 88, "nipi": [88, 141, 151], "parametric_map": [89, 153], "rois_fil": [89, 90, 112, 153], "next": [89, 99, 153], "roi_analysi": [89, 153], "_": [89, 95, 148, 151, 153], "deduct": 89, "prefix_to_delet": 89, "underscor": [89, 112], "contrast_typ": 89, "spmt_0001": [89, 92, 97, 139, 140], "beta_0001": [89, 92, 97, 98, 139, 140], "deduc": 89, "mean_out_fil": 89, "std_out_fil": 89, "aca_l_mean_spmt_bold": [89, 95], "aca_r_mean_spmt_bold": [89, 95], "acm_l_mean_spmt_bold": [89, 95], "acm_r_mean_spmt_bold": [89, 95], "aca_l_mean_beta_bold": 89, "aca_r_mean_beta_bold": 89, "acm_l_mean_beta_bold": 89, "acm_r_mean_beta_bold": 89, "aca_l_std_spmt_bold": 89, "aca_r_std_spmt_bold": 89, "acm_l_std_spmt_bold": 89, "acm_r_std_spmt_bold": 89, "aca_l_std_beta_bold": 89, "aca_r_std_beta_bold": 89, "acm_l_std_beta_bold": 89, "acm_r_std_beta_bold": 89, "001_bold_space_concate_47_48": 90, "001_bold_space_47": 90, "001_bold_space_48": 90, "001_bold_space_1": 90, "signals_whole_brain": 90, "001_bold_space_47_48": 90, "out_png": 90, "iqms_fil": [91, 93, 164], "art_mask": 91, "air_mask": 91, "pre_n4c_t1w_clipped_desc": 91, "outskin": [91, 149], "anat_fig_col": 91, "anat_fig_row": 91, "spikes_": [91, 93, 96], "norm_anat": [91, 92], "norm_anat_fig_col": [91, 92], "norm_anat_fig_row": [91, 92], "anat_inf_slice_start": 91, "displai": [91, 92, 93, 142, 164], "anat_slices_gap": 91, "gap": [91, 92, 93, 164], "norm_anat_inf_slice_start": [91, 92], "norm_anat_slices_gap": [91, 92], "t1w_ref_anatomical_mriqcreport_2023_03_31_11_42_10_75": [91, 135], "v22": [91, 93, 123, 125, 160, 161], "06": [91, 93, 99, 123, 125, 126, 127, 128, 138, 148, 160, 161], "norm_anat_cmap": 92, "color": [92, 164], "greys_r": [92, 164], "norm_anat_vmin": 92, "colormap": 92, "vmin": 92, "norm_anat_vmax": 92, "vmax": 92, "norm_func": [92, 93], "wrfunc": [92, 129], "norm_func_fig_row": [92, 93], "norm_func_fig_col": [92, 93], "norm_func_inf_slice_start": [92, 93], "norm_func_slices_gap": [92, 93], "norm_func_cmap": 92, "norm_func_vmin": 92, "norm_func_vmax": 92, "record": [92, 95, 117], "regressor_physio": 92, "physiolog": [92, 119, 156], "etco2": [92, 117, 119], "thought": 92, "patient_ref_data": 92, "cvr_physio_reg": [92, 117], "beta_imag": [92, 97, 98, 139, 140], "regress": [92, 97, 98, 99, 139, 153, 155], "predictor": [92, 140], "condit": [92, 97, 98, 99, 110, 156], "regressor": [92, 99, 100, 101, 102, 103, 119, 140, 156], "glm": [92, 117, 119, 155, 163], "activ": [92, 99, 100, 101, 102, 103, 119, 148], "deactiv": 92, "beta_cmap": 92, "beta": [92, 119, 140, 162], "rainbow": [92, 164], "beta_vmin": 92, "beta_vmax": 92, "spmt_imag": [92, 97, 98, 139, 140], "strength": 92, "spmt_cmap": 92, "spmt": [92, 95, 153, 162], "spmt_vmin": 92, "spmt_vmax": 92, "patient_info": [92, 95, 119, 139], "dictionari": [92, 95, 98, 99, 119, 139, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 164], "kei": [92, 95, 98, 99, 139, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 164], "patientref": [92, 119], "pathologi": [92, 95, 119, 139], "ag": [92, 95, 119, 139], "sex": [92, 95, 119, 139], "mr": [92, 95, 119, 139, 153], "ga": [92, 95, 119, 139], "gasadmin": [92, 95, 119, 139], "acmd": [92, 95, 119], "3t": [92, 95, 119], "bactal": [92, 95, 119], "1_co2_inhal_cvr_report_2024_01_24_09_34_58_08": 92, "func_func_qc": 93, "func_fig_col": 93, "func_fig_row": 93, "automask_mean_func_valid": 93, "func_inf_slice_start": 93, "func_slices_gap": 93, "iqms_plot": 93, "w_n4c_mean_reg_func_valid": [93, 128], "stddev_func": 93, "reg_func_valid_stddev": 93, "func_ref_functional_mriqcreport_2023_03_31_11_42_10_75": [93, 136], "gerer": 94, "boxplot": [94, 164], "quartil": 94, "q1": 94, "q3": 94, "whisker": 94, "5x": 94, "iqr": 94, "tsv": [94, 164], "out_tsv": [94, 164], "matplotlib": 94, "parameter_fil": [95, 153], "results_aggreg": [95, 119, 139, 153], "overwrit": [95, 153], "doublet": 95, "hemispher": [95, 139, 153], "letter": 95, "l": [95, 104, 105, 112, 153], "apath": 95, "apat": 95, "collect": [95, 153], "territori": [95, 119], "notion": 95, "cours": [95, 151], "todo": 95, "asap": 95, "exactli": [95, 153], "hemi": [95, 153], "aca": [95, 104, 105, 112, 153], "laterality_index": 95, "ablair": 95, "64": [95, 99, 110, 148], "xml": 95, "bold_std_beta": [95, 119, 139], "xl": [95, 119, 139], "bold_il_mean_spmt": [95, 119, 139], "bold_mean_spmt": [95, 119, 139], "spikes_mask": [96, 153], "no_zscor": 96, "zscore": [96, 151], "skip_fram": 96, "spike_thresh": [96, 153], "score": [96, 151], "call": 96, "spki": [96, 138], "detect": [96, 136, 138, 151, 153], "spikes_func": [96, 138], "t_contrast_nam": 97, "t_condition_nam": 97, "t_contrast_weight": 97, "session": [97, 99, 110, 164], "f": [97, 98, 119, 151, 153], "f_contrast_nam": 97, "f_contrast_t_nam": 97, "spm_mat_fil": [97, 98, 99], "beta_0002": [97, 98, 139, 140], "beta_0003": [97, 98, 139, 140], "beta_0004": [97, 98, 139, 140], "beta_0005": [97, 98, 139, 140], "beta_0006": [97, 98, 139, 140], "beta_0007": [97, 98, 139, 140], "beta_0008": [97, 98, 139, 140], "residual_imag": [97, 98], "residu": [97, 98], "resm": [97, 98], "task": [97, 153], "baselin": 97, "r1_1": 97, "use_deriv": 97, "group_contrast": 97, "elsewher": 97, "positif": 97, "out_spm_mat_fil": [97, 98, 100, 101, 102, 103, 140], "smp_mat_fil": [97, 98, 100, 101, 102, 103], "con_imag": [97, 98], "con_0001": 97, "con_0002": 97, "con_0003": 97, "con_0004": 97, "stat": [97, 98, 118, 142, 143, 153, 157], "spmt_0002": 97, "spmt_0003": 97, "spmt_0004": 97, "ess_imag": [97, 98], "ess_0001": [97, 98], "ess_0002": [97, 98], "ess_0003": [97, 98], "ess_0004": [97, 98], "spmf_imag": [97, 98], "spmf_0001": [97, 98], "spmf_0002": [97, 98], "spmf_0003": [97, 98], "spmf_0004": [97, 98], "estimatecontrast": [97, 118, 139, 140, 154, 155], "\u03b2": 98, "bayesian": 98, "open": [98, 113, 141], "ticket": [98, 135, 136], "v2": 98, "risk": 98, "strongli": 98, "v1": 98, "prefer": 98, "spmmat": 98, "estimation_method": 98, "independ": [98, 99, 103], "iid": 98, "yet": 98, "write_residu": 98, "dynamiqu": 98, "tot_reg_num": 98, "factor_info": [98, 99], "level1design": [98, 110, 118, 140, 154, 155, 156], "factori": [98, 99], "interact": [98, 99, 100, 101, 102, 103, 155], "factor1": [98, 99], "factor2": [98, 99], "hrf": [98, 99, 117, 156], "fourier_han": [98, 99], "gamma": [98, 99, 156], "fir": [98, 99, 156], "hemodynam": [98, 99, 117, 156], "beta_000k": [98, 139], "kth": [98, 139], "varianc": [98, 103], "res_000k": 98, "fuction": 98, "res_0001": 98, "res_0002": 98, "res_0003": 98, "res_0238": 98, "res_0239": 98, "res_0240": 98, "rpvimag": 98, "rpv": 98, "con_0005": 98, "con_0006": 98, "con_0007": 98, "con_0008": 98, "spmt_0005": 98, "spmt_0006": 98, "spmt_0007": 98, "spmt_0008": 98, "timing_unit": 99, "event": [99, 110], "sec": 99, "interscan_interv": 99, "rt": [99, 156], "microtime_resolut": 99, "fmri_t": 99, "build": [99, 156, 158, 159, 160, 161, 162, 163], "previous": [99, 113, 139, 140], "microtime_onset": 99, "fmri_t0": 99, "coincid": [99, 100, 101, 102, 103], "sess_scan": 99, "sess": 99, "wai": 99, "sess_1_scanpath_1": 99, "sess_2_scanpath_2": 99, "sess_n_scanpath_n": 99, "func_1": 99, "func_2": 99, "sess_cond_nam": 99, "cond": 99, "sess_1_condname_1": 99, "sess_1_condname_2": 99, "sess_1_condname_n": 99, "sess_2_condname_1": 99, "sess_2_condname_2": 99, "sess_2_condname_n": 99, "sess_n_condname_1": 99, "sess_n_condname_2": 99, "sess_n_condname_n": 99, "cond1": 99, "cond2": 99, "sess_cond_onset": 99, "epoch": 99, "sess_1_cond_1_onset_1": 99, "sess_1_cond_1_onset_2": 99, "sess_1_cond_1_onset_n": 99, "sess_1_cond_2_onset_1": 99, "sess_1_cond_2_onset_2": 99, "sess_1_cond_2_onset_n": 99, "sess_1_cond_n_onset_1": 99, "sess_1_cond_n_onset_2": 99, "sess_1_cond_n_onset_n": 99, "sess_2_cond_1_onset_1": 99, "sess_2_cond_1_onset_2": 99, "sess_2_cond_1_onset_n": 99, "sess_2_cond_2_onset_1": 99, "sess_2_cond_2_onset_2": 99, "sess_2_cond_2_onset_n": 99, "sess_2_cond_n_onset_1": 99, "sess_2_cond_n_onset_2": 99, "sess_2_cond_n_onset_n": 99, "sess_n_cond_1_onset_1": 99, "sess_n_cond_1_onset_2": 99, "sess_n_cond_1_onset_n": 99, "sess_n_cond_2_onset_1": 99, "sess_n_cond_2_onset_2": 99, "sess_n_cond_2_onset_n": 99, "sess_n_cond_n_onset_1": 99, "sess_n_cond_n_onset_2": 99, "sess_n_cond_n_onset_n": 99, "72": 99, "117": 99, "152": [99, 110], "59": [99, 153], "225": 99, "98": [99, 110, 153], "206": 99, "282": 99, "sess_cond_dur": 99, "durat": [99, 110, 156], "compli": 99, "sess_1_cond_1_duration_1": 99, "sess_1_cond_1_duration_2": 99, "sess_1_cond_1_duration_n": 99, "sess_1_cond_2_duration_1": 99, "sess_1_cond_2_duration_2": 99, "sess_1_cond_2_duration_n": 99, "sess_1_cond_n_duration_1": 99, "sess_1_cond_n_duration_2": 99, "sess_1_cond_n_duration_n": 99, "sess_2_cond_1_duration_1": 99, "sess_2_cond_1_duration_2": 99, "sess_2_cond_1_duration_n": 99, "sess_2_cond_2_duration_1": 99, "sess_2_cond_2_duration_2": 99, "sess_2_cond_2_duration_n": 99, "sess_2_cond_n_duration_1": 99, "sess_2_cond_n_duration_2": 99, "sess_2_cond_n_duration_n": 99, "sess_n_cond_1_duration_1": 99, "sess_n_cond_1_duration_2": 99, "sess_n_cond_1_duration_n": 99, "sess_n_cond_2_duration_1": 99, "sess_n_cond_2_duration_2": 99, "sess_n_cond_2_duration_n": 99, "sess_n_cond_n_duration_1": 99, "sess_n_cond_n_duration_2": 99, "sess_n_cond_n_duration_n": 99, "54": 99, "81": 99, "sess_cond_tmod": 99, "tmod": 99, "characteris": 99, "nonlinear": 99, "6th": 99, "sess_1_cond_1_tmod": 99, "sess_1_cond_2_tmod": 99, "sess_1_cond_n_tmod": 99, "sess_2_cond_1_tmod": 99, "sess_2_cond_2_tmod": 99, "sess2_cond_n_tmod": 99, "sess_n_cond_1_tmod": 99, "sess_n_cond_2_tmod": 99, "sess_n_cond_n_tmod": 99, "sess_cond_pmod_nam": 99, "pmod": 99, "relat": [99, 110, 153, 155], "sess_1_cond_1_pmodname_1": 99, "sess_1_cond_1_pmodname_2": 99, "sess_1_cond_1_pmodname_n": 99, "sess_1_cond_2_pmodname_1": 99, "sess_1_cond_2_pmodname_2": 99, "sess_1_cond_2_pmodname_n": 99, "sess_1_cond_n_pmodname_1": 99, "sess_1_cond_n_pmodname_2": 99, "sess_1_cond_n_pmodname_n": 99, "sess_2_cond_1_pmodname_1": 99, "sess_2_cond_1_pmodname_2": 99, "sess_2_cond_1_pmodname_n": 99, "sess_2_cond_2_pmodname_1": 99, "sess_2_cond_2_pmodname_2": 99, "sess_2_cond_2_pmodname_n": 99, "sess_2_cond_n_pmodname_1": 99, "sess_2_cond_n_pmodname_2": 99, "sess_2_cond_n_pmodname_n": 99, "sess_n_cond_1_pmodname_1": 99, "sess_n_cond_1_pmodname_2": 99, "sess_n_cond_1_pmodname_n": 99, "sess_n_cond_2_pmodname_1": 99, "sess_n_cond_2_pmodname_2": 99, "sess_n_cond_2_pmodname_n": 99, "sess_n_cond_n_pmodname_1": 99, "sess_n_cond_n_pmodname_2": 99, "sess_n_cond_n_pmodname_n": 99, "pmod1": 99, "pmod2": 99, "sess_cond_pmod_valu": 99, "sess_1_cond_1_pmod_1_val_1": 99, "sess_1_cond_1_pmod_1_val_2": 99, "sess_1_cond_1_pmod_1_val_n": 99, "sess_1_cond_1_pmod_2_val_1": 99, "sess_1_cond_1_pmod_2_val_2": 99, "sess_1_cond_1_pmod_2_val_n": 99, "sess_1_cond_1_pmod_n_val_1": 99, "sess_1_cond_1_pmod_n_val_2": 99, "sess_1_cond_1_pmod_n_val_n": 99, "sess_1_cond_2_pmod_1_val_1": 99, "sess_1_cond_2_pmod_1_val_2": 99, "sess_1_cond_2_pmod_1_val_n": 99, "sess_1_cond_2_pmod_2_val_1": 99, "sess_1_cond_2_pmod_2_val_2": 99, "sess_1_cond_2_pmod_2_val_n": 99, "sess_1_cond_2_pmod_n_val_1": 99, "sess_1_cond_2_pmod_n_val_2": 99, "sess_1_cond_2_pmod_n_val_n": 99, "sess_1_cond_n_pmod_1_val_1": 99, "sess_1_cond_n_pmod_1_val_2": 99, "sess_1_cond_n_pmod_1_val_n": 99, "sess_1_cond_n_pmod_2_val_1": 99, "sess_1_cond_n_pmod_2_val_2": 99, "sess_1_cond_n_pmod_2_val_n": 99, "sess_1_cond_n_pmod_n_val_1": 99, "sess_1_cond_n_pmod_n_val_2": 99, "sess_1_cond_n_pmod_n_val_n": 99, "sess_2_cond_1_pmod_1_val_1": 99, "sess_2_cond_1_pmod_1_val_2": 99, "sess_2_cond_1_pmod_1_val_n": 99, "sess_2_cond_1_pmod_2_val_1": 99, "sess_2_cond_1_pmod_2_val_2": 99, "sess_2_cond_1_pmod_2_val_n": 99, "sess_2_cond_1_pmod_n_val_1": 99, "sess_2_cond_1_pmod_n_val_2": 99, "sess_2_cond_1_pmod_n_val_n": 99, "sess_2_cond_2_pmod_1_val_1": 99, "sess_2_cond_2_pmod_1_val_2": 99, "sess_2_cond_2_pmod_1_val_n": 99, "sess_2_cond_2_pmod_2_val_1": 99, "sess_2_cond_2_pmod_2_val_2": 99, "sess_2_cond_2_pmod_2_val_n": 99, "sess_2_cond_2_pmod_n_val_1": 99, "sess_2_cond_2_pmod_n_val_2": 99, "sess_2_cond_2_pmod_n_val_n": 99, "sess_2_cond_n_pmod_1_val_1": 99, "sess_2_cond_n_pmod_1_val_2": 99, "sess_2_cond_n_pmod_1_val_n": 99, "sess_2_cond_n_pmod_2_val_1": 99, "sess_2_cond_n_pmod_2_val_2": 99, "sess_2_cond_n_pmod_2_val_n": 99, "sess_2_cond_n_pmod_n_val_1": 99, "sess_2_cond_n_pmod_n_val_2": 99, "sess_2_cond_n_pmod_n_val_n": 99, "sess_n_cond_1_pmod_1_val_1": 99, "sess_n_cond_1_pmod_1_val_2": 99, "sess_n_cond_1_pmod_1_val_n": 99, "sess_n_cond_1_pmod_2_val_1": 99, "sess_n_cond_1_pmod_2_val_2": 99, "sess_n_cond_1_pmod_2_val_n": 99, "sess_n_cond_1_pmod_n_val_1": 99, "sess_n_cond_1_pmod_n_val_2": 99, "sess_n_cond_1_pmod_n_val_n": 99, "sess_n_cond_2_pmod_1_val_1": 99, "sess_n_cond_2_pmod_1_val_2": 99, "sess_n_cond_2_pmod_1_val_n": 99, "sess_n_cond_2_pmod_2_val_1": 99, "sess_n_cond_2_pmod_2_val_2": 99, "sess_n_cond_2_pmod_2_val_n": 99, "sess_n_cond_2_pmod_n_val_1": 99, "sess_n_cond_2_pmod_n_val_2": 99, "sess_n_cond_2_pmod_n_val_n": 99, "sess_n_cond_n_pmod_1_val_1": 99, "sess_n_cond_n_pmod_1_val_2": 99, "sess_n_cond_n_pmod_1_val_n": 99, "sess_n_cond_n_pmod_2_val_1": 99, "sess_n_cond_n_pmod_2_val_2": 99, "sess_n_cond_n_pmod_2_val_n": 99, "sess_n_cond_n_pmod_n_val_1": 99, "sess_n_cond_n_pmod_n_val_2": 99, "sess_n_cond_n_pmod_n_val_n": 99, "61": 99, "105": [99, 110], "178": 99, "65": [99, 110], "221": 99, "sess_cond_pmod_poli": 99, "poli": 99, "stick": 99, "height": [99, 164], "further": [99, 135, 136, 140], "cube": 99, "sess_1_cond_1_pmod_1_poli": 99, "sess_1_cond_1_pmod_2_poli": 99, "sess_1_cond_1_pmod_n_poli": 99, "sess_1_cond_2_pmod_1_poli": 99, "sess_1_cond_2_pmod_2_poli": 99, "sess_1_cond_2_pmod_n_poli": 99, "sess_1_cond_n_pmod_1_poli": 99, "sess_1_cond_n_pmod_2_poli": 99, "sess_1_cond_n_pmod_n_poli": 99, "sess_2_cond_1_pmod_1_poli": 99, "sess_2_cond_1_pmod_2_poli": 99, "sess_2_cond_1_pmod_n_poli": 99, "sess_2_cond_2_pmod_1_poli": 99, "sess_2_cond_2_pmod_2_poli": 99, "sess_2_cond_2_pmod_n_poli": 99, "sess_2_cond_n_pmod_1_poli": 99, "sess_2_cond_n_pmod_2_poli": 99, "sess_2_cond_n_pmod_n_poli": 99, "sess_n_cond_1_pmod_1_poli": 99, "sess_n_cond_1_pmod_2_poli": 99, "sess_n_cond_1_pmod_n_poli": 99, "sess_n_cond_2_pmod_1_poli": 99, "sess_n_cond_2_pmod_2_poli": 99, "sess_n_cond_2_pmod_n_poli": 99, "sess_n_cond_n_pmod_1_poli": 99, "sess_n_cond_n_pmod_2_poli": 99, "sess_n_cond_n_pmod_n_poli": 99, "sess_cond_orth": 99, "orth": 99, "orthogonalis": 99, "othogonalis": 99, "sess_1_cond_1_orth": 99, "sess_1_cond_2_orth": 99, "sess_1_cond_n_orth": 99, "sess_2_cond_1_orth": 99, "sess_2_cond_2_orth": 99, "sess2_cond_n_orth": 99, "sess_n_cond_1_orth": 99, "sess_n_cond_2_orth": 99, "sess_n_cond_n_orth": 99, "sess_multi": 99, "detail": [99, 140], "experiment": [99, 100, 101, 102, 103], "cell": 99, "arrai": [99, 151, 153], "load": [99, 112], "go": 99, "sess_1_multi": 99, "sess_2_multi": 99, "sess_n_multi": 99, "sess_regress": 99, "haemodynam": 99, "val": 99, "sess_1_dict_1": 99, "sess_1_dict_2": 99, "sess_1_dict_n": 99, "sess_2_dict_1": 99, "sess_2_dict_2": 99, "sess_2_dict_n": 99, "sess_n_dict_1": 99, "sess_n_dict_2": 99, "sess_n_dict_n": 99, "reg1": 99, "79": 99, "585": 99, "805": 99, "155": [99, 110], "66": 99, "195": 99, "045": 99, "82": 99, "765": 99, "67": [99, 110], "955": 99, "935": 99, "865": 99, "reg2": 99, "58": 99, "09": 99, "91": [99, 153], "87": 99, "73": 99, "sess_multi_reg": 99, "multi_reg": 99, "sess_1_file_1": 99, "sess_1_file_2": 99, "sess_1_file_n": 99, "sess_2_file_1": 99, "sess_2_file_2": 99, "sess_2_file_n": 99, "sess_n_file_1": 99, "sess_n_file_2": 99, "sess_n_file_n": 99, "file1": [99, 107], "file2": [99, 107], "sess_hpf": 99, "hpf": 99, "slow": 99, "drift": 99, "period": 99, "longer": [99, 120], "128": 99, "427": 99, "major": 99, "variabl": [99, 100, 101, 102, 103, 119, 135, 136, 142], "subdivis": 99, "peak": [99, 120, 150], "vari": [99, 132], "plu": 99, "dispers": 99, "finit": 99, "impuls": 99, "post": 99, "stimulu": 99, "span": 99, "volterra_expansion_ord": 99, "volt": 99, "volterra": 99, "formul": 99, "global_intensity_norm": 99, "mask_threshold": 99, "mthresh": 99, "explicitli": 99, "analys": [99, 132, 160], "mask_swc1anat": 99, "model_serial_correl": 99, "cvi": 99, "serial": 99, "alias": 99, "biorhythm": 99, "unmodel": 99, "neuron": 99, "autoregress": 99, "reml": [99, 155], "001_data": [100, 101, 102, 103], "con_001": [100, 101, 103], "002_data": [100, 101, 102, 103], "out_dir_nam": [100, 101, 102, 103], "spm_stat_2ndlevel": [100, 101, 102, 103], "directoti": [100, 101, 102, 103], "folder": [100, 101, 102, 103], "project": [100, 101, 102, 103, 153, 164], "include_intercept": 100, "intercept": 100, "threshold_mask": [100, 101, 102, 103], "exce": [100, 101, 102, 103], "absoult": [100, 101, 102, 103], "threshold_mask_valu": [100, 101, 102, 103], "use_implicit_mask": [100, 101, 102, 103], "nan": [100, 101, 102, 103], "global_calc": [100, 101, 102, 103], "vbm": [100, 101, 102, 103], "own": [100, 101, 102, 103], "global_calc_valu": [100, 101, 102, 103], "fullmean": [100, 101, 102, 103], "no_grand_mean_sc": [100, 101, 102, 103], "overal": [100, 101, 102, 103], "grand": [100, 101, 102, 103], "scall": [100, 101, 102, 103], "ancova": [100, 101, 102, 103], "user_covariates_nam": 100, "covari": [100, 101, 102, 103, 155], "user_covariates_vector": 100, "user_covariates_cent": 100, "aslo": [100, 101, 102, 103], "reaction": [100, 101, 102, 103], "usercovariates_cent": 100, "covariates_nam": [100, 101, 102, 103], "nuissanc": [100, 101, 102, 103], "examin": [100, 101, 102, 103], "additionl": [100, 101, 102, 103], "covariates_vector": [100, 101, 102, 103], "covariates_interact": [100, 101, 102, 103], "covariates_cent": [100, 101, 102, 103], "interc": [100, 101, 102, 103], "opportun": [100, 101, 102, 103], "facto": [100, 101, 102, 103], "explicit_mask_fil": [100, 101, 102, 103], "explicit": [100, 101, 102, 103], "calculaion": [100, 101, 102, 103], "cacul": [100, 101, 102, 103, 153], "paired_fil": 102, "beta_001": 102, "beta_002": 102, "onesamplettestdesign": [102, 103, 118, 154, 155], "group1_fil": 103, "grouop": 103, "group2_fil": 103, "con_002": 103, "unequal_vari": 103, "unequ": 103, "acm": [104, 105, 112], "out_list": [104, 114], "acp": 105, "pica": 105, "roi_c": 105, "roi_fron": 105, "roi_insula": 105, "roi_occ": 105, "roi_par": 105, "roi_str": 105, "roi_temp": 105, "roi_tha": 105, "sca": 105, "listoflist": 105, "histori": 106, "to_keep_filt": 106, "regex": 106, "to_remove_filt": 106, "to_remove_fil": 106, "01_anatomical_mriqcreport_2023_05_12_16_26_12_58": 106, "_qc": 106, "exclusif": 106, "files_remov": 106, "file3": 107, "file_list": [107, 115], "in_list": [108, 109], "index_filt": [108, 115], "python": [108, 115], "filtered_list": 108, "pars": 109, "anat1_001": 109, "anat1_002": 109, "anat1_003": 109, "anat2_002": 109, "002": 109, "bloc": 110, "csv_file": 110, "conten": 110, "mia_project": [110, 111], "sess01_bloc_onset": 110, "sess02_event_onset": 110, "design_typ": 110, "cond_nam": 110, "inc": 110, "con": 110, "n1": 110, "n2": 110, "f1": 110, "f2": 110, "cond_onset": 110, "88": 110, "144": 110, "174": 110, "236": 110, "248": 110, "274": 110, "102": 110, "116": 110, "154": 110, "164": 110, "184": 110, "196": 110, "208": 110, "222": 110, "74996667": 110, "99996667": 110, "24996667": 110, "49996667": 110, "74": 110, "92": 110, "119": 110, "123": 110, "125": 110, "137": 110, "141": 110, "143": 110, "146": 110, "159": 110, "161": 110, "204": 110, "238": 110, "89": 110, "94": 110, "134": 110, "148": 110, "191": 110, "202": 110, "215": 110, "233": 110, "242": 110, "245": 110, "281": 110, "290": 110, "303": 110, "310": 110, "319": 110, "339": 110, "341": 110, "33333333e": 110, "2499667": 110, "4999667": 110, "9999667": 110, "7499667": 110, "62": 110, "101": 110, "249967": 110, "103": 110, "499967": 110, "999967": 110, "749967": 110, "170": 110, "188": 110, "227": 110, "265": 110, "283": 110, "285": 110, "287": 110, "344": 110, "157": 110, "168": 110, "177": 110, "179": 110, "182": 110, "197": 110, "240": 110, "254": 110, "267": 110, "269": 110, "294": 110, "299": 110, "301": 110, "314": 110, "317": 110, "326": 110, "332": 110, "335": 110, "337": 110, "346": 110, "cond_dur": 110, "tha": 111, "patient_nam": 111, "rois_list": [112, 156], "lib_dir": [112, 156], "roi_list": [112, 156], "caract": 112, "foo": [112, 156], "faa": [112, 156], "foo_1": [112, 156], "faa_2": [112, 156], "miaresourc": [112, 156], "file_in_db": [112, 156], "output_directori": [112, 151, 156, 164], "resourc": [112, 153], "catch": 112, "starts_with": 112, "properli": [113, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156], "node": 113, "hand": [113, 141], "databrows": 113, "send": 113, "manag": [113, 141], "button": 113, "click": 113, "database_scan": 113, "file_nam": [114, 151, 164], "obj1": 116, "obj2": 116, "obj_list": 116, "tidal": [117, 119], "carbon": 117, "dioxid": 117, "relationship": 117, "cerebr": [117, 119], "blood": [117, 119], "flow": [117, 119], "magdata": 117, "coolterm": 117, "trigger": [117, 119], "trigger_data": [117, 119], "synchron": [117, 119], "vaso_trigger_tim": 117, "physio_data": [117, 119], "func_fil": [117, 119, 129, 130, 136], "magnet": [117, 119, 153], "reson": [117, 119, 153], "experi": [117, 119], "hypercapn": 117, "challeng": [117, 158, 164], "cvr_reg": 117, "brick": [118, 119, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 141, 142, 160, 161, 162, 164, 165], "atom": [118, 141, 142, 145, 146, 147, 148, 149, 151, 152, 160, 161], "parti": [118, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156], "softwar": [118, 144], "calcdroptr": [118, 144, 145], "despik": [118, 127, 144, 145], "fwhmx": [118, 135, 138, 144, 145], "gcor": [118, 138, 144, 145], "outlierscount": 118, "qualityindex": [118, 144, 145], "refitdeobliqu": [118, 144, 145], "tshift": [118, 144, 145], "tstatmean": [118, 144, 145], "volreg": [118, 144, 145], "affineiniti": [118, 144, 146], "applytransform": [118, 121, 123, 144, 146], "n4biasfieldcorrect": [118, 124, 125, 128, 144, 146], "computedki": [118, 144, 147], "binar": [118, 124, 144, 148, 151], "synthstrip": [118, 135, 144, 148, 160], "synthstripmriqc": [118, 144, 148], "convertxfm": [118, 137, 144, 149], "epireg": [118, 137, 144, 149], "extractroi": [118, 144, 149], "matlab_wrap": [118, 144], "computebrainvolum": 118, "constrainedsphericaldeconvolut": [118, 144, 150], "dwibiascorrect": [118, 144, 150], "dwibrainmask": [118, 144, 150], "dwidenois": [118, 144, 150], "dwiextract": [118, 144, 150], "editingtrack": [118, 144, 150], "filteringtrack": [118, 144, 150], "fittensor": [118, 144, 150], "generate5tt2gmwmi": [118, 144, 150], "mrcat": [118, 144, 150], "mrdegibb": [118, 144, 150], "mrmath": [118, 144, 150], "mrtransform": [118, 144, 150], "mtnormalis": [118, 144, 150], "sphericalharmonicextract": [118, 144, 150], "tensormetr": [118, 144, 150], "transformfslconvert": [118, 144, 150], "applybiascorrect": [118, 144, 151], "artifactmask": [118, 144, 151], "conformimag": [118, 135, 144, 151], "convroi": [118, 139, 144, 151], "enhanc": [118, 122, 144, 151], "estimatesnr": [118, 144, 151], "extractroibylabel": [118, 137, 144, 151], "extractsignalroi": [118, 137, 144, 151], "gradientthreshold": [118, 144, 151], "intensityclip": [118, 144, 151], "nonsteadydetector": 118, "resample1": [118, 134, 139, 144, 151], "resample2": [118, 139, 144, 151], "rotationmask": [118, 144, 151], "sanit": [118, 136, 144, 151], "templatefromtemplateflow": [118, 144, 151], "gm_wm_normal": [118, 134, 144, 152], "newseg": [118, 129, 144, 152], "slicetim": [118, 144, 152], "assemblynetdock": [118, 137], "getlabel": [118, 137], "labelscorrespond": [118, 137], "anatiqm": [118, 143, 153], "boldiqm": [118, 143, 153], "boldiqmsplot": [118, 143, 153], "carpetparcel": [118, 143, 153], "computedvar": [118, 143, 153], "framewisedisplac": [118, 143, 153], "mean_stddev_calc": [118, 139, 143, 153], "plotsignalroi": [118, 137, 143, 153], "reportanatmriqc": [118, 143, 153], "reportco2inhalcvr": [118, 119, 143, 153], "reportfuncmriqc": [118, 143, 153], "reportgroupmriqc": [118, 143, 153], "result_collector": [118, 139, 143, 153], "estimatemodel": [118, 139, 140, 154, 155], "multipleregressiondesign": [118, 154, 155], "pairedttestdesign": [118, 154, 155], "twosamplettestdesign": [118, 154, 155], "concat_to_list": [118, 139, 143, 156], "concat_to_list_of_list": [118, 139, 143, 156], "delete_data": [118, 143, 156], "files_to_list": [118, 119, 139, 143, 156], "find_in_list": [118, 139, 143, 156], "get_conditions_from_csv": [118, 143, 156], "get_patient_nam": [118, 143, 156], "import_data": [118, 139, 143, 156], "input_filt": [118, 143, 156], "list_dupl": [118, 129, 143, 156], "list_to_fil": [118, 119, 135, 143, 156], "make_a_list": [118, 140, 143, 156], "make_cvr_reg_physio": [118, 119, 143, 156], "cerebvascularreact": [118, 142, 157], "co2_inhal": [118, 142, 157], "dwitractographi": [118, 142, 157], "dwi_whole_brain_tractograpi": 118, "anat_airmask": [118, 142, 157], "anat_headmask": [118, 142, 157], "anat_mni_tpm": [118, 135, 142, 157], "anat_skullstrip": [118, 142, 157], "anat_skullstrip_synthstrip": [118, 142, 157], "anat_spatial_norm": [118, 142, 157], "bold_hmc": [118, 142, 157], "bold_mni_align": [118, 142, 157], "bold_spatial_preprocessing1": [118, 119, 142, 157], "bold_spatial_preprocessing2": [118, 142, 157], "dwi_fod_msmt_csd": [118, 142, 157], "dwi_preprocess": [118, 157, 160], "dwi_tissue_boundari": 118, "spatial_mask": [118, 119, 139, 140, 142, 157], "qualitycontrol": [118, 142, 157], "anat_mriqc": [118, 142, 157], "bold_mri_qc": 118, "bold_signals_roi": 118, "bold_iqm": [118, 142, 157], "extract_roi_param": [118, 119, 142, 157], "bold_stat_cvr": [118, 119, 142, 157], "hypercapnia": [119, 158], "induc": [119, 153], "administ": 119, "deliveri": 119, "system": [119, 153], "particip": 119, "breath": 119, "respiratori": 119, "apparatu": 119, "captur": 119, "oxygen": 119, "reflect": 119, "throughout": 119, "heart": 119, "monitor": 119, "induct": 119, "analyz": 119, "approach": [119, 153], "insight": [119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140], "anat_fil": [119, 129, 130, 135, 164], "turbo": [119, 129, 130], "trigger_tim": 119, "stimul": 119, "carbogen": 119, "variocap": 119, "administr": 119, "cannula": 119, "bob_01": 119, "57": 119, "xls_file": [119, 139], "tab": [119, 156], "delimit": 119, "summari": [119, 135, 136, 138, 150], "patientref_data": 119, "bold_il_std_beta": [119, 139], "bold_mean_beta": [119, 139], "bold_il_mean_beta": [119, 139], "bold_std_spmt": [119, 139], "bold_il_std_spmt": [119, 139], "patientref_co2_inhal_cvr_report_2024_03_19_11_01_15_04": 119, "tractogram": 120, "multishel": [120, 132], "implaus": 120, "overestim": 120, "msmtt": 120, "exploit": 120, "sensit": 120, "prepar": [120, 131, 133], "atc": 120, "coregistr": [120, 133], "million": 120, "randomli": 120, "subset": [120, 150], "200k": 120, "10k": 120, "shorter": 120, "softawr": 120, "tractseg": 120, "tutori": [120, 133], "andi": 120, "book": 120, "suggest": [120, 133], "howev": [120, 133], "seem": [120, 133], "perfectli": [120, 133], "edit": [120, 150], "in_dwi_pe_dir": [120, 132], "in_diw": [120, 132], "in_dwi_ro_tim": [120, 132], "in_b0_revers": [120, 132], "topup": [120, 132, 150], "b0_revers": [120, 132], "in_t1w": [120, 133], "sh_peak": 120, "dwi_denoised_unringed_dwifslpreproc_unbias_wm_odf_norm_peak": 120, "tracks_10mio": 120, "dwi_denoised_unringed_dwifslpreproc_unbias_wm_odf_norm_tracto": 120, "tracks_200k": 120, "dwi_denoised_unringed_dwifslpreproc_unbias_wm_odf_norm_tracto_200k": 120, "tracks_10k": 120, "dwi_denoised_unringed_dwifslpreproc_unbias_wm_odf_norm_tracto_10k": 120, "dwi_denoised_unringed_dwifslpreproc_unbias_wm_odf_norm_tracto_sift": 120, "tracks_sift_10k": 120, "t1w_coreg": [120, 133], "t1w_transform": [120, 133], "advanc": 120, "neurophil": 120, "templateflow": [121, 123, 126, 128, 151], "t1w_brain_outskin": 121, "t1w_masked_inversecomposit": [121, 123, 126], "t1w_brain_mask": 121, "out_rot_mask": 121, "rot_t1w_mask": 121, "ss_t1w_seg": 122, "denoise_ss_t1w_enh_grad": 122, "bias_correct": 124, "n4c_t1w_bia": 124, "ss_orig_t1w": 124, "ss_orig_t1w_bin": 124, "intes": 125, "out_correct": 125, "n4c_t1w_clip": 125, "ss_n4c_t1w_clip": 125, "pre_n4c_t1w_clipped_desc_brain_mask": 125, "moving_mask": 126, "t1w_masked_composit": 126, "w_t1w_mask": 126, "mric": 126, "hcm": 127, "bold_hcm": 127, "deobliqu": [127, 145], "deobliq": 127, "reg_d_func_on": [127, 138], "reg_d_func": 127, "mriq": [127, 128], "hmc": 127, "boldref": 128, "dseg": 128, "epi_mask": 128, "epi_mean": [128, 138], "reg_convergence_threshold": 128, "reg_convergence_window_s": 128, "reg_interpol": 128, "reg_metr": 128, "reg_metric_weight": 128, "reg_number_of_iter": 128, "reg_radius_or_number_of_bin": 128, "reg_sampling_percentag": 128, "reg_sampling_strategi": 128, "reg_shrink_factor": 128, "reg_smoothing_sigma": 128, "reg_transform_paramet": 128, "reg_transform": 128, "seg_template_r": 128, "template_r": 128, "n4c_mean_reg_func_valid_composit": 128, "n4c_mean_reg_func_valid_bia": 128, "epi_mni": 128, "epi_parc": [128, 138], "n4c_mean_reg_func_valid_inversecomposit": 128, "normalized_anat": [129, 130], "smoothed_func": [129, 130, 134, 140], "swrfunc": [129, 130, 140], "normalized_func": 129, "sush": 130, "rf": 131, "we": 131, "everi": [131, 145, 152], "studi": [131, 153], "dwi_denoised_unringed_dwifslpreproc_unbia": [131, 132, 133], "dwi_denoised_unringed_dwifslpreproc_unbias_brain_mask": [131, 132], "voxel_fin": 131, "dwi_denoised_unringed_dwifslpreproc_unbias_response_voxel": 131, "dwi_denoised_unringed_dwifslpreproc_unbias_odf_predicted_sign": 131, "wm_odf_norm": 131, "dwi_denoised_unringed_dwifslpreproc_unbias_wm_odf_norm": 131, "gm_odf_norm": 131, "dwi_denoised_unringed_dwifslpreproc_unbias_gm_odf_norm": 131, "csf_odf_norm": 131, "dwi_denoised_unringed_dwifslpreproc_unbias_csf_odf_norm": 131, "gibb": [132, 150], "ring": [132, 150], "distrort": 132, "eddi": [132, 150], "convers": [132, 133, 150], "distorst": 132, "preproc_dwi": 132, "creation": 133, "subcort": 133, "patholog": 133, "transfom": 133, "t1w_5tt_transform": 133, "t1w_5tt_transformed_gmwmse": 133, "c6anat": 134, "mask_002": [134, 139, 140], "mask_swc1anat_002": 134, "mask_003": 134, "mask_swc1anat_003": 134, "special": [135, 136, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156], "effort": [135, 136], "much": [135, 136], "sought": [135, 136], "environ": [135, 136, 141], "ants_random_se": [135, 136], "bare": 135, "metal": 135, "itk_global_default_number_of_thread": 135, "omp_num_thread": 135, "discuss": [135, 136], "bet": [135, 149], "anat_report": 135, "nterpol": 136, "func_report": 136, "assemblynet": 137, "labels_structur": 137, "correpond": 137, "le": 137, "hippocampu": 137, "out_png_tissu": 137, "func_extracted_signals_tissu": 137, "out_png_lob": 137, "func_extracted_signals_lob": 137, "out_png_macrostructur": 137, "func_extracted_signals_macrostructur": 137, "out_png_structur": 137, "func_extracted_signals_47_48": 137, "bold_mriqc": [138, 142, 157], "parcel": [138, 153], "hmc_motion": 138, "ras_epi": 138, "dummy_tr": 138, "interg": 138, "dvars_intensity_norm": 138, "dvars_remove_zero_vari": 138, "epi_tsnr": 138, "fd_normal": 138, "fd_parameter_sourc": 138, "fd_radiu": 138, "fwhm_combin": 138, "fwhm_detrend": 138, "hmc_epi": 138, "quality_index_automask": 138, "outlier_fract": 138, "spikes_detrend": 138, "spikes_no_zscor": 138, "spikes_skip_fram": 138, "spikes_skipe_thresh": 138, "boldqc_out_fil": 138, "mean_reg_func_valid_bold_qc": 138, "dvars_fil": 138, "fd_file": 138, "framewis": [138, 153], "outliercount_fil": 138, "spike_fil": 138, "mask_anat_002": [139, 140], "preced": 139, "resample2_mask": 139, "conv_roi_mak": 139, "convacp_l_2": 139, "convacp_r_2": 139, "convpica_l_2": 139, "convpica_r_2": 139, "cing_l_2": 139, "cing_r_2": 139, "fron_l_2": 139, "fron_r_2": 139, "insula_l_2": 139, "insula_r_2": 139, "occ_l_2": 139, "occ_r_2": 139, "par_l_2": 139, "par_r_2": 139, "str_l_2": 139, "str_r_2": 139, "temp_l_2": 139, "temp_r_2": 139, "tha_l_2": 139, "tha_r_2": 139, "convsca_l_2": 139, "convsca_r_2": 139, "il": 139, "roi_dat": 139, "convacp_l": 139, "convacp_r": 139, "convpica_l": 139, "convpica_r": 139, "cing_l": 139, "cing_r": 139, "fron_l": 139, "fron_r": 139, "insula_l": 139, "insula_r": 139, "occ_l": 139, "occ_r": 139, "par_l": 139, "par_r": 139, "str_l": 139, "str_r": 139, "temp_l": 139, "temp_r": 139, "tha_l": 139, "tha_r": 139, "convsca_l": 139, "convsca_r": 139, "directli": [140, 141, 145, 146, 147, 148, 149, 150, 152, 155], "explan": 140, "regressor_physio_etco2_ctl": 140, "populse_mia": [141, 142, 145, 146, 147, 148, 149, 150, 152, 155], "ergonom": 141, "easili": 141, "offer": 141, "known": [141, 153, 164], "commun": 141, "under": [141, 158, 164], "umbrella": 141, "websit": [141, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 159, 160, 161, 162, 163], "On": [141, 164], "inherit": 141, "page": [141, 164], "offici": 142, "dwi_whole_brain_tractographi": [142, 157], "dwipreprocess": [142, 157], "__init__": [142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 164, 165], "co2_inhal_cvr_make_report": [142, 164], "get_iqms_data": [142, 164], "mriqc_anat_make_report": [142, 164], "mriqc_func_make_report": [142, 164], "mriqc_group_make_report": [142, 164], "pagenumcanva": [142, 164], "draw_page_numb": [142, 164], "showpag": [142, 164], "reportlin": [142, 164], "draw": [142, 164], "checkfileext": [142, 164], "check_orient": [142, 164], "del_dbfieldvalu": [142, 164], "dict4runtime_upd": [142, 164], "get_dbfieldvalu": [142, 164], "mriqc_get_all_run": [142, 164], "mriqc_group_iqms_tsv": [142, 164], "plot_boxplot_point": [142, 164], "plot_qi2": [142, 164], "plot_segment": [142, 164], "plot_slice_plan": [142, 164], "set_dbfieldvalu": [142, 164], "dedic": [142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 161, 162, 164], "py": [142, 148, 151, 164], "mainli": 142, "setup": 142, "get_gitvers": [142, 165], "commit": 142, "git": 142, "launch": [142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156], "processmatlab": [142, 165], "processmia": [142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156], "overrid": 142, "get_input_spec": [142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 159, 160, 161, 162, 163], "trait": [142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 159, 160, 161, 162, 163], "get_output_spec": [142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 159, 160, 161, 162, 163], "add_exit": [142, 165], "add_path": [142, 165], "change_directori": [142, 165], "display_paramet": [142, 165], "parameter_nam": 142, "set_global_vari": [142, 165], "variable_nam": 142, "set_vari": [142, 165], "treatment": [143, 160], "submodul": [143, 144, 154, 157, 165], "spatial_preprocess": [143, 144], "list_output": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 164], "run_process_mia": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 164], "art_qi1": [143, 153], "art_qi2": [143, 153], "cjv": [143, 153], "cnr": [143, 153], "efc": [143, 153], "fber": [143, 153], "find_peak": [143, 153], "find_spik": [143, 153], "fuzzy_jaccard": [143, 153], "gsr": [143, 153], "image_binary_dil": [143, 153], "normalize_mc_param": [143, 153], "regress_poli": [143, 153], "rpve": [143, 153], "snr_dietrich": [143, 153], "summary_stat": [143, 153], "volume_fract": [143, 153], "wm2max": [143, 153], "gaussfir": [143, 156], "gfb_conv": [143, 156], "spm_hrf": [143, 156], "encapsul": 144, "mrtrix3": [144, 150], "homemad": 144, "outliercount": [144, 145], "convblock": [144, 148], "stripmodel": [144, 148], "conform": [144, 148, 151], "resample_lik": [144, 148], "artifact_mask": [144, 151], "is_outli": [144, 151], "customis": [145, 146, 147, 148, 149, 150, 152, 155], "thing": [145, 146, 147, 148, 149, 150, 152, 155], "3dautomask": 145, "instanti": [145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156], "plug": [145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156], "self": [145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 164], "is_plug": [145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156], "inheritance_d": [145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156], "notindb": [145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156], "make_initresult": [145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156], "inheritance_dict": [145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156], "arithmet": 145, "droptr": 145, "3dcalc": 145, "surround": [145, 153], "3dtstat": 145, "3dvolreg": [145, 160], "http": [146, 148, 151, 152, 164], "io": [146, 148, 151, 152], "html": [146, 148, 151, 152], "com": [146, 148, 151, 164], "niprep": [146, 148, 151, 164], "tree": 146, "master": 146, "mri_binar": 148, "statement": 148, "OF": 148, "blob": [148, 151, 164], "2995ded957961a7f3704de57eee88eb6cc30d52d": 148, "ndim": 148, "in_channel": 148, "out_channel": 148, "stride": 148, "leaki": 148, "leakyrelu": 148, "unet": 148, "blabla": [148, 153, 162], "bool": [148, 153], "nb_featur": 148, "nb_level": 148, "feat_mult": 148, "max_featur": 148, "nb_conv_per_level": 148, "max_pool": 148, "return_mask": 148, "input_nii": 148, "output_dtyp": 148, "cval": 148, "via": 148, "inskul": 149, "outskul": 149, "convert_xfm": 149, "fslroi": 149, "intra": 149, "b1": 150, "domain": 150, "dholland": 150, "applymask": 151, "e021008da0a2ef1c48e882baf932139a673349f9": 151, "l301": 151, "45ab13e1bf6fdbf5e29c90cef44055b0b9cf391b": 151, "l92": 151, "common": 151, "conform_imag": 151, "l75": 151, "l974": 151, "l970": 151, "l1039": 151, "l405": 151, "prescrib": 151, "percentil": [151, 153], "l474": 151, "f662acfce8def4717e0c3414618f3a5de5913b31": 151, "resample_from_to": 151, "skimag": 151, "l448": 151, "l394": 151, "l899": 151, "imdata": 151, "airdata": 151, "thresh": 151, "nparrai": 151, "numobserv": 151, "numdimens": 151, "numpi": [151, 153, 156], "observ": 151, "bolean": 151, "iglewicz": 151, "david": 151, "hoaglin": 151, "1993": 151, "handl": 151, "asqc": 151, "techniqu": 151, "edward": 151, "mykytka": 151, "ph": 151, "editor": 151, "_ar_est_yw": 153, "_flatten_dict": 153, "_prepare_mask": 153, "_robust_zscor": 153, "atkinson1997": 153, "atkinson": 153, "focu": 153, "ieee": 153, "med": 153, "903": 153, "910": 153, "1997": 153, "doi": 153, "1109": 153, "650886": 153, "dietrich2007": 153, "dietrich": 153, "influenc": 153, "multichannel": 153, "coil": 153, "parallel": 153, "jmri": 153, "375": 153, "385": 153, "2007": 153, "1002": 153, "20969": 153, "ganzetti2016": 153, "ganzetti": 153, "driven": 153, "front": 153, "neuroinform": 153, "2016": 153, "3389": 153, "fninf": 153, "00010": 153, "giannelli2010": 153, "giannelli": 153, "character": 153, "nyquist": 153, "ghost": 153, "clinic": 153, "bandwidth": [153, 156], "j": 153, "app": 153, "clin": 153, "phy": 153, "2010": 153, "1120": 153, "jacmp": 153, "v11i4": 153, "3237": 153, "magnota2006": 153, "magnotta": 153, "va": 153, "friedman": 153, "fbirn": 153, "multicent": 153, "dig": 153, "147": 153, "2006": 153, "1007": 153, "s10278": 153, "006": 153, "0264": 153, "shehzad2015": 153, "shehzad": 153, "connectom": 153, "neurosci": 153, "confer": 153, "abstract": 153, "neuroinformat": 153, "2015": 153, "conf": 153, "fnin": 153, "00047": 153, "union": 153, "power2012": 153, "spuriou": 153, "systemat": 153, "xlm": 153, "mortamet2009": [153, 160], "_1": 153, "frac": 153, "limits_": 153, "x_": 153, "art": 153, "ndarrai": [153, 156], "min_voxel": 153, "max_voxel": 153, "300000": 153, "chi": 153, "onto": 153, "artifactu": 153, "2_n": 153, "2n": 153, "mu_wm": 153, "mu_gm": 153, "sigma_wm": 153, "sigma_gm": 153, "proxi": 153, "inu": 153, "sigma_": 153, "mu_": 153, "sigma_air": 153, "sigma_b": 153, "framemask": 153, "shannon": 153, "energi": 153, "concentr": 153, "sum_": 153, "x_j": 153, "ln": 153, "2_j": 153, "equat": 153, "empti": [153, 164], "insert": 153, "skin": 153, "in_tpm": 153, "in_mni_tpm": 153, "epi_data": 153, "ref_fil": 153, "circl": 153, "intersect": 153, "str": 153, "ball": 153, "footprint": 153, "inferior": 153, "rx": 153, "pitch": 153, "ry": 153, "roll": 153, "rz": 153, "yaw": 153, "remove_mean": 153, "failure_mod": 153, "p": [153, 156], "k_i": 153, "p_": 153, "mu_fg": 153, "sigma_fg": 153, "foreground": 153, "mu_f": 153, "sigma_f": 153, "mad_air": 153, "eq": 153, "rayleigh": 153, "pi": 153, "sometim": 153, "bg": 153, "icv": 153, "sum_i": 153, "cvr": [153, 156, 158, 160, 163, 164], "co2": [153, 164], "inhal": 153, "get_covari": [154, 155], "restrict": 155, "likelihood": 155, "manipul": 156, "list1": 156, "list2": 156, "1rst": 156, "browser": 156, "anoth": 156, "bt": 156, "nt": 156, "tap": 156, "oversampl": 156, "subsect": 156, "section": 156, "repeat": 156, "microtim": 156, "pipeline_definit": [157, 158, 159, 160, 161, 162, 163], "cerebrovascular": [158, 160], "reactiv": 158, "evalu": [158, 163], "autoexport_nodes_paramet": [158, 159, 160, 161, 162, 163], "kwarg": [158, 159, 160, 161, 162, 163, 164], "reserv": 160, "anat_mriqc_pipelin": 161, "irm": 162, "bold_stat": 163, "report_fil": 164, "dict4runtim": 164, "mriqc_group": 164, "canva": 164, "footer": 164, "constructor": 164, "page_count": 164, "break": 164, "flowabl": 164, "ext_dic": 164, "ext": 164, "valid_bool": 164, "in_ext": 164, "verbos": 164, "statu": 164, "tags2del": 164, "db": 164, "tag_to_del": 164, "db_filenam": 164, "dict": 164, "recov": 164, "raw": 164, "files_nam": 164, "sting": 164, "datafram": 164, "panda": 164, "titl": 164, "ylabel": 164, "tabular": 164, "x_grid": 164, "ref_pdf": 164, "fit_pdf": 164, "ref_data": 164, "cutoff_idx": 164, "bla": 164, "out_dir": 164, "5a0f0408bd0c176dbc46088c6ffe279269180f3f": 164, "viz": 164, "l550": 164, "data_1": 164, "data_2": 164, "fig_row": 164, "fig_col": 164, "slice_start": 164, "slice_step": 164, "dyn": 164, "cmap_1": 164, "vmin_1": 164, "vmax_1": 164, "cmap_2": 164, "vmin_2": 164, "vmax_2": 164, "only_nois": 164, "out_nam": 164, "mosaic": 164, "overlaid": 164, "superimpos": 164, "panel": 164, "rgb": 164, "255": 164, "cmap": 164, "gist_rainbow": 164, "rdylbu": 164, "spectral": 164, "rainbow_r": 164, "jet_r": 164, "seismic_r": 164, "bwr_r": 164, "tag_to_add": 164, "field_typ": 164, "visibl": 164, "packag": 165, "subpackag": 165, "info": 165, "process_matlab": 165}, "objects": {"": [[142, 0, 0, "-", "mia_processes"]], "mia_processes": [[143, 0, 0, "-", "bricks"], [142, 0, 0, "-", "info"], [157, 0, 0, "-", "pipelines"], [142, 0, 0, "-", "process_matlab"], [164, 0, 0, "-", "utils"]], "mia_processes.bricks": [[144, 0, 0, "-", "preprocess"], [153, 0, 0, "-", "reports"], [154, 0, 0, "-", "stat"], [156, 0, 0, "-", "tools"]], "mia_processes.bricks.preprocess": [[145, 0, 0, "-", "afni"], [146, 0, 0, "-", "ants"], [147, 0, 0, "-", "dipy"], [148, 0, 0, "-", "freesurfer"], [149, 0, 0, "-", "fsl"], [150, 0, 0, "-", "mrtrix"], [151, 0, 0, "-", "others"], [152, 0, 0, "-", "spm"]], "mia_processes.bricks.preprocess.afni": [[145, 0, 0, "-", "processes"]], "mia_processes.bricks.preprocess.afni.processes": [[145, 1, 1, "", "Automask"], [145, 1, 1, "", "Calc"], [145, 1, 1, "", "CalcDropTRs"], [145, 1, 1, "", "Despike"], [145, 1, 1, "", "FWHMx"], [145, 1, 1, "", "GCOR"], [145, 1, 1, "", "OutlierCount"], [145, 1, 1, "", "QualityIndex"], [145, 1, 1, "", "RefitDeoblique"], [145, 1, 1, "", "SkullStrip"], [145, 1, 1, "", "TShift"], [145, 1, 1, "", "TStatMean"], [145, 1, 1, "", "Volreg"]], "mia_processes.bricks.preprocess.afni.processes.Automask": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "list_outputs"], [145, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.Calc": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "list_outputs"], [145, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.CalcDropTRs": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "list_outputs"], [145, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.Despike": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "list_outputs"], [145, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.FWHMx": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "list_outputs"], [145, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.GCOR": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "list_outputs"], [145, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.OutlierCount": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "list_outputs"], [145, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.QualityIndex": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "list_outputs"], [145, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.RefitDeoblique": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "list_outputs"], [145, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.SkullStrip": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "list_outputs"], [145, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.TShift": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "list_outputs"], [145, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.TStatMean": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "list_outputs"], [145, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.Volreg": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "list_outputs"], [145, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.ants": [[146, 0, 0, "-", "processes"]], "mia_processes.bricks.preprocess.ants.processes": [[146, 1, 1, "", "AffineInitializer"], [146, 1, 1, "", "ApplyTransforms"], [146, 1, 1, "", "N4BiasFieldCorrection"], [146, 1, 1, "", "Registration"]], "mia_processes.bricks.preprocess.ants.processes.AffineInitializer": [[146, 2, 1, "", "__init__"], [146, 2, 1, "", "list_outputs"], [146, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.ants.processes.ApplyTransforms": [[146, 2, 1, "", "__init__"], [146, 2, 1, "", "list_outputs"], [146, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.ants.processes.N4BiasFieldCorrection": [[146, 2, 1, "", "__init__"], [146, 2, 1, "", "list_outputs"], [146, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.ants.processes.Registration": [[146, 2, 1, "", "__init__"], [146, 2, 1, "", "list_outputs"], [146, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.dipy": [[147, 0, 0, "-", "processes"]], "mia_processes.bricks.preprocess.dipy.processes": [[147, 1, 1, "", "ComputeDKI"], [147, 1, 1, "", "Denoise"]], "mia_processes.bricks.preprocess.dipy.processes.ComputeDKI": [[147, 2, 1, "", "__init__"], [147, 2, 1, "", "list_outputs"], [147, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.dipy.processes.Denoise": [[147, 2, 1, "", "__init__"], [147, 2, 1, "", "list_outputs"], [147, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.freesurfer": [[148, 0, 0, "-", "processes"]], "mia_processes.bricks.preprocess.freesurfer.processes": [[148, 1, 1, "", "Binarize"], [148, 1, 1, "", "SynthStrip"], [148, 1, 1, "", "SynthStripMriqc"]], "mia_processes.bricks.preprocess.freesurfer.processes.Binarize": [[148, 2, 1, "", "__init__"], [148, 2, 1, "", "list_outputs"], [148, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.freesurfer.processes.SynthStrip": [[148, 2, 1, "", "__init__"], [148, 2, 1, "", "list_outputs"], [148, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc": [[148, 1, 1, "", "ConvBlock"], [148, 1, 1, "", "StripModel"], [148, 2, 1, "", "__init__"], [148, 2, 1, "", "conform"], [148, 2, 1, "", "list_outputs"], [148, 2, 1, "", "resample_like"], [148, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.ConvBlock": [[148, 2, 1, "", "__init__"], [148, 2, 1, "", "forward"], [148, 3, 1, "", "training"]], "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.StripModel": [[148, 2, 1, "", "__init__"], [148, 2, 1, "", "forward"], [148, 3, 1, "", "training"]], "mia_processes.bricks.preprocess.fsl": [[149, 0, 0, "-", "processes"]], "mia_processes.bricks.preprocess.fsl.processes": [[149, 1, 1, "", "BetSurfacesExtraction"], [149, 1, 1, "", "ConvertXFM"], [149, 1, 1, "", "EpiReg"], [149, 1, 1, "", "ExtractROI"], [149, 1, 1, "", "FastSegment"], [149, 1, 1, "", "Flirt"], [149, 1, 1, "", "Smooth"]], "mia_processes.bricks.preprocess.fsl.processes.BetSurfacesExtraction": [[149, 2, 1, "", "__init__"], [149, 2, 1, "", "list_outputs"], [149, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.fsl.processes.ConvertXFM": [[149, 2, 1, "", "__init__"], [149, 2, 1, "", "list_outputs"], [149, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.fsl.processes.EpiReg": [[149, 2, 1, "", "__init__"], [149, 2, 1, "", "list_outputs"], [149, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.fsl.processes.ExtractROI": [[149, 2, 1, "", "__init__"], [149, 2, 1, "", "list_outputs"], [149, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.fsl.processes.FastSegment": [[149, 2, 1, "", "__init__"], [149, 2, 1, "", "list_outputs"], [149, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.fsl.processes.Flirt": [[149, 2, 1, "", "__init__"], [149, 2, 1, "", "list_outputs"], [149, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.fsl.processes.Smooth": [[149, 2, 1, "", "__init__"], [149, 2, 1, "", "list_outputs"], [149, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix": [[150, 0, 0, "-", "processes"]], "mia_processes.bricks.preprocess.mrtrix.processes": [[150, 1, 1, "", "ConstrainedSphericalDeconvolution"], [150, 1, 1, "", "DWIBiasCorrect"], [150, 1, 1, "", "DWIBrainMask"], [150, 1, 1, "", "DWIDenoise"], [150, 1, 1, "", "DWIExtract"], [150, 1, 1, "", "DWIPreproc"], [150, 1, 1, "", "EditingTrack"], [150, 1, 1, "", "FilteringTrack"], [150, 1, 1, "", "FitTensor"], [150, 1, 1, "", "Generate5tt2gmwmi"], [150, 1, 1, "", "Generate5ttfsl"], [150, 1, 1, "", "MRCat"], [150, 1, 1, "", "MRConvert"], [150, 1, 1, "", "MRDeGibbs"], [150, 1, 1, "", "MRMath"], [150, 1, 1, "", "MRTransform"], [150, 1, 1, "", "MTNormalise"], [150, 1, 1, "", "ResponseSDDhollander"], [150, 1, 1, "", "SphericalHarmonicExtraction"], [150, 1, 1, "", "TensorMetrics"], [150, 1, 1, "", "Tractography"], [150, 1, 1, "", "TransformFSLConvert"]], "mia_processes.bricks.preprocess.mrtrix.processes.ConstrainedSphericalDeconvolution": [[150, 2, 1, "", "__init__"], [150, 2, 1, "", "list_outputs"], [150, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.DWIBiasCorrect": [[150, 2, 1, "", "__init__"], [150, 2, 1, "", "list_outputs"], [150, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.DWIBrainMask": [[150, 2, 1, "", "__init__"], [150, 2, 1, "", "list_outputs"], [150, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.DWIDenoise": [[150, 2, 1, "", "__init__"], [150, 2, 1, "", "list_outputs"], [150, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.DWIExtract": [[150, 2, 1, "", "__init__"], [150, 2, 1, "", "list_outputs"], [150, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.DWIPreproc": [[150, 2, 1, "", "__init__"], [150, 2, 1, "", "list_outputs"], [150, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.EditingTrack": [[150, 2, 1, "", "__init__"], [150, 2, 1, "", "list_outputs"], [150, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.FilteringTrack": [[150, 2, 1, "", "__init__"], [150, 2, 1, "", "list_outputs"], [150, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.FitTensor": [[150, 2, 1, "", "__init__"], [150, 2, 1, "", "list_outputs"], [150, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.Generate5tt2gmwmi": [[150, 2, 1, "", "__init__"], [150, 2, 1, "", "list_outputs"], [150, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.Generate5ttfsl": [[150, 2, 1, "", "__init__"], [150, 2, 1, "", "list_outputs"], [150, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.MRCat": [[150, 2, 1, "", "__init__"], [150, 2, 1, "", "list_outputs"], [150, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.MRConvert": [[150, 2, 1, "", "__init__"], [150, 2, 1, "", "list_outputs"], [150, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.MRDeGibbs": [[150, 2, 1, "", "__init__"], [150, 2, 1, "", "list_outputs"], [150, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.MRMath": [[150, 2, 1, "", "__init__"], [150, 2, 1, "", "list_outputs"], [150, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.MRTransform": [[150, 2, 1, "", "__init__"], [150, 2, 1, "", "list_outputs"], [150, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.MTNormalise": [[150, 2, 1, "", "__init__"], [150, 2, 1, "", "list_outputs"], [150, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.ResponseSDDhollander": [[150, 2, 1, "", "__init__"], [150, 2, 1, "", "list_outputs"], [150, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.SphericalHarmonicExtraction": [[150, 2, 1, "", "__init__"], [150, 2, 1, "", "list_outputs"], [150, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.TensorMetrics": [[150, 2, 1, "", "__init__"], [150, 2, 1, "", "list_outputs"], [150, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.Tractography": [[150, 2, 1, "", "__init__"], [150, 2, 1, "", "list_outputs"], [150, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.TransformFSLConvert": [[150, 2, 1, "", "__init__"], [150, 2, 1, "", "list_outputs"], [150, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others": [[151, 0, 0, "-", "processing"]], "mia_processes.bricks.preprocess.others.processing": [[151, 1, 1, "", "ApplyBiasCorrection"], [151, 1, 1, "", "ArtifactMask"], [151, 1, 1, "", "Binarize"], [151, 1, 1, "", "ConformImage"], [151, 1, 1, "", "ConvROI"], [151, 1, 1, "", "Enhance"], [151, 1, 1, "", "EstimateSNR"], [151, 1, 1, "", "ExtractROIbyLabel"], [151, 1, 1, "", "ExtractSignalROI"], [151, 1, 1, "", "GradientThreshold"], [151, 1, 1, "", "Harmonize"], [151, 1, 1, "", "IntensityClip"], [151, 1, 1, "", "Mask"], [151, 1, 1, "", "NonSteadyStateDetector"], [151, 1, 1, "", "Resample1"], [151, 1, 1, "", "Resample2"], [151, 1, 1, "", "RotationMask"], [151, 1, 1, "", "Sanitize"], [151, 1, 1, "", "TSNR"], [151, 1, 1, "", "TemplateFromTemplateFlow"], [151, 1, 1, "", "Threshold"], [151, 4, 1, "", "artifact_mask"], [151, 4, 1, "", "is_outlier"], [151, 4, 1, "", "threshold"]], "mia_processes.bricks.preprocess.others.processing.ApplyBiasCorrection": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "list_outputs"], [151, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.ArtifactMask": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "list_outputs"], [151, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.Binarize": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "list_outputs"], [151, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.ConformImage": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "list_outputs"], [151, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.ConvROI": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "list_outputs"], [151, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.Enhance": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "list_outputs"], [151, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.EstimateSNR": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "list_outputs"], [151, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.ExtractROIbyLabel": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "list_outputs"], [151, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.ExtractSignalROI": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "list_outputs"], [151, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.GradientThreshold": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "list_outputs"], [151, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.Harmonize": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "list_outputs"], [151, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.IntensityClip": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "list_outputs"], [151, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.Mask": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "list_outputs"], [151, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.NonSteadyStateDetector": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "list_outputs"], [151, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.Resample1": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "list_outputs"], [151, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.Resample2": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "list_outputs"], [151, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.RotationMask": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "list_outputs"], [151, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.Sanitize": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "list_outputs"], [151, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.TSNR": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "list_outputs"], [151, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.TemplateFromTemplateFlow": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "list_outputs"], [151, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.Threshold": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "list_outputs"], [151, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.spm": [[152, 0, 0, "-", "spatial_preprocessing"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing": [[152, 1, 1, "", "Coregister"], [152, 1, 1, "", "GM_WM_Normalize"], [152, 1, 1, "", "NewSegment"], [152, 1, 1, "", "Normalize12"], [152, 1, 1, "", "Realign"], [152, 1, 1, "", "SliceTiming"], [152, 1, 1, "", "Smooth"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Coregister": [[152, 2, 1, "", "__init__"], [152, 2, 1, "", "list_outputs"], [152, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing.GM_WM_Normalize": [[152, 2, 1, "", "__init__"], [152, 2, 1, "", "list_outputs"], [152, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing.NewSegment": [[152, 2, 1, "", "__init__"], [152, 2, 1, "", "list_outputs"], [152, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Normalize12": [[152, 2, 1, "", "__init__"], [152, 2, 1, "", "list_outputs"], [152, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Realign": [[152, 2, 1, "", "__init__"], [152, 2, 1, "", "list_outputs"], [152, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing.SliceTiming": [[152, 2, 1, "", "__init__"], [152, 2, 1, "", "list_outputs"], [152, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Smooth": [[152, 2, 1, "", "__init__"], [152, 2, 1, "", "list_outputs"], [152, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports": [[153, 0, 0, "-", "processes"], [153, 0, 0, "-", "reporting"]], "mia_processes.bricks.reports.processes": [[153, 1, 1, "", "AnatIQMs"], [153, 1, 1, "", "BoldIQMs"], [153, 1, 1, "", "BoldIQMsPlot"], [153, 1, 1, "", "CarpetParcellation"], [153, 1, 1, "", "ComputeDVARS"], [153, 1, 1, "", "FramewiseDisplacement"], [153, 1, 1, "", "Mean_stdDev_calc"], [153, 1, 1, "", "PlotSignalROI"], [153, 1, 1, "", "Result_collector"], [153, 1, 1, "", "Spikes"], [153, 4, 1, "", "art_qi1"], [153, 4, 1, "", "art_qi2"], [153, 4, 1, "", "cjv"], [153, 4, 1, "", "cnr"], [153, 4, 1, "", "efc"], [153, 4, 1, "", "fber"], [153, 4, 1, "", "find_peaks"], [153, 4, 1, "", "find_spikes"], [153, 4, 1, "", "fuzzy_jaccard"], [153, 4, 1, "", "gsr"], [153, 4, 1, "", "image_binary_dilation"], [153, 4, 1, "", "normalize_mc_params"], [153, 4, 1, "", "regress_poly"], [153, 4, 1, "", "rpve"], [153, 4, 1, "", "snr"], [153, 4, 1, "", "snr_dietrich"], [153, 4, 1, "", "summary_stats"], [153, 4, 1, "", "volume_fraction"], [153, 4, 1, "", "wm2max"]], "mia_processes.bricks.reports.processes.AnatIQMs": [[153, 2, 1, "", "__init__"], [153, 2, 1, "", "list_outputs"], [153, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.processes.BoldIQMs": [[153, 2, 1, "", "__init__"], [153, 2, 1, "", "list_outputs"], [153, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.processes.BoldIQMsPlot": [[153, 2, 1, "", "__init__"], [153, 2, 1, "", "list_outputs"], [153, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.processes.CarpetParcellation": [[153, 2, 1, "", "__init__"], [153, 2, 1, "", "list_outputs"], [153, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.processes.ComputeDVARS": [[153, 2, 1, "", "__init__"], [153, 2, 1, "", "list_outputs"], [153, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.processes.FramewiseDisplacement": [[153, 2, 1, "", "__init__"], [153, 2, 1, "", "list_outputs"], [153, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.processes.Mean_stdDev_calc": [[153, 2, 1, "", "__init__"], [153, 2, 1, "", "list_outputs"], [153, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.processes.PlotSignalROI": [[153, 2, 1, "", "__init__"], [153, 2, 1, "", "list_outputs"], [153, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.processes.Result_collector": [[153, 2, 1, "", "__init__"], [153, 2, 1, "", "list_outputs"], [153, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.processes.Spikes": [[153, 2, 1, "", "__init__"], [153, 2, 1, "", "list_outputs"], [153, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.reporting": [[153, 1, 1, "", "ReportAnatMriqc"], [153, 1, 1, "", "ReportCO2inhalCvr"], [153, 1, 1, "", "ReportFuncMriqc"], [153, 1, 1, "", "ReportGroupMriqc"]], "mia_processes.bricks.reports.reporting.ReportAnatMriqc": [[153, 2, 1, "", "__init__"], [153, 2, 1, "", "list_outputs"], [153, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.reporting.ReportCO2inhalCvr": [[153, 2, 1, "", "__init__"], [153, 2, 1, "", "list_outputs"], [153, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.reporting.ReportFuncMriqc": [[153, 2, 1, "", "__init__"], [153, 2, 1, "", "list_outputs"], [153, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.reporting.ReportGroupMriqc": [[153, 2, 1, "", "__init__"], [153, 2, 1, "", "list_outputs"], [153, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.stat": [[155, 0, 0, "-", "spm"]], "mia_processes.bricks.stat.spm": [[155, 0, 0, "-", "model"]], "mia_processes.bricks.stat.spm.model": [[155, 1, 1, "", "EstimateContrast"], [155, 1, 1, "", "EstimateModel"], [155, 1, 1, "", "Level1Design"], [155, 1, 1, "", "MultipleRegressionDesign"], [155, 1, 1, "", "OneSampleTTestDesign"], [155, 1, 1, "", "PairedTTestDesign"], [155, 1, 1, "", "TwoSampleTTestDesign"], [155, 4, 1, "", "get_covariates"]], "mia_processes.bricks.stat.spm.model.EstimateContrast": [[155, 2, 1, "", "__init__"], [155, 2, 1, "", "list_outputs"], [155, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.stat.spm.model.EstimateModel": [[155, 2, 1, "", "__init__"], [155, 2, 1, "", "list_outputs"], [155, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.stat.spm.model.Level1Design": [[155, 2, 1, "", "__init__"], [155, 2, 1, "", "list_outputs"], [155, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.stat.spm.model.MultipleRegressionDesign": [[155, 2, 1, "", "__init__"], [155, 2, 1, "", "list_outputs"], [155, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.stat.spm.model.OneSampleTTestDesign": [[155, 2, 1, "", "__init__"], [155, 2, 1, "", "list_outputs"], [155, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.stat.spm.model.PairedTTestDesign": [[155, 2, 1, "", "__init__"], [155, 2, 1, "", "list_outputs"], [155, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.stat.spm.model.TwoSampleTTestDesign": [[155, 2, 1, "", "__init__"], [155, 2, 1, "", "list_outputs"], [155, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools": [[156, 0, 0, "-", "tools"]], "mia_processes.bricks.tools.tools": [[156, 1, 1, "", "Concat_to_list"], [156, 1, 1, "", "Concat_to_list_of_list"], [156, 1, 1, "", "Delete_data"], [156, 1, 1, "", "Files_To_List"], [156, 1, 1, "", "Filter_Files_List"], [156, 1, 1, "", "Find_In_List"], [156, 1, 1, "", "Get_Conditions_From_csv"], [156, 1, 1, "", "Get_Patient_Name"], [156, 1, 1, "", "Import_Data"], [156, 1, 1, "", "Input_Filter"], [156, 1, 1, "", "List_Duplicate"], [156, 1, 1, "", "List_To_File"], [156, 1, 1, "", "Make_A_List"], [156, 1, 1, "", "Make_CVR_reg_physio"]], "mia_processes.bricks.tools.tools.Concat_to_list": [[156, 2, 1, "", "__init__"], [156, 2, 1, "", "list_outputs"], [156, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Concat_to_list_of_list": [[156, 2, 1, "", "__init__"], [156, 2, 1, "", "list_outputs"], [156, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Delete_data": [[156, 2, 1, "", "__init__"], [156, 2, 1, "", "list_outputs"], [156, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Files_To_List": [[156, 2, 1, "", "__init__"], [156, 2, 1, "", "list_outputs"], [156, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Filter_Files_List": [[156, 2, 1, "", "__init__"], [156, 2, 1, "", "list_outputs"], [156, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Find_In_List": [[156, 2, 1, "", "__init__"], [156, 2, 1, "", "list_outputs"], [156, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Get_Conditions_From_csv": [[156, 2, 1, "", "__init__"], [156, 2, 1, "", "list_outputs"], [156, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Get_Patient_Name": [[156, 2, 1, "", "__init__"], [156, 2, 1, "", "list_outputs"], [156, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Import_Data": [[156, 2, 1, "", "__init__"], [156, 2, 1, "", "list_outputs"], [156, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Input_Filter": [[156, 2, 1, "", "__init__"], [156, 2, 1, "", "list_outputs"], [156, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.List_Duplicate": [[156, 2, 1, "", "__init__"], [156, 2, 1, "", "list_outputs"], [156, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.List_To_File": [[156, 2, 1, "", "__init__"], [156, 2, 1, "", "list_outputs"], [156, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Make_A_List": [[156, 2, 1, "", "__init__"], [156, 2, 1, "", "list_outputs"], [156, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Make_CVR_reg_physio": [[156, 2, 1, "", "__init__"], [156, 2, 1, "", "gaussfir"], [156, 2, 1, "", "gfb_conv"], [156, 2, 1, "", "list_outputs"], [156, 2, 1, "", "run_process_mia"], [156, 2, 1, "", "spm_hrf"]], "mia_processes.info": [[142, 4, 1, "", "get_gitversion"]], "mia_processes.pipelines": [[158, 0, 0, "-", "CerebVascularReact"], [159, 0, 0, "-", "DWITractography"], [160, 0, 0, "-", "preprocess"], [161, 0, 0, "-", "qualityControl"], [162, 0, 0, "-", "reports"], [163, 0, 0, "-", "stat"]], "mia_processes.pipelines.CerebVascularReact": [[158, 0, 0, "-", "co2_inhalation"]], "mia_processes.pipelines.CerebVascularReact.co2_inhalation": [[158, 1, 1, "", "CO2_inhalation"]], "mia_processes.pipelines.CerebVascularReact.co2_inhalation.CO2_inhalation": [[158, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.DWITractography": [[159, 0, 0, "-", "dwi_whole_brain_tractography"]], "mia_processes.pipelines.DWITractography.dwi_whole_brain_tractography": [[159, 1, 1, "", "Dwi_whole_brain_tractography"]], "mia_processes.pipelines.DWITractography.dwi_whole_brain_tractography.Dwi_whole_brain_tractography": [[159, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess": [[160, 0, 0, "-", "anat_airmask"], [160, 0, 0, "-", "anat_headmask"], [160, 0, 0, "-", "anat_mni_tpms"], [160, 0, 0, "-", "anat_skullstrip"], [160, 0, 0, "-", "anat_skullstrip_synthstrip"], [160, 0, 0, "-", "anat_spatial_norm"], [160, 0, 0, "-", "bold_hmc"], [160, 0, 0, "-", "bold_mni_align"], [160, 0, 0, "-", "bold_spatial_preprocessing1"], [160, 0, 0, "-", "bold_spatial_preprocessing2"], [160, 0, 0, "-", "dwi_fod_msmt_csd"], [160, 0, 0, "-", "dwi_preprocessing"], [160, 0, 0, "-", "spatial_mask"]], "mia_processes.pipelines.preprocess.anat_airmask": [[160, 1, 1, "", "Anat_airmask"]], "mia_processes.pipelines.preprocess.anat_airmask.Anat_airmask": [[160, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.anat_headmask": [[160, 1, 1, "", "Anat_headmask"]], "mia_processes.pipelines.preprocess.anat_headmask.Anat_headmask": [[160, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.anat_mni_tpms": [[160, 1, 1, "", "Anat_mni_tpms"]], "mia_processes.pipelines.preprocess.anat_mni_tpms.Anat_mni_tpms": [[160, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.anat_skullstrip": [[160, 1, 1, "", "Anat_skullstrip"]], "mia_processes.pipelines.preprocess.anat_skullstrip.Anat_skullstrip": [[160, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip": [[160, 1, 1, "", "Anat_skullstrip_synthstrip"]], "mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip.Anat_skullstrip_synthstrip": [[160, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.anat_spatial_norm": [[160, 1, 1, "", "Anat_spatial_norm"]], "mia_processes.pipelines.preprocess.anat_spatial_norm.Anat_spatial_norm": [[160, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.bold_hmc": [[160, 1, 1, "", "Bold_hmc"]], "mia_processes.pipelines.preprocess.bold_hmc.Bold_hmc": [[160, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.bold_mni_align": [[160, 1, 1, "", "Bold_mni_align"]], "mia_processes.pipelines.preprocess.bold_mni_align.Bold_mni_align": [[160, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.bold_spatial_preprocessing1": [[160, 1, 1, "", "Bold_spatial_preprocessing1"]], "mia_processes.pipelines.preprocess.bold_spatial_preprocessing1.Bold_spatial_preprocessing1": [[160, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.bold_spatial_preprocessing2": [[160, 1, 1, "", "Bold_spatial_preprocessing2"]], "mia_processes.pipelines.preprocess.bold_spatial_preprocessing2.Bold_spatial_preprocessing2": [[160, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.dwi_fod_msmt_csd": [[160, 1, 1, "", "Dwi_fod_msmt_csd"]], "mia_processes.pipelines.preprocess.dwi_fod_msmt_csd.Dwi_fod_msmt_csd": [[160, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.dwi_preprocessing": [[160, 1, 1, "", "Dwi_preprocessing"]], "mia_processes.pipelines.preprocess.dwi_preprocessing.Dwi_preprocessing": [[160, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.spatial_mask": [[160, 1, 1, "", "Spatial_mask"]], "mia_processes.pipelines.preprocess.spatial_mask.Spatial_mask": [[160, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.qualityControl": [[161, 0, 0, "-", "anat_mriqc"], [161, 0, 0, "-", "bold_mriqc"]], "mia_processes.pipelines.qualityControl.anat_mriqc": [[161, 1, 1, "", "Anat_mriqc"]], "mia_processes.pipelines.qualityControl.anat_mriqc.Anat_mriqc": [[161, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.qualityControl.bold_mriqc": [[161, 1, 1, "", "Bold_mriqc"]], "mia_processes.pipelines.qualityControl.bold_mriqc.Bold_mriqc": [[161, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.reports": [[162, 0, 0, "-", "bold_iqms"], [162, 0, 0, "-", "extract_roi_param"]], "mia_processes.pipelines.reports.bold_iqms": [[162, 1, 1, "", "Bold_iqms"]], "mia_processes.pipelines.reports.bold_iqms.Bold_iqms": [[162, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.reports.extract_roi_param": [[162, 1, 1, "", "Extract_roi_param"]], "mia_processes.pipelines.reports.extract_roi_param.Extract_roi_param": [[162, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.stat": [[163, 0, 0, "-", "bold_stat_cvr"]], "mia_processes.pipelines.stat.bold_stat_cvr": [[163, 1, 1, "", "Bold_stat_cvr"]], "mia_processes.pipelines.stat.bold_stat_cvr.Bold_stat_cvr": [[163, 2, 1, "", "pipeline_definition"]], "mia_processes.process_matlab": [[142, 1, 1, "", "ProcessMatlab"]], "mia_processes.process_matlab.ProcessMatlab": [[142, 2, 1, "", "__init__"], [142, 2, 1, "", "add_exit"], [142, 2, 1, "", "add_path"], [142, 2, 1, "", "change_directory"], [142, 2, 1, "", "display_parameter"], [142, 2, 1, "", "run"], [142, 2, 1, "", "set_global_variable"], [142, 2, 1, "", "set_variable"]], "mia_processes.utils": [[164, 0, 0, "-", "report"], [164, 0, 0, "-", "tools"]], "mia_processes.utils.report": [[164, 1, 1, "", "Report"]], "mia_processes.utils.report.Report": [[164, 2, 1, "", "__init__"], [164, 2, 1, "", "co2_inhal_cvr_make_report"], [164, 2, 1, "", "get_iqms_data"], [164, 2, 1, "", "mriqc_anat_make_report"], [164, 2, 1, "", "mriqc_func_make_report"], [164, 2, 1, "", "mriqc_group_make_report"]], "mia_processes.utils.tools": [[164, 1, 1, "", "PageNumCanvas"], [164, 1, 1, "", "ReportLine"], [164, 4, 1, "", "checkFileExt"], [164, 4, 1, "", "check_orientations"], [164, 4, 1, "", "del_dbFieldValue"], [164, 4, 1, "", "dict4runtime_update"], [164, 4, 1, "", "get_dbFieldValue"], [164, 4, 1, "", "mriqc_get_all_run"], [164, 4, 1, "", "mriqc_group_iqms_tsv"], [164, 4, 1, "", "plot_boxplot_points"], [164, 4, 1, "", "plot_qi2"], [164, 4, 1, "", "plot_segmentation"], [164, 4, 1, "", "plot_slice_planes"], [164, 4, 1, "", "set_dbFieldValue"]], "mia_processes.utils.tools.PageNumCanvas": [[164, 2, 1, "", "__init__"], [164, 2, 1, "", "draw_page_number"], [164, 2, 1, "", "save"], [164, 2, 1, "", "showPage"]], "mia_processes.utils.tools.ReportLine": [[164, 2, 1, "", "__init__"], [164, 2, 1, "", "draw"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"]}, "titleterms": {"automask": 0, "brick": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], "creat": [0, 100, 101, 102, 103, 125, 133], "brain": [0, 9, 26, 27, 32, 80, 120, 125], "onli": [0, 74], "mask": [0, 5, 32, 39, 53, 62, 64, 68, 72, 86, 121, 122, 134, 139], "imag": [0, 9, 10, 11, 14, 16, 18, 24, 25, 27, 28, 31, 32, 35, 39, 40, 41, 42, 44, 45, 52, 54, 55, 56, 57, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 74, 76, 77, 78, 79, 83, 84, 122, 124, 127, 128, 134, 135, 136, 138], "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 22, 23, 25, 26, 27, 35, 47, 52, 58, 59, 60, 61, 62, 66, 67, 80, 90, 92, 98, 122, 125, 126, 132, 135, 136, 140], "afni": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 145], "3dautomask": 0, "calc": 1, "voxel": [1, 5, 48], "arithmet": 1, "3d": [1, 3, 6, 7, 12, 28, 79, 80], "dataset": [1, 2, 3, 6, 7, 8, 12], "1": [1, 121], "3dcalc": [1, 2], "calcdroptr": 2, "drop": 2, "volum": [2, 6, 7, 12, 19, 28, 34, 79], "bold": [2, 10, 11, 65, 69, 78, 127, 136, 138], "despik": 3, "remov": [3, 43], "spike": [3, 96], "from": [3, 8, 9, 12, 25, 32, 34, 49, 59, 60, 61, 71, 74, 77, 82, 86, 90, 106, 107, 108, 109, 114, 115, 116, 121, 122, 134, 135, 136, 138], "time": [3, 7, 10, 70, 77, 78], "input": [3, 6, 12, 14, 19, 42, 52, 54, 61, 62, 69, 105], "3ddespik": 3, "fwhmx": 4, "comput": [4, 5, 6, 7, 44, 49, 53, 61, 68, 70, 76, 83, 84, 87, 96, 121, 122, 138], "fwhm": 4, "gcor": 5, "averag": 5, "correl": 5, "between": [5, 42, 51], "everi": [5, 78], "other": [5, 151], "over": 5, "ani": 5, "given": [5, 54, 72], "outliercount": 6, "3dtoutcount": 6, "outlier": 6, "all": [6, 75, 107, 116], "sub": [6, 7], "each": [6, 7, 12, 48, 95, 105], "tr": [6, 7], "qualityindex": 7, "qualiti": [7, 83, 84, 135, 136, 138], "index": 7, "3dtqual": 7, "refitdeobliqu": 8, "deobliqu": 8, "ie": 8, "transform": [8, 13, 14, 23, 45, 51], "obliqu": 8, "cardin": 8, "3drefit": 8, "skullstrip": 9, "3dskullstrip": 9, "t1": 9, "weight": 9, "mri": [9, 80], "extract": [9, 22, 25, 34, 42, 48, 59, 60, 125], "surround": 9, "tissu": [9, 26, 40, 46, 123, 133], "tshift": 10, "slice": [10, 78, 108], "correct": [10, 15, 31, 52, 75, 124, 127], "mean": [10, 11, 18, 89, 128, 139], "option": [10, 11, 42], "3dtshift": 10, "tstatmean": 11, "3dtstat": 11, "volreg": 12, "regist": [12, 24, 123, 128], "base": [12, 140], "3dvolreg": 12, "affineiniti": 13, "initi": 13, "an": [13, 14, 19, 25, 52, 64, 66, 76, 104, 105, 129, 130], "affin": [13, 27], "ant": [13, 14, 15, 16, 146], "affineinit": 13, "applytransform": 14, "accord": 14, "refer": [14, 66, 67, 78, 112, 135, 136, 138, 153], "set": [14, 67, 74], "n4biasfieldcorrect": 15, "n4": 15, "bia": [15, 52, 75, 124], "field": [15, 31, 52], "registr": [16, 27, 128], "computedki": 17, "reconstruct": 17, "diffus": [17, 35, 38], "signal": [17, 60, 90], "kurtosi": 17, "tensor": [17, 38, 49], "model": [17, 75, 76, 98, 99, 155], "denois": [18, 33, 122], "non": [18, 65], "local": 18, "algorithm": [18, 47], "nlmean": 18, "binar": [19, 54], "encod": [19, 132], "surfac": [19, 22], "file": [19, 36, 42, 52, 58, 59, 60, 90, 95, 107, 109, 114, 115], "synthstrip": [20, 21, 125], "synthstripmriqc": 21, "skull": [21, 22, 122, 124], "strip": [21, 122, 124], "tool": [21, 35, 156, 164], "mri_synthstrip": 21, "freesurf": [21, 125, 148], "done": 21, "mriqc": [21, 83, 84, 91, 93, 94, 135, 136], "v22": [21, 83, 84, 135, 136], "06": [21, 83, 84, 135, 136], "betsurfacesextract": 22, "inskul": 22, "outskul": 22, "outskin": 22, "bet": 22, "fsl": [22, 23, 25, 26, 27, 35, 40, 51, 149], "convertxfm": 23, "modifi": 23, "matrix": [23, 51], "convert_xfm": 23, "epireg": 24, "epi": [24, 86, 128], "structur": [24, 121, 122, 124, 135], "extractroi": 25, "region": [25, 95], "interest": [25, 95, 97], "roi": [25, 59, 60, 90, 139], "fslroi": 25, "fastseg": 26, "segment": [26, 40, 58, 59, 60, 61, 75, 80, 81, 90, 134], "fast": 26, "flirt": 27, "linear": 27, "intra": 27, "inter": 27, "modal": [27, 73], "smooth": [28, 79], "gaussian": [28, 79], "computebrainvolum": 29, "constrainedsphericaldeconvolut": 30, "estim": [30, 38, 47, 58, 97, 98, 131], "fibr": 30, "orient": [30, 131], "distribut": [30, 131], "fod": [30, 131], "dwibiascorrect": 31, "perform": [31, 35, 36, 42, 50, 51], "b1": 31, "inhomogen": 31, "dwi": [31, 32, 33, 34, 131, 132, 133], "dwibrainmask": 32, "gener": [32, 39, 40, 86, 91, 92, 93, 94, 95, 107, 114, 115, 116, 117], "whole": [32, 80], "dwidenois": 33, "data": [33, 34, 37, 91, 93, 95, 106, 112, 113, 121, 129, 130, 135, 136], "dwiextract": 34, "shell": 34, "b": 34, "0": 34, "dwipreproc": 35, "pre": [35, 129, 130], "process": [35, 66, 67, 129, 130, 145, 146, 147, 148, 149, 150, 151, 153], "": [35, 47, 51, 118], "topup": 35, "eddi": 35, "editingtrack": 36, "variou": [36, 139], "edit": 36, "oper": 36, "track": [36, 37], "filteringtrack": 37, "filter": [37, 113], "fittensor": 38, "generate5tt2gmwmi": 39, "appropri": 39, "seed": 39, "streamlin": [39, 50], "grei": [39, 74, 134], "matter": [39, 62, 74, 134, 139], "white": [39, 62, 74], "interfac": 39, "generate5ttfsl": 40, "five": 40, "type": [40, 42], "5tt": 40, "mrcat": 41, "concaten": [41, 104], "sever": 41, "one": [41, 56, 101, 108], "mrconvert": 42, "convers": [42, 51], "differ": [42, 73], "subset": 42, "mrdegibb": 43, "gibb": 43, "ring": 43, "artifact": [43, 53, 121], "mrmath": 44, "summari": [44, 95], "statist": 44, "intens": [44, 46, 63], "along": 44, "specifi": 44, "axi": 44, "singl": [44, 115], "mrtransform": 45, "appli": [45, 52, 54, 64, 76], "spatial": [45, 75, 76, 126], "reslic": 45, "mtnormalis": 46, "multi": 46, "inform": 46, "log": 46, "domain": 46, "normalis": [46, 74, 75], "responsesddholland": 47, "respons": 47, "function": [47, 48, 84, 93, 128, 136, 138], "spheric": [47, 48], "deconvolut": 47, "dholland": 47, "sphericalharmonicextract": 48, "peak": 48, "harmon": [48, 62], "tensormetr": 49, "metric": [49, 83, 84, 135, 136, 138], "tractographi": [50, 120], "transformfslconvert": 51, "format": 51, "mrtrix3": 51, "applybiascorrect": 52, "artifactmask": 53, "lower": 54, "threshold": [54, 61, 72], "conformimag": 55, "conform": 55, "t1w": [55, 133, 135], "convroi": 56, "convolut": 56, "enhanc": 57, "estimatesnr": 58, "snr": [58, 70], "extractroibylabel": 59, "specif": [59, 99], "label": [59, 60, 81, 82, 90], "extractsignalroi": 60, "gradientthreshold": 61, "histogram": 61, "magnitud": 61, "gradient": 61, "intensityclip": 63, "clip": 63, "rang": 63, "prescrib": 63, "percentil": 63, "binari": [64, 72], "nonsteadydetector": 65, "detect": 65, "steadi": 65, "state": 65, "begin": 65, "4d": 65, "resample1": 66, "resampl": 66, "resolut": [66, 67], "nibabel": [66, 67], "resample_from_to": [66, 67], "resample2": 67, "rotationmask": 68, "rotat": [68, 121], "sanit": 69, "tsnr": 70, "cours": 70, "seri": [70, 77], "templatefromtemplateflow": 71, "get": [71, 81, 82, 123, 135, 136], "templat": [71, 123, 126], "templateflow": 71, "make": [72, 89, 104, 105], "coregist": 73, "align": [73, 76], "togeth": 73, "scan": 73, "gm_wm_normal": 74, "newseg": 75, "same": [75, 77], "normalize12": 76, "deform": 76, "best": 76, "atla": 76, "necessari": 76, "thi": [76, 114], "normal": [76, 126], "realign": 77, "acquir": 77, "subject": [77, 123], "slicetim": 78, "bring": 78, "back": 78, "assemblynetdock": 80, "assemblynet": [80, 81, 82], "volbrain": 80, "getlabel": 81, "labelscorrespond": 82, "name": [82, 107, 114], "anatiqm": 83, "anatom": [83, 91, 135], "iqm": [83, 84, 135, 136, 138], "defin": [83, 84], "boldqm": 84, "boldiqmsplot": 85, "carpetparcel": 86, "dilat": 86, "brainmask": 86, "substract": 86, "itself": [86, 114], "union": 86, "obtain": 86, "crown": 86, "parcel": 86, "computedvar": 87, "dvar": 87, "deriv": 87, "varianc": 87, "framewisedisplac": 88, "calcul": 88, "fd": 88, "framewis": 88, "displac": 88, "power2012": 88, "mean_stddev_calc": 89, "standard": [89, 139], "deviat": [89, 139], "parametr": 89, "map": [89, 123], "plotsignalroi": 90, "plot": 90, "reportanatmriqc": 91, "report": [91, 92, 93, 94, 153, 162, 164], "pipelin": [91, 92, 93, 94, 112, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 157, 158, 159, 160, 161, 162, 163], "reportco2inhalcvr": 92, "cvr": [92, 119, 140], "evalu": [92, 117, 119, 140], "hypercapnia": 92, "challeng": [92, 119], "reportfuncmriqc": 93, "reportgroupmriqc": 94, "group": 94, "result_collector": 95, "contain": [95, 105, 107, 109, 114, 116], "number": 96, "estimateconstrast": 97, "contrast": 97, "spm12": [97, 98, 100, 101, 102, 103], "fmri": [97, 98, 99, 100, 101, 102, 103, 129, 130], "manag": 97, "estimatemodel": 98, "classic": 98, "reml": 98, "restrict": 98, "maximum": 98, "likelihood": 98, "procedur": 98, "level1design": 99, "glm": [99, 140], "analysi": [99, 140], "multipleregressiondesign": 100, "spm": [100, 101, 102, 103, 140, 152, 155], "design": [100, 101, 102, 103], "multipl": 100, "regress": 100, "factori": [100, 101, 102, 103], "onesamplettestdesign": 101, "sampl": [101, 103], "t": [101, 102, 103], "test": [101, 102, 103], "pairedttestdesign": 102, "pair": 102, "twosamplettestdesign": 103, "two": 103, "concat_to_list": 104, "output": [104, 105, 113], "list": [104, 105, 107, 108, 109, 114, 115, 116, 134], "correspond": 104, "list1": [104, 105], "list2": [104, 105], "concat_to_list_of_list": 105, "iter": 105, "element": [105, 108, 109], "delete_data": 106, "delet": 106, "databas": 106, "files_to_list": 107, "3": 107, "theses": 107, "filter_files_list": 108, "select": [108, 109], "more": 108, "find_in_list": 109, "1rst": 109, "pattern": 109, "get_conditions_from_csv": 110, "get_patient_nam": 111, "import_data": 112, "import": 112, "current": 112, "input_filt": 113, "To": 113, "content": 113, "browser": 113, "tab": 113, "anoth": 113, "list_dupl": 114, "list_to_fil": 115, "make_a_list": 116, "2": 116, "object": 116, "make_cvr_reg_physio": 117, "physiolog": 117, "regressor": 117, "cerebrovascular": [117, 119], "reactiv": [117, 119], "mia_process": [118, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165], "document": 118, "co2_inhal": [119, 158], "under": 119, "co2": 119, "dwi_whole_brain_tractograpi": 120, "mrtrix": [120, 150], "anat_airmask": [121, 160], "air": 121, "hat": 121, "follow": 121, "step": 121, "mortamet2009": 121, "anat_headmask": [122, 160], "head": [122, 127], "dipi": [122, 147], "anat_mni_tpm": [123, 160], "probabl": 123, "them": 123, "space": [123, 128, 133], "anat_skullstrip": [124, 160], "anat_skullstrip_synthstrip": [125, 160], "workflow": [125, 135, 136], "anat_spatial_norm": [126, 160], "mni": [126, 128], "mni152nlin2009casym": 126, "bold_hmc": [127, 160], "motion": 127, "bold_mni_align": [128, 160], "check": 128, "out": 128, "bold_spatial_preprocessing1": [129, 160], "exampl": [129, 130], "bold_spatial_preprocessing2": [130, 160], "dwi_fod_msmt_csd": [131, 160], "fiber": 131, "dwi_preprocess": 132, "preprocess": [132, 144, 145, 146, 147, 148, 149, 150, 151, 152, 160], "revers": 132, "phase": 132, "b0": 132, "dwi_tissue_boundari": 133, "boundari": 133, "registratiojn": 133, "spatial_mask": [134, 160], "result": 134, "previou": 134, "produc": [134, 139], "anat_mriqc": [135, 161], "t2w": 135, "bold_mriqc": [136, 161], "bold_signals_roi": 137, "bold_iqm": [138, 162], "extract_roi_param": [139, 162], "grai": 139, "later": 139, "indic": [139, 141], "beta": 139, "spmt": 139, "valu": 139, "bold_stat_cvr": [140, 163], "first": 140, "level": 140, "purpos": 141, "tabl": 141, "develop": 141, "packag": [142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "subpackag": [142, 143, 144, 154, 157], "submodul": [142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 159, 160, 161, 162, 163, 164], "info": 142, "modul": [142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 159, 160, 161, 162, 163, 164], "process_matlab": 142, "spatial_preprocess": 152, "stat": [154, 155, 163], "cerebvascularreact": 158, "dwitractographi": 159, "dwi_whole_brain_tractographi": 159, "dwipreprocess": 160, "qualitycontrol": 161, "util": 164}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Automask brick": [[0, "automask-brick"]], "Create a brain-only mask of the image using AFNI 3dAutomask": [[0, "create-a-brain-only-mask-of-the-image-using-afni-3dautomask"]], "Calc brick": [[1, "calc-brick"]], "Voxel-by-voxel arithmetic on 3D datasets 1, using AFNI 3dcalc": [[1, "voxel-by-voxel-arithmetic-on-3d-datasets-using-afni-3dcalc"]], "CalcDropTRs brick": [[2, "calcdroptrs-brick"]], "Drop volumes of bold datasets, using AFNI 3dcalc": [[2, "drop-volumes-of-bold-datasets-using-afni-3dcalc"]], "Despike brick": [[3, "despike-brick"]], "Removes spikes from the 3D+time input dataset using AFNI 3dDespike": [[3, "removes-spikes-from-the-3d-time-input-dataset-using-afni-3ddespike"]], "FWHMx brick": [[4, "fwhmx-brick"]], "Computes FWHMs using AFNI FWHMx": [[4, "computes-fwhms-using-afni-fwhmx"]], "GCOR brick": [[5, "gcor-brick"]], "Using AFNI GCOR, computes the average correlation between every voxel and every other voxel, over any given mask": [[5, "using-afni-gcor-computes-the-average-correlation-between-every-voxel-and-every-other-voxel-over-any-given-mask"]], "OutlierCount brick": [[6, "outliercount-brick"]], "Using AFNI 3dToutcount, computes outliers for all sub-bricks (3D volumes for each TR) in the input dataset": [[6, "using-afni-3dtoutcount-computes-outliers-for-all-sub-bricks-3d-volumes-for-each-tr-in-the-input-dataset"]], "QualityIndex brick": [[7, "qualityindex-brick"]], "Computes a quality index for each sub-brick (3D volumes for each TR) in a 3D+time dataset using AFNI 3dTqual": [[7, "computes-a-quality-index-for-each-sub-brick-3d-volumes-for-each-tr-in-a-3d-time-dataset-using-afni-3dtqual"]], "RefitDeoblique brick": [[8, "refitdeoblique-brick"]], "Deoblique dataset (ie transform dataset from oblique to cardinal) using AFNI 3drefit": [[8, "deoblique-dataset-ie-transform-dataset-from-oblique-to-cardinal-using-afni-3drefit"]], "SkullStrip brick": [[9, "skullstrip-brick"]], "Using AFNI 3dSkullStrip, from T1-weighted MRI images, extract the brain from surrounding tissue": [[9, "using-afni-3dskullstrip-from-t1-weighted-mri-images-extract-the-brain-from-surrounding-tissue"]], "TShift brick": [[10, "tshift-brick"]], "Slice-time correction of bold images (using mean option of the AFNI 3dTshift)": [[10, "slice-time-correction-of-bold-images-using-mean-option-of-the-afni-3dtshift"]], "TStatMean brick": [[11, "tstatmean-brick"]], "Mean of bold images (using mean option of the AFNI 3dTstat)": [[11, "mean-of-bold-images-using-mean-option-of-the-afni-3dtstat"]], "Volreg brick": [[12, "volreg-brick"]], "Registers each 3D volume from the input dataset to the base volume using AFNI 3dvolreg": [[12, "registers-each-3d-volume-from-the-input-dataset-to-the-base-volume-using-afni-3dvolreg"]], "AffineInitializer brick": [[13, "affineinitializer-brick"]], "Initialize an affine transform using ANTs AffineInitizer": [[13, "initialize-an-affine-transform-using-ants-affineinitizer"]], "ApplyTransforms brick": [[14, "applytransforms-brick"]], "Using ANTs ApplyTransforms, transforms an input image according to a reference image and a transform (or a set of transforms)": [[14, "using-ants-applytransforms-transforms-an-input-image-according-to-a-reference-image-and-a-transform-or-a-set-of-transforms"]], "N4BiasFieldCorrection brick": [[15, "n4biasfieldcorrection-brick"]], "N4 Bias field correction using ANTs N4BiasFieldCorrection": [[15, "n4-bias-field-correction-using-ants-n4biasfieldcorrection"]], "Registration brick": [[16, "registration-brick"]], "Image registration using ANTs Registration": [[16, "image-registration-using-ants-registration"]], "ComputeDKI brick": [[17, "computedki-brick"]], "Reconstruction of the diffusion signal with the kurtosis tensor model": [[17, "reconstruction-of-the-diffusion-signal-with-the-kurtosis-tensor-model"]], "Denoise brick": [[18, "denoise-brick"]], "Denoise image using Non-Local Means algorithm (NLMEANS)": [[18, "denoise-image-using-non-local-means-algorithm-nlmeans"]], "Binarize brick": [[19, "binarize-brick"], [54, "binarize-brick"]], "Binarize an input volume (or volume-encoded surface file)": [[19, "binarize-an-input-volume-or-volume-encoded-surface-file"]], "SynthStrip brick": [[20, "synthstrip-brick"]], "SynthStripMriqc brick": [[21, "synthstripmriqc-brick"]], "Skull-stripping using SynthStrip tool (mri_synthstrip in FreeSurfer) as done in mriqc v22.06": [[21, "skull-stripping-using-synthstrip-tool-mri-synthstrip-in-freesurfer-as-done-in-mriqc-v22-06"]], "BetSurfacesExtraction brick": [[22, "betsurfacesextraction-brick"]], "Surfaces (skull, inskull, outskull, outskin) extraction using BET (FSL)": [[22, "surfaces-skull-inskull-outskull-outskin-extraction-using-bet-fsl"]], "ConvertXFM brick": [[23, "convertxfm-brick"]], "Modify transformation matrix using convert_xfm (FSL)": [[23, "modify-transformation-matrix-using-convert-xfm-fsl"]], "EpiReg brick": [[24, "epireg-brick"]], "Register EPI images to structural images": [[24, "register-epi-images-to-structural-images"]], "ExtractROI brick": [[25, "extractroi-brick"]], "Extract region of interest (ROI) from an image using fslroi (FSL)": [[25, "extract-region-of-interest-roi-from-an-image-using-fslroi-fsl"]], "FastSegment brick": [[26, "fastsegment-brick"]], "Brain tissue segmentation using FAST (FSL)": [[26, "brain-tissue-segmentation-using-fast-fsl"]], "Flirt brick": [[27, "flirt-brick"]], "Linear (affine) intra- and inter-modal brain image registration using FLIRT (FSL)": [[27, "linear-affine-intra-and-inter-modal-brain-image-registration-using-flirt-fsl"]], "Smooth brick": [[28, "smooth-brick"], [79, "smooth-brick"]], "3D Gaussian smoothing of image volumes": [[28, "d-gaussian-smoothing-of-image-volumes"], [79, "d-gaussian-smoothing-of-image-volumes"]], "ComputeBrainVolume brick": [[29, "computebrainvolume-brick"]], "ConstrainedSphericalDeconvolution brick": [[30, "constrainedsphericaldeconvolution-brick"]], "Estimate fibre orientation distributions (FOD)": [[30, "estimate-fibre-orientation-distributions-fod"]], "DWIBiasCorrect brick": [[31, "dwibiascorrect-brick"]], "Perform B1 field inhomogeneity correction for a DWI image": [[31, "perform-b1-field-inhomogeneity-correction-for-a-dwi-image"]], "DWIBrainMask brick": [[32, "dwibrainmask-brick"]], "Generates a whole brain mask from a DWI image.": [[32, "generates-a-whole-brain-mask-from-a-dwi-image"]], "DWIDenoise brick": [[33, "dwidenoise-brick"]], "Denoise DWI data": [[33, "denoise-dwi-data"]], "DWIExtract brick": [[34, "dwiextract-brick"]], "Extract shell or b=0 volumes from DWI data": [[34, "extract-shell-or-b-0-volumes-from-dwi-data"]], "DWIPreproc brick": [[35, "dwipreproc-brick"]], "Perform diffusion image pre-processing using FSL\u2019s topup and eddy tool": [[35, "perform-diffusion-image-pre-processing-using-fsls-topup-and-eddy-tool"]], "EditingTrack brick": [[36, "editingtrack-brick"]], "Perform various editing operations on track files": [[36, "perform-various-editing-operations-on-track-files"]], "FilteringTrack brick": [[37, "filteringtrack-brick"]], "Filter tracking data": [[37, "filter-tracking-data"]], "FitTensor brick": [[38, "fittensor-brick"]], "Diffusion tensor estimation": [[38, "diffusion-tensor-estimation"]], "Generate5tt2gmwmi brick": [[39, "generate5tt2gmwmi-brick"]], "Generate a mask image appropriate for seeding streamlines on the grey matter-white matter interface": [[39, "generate-a-mask-image-appropriate-for-seeding-streamlines-on-the-grey-matter-white-matter-interface"]], "Generate5ttfsl brick": [[40, "generate5ttfsl-brick"]], "Generate a five-tissues-type (5TT) segmented tissue image with FSL": [[40, "generate-a-five-tissues-type-5tt-segmented-tissue-image-with-fsl"]], "MRCat brick": [[41, "mrcat-brick"]], "Concatenate several images into one": [[41, "concatenate-several-images-into-one"]], "MRConvert brick": [[42, "mrconvert-brick"]], "Perform conversion between different file types and optionally extract a subset of the input image": [[42, "perform-conversion-between-different-file-types-and-optionally-extract-a-subset-of-the-input-image"]], "MRDeGibbs brick": [[43, "mrdegibbs-brick"]], "Remove Gibbs ringing artifacts": [[43, "remove-gibbs-ringing-artifacts"]], "MRMath brick": [[44, "mrmath-brick"]], "Compute summary statistic on image intensities along a specified axis of a single image": [[44, "compute-summary-statistic-on-image-intensities-along-a-specified-axis-of-a-single-image"]], "MRTransform brick": [[45, "mrtransform-brick"]], "Apply spatial transformations or reslice images": [[45, "apply-spatial-transformations-or-reslice-images"]], "MTNormalise brick": [[46, "mtnormalise-brick"]], "Multi-tissue informed log-domain intensity normalisation": [[46, "multi-tissue-informed-log-domain-intensity-normalisation"]], "ResponseSDDhollander brick": [[47, "responsesddhollander-brick"]], "Estimate response function(s) for spherical deconvolution using the Dhollander algorithm": [[47, "estimate-response-function-s-for-spherical-deconvolution-using-the-dhollander-algorithm"]], "SphericalHarmonicExtraction brick": [[48, "sphericalharmonicextraction-brick"]], "Extract the peaks of a spherical harmonic function in each voxel": [[48, "extract-the-peaks-of-a-spherical-harmonic-function-in-each-voxel"]], "TensorMetrics brick": [[49, "tensormetrics-brick"]], "Compute metrics from tensors": [[49, "compute-metrics-from-tensors"]], "Tractography brick": [[50, "tractography-brick"]], "Performs streamlines tractography": [[50, "performs-streamlines-tractography"]], "TransformFSLConvert brick": [[51, "transformfslconvert-brick"]], "Perform conversion between FSL\u2019s transformation matrix format to mrtrix3\u2019s": [[51, "perform-conversion-between-fsls-transformation-matrix-format-to-mrtrix3s"]], "ApplyBiasCorrection brick": [[52, "applybiascorrection-brick"]], "Apply bias field correction to an input file using the bias image": [[52, "apply-bias-field-correction-to-an-input-file-using-the-bias-image"]], "ArtifactMask brick": [[53, "artifactmask-brick"]], "Computes artifact mask": [[53, "computes-artifact-mask"]], "Binarizes the input image applying the given lower threshold": [[54, "binarizes-the-input-image-applying-the-given-lower-threshold"]], "ConformImage brick": [[55, "conformimage-brick"]], "Conform T1w image": [[55, "conform-t1w-image"]], "ConvROI brick": [[56, "convroi-brick"]], "Image convolution with one image": [[56, "image-convolution-with-one-image"]], "Enhance brick": [[57, "enhance-brick"]], "Image enhancing": [[57, "image-enhancing"]], "EstimateSNR brick": [[58, "estimatesnr-brick"]], "Estimate SNR using a segmentation file": [[58, "estimate-snr-using-a-segmentation-file"]], "ExtractROIbyLabel brick": [[59, "extractroibylabel-brick"]], "Extract a specific ROI from a segmentation file using labels": [[59, "extract-a-specific-roi-from-a-segmentation-file-using-labels"]], "ExtractSignalROI brick": [[60, "extractsignalroi-brick"]], "Extract signals from ROI using a segmentation file with label": [[60, "extract-signals-from-roi-using-a-segmentation-file-with-label"]], "GradientThreshold brick": [[61, "gradientthreshold-brick"]], "Computes a threshold from the histogram of the magnitude gradient image using a segmentation of the input image": [[61, "computes-a-threshold-from-the-histogram-of-the-magnitude-gradient-image-using-a-segmentation-of-the-input-image"]], "Harmonize brick": [[62, "harmonize-brick"]], "Harmonize input image using a white matter mask": [[62, "harmonize-input-image-using-a-white-matter-mask"]], "IntensityClip brick": [[63, "intensityclip-brick"]], "Clip the intensity range as prescribed by the percentiles": [[63, "clip-the-intensity-range-as-prescribed-by-the-percentiles"]], "Mask brick": [[64, "mask-brick"]], "Apply a binary mask to an image": [[64, "apply-a-binary-mask-to-an-image"]], "NonSteadyDetector brick": [[65, "nonsteadydetector-brick"]], "Detect non-steady-state at the beginning of a bold 4D image": [[65, "detect-non-steady-state-at-the-beginning-of-a-bold-4d-image"]], "Resample1 brick": [[66, "resample1-brick"]], "Resamples an image to the resolution of a reference image using nibabel.processing.resample_from_to()": [[66, "resamples-an-image-to-the-resolution-of-a-reference-image-using-nibabel-processing-resample-from-to"]], "Resample2 brick": [[67, "resample2-brick"]], "Sets images to the resolution of a reference image using nibabel.processing.resample_from_to()": [[67, "sets-images-to-the-resolution-of-a-reference-image-using-nibabel-processing-resample-from-to"]], "RotationMask brick": [[68, "rotationmask-brick"]], "Compute the rotation mask image": [[68, "compute-the-rotation-mask-image"]], "Sanitize brick": [[69, "sanitize-brick"]], "Sanitize input bold image": [[69, "sanitize-input-bold-image"]], "TSNR brick": [[70, "tsnr-brick"]], "Computes the time-course SNR for a time series": [[70, "computes-the-time-course-snr-for-a-time-series"]], "TemplateFromTemplateFlow brick": [[71, "templatefromtemplateflow-brick"]], "Get template image from TemplateFlow": [[71, "get-template-image-from-templateflow"]], "Threshold brick": [[72, "threshold-brick"]], "Makes a binary mask image at a given threshold": [[72, "makes-a-binary-mask-image-at-a-given-threshold"]], "Coregister brick": [[73, "coregister-brick"]], "Align together scans of different modalities": [[73, "align-together-scans-of-different-modalities"]], "GM_WM_Normalize brick": [[74, "gm-wm-normalize-brick"]], "Normalises only the grey or/and white matter from a set of images": [[74, "normalises-only-the-grey-or-and-white-matter-from-a-set-of-images"]], "NewSegment brick": [[75, "newsegment-brick"]], "Segments,  bias  corrects  and  spatially normalises - all in the same model": [[75, "segments-bias-corrects-and-spatially-normalises-all-in-the-same-model"]], "Normalize12 brick": [[76, "normalize12-brick"]], "Computes the deformation that best aligns the model (atlas) with an image, then if necessary, apply this deformation to spatially normalize images": [[76, "computes-the-deformation-that-best-aligns-the-model-atlas-with-an-image-then-if-necessary-apply-this-deformation-to-spatially-normalize-images"]], "Realign brick": [[77, "realign-brick"]], "Realigns a time-series of images acquired from the same subject": [[77, "realigns-a-time-series-of-images-acquired-from-the-same-subject"]], "SliceTiming brick": [[78, "slicetiming-brick"]], "Bring back every slice of a BOLD image to the reference slice time.": [[78, "bring-back-every-slice-of-a-bold-image-to-the-reference-slice-time"]], "AssemblyNetDocker brick": [[80, "assemblynetdocker-brick"]], "3D Whole Brain MRI Segmentation using AssemblyNet (volBrain)": [[80, "d-whole-brain-mri-segmentation-using-assemblynet-volbrain"]], "GetLabels brick": [[81, "getlabels-brick"]], "Get Assemblynet segmentation labels": [[81, "get-assemblynet-segmentation-labels"]], "LabelsCorrespondence brick": [[82, "labelscorrespondence-brick"]], "Get AssemblyNet labels names or get labels from names": [[82, "get-assemblynet-labels-names-or-get-labels-from-names"]], "AnatIQMs brick": [[83, "anatiqms-brick"]], "Computes the anatomical Image Quality Metrics (IQMs) as defined in mriqc v22.06": [[83, "computes-the-anatomical-image-quality-metrics-iqms-as-defined-in-mriqc-v22-06"]], "BoldQMs brick": [[84, "boldqms-brick"]], "Computes the functional Image Quality Metrics (IQMs) as defined in mriqc v22.06": [[84, "computes-the-functional-image-quality-metrics-iqms-as-defined-in-mriqc-v22-06"]], "BoldIQMsPlot brick": [[85, "boldiqmsplot-brick"]], "CarpetParcellation brick": [[86, "carpetparcellation-brick"]], "Dilate brainmask, substract from itself then generate the union of obtained crown mask and epi parcellation": [[86, "dilate-brainmask-substract-from-itself-then-generate-the-union-of-obtained-crown-mask-and-epi-parcellation"]], "ComputeDVARS brick": [[87, "computedvars-brick"]], "Computes DVARS (derivative of variance)": [[87, "computes-dvars-derivative-of-variance"]], "FramewiseDisplacement brick": [[88, "framewisedisplacement-brick"]], "Calculate the FD (framewise displacement) as in [Power2012]": [[88, "calculate-the-fd-framewise-displacement-as-in-power2012"]], "Mean_stdDev_calc brick": [[89, "mean-stddev-calc-brick"]], "Makes the mean and standard deviation of parametric maps": [[89, "makes-the-mean-and-standard-deviation-of-parametric-maps"]], "PlotSignalROI brick": [[90, "plotsignalroi-brick"]], "Plot signals from ROI using a segmentation file with label": [[90, "plot-signals-from-roi-using-a-segmentation-file-with-label"]], "ReportAnatMriqc brick": [[91, "reportanatmriqc-brick"]], "Generates the report for anatomical data in mriqc pipeline": [[91, "generates-the-report-for-anatomical-data-in-mriqc-pipeline"]], "ReportCO2inhalCvr brick": [[92, "reportco2inhalcvr-brick"]], "Generates the report for CVR evaluation using hypercapnia challenge pipeline": [[92, "generates-the-report-for-cvr-evaluation-using-hypercapnia-challenge-pipeline"]], "ReportFuncMriqc brick": [[93, "reportfuncmriqc-brick"]], "Generates the report for functional data in mriqc pipeline": [[93, "generates-the-report-for-functional-data-in-mriqc-pipeline"]], "ReportGroupMriqc brick": [[94, "reportgroupmriqc-brick"]], "Generate a group report for mriqc pipeline": [[94, "generate-a-group-report-for-mriqc-pipeline"]], "Result_collector brick": [[95, "result-collector-brick"]], "Generates files containing summary data for each region of interest": [[95, "generates-files-containing-summary-data-for-each-region-of-interest"]], "Spikes brick": [[96, "spikes-brick"]], "Computes the number of spikes": [[96, "computes-the-number-of-spikes"]], "EstimateConstrast brick": [[97, "estimateconstrast-brick"]], "Estimate contrasts of interest (SPM12 fMRI contrast manager)": [[97, "estimate-contrasts-of-interest-spm12-fmri-contrast-manager"]], "EstimateModel brick": [[98, "estimatemodel-brick"]], "Model Estimation using classical (ReML - Restricted Maximum Likelihood) procedure (SPM12 fMRI model estimation)": [[98, "model-estimation-using-classical-reml-restricted-maximum-likelihood-procedure-spm12-fmri-model-estimation"]], "Level1Design brick": [[99, "level1design-brick"]], "fMRI model specification for GLM analysis.": [[99, "fmri-model-specification-for-glm-analysis"]], "MultipleRegressionDesign brick": [[100, "multipleregressiondesign-brick"]], "Create SPM design for multiple regression (SPM12 fMRI factorial Design)": [[100, "create-spm-design-for-multiple-regression-spm12-fmri-factorial-design"]], "OneSampleTTestDesign brick": [[101, "onesamplettestdesign-brick"]], "Create SPM design for one sample t-test (SPM12 fMRI factorial Design)": [[101, "create-spm-design-for-one-sample-t-test-spm12-fmri-factorial-design"]], "PairedTTestDesign brick": [[102, "pairedttestdesign-brick"]], "Create SPM design for paired t-test (SPM12 fMRI factorial Design)": [[102, "create-spm-design-for-paired-t-test-spm12-fmri-factorial-design"]], "TwoSampleTTestDesign brick": [[103, "twosamplettestdesign-brick"]], "Create SPM design for two sample t-test (SPM12 fMRI factorial Design)": [[103, "create-spm-design-for-two-sample-t-test-spm12-fmri-factorial-design"]], "Concat_to_list  brick": [[104, "concat-to-list-brick"]], "Make an output list corresponding to the concatenation of list1 and list2": [[104, "make-an-output-list-corresponding-to-the-concatenation-of-list1-and-list2"]], "Concat_to_list_of_list brick": [[105, "concat-to-list-of-list-brick"]], "Make an output list of list containing the iteration of the input list1 with each element of the input list2": [[105, "make-an-output-list-of-list-containing-the-iteration-of-the-input-list1-with-each-element-of-the-input-list2"]], "Delete_data brick": [[106, "delete-data-brick"]], "Delete data from database": [[106, "delete-data-from-database"]], "Files_To_List brick": [[107, "files-to-list-brick"]], "From 3 file names, generating a list containing all theses file names": [[107, "from-3-file-names-generating-a-list-containing-all-theses-file-names"]], "Filter_Files_List brick": [[108, "filter-files-list-brick"]], "Selects one or more (slicing) elements from a list": [[108, "selects-one-or-more-slicing-elements-from-a-list"]], "Find_In_List brick": [[109, "find-in-list-brick"]], "From a list of files, select the 1rst element that contains a pattern": [[109, "from-a-list-of-files-select-the-1rst-element-that-contains-a-pattern"]], "Get_Conditions_From_csv brick": [[110, "get-conditions-from-csv-brick"]], "Get_Patient_Name brick": [[111, "get-patient-name-brick"]], "Import_Data  brick": [[112, "import-data-brick"]], "Import reference data into the current pipeline": [[112, "import-reference-data-into-the-current-pipeline"]], "Input_Filter brick": [[113, "input-filter-brick"]], "To filter the content of the Data Browser tab or the output data of another brick": [[113, "to-filter-the-content-of-the-data-browser-tab-or-the-output-data-of-another-brick"]], "List_Duplicate brick": [[114, "list-duplicate-brick"]], "From a file name, generating a list containing this file name and the file name itself": [[114, "from-a-file-name-generating-a-list-containing-this-file-name-and-the-file-name-itself"]], "List_To_File brick": [[115, "list-to-file-brick"]], "From a list of files, generation of a single file": [[115, "from-a-list-of-files-generation-of-a-single-file"]], "Make_a_list brick": [[116, "make-a-list-brick"]], "From 2 objects, generating a list containing all these objects": [[116, "from-2-objects-generating-a-list-containing-all-these-objects"]], "Make_CVR_reg_physio brick": [[117, "make-cvr-reg-physio-brick"]], "Generate the physiological regressor for cerebrovascular reactivity evaluation": [[117, "generate-the-physiological-regressor-for-cerebrovascular-reactivity-evaluation"]], "Mia_processes\u2019s documentation": [[118, "mia-processes-s-documentation"]], "CO2_inhalation pipeline": [[119, "co2-inhalation-pipeline"]], "Cerebrovascular reactivity (CVR) evaluation under CO2 challenge": [[119, "cerebrovascular-reactivity-cvr-evaluation-under-co2-challenge"]], "DWI_whole_brain_tractograpy pipeline": [[120, "dwi-whole-brain-tractograpy-pipeline"]], "Brain Tractography with MRTrix": [[120, "brain-tractography-with-mrtrix"]], "Anat_airmask pipeline": [[121, "anat-airmask-pipeline"]], "Compute rotation mask, air mask, artifact mask and hat mask for structural data following step 1 from [Mortamet2009]": [[121, "compute-rotation-mask-air-mask-artifact-mask-and-hat-mask-for-structural-data-following-step-1-from-mortamet2009"]], "Anat_headmask pipeline": [[122, "anat-headmask-pipeline"]], "Compute head mask from skull stripped structural image using Denoise from Dipy": [[122, "compute-head-mask-from-skull-stripped-structural-image-using-denoise-from-dipy"]], "Anat_mni_tpms pipeline": [[123, "anat-mni-tpms-pipeline"]], "Get templates tissues probability map and register them in subject space": [[123, "get-templates-tissues-probability-map-and-register-them-in-subject-space"]], "Anat_skullstrip pipeline": [[124, "anat-skullstrip-pipeline"]], "Bias correction and skull stripping of a structural image": [[124, "bias-correction-and-skull-stripping-of-a-structural-image"]], "Anat_skullstrip_synthstrip pipeline": [[125, "anat-skullstrip-synthstrip-pipeline"]], "Create a brain-extraction workflow using SynthStrip (Freesurfer)": [[125, "create-a-brain-extraction-workflow-using-synthstrip-freesurfer"]], "Anat_spatial_norm pipeline": [[126, "anat-spatial-norm-pipeline"]], "Spatial normalization to MNI (using MNI152NLin2009cAsym template)": [[126, "spatial-normalization-to-mni-using-mni152nlin2009casym-template"]], "Bold_hmc pipeline": [[127, "bold-hmc-pipeline"]], "Head motion correction of a bold image": [[127, "head-motion-correction-of-a-bold-image"]], "Bold_mni_align pipeline": [[128, "bold-mni-align-pipeline"]], "Register a mean functional image EPI in MNI space (for checking out registration)": [[128, "register-a-mean-functional-image-epi-in-mni-space-for-checking-out-registration"]], "Bold_spatial_preprocessing1 pipeline": [[129, "bold-spatial-preprocessing1-pipeline"]], "An example of fMRI data pre-processing": [[129, "an-example-of-fmri-data-pre-processing"], [130, "an-example-of-fmri-data-pre-processing"]], "Bold_spatial_preprocessing2 pipeline": [[130, "bold-spatial-preprocessing2-pipeline"]], "Dwi_fod_msmt_csd pipeline": [[131, "dwi-fod-msmt-csd-pipeline"]], "Estimate DWI fiber orientation distribution (FOD)": [[131, "estimate-dwi-fiber-orientation-distribution-fod"]], "Dwi_preprocessing pipeline": [[132, "dwi-preprocessing-pipeline"]], "DWI preprocessing using a reverse-phase encoded b0": [[132, "dwi-preprocessing-using-a-reverse-phase-encoded-b0"]], "Dwi_tissue_boundaries pipeline": [[133, "dwi-tissue-boundaries-pipeline"]], "Create tissue boundaries with a T1w and registratiojn in DWI space": [[133, "create-tissue-boundaries-with-a-t1w-and-registratiojn-in-dwi-space"]], "Spatial_mask pipeline": [[134, "spatial-mask-pipeline"]], "From a list of images resulting from a previous segmentation, produces a grey matter mask": [[134, "from-a-list-of-images-resulting-from-a-previous-segmentation-produces-a-grey-matter-mask"]], "Anat_mriqc pipeline": [[135, "anat-mriqc-pipeline"]], "Get no-reference IQMs (image quality metrics) from structural (T1w and T2w) data using mriqc anatomical workflow (mriqc v22.06)": [[135, "get-no-reference-iqms-image-quality-metrics-from-structural-t1w-and-t2w-data-using-mriqc-anatomical-workflow-mriqc-v22-06"]], "Bold_mriqc pipeline": [[136, "bold-mriqc-pipeline"]], "Get no-reference IQMs (image quality metrics) from functional (BOLD) data using mriqc functional workflow (mriqc v22.06)": [[136, "get-no-reference-iqms-image-quality-metrics-from-functional-bold-data-using-mriqc-functional-workflow-mriqc-v22-06"]], "Bold_signals_roi pipeline": [[137, "bold-signals-roi-pipeline"]], "Bold_iqms pipeline": [[138, "bold-iqms-pipeline"]], "Compute no-reference IQMs (image quality metrics) from functional (BOLD)": [[138, "compute-no-reference-iqms-image-quality-metrics-from-functional-bold"]], "Extract_roi_param pipeline": [[139, "extract-roi-param-pipeline"]], "Produces gray matter masks for various ROIs and means, standard deviations, laterality indices for beta and spmT values in these ROIs": [[139, "produces-gray-matter-masks-for-various-rois-and-means-standard-deviations-laterality-indices-for-beta-and-spmt-values-in-these-rois"]], "Bold_stat_cvr brick": [[140, "bold-stat-cvr-brick"]], "SPM-based first level GLM analysis used in the CVR evaluation": [[140, "spm-based-first-level-glm-analysis-used-in-the-cvr-evaluation"]], "Purpose": [[141, "purpose"]], "Indices and tables for developers": [[141, "indices-and-tables-for-developers"]], "mia_processes package": [[142, "module-mia_processes"]], "Subpackages": [[142, "subpackages"], [143, "subpackages"], [144, "subpackages"], [154, "subpackages"], [157, "subpackages"]], "Submodules": [[142, "submodules"], [145, "submodules"], [146, "submodules"], [147, "submodules"], [148, "submodules"], [149, "submodules"], [150, "submodules"], [151, "submodules"], [152, "submodules"], [153, "submodules"], [155, "submodules"], [156, "submodules"], [158, "submodules"], [159, "submodules"], [160, "submodules"], [161, "submodules"], [162, "submodules"], [163, "submodules"], [164, "submodules"]], "mia_processes.info module": [[142, "module-mia_processes.info"]], "mia_processes.process_matlab module": [[142, "module-mia_processes.process_matlab"]], "mia_processes.bricks package": [[143, "module-mia_processes.bricks"]], "mia_processes.bricks.preprocess package": [[144, "module-mia_processes.bricks.preprocess"]], "mia_processes.bricks.preprocess.afni package": [[145, "module-mia_processes.bricks.preprocess.afni"]], "mia_processes.bricks.preprocess.afni.processes module": [[145, "module-mia_processes.bricks.preprocess.afni.processes"]], "mia_processes.bricks.preprocess.ants package": [[146, "module-mia_processes.bricks.preprocess.ants"]], "mia_processes.bricks.preprocess.ants.processes module": [[146, "module-mia_processes.bricks.preprocess.ants.processes"]], "mia_processes.bricks.preprocess.dipy package": [[147, "module-mia_processes.bricks.preprocess.dipy"]], "mia_processes.bricks.preprocess.dipy.processes module": [[147, "module-mia_processes.bricks.preprocess.dipy.processes"]], "mia_processes.bricks.preprocess.freesurfer package": [[148, "module-mia_processes.bricks.preprocess.freesurfer"]], "mia_processes.bricks.preprocess.freesurfer.processes module": [[148, "module-mia_processes.bricks.preprocess.freesurfer.processes"]], "mia_processes.bricks.preprocess.fsl package": [[149, "module-mia_processes.bricks.preprocess.fsl"]], "mia_processes.bricks.preprocess.fsl.processes module": [[149, "module-mia_processes.bricks.preprocess.fsl.processes"]], "mia_processes.bricks.preprocess.mrtrix package": [[150, "module-mia_processes.bricks.preprocess.mrtrix"]], "mia_processes.bricks.preprocess.mrtrix.processes module": [[150, "module-mia_processes.bricks.preprocess.mrtrix.processes"]], "mia_processes.bricks.preprocess.others package": [[151, "module-mia_processes.bricks.preprocess.others"]], "mia_processes.bricks.preprocess.others.processing module": [[151, "module-mia_processes.bricks.preprocess.others.processing"]], "mia_processes.bricks.preprocess.spm package": [[152, "module-mia_processes.bricks.preprocess.spm"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing module": [[152, "module-mia_processes.bricks.preprocess.spm.spatial_preprocessing"]], "mia_processes.bricks.reports package": [[153, "module-mia_processes.bricks.reports"]], "mia_processes.bricks.reports.processes module": [[153, "module-mia_processes.bricks.reports.processes"]], "References": [[153, null]], "mia_processes.bricks.reports.reporting module": [[153, "module-mia_processes.bricks.reports.reporting"]], "mia_processes.bricks.stat package": [[154, "module-mia_processes.bricks.stat"]], "mia_processes.bricks.stat.spm package": [[155, "module-mia_processes.bricks.stat.spm"]], "mia_processes.bricks.stat.spm.model module": [[155, "module-mia_processes.bricks.stat.spm.model"]], "mia_processes.bricks.tools package": [[156, "module-mia_processes.bricks.tools"]], "mia_processes.bricks.tools.tools module": [[156, "module-mia_processes.bricks.tools.tools"]], "mia_processes.pipelines package": [[157, "module-mia_processes.pipelines"]], "mia_processes.pipelines.CerebVascularReact package": [[158, "module-mia_processes.pipelines.CerebVascularReact"]], "mia_processes.pipelines.CerebVascularReact.co2_inhalation module": [[158, "module-mia_processes.pipelines.CerebVascularReact.co2_inhalation"]], "mia_processes.pipelines.DWITractography package": [[159, "module-mia_processes.pipelines.DWITractography"]], "mia_processes.pipelines.DWITractography.dwi_whole_brain_tractography module": [[159, "module-mia_processes.pipelines.DWITractography.dwi_whole_brain_tractography"]], "mia_processes.pipelines.preprocess package": [[160, "module-mia_processes.pipelines.preprocess"]], "mia_processes.pipelines.preprocess.anat_airmask module": [[160, "module-mia_processes.pipelines.preprocess.anat_airmask"]], "mia_processes.pipelines.preprocess.anat_headmask module": [[160, "module-mia_processes.pipelines.preprocess.anat_headmask"]], "mia_processes.pipelines.preprocess.anat_mni_tpms module": [[160, "module-mia_processes.pipelines.preprocess.anat_mni_tpms"]], "mia_processes.pipelines.preprocess.anat_skullstrip module": [[160, "module-mia_processes.pipelines.preprocess.anat_skullstrip"]], "mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip module": [[160, "module-mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip"]], "mia_processes.pipelines.preprocess.anat_spatial_norm module": [[160, "module-mia_processes.pipelines.preprocess.anat_spatial_norm"]], "mia_processes.pipelines.preprocess.bold_hmc module": [[160, "module-mia_processes.pipelines.preprocess.bold_hmc"]], "mia_processes.pipelines.preprocess.bold_mni_align module": [[160, "module-mia_processes.pipelines.preprocess.bold_mni_align"]], "mia_processes.pipelines.preprocess.bold_spatial_preprocessing1 module": [[160, "module-mia_processes.pipelines.preprocess.bold_spatial_preprocessing1"]], "mia_processes.pipelines.preprocess.bold_spatial_preprocessing2 module": [[160, "module-mia_processes.pipelines.preprocess.bold_spatial_preprocessing2"]], "mia_processes.pipelines.preprocess.dwi_fod_msmt_csd module": [[160, "module-mia_processes.pipelines.preprocess.dwi_fod_msmt_csd"]], "mia_processes.pipelines.preprocess.dwipreprocessing module": [[160, "module-mia_processes.pipelines.preprocess.dwi_preprocessing"]], "mia_processes.pipelines.preprocess.spatial_mask module": [[160, "module-mia_processes.pipelines.preprocess.spatial_mask"]], "mia_processes.pipelines.qualityControl package": [[161, "module-mia_processes.pipelines.qualityControl"]], "mia_processes.pipelines.qualityControl.anat_mriqc module": [[161, "module-mia_processes.pipelines.qualityControl.anat_mriqc"]], "mia_processes.pipelines.qualityControl.bold_mriqc module": [[161, "module-mia_processes.pipelines.qualityControl.bold_mriqc"]], "mia_processes.pipelines.reports package": [[162, "module-mia_processes.pipelines.reports"]], "mia_processes.pipelines.reports.bold_iqms module": [[162, "module-mia_processes.pipelines.reports.bold_iqms"]], "mia_processes.pipelines.reports.extract_roi_param module": [[162, "module-mia_processes.pipelines.reports.extract_roi_param"]], "mia_processes.pipelines.stat package": [[163, "module-mia_processes.pipelines.stat"]], "mia_processes.pipelines.stat.bold_stat_cvr module": [[163, "module-mia_processes.pipelines.stat.bold_stat_cvr"]], "mia_processes.utils package": [[164, "module-mia_processes.utils"]], "mia_processes.utils.report module": [[164, "module-mia_processes.utils.report"]], "mia_processes.utils.tools module": [[164, "module-mia_processes.utils.tools"]], "mia_processes": [[165, "mia-processes"]]}, "indexentries": {"processmatlab (class in mia_processes.process_matlab)": [[142, "mia_processes.process_matlab.ProcessMatlab"]], "__init__() (mia_processes.process_matlab.processmatlab method)": [[142, "mia_processes.process_matlab.ProcessMatlab.__init__"]], "add_exit() (mia_processes.process_matlab.processmatlab method)": [[142, "mia_processes.process_matlab.ProcessMatlab.add_exit"]], "add_path() (mia_processes.process_matlab.processmatlab method)": [[142, "mia_processes.process_matlab.ProcessMatlab.add_path"]], "change_directory() (mia_processes.process_matlab.processmatlab method)": [[142, "mia_processes.process_matlab.ProcessMatlab.change_directory"]], "display_parameter() (mia_processes.process_matlab.processmatlab method)": [[142, "mia_processes.process_matlab.ProcessMatlab.display_parameter"]], "get_gitversion() (in module mia_processes.info)": [[142, "mia_processes.info.get_gitversion"]], "mia_processes": [[142, "module-mia_processes"]], "mia_processes.info": [[142, "module-mia_processes.info"]], "mia_processes.process_matlab": [[142, "module-mia_processes.process_matlab"]], "module": [[142, "module-mia_processes"], [142, "module-mia_processes.info"], [142, "module-mia_processes.process_matlab"], [143, "module-mia_processes.bricks"], [144, "module-mia_processes.bricks.preprocess"], [145, "module-mia_processes.bricks.preprocess.afni"], [145, "module-mia_processes.bricks.preprocess.afni.processes"], [146, "module-mia_processes.bricks.preprocess.ants"], [146, "module-mia_processes.bricks.preprocess.ants.processes"], [147, "module-mia_processes.bricks.preprocess.dipy"], [147, "module-mia_processes.bricks.preprocess.dipy.processes"], [148, "module-mia_processes.bricks.preprocess.freesurfer"], [148, "module-mia_processes.bricks.preprocess.freesurfer.processes"], [149, "module-mia_processes.bricks.preprocess.fsl"], [149, "module-mia_processes.bricks.preprocess.fsl.processes"], [150, "module-mia_processes.bricks.preprocess.mrtrix"], [150, "module-mia_processes.bricks.preprocess.mrtrix.processes"], [151, "module-mia_processes.bricks.preprocess.others"], [151, "module-mia_processes.bricks.preprocess.others.processing"], [152, "module-mia_processes.bricks.preprocess.spm"], [152, "module-mia_processes.bricks.preprocess.spm.spatial_preprocessing"], [153, "module-mia_processes.bricks.reports"], [153, "module-mia_processes.bricks.reports.processes"], [153, "module-mia_processes.bricks.reports.reporting"], [154, "module-mia_processes.bricks.stat"], [155, "module-mia_processes.bricks.stat.spm"], [155, "module-mia_processes.bricks.stat.spm.model"], [156, "module-mia_processes.bricks.tools"], [156, "module-mia_processes.bricks.tools.tools"], [157, "module-mia_processes.pipelines"], [158, "module-mia_processes.pipelines.CerebVascularReact"], [158, "module-mia_processes.pipelines.CerebVascularReact.co2_inhalation"], [159, "module-mia_processes.pipelines.DWITractography"], [159, "module-mia_processes.pipelines.DWITractography.dwi_whole_brain_tractography"], [160, "module-mia_processes.pipelines.preprocess"], [160, "module-mia_processes.pipelines.preprocess.anat_airmask"], [160, "module-mia_processes.pipelines.preprocess.anat_headmask"], [160, "module-mia_processes.pipelines.preprocess.anat_mni_tpms"], [160, "module-mia_processes.pipelines.preprocess.anat_skullstrip"], [160, "module-mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip"], [160, "module-mia_processes.pipelines.preprocess.anat_spatial_norm"], [160, "module-mia_processes.pipelines.preprocess.bold_hmc"], [160, "module-mia_processes.pipelines.preprocess.bold_mni_align"], [160, "module-mia_processes.pipelines.preprocess.bold_spatial_preprocessing1"], [160, "module-mia_processes.pipelines.preprocess.bold_spatial_preprocessing2"], [160, "module-mia_processes.pipelines.preprocess.dwi_fod_msmt_csd"], [160, "module-mia_processes.pipelines.preprocess.dwi_preprocessing"], [160, "module-mia_processes.pipelines.preprocess.spatial_mask"], [161, "module-mia_processes.pipelines.qualityControl"], [161, "module-mia_processes.pipelines.qualityControl.anat_mriqc"], [161, "module-mia_processes.pipelines.qualityControl.bold_mriqc"], [162, "module-mia_processes.pipelines.reports"], [162, "module-mia_processes.pipelines.reports.bold_iqms"], [162, "module-mia_processes.pipelines.reports.extract_roi_param"], [163, "module-mia_processes.pipelines.stat"], [163, "module-mia_processes.pipelines.stat.bold_stat_cvr"], [164, "module-mia_processes.utils"], [164, "module-mia_processes.utils.report"], [164, "module-mia_processes.utils.tools"]], "run() (mia_processes.process_matlab.processmatlab method)": [[142, "mia_processes.process_matlab.ProcessMatlab.run"]], "set_global_variable() (mia_processes.process_matlab.processmatlab method)": [[142, "mia_processes.process_matlab.ProcessMatlab.set_global_variable"]], "set_variable() (mia_processes.process_matlab.processmatlab method)": [[142, "mia_processes.process_matlab.ProcessMatlab.set_variable"]], "mia_processes.bricks": [[143, "module-mia_processes.bricks"]], "mia_processes.bricks.preprocess": [[144, "module-mia_processes.bricks.preprocess"]], "automask (class in mia_processes.bricks.preprocess.afni.processes)": [[145, "mia_processes.bricks.preprocess.afni.processes.Automask"]], "calc (class in mia_processes.bricks.preprocess.afni.processes)": [[145, "mia_processes.bricks.preprocess.afni.processes.Calc"]], "calcdroptrs (class in mia_processes.bricks.preprocess.afni.processes)": [[145, "mia_processes.bricks.preprocess.afni.processes.CalcDropTRs"]], "despike (class in mia_processes.bricks.preprocess.afni.processes)": [[145, "mia_processes.bricks.preprocess.afni.processes.Despike"]], "fwhmx (class in mia_processes.bricks.preprocess.afni.processes)": [[145, "mia_processes.bricks.preprocess.afni.processes.FWHMx"]], "gcor (class in mia_processes.bricks.preprocess.afni.processes)": [[145, "mia_processes.bricks.preprocess.afni.processes.GCOR"]], "outliercount (class in mia_processes.bricks.preprocess.afni.processes)": [[145, "mia_processes.bricks.preprocess.afni.processes.OutlierCount"]], "qualityindex (class in mia_processes.bricks.preprocess.afni.processes)": [[145, "mia_processes.bricks.preprocess.afni.processes.QualityIndex"]], "refitdeoblique (class in mia_processes.bricks.preprocess.afni.processes)": [[145, "mia_processes.bricks.preprocess.afni.processes.RefitDeoblique"]], "skullstrip (class in mia_processes.bricks.preprocess.afni.processes)": [[145, "mia_processes.bricks.preprocess.afni.processes.SkullStrip"]], "tshift (class in mia_processes.bricks.preprocess.afni.processes)": [[145, "mia_processes.bricks.preprocess.afni.processes.TShift"]], "tstatmean (class in mia_processes.bricks.preprocess.afni.processes)": [[145, "mia_processes.bricks.preprocess.afni.processes.TStatMean"]], "volreg (class in mia_processes.bricks.preprocess.afni.processes)": [[145, "mia_processes.bricks.preprocess.afni.processes.Volreg"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.automask method)": [[145, "mia_processes.bricks.preprocess.afni.processes.Automask.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.calc method)": [[145, "mia_processes.bricks.preprocess.afni.processes.Calc.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.calcdroptrs method)": [[145, "mia_processes.bricks.preprocess.afni.processes.CalcDropTRs.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.despike method)": [[145, "mia_processes.bricks.preprocess.afni.processes.Despike.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.fwhmx method)": [[145, "mia_processes.bricks.preprocess.afni.processes.FWHMx.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.gcor method)": [[145, "mia_processes.bricks.preprocess.afni.processes.GCOR.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.outliercount method)": [[145, "mia_processes.bricks.preprocess.afni.processes.OutlierCount.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.qualityindex method)": [[145, "mia_processes.bricks.preprocess.afni.processes.QualityIndex.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.refitdeoblique method)": [[145, "mia_processes.bricks.preprocess.afni.processes.RefitDeoblique.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.skullstrip method)": [[145, "mia_processes.bricks.preprocess.afni.processes.SkullStrip.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.tshift method)": [[145, "mia_processes.bricks.preprocess.afni.processes.TShift.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.tstatmean method)": [[145, "mia_processes.bricks.preprocess.afni.processes.TStatMean.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.volreg method)": [[145, "mia_processes.bricks.preprocess.afni.processes.Volreg.__init__"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.automask method)": [[145, "mia_processes.bricks.preprocess.afni.processes.Automask.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.calc method)": [[145, "mia_processes.bricks.preprocess.afni.processes.Calc.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.calcdroptrs method)": [[145, "mia_processes.bricks.preprocess.afni.processes.CalcDropTRs.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.despike method)": [[145, "mia_processes.bricks.preprocess.afni.processes.Despike.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.fwhmx method)": [[145, "mia_processes.bricks.preprocess.afni.processes.FWHMx.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.gcor method)": [[145, "mia_processes.bricks.preprocess.afni.processes.GCOR.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.outliercount method)": [[145, "mia_processes.bricks.preprocess.afni.processes.OutlierCount.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.qualityindex method)": [[145, "mia_processes.bricks.preprocess.afni.processes.QualityIndex.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.refitdeoblique method)": [[145, "mia_processes.bricks.preprocess.afni.processes.RefitDeoblique.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.skullstrip method)": [[145, "mia_processes.bricks.preprocess.afni.processes.SkullStrip.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.tshift method)": [[145, "mia_processes.bricks.preprocess.afni.processes.TShift.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.tstatmean method)": [[145, "mia_processes.bricks.preprocess.afni.processes.TStatMean.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.volreg method)": [[145, "mia_processes.bricks.preprocess.afni.processes.Volreg.list_outputs"]], "mia_processes.bricks.preprocess.afni": [[145, "module-mia_processes.bricks.preprocess.afni"]], "mia_processes.bricks.preprocess.afni.processes": [[145, "module-mia_processes.bricks.preprocess.afni.processes"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.automask method)": [[145, "mia_processes.bricks.preprocess.afni.processes.Automask.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.calc method)": [[145, "mia_processes.bricks.preprocess.afni.processes.Calc.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.calcdroptrs method)": [[145, "mia_processes.bricks.preprocess.afni.processes.CalcDropTRs.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.despike method)": [[145, "mia_processes.bricks.preprocess.afni.processes.Despike.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.fwhmx method)": [[145, "mia_processes.bricks.preprocess.afni.processes.FWHMx.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.gcor method)": [[145, "mia_processes.bricks.preprocess.afni.processes.GCOR.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.outliercount method)": [[145, "mia_processes.bricks.preprocess.afni.processes.OutlierCount.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.qualityindex method)": [[145, "mia_processes.bricks.preprocess.afni.processes.QualityIndex.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.refitdeoblique method)": [[145, "mia_processes.bricks.preprocess.afni.processes.RefitDeoblique.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.skullstrip method)": [[145, "mia_processes.bricks.preprocess.afni.processes.SkullStrip.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.tshift method)": [[145, "mia_processes.bricks.preprocess.afni.processes.TShift.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.tstatmean method)": [[145, "mia_processes.bricks.preprocess.afni.processes.TStatMean.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.volreg method)": [[145, "mia_processes.bricks.preprocess.afni.processes.Volreg.run_process_mia"]], "affineinitializer (class in mia_processes.bricks.preprocess.ants.processes)": [[146, "mia_processes.bricks.preprocess.ants.processes.AffineInitializer"]], "applytransforms (class in mia_processes.bricks.preprocess.ants.processes)": [[146, "mia_processes.bricks.preprocess.ants.processes.ApplyTransforms"]], "n4biasfieldcorrection (class in mia_processes.bricks.preprocess.ants.processes)": [[146, "mia_processes.bricks.preprocess.ants.processes.N4BiasFieldCorrection"]], "registration (class in mia_processes.bricks.preprocess.ants.processes)": [[146, "mia_processes.bricks.preprocess.ants.processes.Registration"]], "__init__() (mia_processes.bricks.preprocess.ants.processes.affineinitializer method)": [[146, "mia_processes.bricks.preprocess.ants.processes.AffineInitializer.__init__"]], "__init__() (mia_processes.bricks.preprocess.ants.processes.applytransforms method)": [[146, "mia_processes.bricks.preprocess.ants.processes.ApplyTransforms.__init__"]], "__init__() (mia_processes.bricks.preprocess.ants.processes.n4biasfieldcorrection method)": [[146, "mia_processes.bricks.preprocess.ants.processes.N4BiasFieldCorrection.__init__"]], "__init__() (mia_processes.bricks.preprocess.ants.processes.registration method)": [[146, "mia_processes.bricks.preprocess.ants.processes.Registration.__init__"]], "list_outputs() (mia_processes.bricks.preprocess.ants.processes.affineinitializer method)": [[146, "mia_processes.bricks.preprocess.ants.processes.AffineInitializer.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.ants.processes.applytransforms method)": [[146, "mia_processes.bricks.preprocess.ants.processes.ApplyTransforms.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.ants.processes.n4biasfieldcorrection method)": [[146, "mia_processes.bricks.preprocess.ants.processes.N4BiasFieldCorrection.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.ants.processes.registration method)": [[146, "mia_processes.bricks.preprocess.ants.processes.Registration.list_outputs"]], "mia_processes.bricks.preprocess.ants": [[146, "module-mia_processes.bricks.preprocess.ants"]], "mia_processes.bricks.preprocess.ants.processes": [[146, "module-mia_processes.bricks.preprocess.ants.processes"]], "run_process_mia() (mia_processes.bricks.preprocess.ants.processes.affineinitializer method)": [[146, "mia_processes.bricks.preprocess.ants.processes.AffineInitializer.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.ants.processes.applytransforms method)": [[146, "mia_processes.bricks.preprocess.ants.processes.ApplyTransforms.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.ants.processes.n4biasfieldcorrection method)": [[146, "mia_processes.bricks.preprocess.ants.processes.N4BiasFieldCorrection.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.ants.processes.registration method)": [[146, "mia_processes.bricks.preprocess.ants.processes.Registration.run_process_mia"]], "computedki (class in mia_processes.bricks.preprocess.dipy.processes)": [[147, "mia_processes.bricks.preprocess.dipy.processes.ComputeDKI"]], "denoise (class in mia_processes.bricks.preprocess.dipy.processes)": [[147, "mia_processes.bricks.preprocess.dipy.processes.Denoise"]], "__init__() (mia_processes.bricks.preprocess.dipy.processes.computedki method)": [[147, "mia_processes.bricks.preprocess.dipy.processes.ComputeDKI.__init__"]], "__init__() (mia_processes.bricks.preprocess.dipy.processes.denoise method)": [[147, "mia_processes.bricks.preprocess.dipy.processes.Denoise.__init__"]], "list_outputs() (mia_processes.bricks.preprocess.dipy.processes.computedki method)": [[147, "mia_processes.bricks.preprocess.dipy.processes.ComputeDKI.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.dipy.processes.denoise method)": [[147, "mia_processes.bricks.preprocess.dipy.processes.Denoise.list_outputs"]], "mia_processes.bricks.preprocess.dipy": [[147, "module-mia_processes.bricks.preprocess.dipy"]], "mia_processes.bricks.preprocess.dipy.processes": [[147, "module-mia_processes.bricks.preprocess.dipy.processes"]], "run_process_mia() (mia_processes.bricks.preprocess.dipy.processes.computedki method)": [[147, "mia_processes.bricks.preprocess.dipy.processes.ComputeDKI.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.dipy.processes.denoise method)": [[147, "mia_processes.bricks.preprocess.dipy.processes.Denoise.run_process_mia"]], "binarize (class in mia_processes.bricks.preprocess.freesurfer.processes)": [[148, "mia_processes.bricks.preprocess.freesurfer.processes.Binarize"]], "synthstrip (class in mia_processes.bricks.preprocess.freesurfer.processes)": [[148, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStrip"]], "synthstripmriqc (class in mia_processes.bricks.preprocess.freesurfer.processes)": [[148, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc"]], "synthstripmriqc.convblock (class in mia_processes.bricks.preprocess.freesurfer.processes)": [[148, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.ConvBlock"]], "synthstripmriqc.stripmodel (class in mia_processes.bricks.preprocess.freesurfer.processes)": [[148, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.StripModel"]], "__init__() (mia_processes.bricks.preprocess.freesurfer.processes.binarize method)": [[148, "mia_processes.bricks.preprocess.freesurfer.processes.Binarize.__init__"]], "__init__() (mia_processes.bricks.preprocess.freesurfer.processes.synthstrip method)": [[148, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStrip.__init__"]], "__init__() (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc method)": [[148, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.__init__"]], "__init__() (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc.convblock method)": [[148, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.ConvBlock.__init__"]], "__init__() (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc.stripmodel method)": [[148, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.StripModel.__init__"]], "conform() (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc method)": [[148, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.conform"]], "forward() (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc.convblock method)": [[148, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.ConvBlock.forward"]], "forward() (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc.stripmodel method)": [[148, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.StripModel.forward"]], "list_outputs() (mia_processes.bricks.preprocess.freesurfer.processes.binarize method)": [[148, "mia_processes.bricks.preprocess.freesurfer.processes.Binarize.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.freesurfer.processes.synthstrip method)": [[148, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStrip.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc method)": [[148, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.list_outputs"]], "mia_processes.bricks.preprocess.freesurfer": [[148, "module-mia_processes.bricks.preprocess.freesurfer"]], "mia_processes.bricks.preprocess.freesurfer.processes": [[148, "module-mia_processes.bricks.preprocess.freesurfer.processes"]], "resample_like() (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc method)": [[148, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.resample_like"]], "run_process_mia() (mia_processes.bricks.preprocess.freesurfer.processes.binarize method)": [[148, "mia_processes.bricks.preprocess.freesurfer.processes.Binarize.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.freesurfer.processes.synthstrip method)": [[148, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStrip.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc method)": [[148, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.run_process_mia"]], "training (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc.convblock attribute)": [[148, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.ConvBlock.training"]], "training (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc.stripmodel attribute)": [[148, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.StripModel.training"]], "betsurfacesextraction (class in mia_processes.bricks.preprocess.fsl.processes)": [[149, "mia_processes.bricks.preprocess.fsl.processes.BetSurfacesExtraction"]], "convertxfm (class in mia_processes.bricks.preprocess.fsl.processes)": [[149, "mia_processes.bricks.preprocess.fsl.processes.ConvertXFM"]], "epireg (class in mia_processes.bricks.preprocess.fsl.processes)": [[149, "mia_processes.bricks.preprocess.fsl.processes.EpiReg"]], "extractroi (class in mia_processes.bricks.preprocess.fsl.processes)": [[149, "mia_processes.bricks.preprocess.fsl.processes.ExtractROI"]], "fastsegment (class in mia_processes.bricks.preprocess.fsl.processes)": [[149, "mia_processes.bricks.preprocess.fsl.processes.FastSegment"]], "flirt (class in mia_processes.bricks.preprocess.fsl.processes)": [[149, "mia_processes.bricks.preprocess.fsl.processes.Flirt"]], "smooth (class in mia_processes.bricks.preprocess.fsl.processes)": [[149, "mia_processes.bricks.preprocess.fsl.processes.Smooth"]], "__init__() (mia_processes.bricks.preprocess.fsl.processes.betsurfacesextraction method)": [[149, "mia_processes.bricks.preprocess.fsl.processes.BetSurfacesExtraction.__init__"]], "__init__() (mia_processes.bricks.preprocess.fsl.processes.convertxfm method)": [[149, "mia_processes.bricks.preprocess.fsl.processes.ConvertXFM.__init__"]], "__init__() (mia_processes.bricks.preprocess.fsl.processes.epireg method)": [[149, "mia_processes.bricks.preprocess.fsl.processes.EpiReg.__init__"]], "__init__() (mia_processes.bricks.preprocess.fsl.processes.extractroi method)": [[149, "mia_processes.bricks.preprocess.fsl.processes.ExtractROI.__init__"]], "__init__() (mia_processes.bricks.preprocess.fsl.processes.fastsegment method)": [[149, "mia_processes.bricks.preprocess.fsl.processes.FastSegment.__init__"]], "__init__() (mia_processes.bricks.preprocess.fsl.processes.flirt method)": [[149, "mia_processes.bricks.preprocess.fsl.processes.Flirt.__init__"]], "__init__() (mia_processes.bricks.preprocess.fsl.processes.smooth method)": [[149, "mia_processes.bricks.preprocess.fsl.processes.Smooth.__init__"]], "list_outputs() (mia_processes.bricks.preprocess.fsl.processes.betsurfacesextraction method)": [[149, "mia_processes.bricks.preprocess.fsl.processes.BetSurfacesExtraction.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.fsl.processes.convertxfm method)": [[149, "mia_processes.bricks.preprocess.fsl.processes.ConvertXFM.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.fsl.processes.epireg method)": [[149, "mia_processes.bricks.preprocess.fsl.processes.EpiReg.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.fsl.processes.extractroi method)": [[149, "mia_processes.bricks.preprocess.fsl.processes.ExtractROI.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.fsl.processes.fastsegment method)": [[149, "mia_processes.bricks.preprocess.fsl.processes.FastSegment.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.fsl.processes.flirt method)": [[149, "mia_processes.bricks.preprocess.fsl.processes.Flirt.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.fsl.processes.smooth method)": [[149, "mia_processes.bricks.preprocess.fsl.processes.Smooth.list_outputs"]], "mia_processes.bricks.preprocess.fsl": [[149, "module-mia_processes.bricks.preprocess.fsl"]], "mia_processes.bricks.preprocess.fsl.processes": [[149, "module-mia_processes.bricks.preprocess.fsl.processes"]], "run_process_mia() (mia_processes.bricks.preprocess.fsl.processes.betsurfacesextraction method)": [[149, "mia_processes.bricks.preprocess.fsl.processes.BetSurfacesExtraction.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.fsl.processes.convertxfm method)": [[149, "mia_processes.bricks.preprocess.fsl.processes.ConvertXFM.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.fsl.processes.epireg method)": [[149, "mia_processes.bricks.preprocess.fsl.processes.EpiReg.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.fsl.processes.extractroi method)": [[149, "mia_processes.bricks.preprocess.fsl.processes.ExtractROI.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.fsl.processes.fastsegment method)": [[149, "mia_processes.bricks.preprocess.fsl.processes.FastSegment.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.fsl.processes.flirt method)": [[149, "mia_processes.bricks.preprocess.fsl.processes.Flirt.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.fsl.processes.smooth method)": [[149, "mia_processes.bricks.preprocess.fsl.processes.Smooth.run_process_mia"]], "constrainedsphericaldeconvolution (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.ConstrainedSphericalDeconvolution"]], "dwibiascorrect (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.DWIBiasCorrect"]], "dwibrainmask (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.DWIBrainMask"]], "dwidenoise (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.DWIDenoise"]], "dwiextract (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.DWIExtract"]], "dwipreproc (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.DWIPreproc"]], "editingtrack (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.EditingTrack"]], "filteringtrack (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.FilteringTrack"]], "fittensor (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.FitTensor"]], "generate5tt2gmwmi (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.Generate5tt2gmwmi"]], "generate5ttfsl (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.Generate5ttfsl"]], "mrcat (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.MRCat"]], "mrconvert (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.MRConvert"]], "mrdegibbs (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.MRDeGibbs"]], "mrmath (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.MRMath"]], "mrtransform (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.MRTransform"]], "mtnormalise (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.MTNormalise"]], "responsesddhollander (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.ResponseSDDhollander"]], "sphericalharmonicextraction (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.SphericalHarmonicExtraction"]], "tensormetrics (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.TensorMetrics"]], "tractography (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.Tractography"]], "transformfslconvert (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.TransformFSLConvert"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.constrainedsphericaldeconvolution method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.ConstrainedSphericalDeconvolution.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.dwibiascorrect method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.DWIBiasCorrect.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.dwibrainmask method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.DWIBrainMask.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.dwidenoise method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.DWIDenoise.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.dwiextract method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.DWIExtract.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.dwipreproc method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.DWIPreproc.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.editingtrack method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.EditingTrack.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.filteringtrack method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.FilteringTrack.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.fittensor method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.FitTensor.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.generate5tt2gmwmi method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.Generate5tt2gmwmi.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.generate5ttfsl method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.Generate5ttfsl.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.mrcat method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.MRCat.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.mrconvert method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.MRConvert.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.mrdegibbs method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.MRDeGibbs.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.mrmath method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.MRMath.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.mrtransform method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.MRTransform.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.mtnormalise method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.MTNormalise.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.responsesddhollander method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.ResponseSDDhollander.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.sphericalharmonicextraction method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.SphericalHarmonicExtraction.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.tensormetrics method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.TensorMetrics.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.tractography method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.Tractography.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.transformfslconvert method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.TransformFSLConvert.__init__"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.constrainedsphericaldeconvolution method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.ConstrainedSphericalDeconvolution.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.dwibiascorrect method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.DWIBiasCorrect.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.dwibrainmask method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.DWIBrainMask.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.dwidenoise method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.DWIDenoise.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.dwiextract method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.DWIExtract.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.dwipreproc method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.DWIPreproc.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.editingtrack method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.EditingTrack.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.filteringtrack method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.FilteringTrack.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.fittensor method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.FitTensor.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.generate5tt2gmwmi method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.Generate5tt2gmwmi.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.generate5ttfsl method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.Generate5ttfsl.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.mrcat method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.MRCat.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.mrconvert method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.MRConvert.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.mrdegibbs method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.MRDeGibbs.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.mrmath method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.MRMath.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.mrtransform method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.MRTransform.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.mtnormalise method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.MTNormalise.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.responsesddhollander method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.ResponseSDDhollander.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.sphericalharmonicextraction method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.SphericalHarmonicExtraction.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.tensormetrics method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.TensorMetrics.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.tractography method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.Tractography.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.transformfslconvert method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.TransformFSLConvert.list_outputs"]], "mia_processes.bricks.preprocess.mrtrix": [[150, "module-mia_processes.bricks.preprocess.mrtrix"]], "mia_processes.bricks.preprocess.mrtrix.processes": [[150, "module-mia_processes.bricks.preprocess.mrtrix.processes"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.constrainedsphericaldeconvolution method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.ConstrainedSphericalDeconvolution.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.dwibiascorrect method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.DWIBiasCorrect.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.dwibrainmask method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.DWIBrainMask.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.dwidenoise method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.DWIDenoise.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.dwiextract method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.DWIExtract.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.dwipreproc method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.DWIPreproc.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.editingtrack method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.EditingTrack.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.filteringtrack method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.FilteringTrack.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.fittensor method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.FitTensor.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.generate5tt2gmwmi method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.Generate5tt2gmwmi.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.generate5ttfsl method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.Generate5ttfsl.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.mrcat method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.MRCat.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.mrconvert method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.MRConvert.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.mrdegibbs method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.MRDeGibbs.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.mrmath method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.MRMath.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.mrtransform method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.MRTransform.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.mtnormalise method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.MTNormalise.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.responsesddhollander method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.ResponseSDDhollander.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.sphericalharmonicextraction method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.SphericalHarmonicExtraction.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.tensormetrics method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.TensorMetrics.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.tractography method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.Tractography.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.transformfslconvert method)": [[150, "mia_processes.bricks.preprocess.mrtrix.processes.TransformFSLConvert.run_process_mia"]], "applybiascorrection (class in mia_processes.bricks.preprocess.others.processing)": [[151, "mia_processes.bricks.preprocess.others.processing.ApplyBiasCorrection"]], "artifactmask (class in mia_processes.bricks.preprocess.others.processing)": [[151, "mia_processes.bricks.preprocess.others.processing.ArtifactMask"]], "binarize (class in mia_processes.bricks.preprocess.others.processing)": [[151, "mia_processes.bricks.preprocess.others.processing.Binarize"]], "conformimage (class in mia_processes.bricks.preprocess.others.processing)": [[151, "mia_processes.bricks.preprocess.others.processing.ConformImage"]], "convroi (class in mia_processes.bricks.preprocess.others.processing)": [[151, "mia_processes.bricks.preprocess.others.processing.ConvROI"]], "enhance (class in mia_processes.bricks.preprocess.others.processing)": [[151, "mia_processes.bricks.preprocess.others.processing.Enhance"]], "estimatesnr (class in mia_processes.bricks.preprocess.others.processing)": [[151, "mia_processes.bricks.preprocess.others.processing.EstimateSNR"]], "extractroibylabel (class in mia_processes.bricks.preprocess.others.processing)": [[151, "mia_processes.bricks.preprocess.others.processing.ExtractROIbyLabel"]], "extractsignalroi (class in mia_processes.bricks.preprocess.others.processing)": [[151, "mia_processes.bricks.preprocess.others.processing.ExtractSignalROI"]], "gradientthreshold (class in mia_processes.bricks.preprocess.others.processing)": [[151, "mia_processes.bricks.preprocess.others.processing.GradientThreshold"]], "harmonize (class in mia_processes.bricks.preprocess.others.processing)": [[151, "mia_processes.bricks.preprocess.others.processing.Harmonize"]], "intensityclip (class in mia_processes.bricks.preprocess.others.processing)": [[151, "mia_processes.bricks.preprocess.others.processing.IntensityClip"]], "mask (class in mia_processes.bricks.preprocess.others.processing)": [[151, "mia_processes.bricks.preprocess.others.processing.Mask"]], "nonsteadystatedetector (class in mia_processes.bricks.preprocess.others.processing)": [[151, "mia_processes.bricks.preprocess.others.processing.NonSteadyStateDetector"]], "resample1 (class in mia_processes.bricks.preprocess.others.processing)": [[151, "mia_processes.bricks.preprocess.others.processing.Resample1"]], "resample2 (class in mia_processes.bricks.preprocess.others.processing)": [[151, "mia_processes.bricks.preprocess.others.processing.Resample2"]], "rotationmask (class in mia_processes.bricks.preprocess.others.processing)": [[151, "mia_processes.bricks.preprocess.others.processing.RotationMask"]], "sanitize (class in mia_processes.bricks.preprocess.others.processing)": [[151, "mia_processes.bricks.preprocess.others.processing.Sanitize"]], "tsnr (class in mia_processes.bricks.preprocess.others.processing)": [[151, "mia_processes.bricks.preprocess.others.processing.TSNR"]], "templatefromtemplateflow (class in mia_processes.bricks.preprocess.others.processing)": [[151, "mia_processes.bricks.preprocess.others.processing.TemplateFromTemplateFlow"]], "threshold (class in mia_processes.bricks.preprocess.others.processing)": [[151, "mia_processes.bricks.preprocess.others.processing.Threshold"]], "__init__() (mia_processes.bricks.preprocess.others.processing.applybiascorrection method)": [[151, "mia_processes.bricks.preprocess.others.processing.ApplyBiasCorrection.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.artifactmask method)": [[151, "mia_processes.bricks.preprocess.others.processing.ArtifactMask.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.binarize method)": [[151, "mia_processes.bricks.preprocess.others.processing.Binarize.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.conformimage method)": [[151, "mia_processes.bricks.preprocess.others.processing.ConformImage.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.convroi method)": [[151, "mia_processes.bricks.preprocess.others.processing.ConvROI.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.enhance method)": [[151, "mia_processes.bricks.preprocess.others.processing.Enhance.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.estimatesnr method)": [[151, "mia_processes.bricks.preprocess.others.processing.EstimateSNR.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.extractroibylabel method)": [[151, "mia_processes.bricks.preprocess.others.processing.ExtractROIbyLabel.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.extractsignalroi method)": [[151, "mia_processes.bricks.preprocess.others.processing.ExtractSignalROI.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.gradientthreshold method)": [[151, "mia_processes.bricks.preprocess.others.processing.GradientThreshold.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.harmonize method)": [[151, "mia_processes.bricks.preprocess.others.processing.Harmonize.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.intensityclip method)": [[151, "mia_processes.bricks.preprocess.others.processing.IntensityClip.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.mask method)": [[151, "mia_processes.bricks.preprocess.others.processing.Mask.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.nonsteadystatedetector method)": [[151, "mia_processes.bricks.preprocess.others.processing.NonSteadyStateDetector.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.resample1 method)": [[151, "mia_processes.bricks.preprocess.others.processing.Resample1.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.resample2 method)": [[151, "mia_processes.bricks.preprocess.others.processing.Resample2.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.rotationmask method)": [[151, "mia_processes.bricks.preprocess.others.processing.RotationMask.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.sanitize method)": [[151, "mia_processes.bricks.preprocess.others.processing.Sanitize.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.tsnr method)": [[151, "mia_processes.bricks.preprocess.others.processing.TSNR.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.templatefromtemplateflow method)": [[151, "mia_processes.bricks.preprocess.others.processing.TemplateFromTemplateFlow.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.threshold method)": [[151, "mia_processes.bricks.preprocess.others.processing.Threshold.__init__"]], "artifact_mask() (in module mia_processes.bricks.preprocess.others.processing)": [[151, "mia_processes.bricks.preprocess.others.processing.artifact_mask"]], "is_outlier() (in module mia_processes.bricks.preprocess.others.processing)": [[151, "mia_processes.bricks.preprocess.others.processing.is_outlier"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.applybiascorrection method)": [[151, "mia_processes.bricks.preprocess.others.processing.ApplyBiasCorrection.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.artifactmask method)": [[151, "mia_processes.bricks.preprocess.others.processing.ArtifactMask.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.binarize method)": [[151, "mia_processes.bricks.preprocess.others.processing.Binarize.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.conformimage method)": [[151, "mia_processes.bricks.preprocess.others.processing.ConformImage.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.convroi method)": [[151, "mia_processes.bricks.preprocess.others.processing.ConvROI.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.enhance method)": [[151, "mia_processes.bricks.preprocess.others.processing.Enhance.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.estimatesnr method)": [[151, "mia_processes.bricks.preprocess.others.processing.EstimateSNR.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.extractroibylabel method)": [[151, "mia_processes.bricks.preprocess.others.processing.ExtractROIbyLabel.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.extractsignalroi method)": [[151, "mia_processes.bricks.preprocess.others.processing.ExtractSignalROI.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.gradientthreshold method)": [[151, "mia_processes.bricks.preprocess.others.processing.GradientThreshold.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.harmonize method)": [[151, "mia_processes.bricks.preprocess.others.processing.Harmonize.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.intensityclip method)": [[151, "mia_processes.bricks.preprocess.others.processing.IntensityClip.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.mask method)": [[151, "mia_processes.bricks.preprocess.others.processing.Mask.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.nonsteadystatedetector method)": [[151, "mia_processes.bricks.preprocess.others.processing.NonSteadyStateDetector.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.resample1 method)": [[151, "mia_processes.bricks.preprocess.others.processing.Resample1.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.resample2 method)": [[151, "mia_processes.bricks.preprocess.others.processing.Resample2.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.rotationmask method)": [[151, "mia_processes.bricks.preprocess.others.processing.RotationMask.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.sanitize method)": [[151, "mia_processes.bricks.preprocess.others.processing.Sanitize.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.tsnr method)": [[151, "mia_processes.bricks.preprocess.others.processing.TSNR.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.templatefromtemplateflow method)": [[151, "mia_processes.bricks.preprocess.others.processing.TemplateFromTemplateFlow.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.threshold method)": [[151, "mia_processes.bricks.preprocess.others.processing.Threshold.list_outputs"]], "mia_processes.bricks.preprocess.others": [[151, "module-mia_processes.bricks.preprocess.others"]], "mia_processes.bricks.preprocess.others.processing": [[151, "module-mia_processes.bricks.preprocess.others.processing"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.applybiascorrection method)": [[151, "mia_processes.bricks.preprocess.others.processing.ApplyBiasCorrection.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.artifactmask method)": [[151, "mia_processes.bricks.preprocess.others.processing.ArtifactMask.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.binarize method)": [[151, "mia_processes.bricks.preprocess.others.processing.Binarize.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.conformimage method)": [[151, "mia_processes.bricks.preprocess.others.processing.ConformImage.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.convroi method)": [[151, "mia_processes.bricks.preprocess.others.processing.ConvROI.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.enhance method)": [[151, "mia_processes.bricks.preprocess.others.processing.Enhance.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.estimatesnr method)": [[151, "mia_processes.bricks.preprocess.others.processing.EstimateSNR.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.extractroibylabel method)": [[151, "mia_processes.bricks.preprocess.others.processing.ExtractROIbyLabel.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.extractsignalroi method)": [[151, "mia_processes.bricks.preprocess.others.processing.ExtractSignalROI.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.gradientthreshold method)": [[151, "mia_processes.bricks.preprocess.others.processing.GradientThreshold.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.harmonize method)": [[151, "mia_processes.bricks.preprocess.others.processing.Harmonize.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.intensityclip method)": [[151, "mia_processes.bricks.preprocess.others.processing.IntensityClip.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.mask method)": [[151, "mia_processes.bricks.preprocess.others.processing.Mask.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.nonsteadystatedetector method)": [[151, "mia_processes.bricks.preprocess.others.processing.NonSteadyStateDetector.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.resample1 method)": [[151, "mia_processes.bricks.preprocess.others.processing.Resample1.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.resample2 method)": [[151, "mia_processes.bricks.preprocess.others.processing.Resample2.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.rotationmask method)": [[151, "mia_processes.bricks.preprocess.others.processing.RotationMask.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.sanitize method)": [[151, "mia_processes.bricks.preprocess.others.processing.Sanitize.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.tsnr method)": [[151, "mia_processes.bricks.preprocess.others.processing.TSNR.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.templatefromtemplateflow method)": [[151, "mia_processes.bricks.preprocess.others.processing.TemplateFromTemplateFlow.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.threshold method)": [[151, "mia_processes.bricks.preprocess.others.processing.Threshold.run_process_mia"]], "threshold() (in module mia_processes.bricks.preprocess.others.processing)": [[151, "mia_processes.bricks.preprocess.others.processing.threshold"]], "coregister (class in mia_processes.bricks.preprocess.spm.spatial_preprocessing)": [[152, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Coregister"]], "gm_wm_normalize (class in mia_processes.bricks.preprocess.spm.spatial_preprocessing)": [[152, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.GM_WM_Normalize"]], "newsegment (class in mia_processes.bricks.preprocess.spm.spatial_preprocessing)": [[152, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.NewSegment"]], "normalize12 (class in mia_processes.bricks.preprocess.spm.spatial_preprocessing)": [[152, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Normalize12"]], "realign (class in mia_processes.bricks.preprocess.spm.spatial_preprocessing)": [[152, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Realign"]], "slicetiming (class in mia_processes.bricks.preprocess.spm.spatial_preprocessing)": [[152, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.SliceTiming"]], "smooth (class in mia_processes.bricks.preprocess.spm.spatial_preprocessing)": [[152, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Smooth"]], "__init__() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.coregister method)": [[152, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Coregister.__init__"]], "__init__() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.gm_wm_normalize method)": [[152, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.GM_WM_Normalize.__init__"]], "__init__() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.newsegment method)": [[152, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.NewSegment.__init__"]], "__init__() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.normalize12 method)": [[152, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Normalize12.__init__"]], "__init__() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.realign method)": [[152, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Realign.__init__"]], "__init__() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.slicetiming method)": [[152, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.SliceTiming.__init__"]], "__init__() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.smooth method)": [[152, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Smooth.__init__"]], "list_outputs() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.coregister method)": [[152, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Coregister.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.gm_wm_normalize method)": [[152, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.GM_WM_Normalize.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.newsegment method)": [[152, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.NewSegment.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.normalize12 method)": [[152, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Normalize12.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.realign method)": [[152, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Realign.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.slicetiming method)": [[152, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.SliceTiming.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.smooth method)": [[152, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Smooth.list_outputs"]], "mia_processes.bricks.preprocess.spm": [[152, "module-mia_processes.bricks.preprocess.spm"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing": [[152, "module-mia_processes.bricks.preprocess.spm.spatial_preprocessing"]], "run_process_mia() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.coregister method)": [[152, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Coregister.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.gm_wm_normalize method)": [[152, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.GM_WM_Normalize.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.newsegment method)": [[152, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.NewSegment.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.normalize12 method)": [[152, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Normalize12.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.realign method)": [[152, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Realign.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.slicetiming method)": [[152, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.SliceTiming.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.smooth method)": [[152, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Smooth.run_process_mia"]], "anatiqms (class in mia_processes.bricks.reports.processes)": [[153, "mia_processes.bricks.reports.processes.AnatIQMs"]], "boldiqms (class in mia_processes.bricks.reports.processes)": [[153, "mia_processes.bricks.reports.processes.BoldIQMs"]], "boldiqmsplot (class in mia_processes.bricks.reports.processes)": [[153, "mia_processes.bricks.reports.processes.BoldIQMsPlot"]], "carpetparcellation (class in mia_processes.bricks.reports.processes)": [[153, "mia_processes.bricks.reports.processes.CarpetParcellation"]], "computedvars (class in mia_processes.bricks.reports.processes)": [[153, "mia_processes.bricks.reports.processes.ComputeDVARS"]], "framewisedisplacement (class in mia_processes.bricks.reports.processes)": [[153, "mia_processes.bricks.reports.processes.FramewiseDisplacement"]], "mean_stddev_calc (class in mia_processes.bricks.reports.processes)": [[153, "mia_processes.bricks.reports.processes.Mean_stdDev_calc"]], "plotsignalroi (class in mia_processes.bricks.reports.processes)": [[153, "mia_processes.bricks.reports.processes.PlotSignalROI"]], "reportanatmriqc (class in mia_processes.bricks.reports.reporting)": [[153, "mia_processes.bricks.reports.reporting.ReportAnatMriqc"]], "reportco2inhalcvr (class in mia_processes.bricks.reports.reporting)": [[153, "mia_processes.bricks.reports.reporting.ReportCO2inhalCvr"]], "reportfuncmriqc (class in mia_processes.bricks.reports.reporting)": [[153, "mia_processes.bricks.reports.reporting.ReportFuncMriqc"]], "reportgroupmriqc (class in mia_processes.bricks.reports.reporting)": [[153, "mia_processes.bricks.reports.reporting.ReportGroupMriqc"]], "result_collector (class in mia_processes.bricks.reports.processes)": [[153, "mia_processes.bricks.reports.processes.Result_collector"]], "spikes (class in mia_processes.bricks.reports.processes)": [[153, "mia_processes.bricks.reports.processes.Spikes"]], "__init__() (mia_processes.bricks.reports.processes.anatiqms method)": [[153, "mia_processes.bricks.reports.processes.AnatIQMs.__init__"]], "__init__() (mia_processes.bricks.reports.processes.boldiqms method)": [[153, "mia_processes.bricks.reports.processes.BoldIQMs.__init__"]], "__init__() (mia_processes.bricks.reports.processes.boldiqmsplot method)": [[153, "mia_processes.bricks.reports.processes.BoldIQMsPlot.__init__"]], "__init__() (mia_processes.bricks.reports.processes.carpetparcellation method)": [[153, "mia_processes.bricks.reports.processes.CarpetParcellation.__init__"]], "__init__() (mia_processes.bricks.reports.processes.computedvars method)": [[153, "mia_processes.bricks.reports.processes.ComputeDVARS.__init__"]], "__init__() (mia_processes.bricks.reports.processes.framewisedisplacement method)": [[153, "mia_processes.bricks.reports.processes.FramewiseDisplacement.__init__"]], "__init__() (mia_processes.bricks.reports.processes.mean_stddev_calc method)": [[153, "mia_processes.bricks.reports.processes.Mean_stdDev_calc.__init__"]], "__init__() (mia_processes.bricks.reports.processes.plotsignalroi method)": [[153, "mia_processes.bricks.reports.processes.PlotSignalROI.__init__"]], "__init__() (mia_processes.bricks.reports.processes.result_collector method)": [[153, "mia_processes.bricks.reports.processes.Result_collector.__init__"]], "__init__() (mia_processes.bricks.reports.processes.spikes method)": [[153, "mia_processes.bricks.reports.processes.Spikes.__init__"]], "__init__() (mia_processes.bricks.reports.reporting.reportanatmriqc method)": [[153, "mia_processes.bricks.reports.reporting.ReportAnatMriqc.__init__"]], "__init__() (mia_processes.bricks.reports.reporting.reportco2inhalcvr method)": [[153, "mia_processes.bricks.reports.reporting.ReportCO2inhalCvr.__init__"]], "__init__() (mia_processes.bricks.reports.reporting.reportfuncmriqc method)": [[153, "mia_processes.bricks.reports.reporting.ReportFuncMriqc.__init__"]], "__init__() (mia_processes.bricks.reports.reporting.reportgroupmriqc method)": [[153, "mia_processes.bricks.reports.reporting.ReportGroupMriqc.__init__"]], "art_qi1() (in module mia_processes.bricks.reports.processes)": [[153, "mia_processes.bricks.reports.processes.art_qi1"]], "art_qi2() (in module mia_processes.bricks.reports.processes)": [[153, "mia_processes.bricks.reports.processes.art_qi2"]], "cjv() (in module mia_processes.bricks.reports.processes)": [[153, "mia_processes.bricks.reports.processes.cjv"]], "cnr() (in module mia_processes.bricks.reports.processes)": [[153, "mia_processes.bricks.reports.processes.cnr"]], "efc() (in module mia_processes.bricks.reports.processes)": [[153, "mia_processes.bricks.reports.processes.efc"]], "fber() (in module mia_processes.bricks.reports.processes)": [[153, "mia_processes.bricks.reports.processes.fber"]], "find_peaks() (in module mia_processes.bricks.reports.processes)": [[153, "mia_processes.bricks.reports.processes.find_peaks"]], "find_spikes() (in module mia_processes.bricks.reports.processes)": [[153, "mia_processes.bricks.reports.processes.find_spikes"]], "fuzzy_jaccard() (in module mia_processes.bricks.reports.processes)": [[153, "mia_processes.bricks.reports.processes.fuzzy_jaccard"]], "gsr() (in module mia_processes.bricks.reports.processes)": [[153, "mia_processes.bricks.reports.processes.gsr"]], "image_binary_dilation() (in module mia_processes.bricks.reports.processes)": [[153, "mia_processes.bricks.reports.processes.image_binary_dilation"]], "list_outputs() (mia_processes.bricks.reports.processes.anatiqms method)": [[153, "mia_processes.bricks.reports.processes.AnatIQMs.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.processes.boldiqms method)": [[153, "mia_processes.bricks.reports.processes.BoldIQMs.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.processes.boldiqmsplot method)": [[153, "mia_processes.bricks.reports.processes.BoldIQMsPlot.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.processes.carpetparcellation method)": [[153, "mia_processes.bricks.reports.processes.CarpetParcellation.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.processes.computedvars method)": [[153, "mia_processes.bricks.reports.processes.ComputeDVARS.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.processes.framewisedisplacement method)": [[153, "mia_processes.bricks.reports.processes.FramewiseDisplacement.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.processes.mean_stddev_calc method)": [[153, "mia_processes.bricks.reports.processes.Mean_stdDev_calc.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.processes.plotsignalroi method)": [[153, "mia_processes.bricks.reports.processes.PlotSignalROI.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.processes.result_collector method)": [[153, "mia_processes.bricks.reports.processes.Result_collector.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.processes.spikes method)": [[153, "mia_processes.bricks.reports.processes.Spikes.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.reporting.reportanatmriqc method)": [[153, "mia_processes.bricks.reports.reporting.ReportAnatMriqc.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.reporting.reportco2inhalcvr method)": [[153, "mia_processes.bricks.reports.reporting.ReportCO2inhalCvr.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.reporting.reportfuncmriqc method)": [[153, "mia_processes.bricks.reports.reporting.ReportFuncMriqc.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.reporting.reportgroupmriqc method)": [[153, "mia_processes.bricks.reports.reporting.ReportGroupMriqc.list_outputs"]], "mia_processes.bricks.reports": [[153, "module-mia_processes.bricks.reports"]], "mia_processes.bricks.reports.processes": [[153, "module-mia_processes.bricks.reports.processes"]], "mia_processes.bricks.reports.reporting": [[153, "module-mia_processes.bricks.reports.reporting"]], "normalize_mc_params() (in module mia_processes.bricks.reports.processes)": [[153, "mia_processes.bricks.reports.processes.normalize_mc_params"]], "regress_poly() (in module mia_processes.bricks.reports.processes)": [[153, "mia_processes.bricks.reports.processes.regress_poly"]], "rpve() (in module mia_processes.bricks.reports.processes)": [[153, "mia_processes.bricks.reports.processes.rpve"]], "run_process_mia() (mia_processes.bricks.reports.processes.anatiqms method)": [[153, "mia_processes.bricks.reports.processes.AnatIQMs.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.processes.boldiqms method)": [[153, "mia_processes.bricks.reports.processes.BoldIQMs.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.processes.boldiqmsplot method)": [[153, "mia_processes.bricks.reports.processes.BoldIQMsPlot.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.processes.carpetparcellation method)": [[153, "mia_processes.bricks.reports.processes.CarpetParcellation.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.processes.computedvars method)": [[153, "mia_processes.bricks.reports.processes.ComputeDVARS.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.processes.framewisedisplacement method)": [[153, "mia_processes.bricks.reports.processes.FramewiseDisplacement.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.processes.mean_stddev_calc method)": [[153, "mia_processes.bricks.reports.processes.Mean_stdDev_calc.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.processes.plotsignalroi method)": [[153, "mia_processes.bricks.reports.processes.PlotSignalROI.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.processes.result_collector method)": [[153, "mia_processes.bricks.reports.processes.Result_collector.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.processes.spikes method)": [[153, "mia_processes.bricks.reports.processes.Spikes.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.reporting.reportanatmriqc method)": [[153, "mia_processes.bricks.reports.reporting.ReportAnatMriqc.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.reporting.reportco2inhalcvr method)": [[153, "mia_processes.bricks.reports.reporting.ReportCO2inhalCvr.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.reporting.reportfuncmriqc method)": [[153, "mia_processes.bricks.reports.reporting.ReportFuncMriqc.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.reporting.reportgroupmriqc method)": [[153, "mia_processes.bricks.reports.reporting.ReportGroupMriqc.run_process_mia"]], "snr() (in module mia_processes.bricks.reports.processes)": [[153, "mia_processes.bricks.reports.processes.snr"]], "snr_dietrich() (in module mia_processes.bricks.reports.processes)": [[153, "mia_processes.bricks.reports.processes.snr_dietrich"]], "summary_stats() (in module mia_processes.bricks.reports.processes)": [[153, "mia_processes.bricks.reports.processes.summary_stats"]], "volume_fraction() (in module mia_processes.bricks.reports.processes)": [[153, "mia_processes.bricks.reports.processes.volume_fraction"]], "wm2max() (in module mia_processes.bricks.reports.processes)": [[153, "mia_processes.bricks.reports.processes.wm2max"]], "mia_processes.bricks.stat": [[154, "module-mia_processes.bricks.stat"]], "estimatecontrast (class in mia_processes.bricks.stat.spm.model)": [[155, "mia_processes.bricks.stat.spm.model.EstimateContrast"]], "estimatemodel (class in mia_processes.bricks.stat.spm.model)": [[155, "mia_processes.bricks.stat.spm.model.EstimateModel"]], "level1design (class in mia_processes.bricks.stat.spm.model)": [[155, "mia_processes.bricks.stat.spm.model.Level1Design"]], "multipleregressiondesign (class in mia_processes.bricks.stat.spm.model)": [[155, "mia_processes.bricks.stat.spm.model.MultipleRegressionDesign"]], "onesamplettestdesign (class in mia_processes.bricks.stat.spm.model)": [[155, "mia_processes.bricks.stat.spm.model.OneSampleTTestDesign"]], "pairedttestdesign (class in mia_processes.bricks.stat.spm.model)": [[155, "mia_processes.bricks.stat.spm.model.PairedTTestDesign"]], "twosamplettestdesign (class in mia_processes.bricks.stat.spm.model)": [[155, "mia_processes.bricks.stat.spm.model.TwoSampleTTestDesign"]], "__init__() (mia_processes.bricks.stat.spm.model.estimatecontrast method)": [[155, "mia_processes.bricks.stat.spm.model.EstimateContrast.__init__"]], "__init__() (mia_processes.bricks.stat.spm.model.estimatemodel method)": [[155, "mia_processes.bricks.stat.spm.model.EstimateModel.__init__"]], "__init__() (mia_processes.bricks.stat.spm.model.level1design method)": [[155, "mia_processes.bricks.stat.spm.model.Level1Design.__init__"]], "__init__() (mia_processes.bricks.stat.spm.model.multipleregressiondesign method)": [[155, "mia_processes.bricks.stat.spm.model.MultipleRegressionDesign.__init__"]], "__init__() (mia_processes.bricks.stat.spm.model.onesamplettestdesign method)": [[155, "mia_processes.bricks.stat.spm.model.OneSampleTTestDesign.__init__"]], "__init__() (mia_processes.bricks.stat.spm.model.pairedttestdesign method)": [[155, "mia_processes.bricks.stat.spm.model.PairedTTestDesign.__init__"]], "__init__() (mia_processes.bricks.stat.spm.model.twosamplettestdesign method)": [[155, "mia_processes.bricks.stat.spm.model.TwoSampleTTestDesign.__init__"]], "get_covariates() (in module mia_processes.bricks.stat.spm.model)": [[155, "mia_processes.bricks.stat.spm.model.get_covariates"]], "list_outputs() (mia_processes.bricks.stat.spm.model.estimatecontrast method)": [[155, "mia_processes.bricks.stat.spm.model.EstimateContrast.list_outputs"]], "list_outputs() (mia_processes.bricks.stat.spm.model.estimatemodel method)": [[155, "mia_processes.bricks.stat.spm.model.EstimateModel.list_outputs"]], "list_outputs() (mia_processes.bricks.stat.spm.model.level1design method)": [[155, "mia_processes.bricks.stat.spm.model.Level1Design.list_outputs"]], "list_outputs() (mia_processes.bricks.stat.spm.model.multipleregressiondesign method)": [[155, "mia_processes.bricks.stat.spm.model.MultipleRegressionDesign.list_outputs"]], "list_outputs() (mia_processes.bricks.stat.spm.model.onesamplettestdesign method)": [[155, "mia_processes.bricks.stat.spm.model.OneSampleTTestDesign.list_outputs"]], "list_outputs() (mia_processes.bricks.stat.spm.model.pairedttestdesign method)": [[155, "mia_processes.bricks.stat.spm.model.PairedTTestDesign.list_outputs"]], "list_outputs() (mia_processes.bricks.stat.spm.model.twosamplettestdesign method)": [[155, "mia_processes.bricks.stat.spm.model.TwoSampleTTestDesign.list_outputs"]], "mia_processes.bricks.stat.spm": [[155, "module-mia_processes.bricks.stat.spm"]], "mia_processes.bricks.stat.spm.model": [[155, "module-mia_processes.bricks.stat.spm.model"]], "run_process_mia() (mia_processes.bricks.stat.spm.model.estimatecontrast method)": [[155, "mia_processes.bricks.stat.spm.model.EstimateContrast.run_process_mia"]], "run_process_mia() (mia_processes.bricks.stat.spm.model.estimatemodel method)": [[155, "mia_processes.bricks.stat.spm.model.EstimateModel.run_process_mia"]], "run_process_mia() (mia_processes.bricks.stat.spm.model.level1design method)": [[155, "mia_processes.bricks.stat.spm.model.Level1Design.run_process_mia"]], "run_process_mia() (mia_processes.bricks.stat.spm.model.multipleregressiondesign method)": [[155, "mia_processes.bricks.stat.spm.model.MultipleRegressionDesign.run_process_mia"]], "run_process_mia() (mia_processes.bricks.stat.spm.model.onesamplettestdesign method)": [[155, "mia_processes.bricks.stat.spm.model.OneSampleTTestDesign.run_process_mia"]], "run_process_mia() (mia_processes.bricks.stat.spm.model.pairedttestdesign method)": [[155, "mia_processes.bricks.stat.spm.model.PairedTTestDesign.run_process_mia"]], "run_process_mia() (mia_processes.bricks.stat.spm.model.twosamplettestdesign method)": [[155, "mia_processes.bricks.stat.spm.model.TwoSampleTTestDesign.run_process_mia"]], "concat_to_list (class in mia_processes.bricks.tools.tools)": [[156, "mia_processes.bricks.tools.tools.Concat_to_list"]], "concat_to_list_of_list (class in mia_processes.bricks.tools.tools)": [[156, "mia_processes.bricks.tools.tools.Concat_to_list_of_list"]], "delete_data (class in mia_processes.bricks.tools.tools)": [[156, "mia_processes.bricks.tools.tools.Delete_data"]], "files_to_list (class in mia_processes.bricks.tools.tools)": [[156, "mia_processes.bricks.tools.tools.Files_To_List"]], "filter_files_list (class in mia_processes.bricks.tools.tools)": [[156, "mia_processes.bricks.tools.tools.Filter_Files_List"]], "find_in_list (class in mia_processes.bricks.tools.tools)": [[156, "mia_processes.bricks.tools.tools.Find_In_List"]], "get_conditions_from_csv (class in mia_processes.bricks.tools.tools)": [[156, "mia_processes.bricks.tools.tools.Get_Conditions_From_csv"]], "get_patient_name (class in mia_processes.bricks.tools.tools)": [[156, "mia_processes.bricks.tools.tools.Get_Patient_Name"]], "import_data (class in mia_processes.bricks.tools.tools)": [[156, "mia_processes.bricks.tools.tools.Import_Data"]], "input_filter (class in mia_processes.bricks.tools.tools)": [[156, "mia_processes.bricks.tools.tools.Input_Filter"]], "list_duplicate (class in mia_processes.bricks.tools.tools)": [[156, "mia_processes.bricks.tools.tools.List_Duplicate"]], "list_to_file (class in mia_processes.bricks.tools.tools)": [[156, "mia_processes.bricks.tools.tools.List_To_File"]], "make_a_list (class in mia_processes.bricks.tools.tools)": [[156, "mia_processes.bricks.tools.tools.Make_A_List"]], "make_cvr_reg_physio (class in mia_processes.bricks.tools.tools)": [[156, "mia_processes.bricks.tools.tools.Make_CVR_reg_physio"]], "__init__() (mia_processes.bricks.tools.tools.concat_to_list method)": [[156, "mia_processes.bricks.tools.tools.Concat_to_list.__init__"]], "__init__() (mia_processes.bricks.tools.tools.concat_to_list_of_list method)": [[156, "mia_processes.bricks.tools.tools.Concat_to_list_of_list.__init__"]], "__init__() (mia_processes.bricks.tools.tools.delete_data method)": [[156, "mia_processes.bricks.tools.tools.Delete_data.__init__"]], "__init__() (mia_processes.bricks.tools.tools.files_to_list method)": [[156, "mia_processes.bricks.tools.tools.Files_To_List.__init__"]], "__init__() (mia_processes.bricks.tools.tools.filter_files_list method)": [[156, "mia_processes.bricks.tools.tools.Filter_Files_List.__init__"]], "__init__() (mia_processes.bricks.tools.tools.find_in_list method)": [[156, "mia_processes.bricks.tools.tools.Find_In_List.__init__"]], "__init__() (mia_processes.bricks.tools.tools.get_conditions_from_csv method)": [[156, "mia_processes.bricks.tools.tools.Get_Conditions_From_csv.__init__"]], "__init__() (mia_processes.bricks.tools.tools.get_patient_name method)": [[156, "mia_processes.bricks.tools.tools.Get_Patient_Name.__init__"]], "__init__() (mia_processes.bricks.tools.tools.import_data method)": [[156, "mia_processes.bricks.tools.tools.Import_Data.__init__"]], "__init__() (mia_processes.bricks.tools.tools.input_filter method)": [[156, "mia_processes.bricks.tools.tools.Input_Filter.__init__"]], "__init__() (mia_processes.bricks.tools.tools.list_duplicate method)": [[156, "mia_processes.bricks.tools.tools.List_Duplicate.__init__"]], "__init__() (mia_processes.bricks.tools.tools.list_to_file method)": [[156, "mia_processes.bricks.tools.tools.List_To_File.__init__"]], "__init__() (mia_processes.bricks.tools.tools.make_a_list method)": [[156, "mia_processes.bricks.tools.tools.Make_A_List.__init__"]], "__init__() (mia_processes.bricks.tools.tools.make_cvr_reg_physio method)": [[156, "mia_processes.bricks.tools.tools.Make_CVR_reg_physio.__init__"]], "gaussfir() (mia_processes.bricks.tools.tools.make_cvr_reg_physio method)": [[156, "mia_processes.bricks.tools.tools.Make_CVR_reg_physio.gaussfir"]], "gfb_conv() (mia_processes.bricks.tools.tools.make_cvr_reg_physio method)": [[156, "mia_processes.bricks.tools.tools.Make_CVR_reg_physio.gfb_conv"]], "list_outputs() (mia_processes.bricks.tools.tools.concat_to_list method)": [[156, "mia_processes.bricks.tools.tools.Concat_to_list.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.concat_to_list_of_list method)": [[156, "mia_processes.bricks.tools.tools.Concat_to_list_of_list.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.delete_data method)": [[156, "mia_processes.bricks.tools.tools.Delete_data.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.files_to_list method)": [[156, "mia_processes.bricks.tools.tools.Files_To_List.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.filter_files_list method)": [[156, "mia_processes.bricks.tools.tools.Filter_Files_List.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.find_in_list method)": [[156, "mia_processes.bricks.tools.tools.Find_In_List.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.get_conditions_from_csv method)": [[156, "mia_processes.bricks.tools.tools.Get_Conditions_From_csv.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.get_patient_name method)": [[156, "mia_processes.bricks.tools.tools.Get_Patient_Name.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.import_data method)": [[156, "mia_processes.bricks.tools.tools.Import_Data.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.input_filter method)": [[156, "mia_processes.bricks.tools.tools.Input_Filter.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.list_duplicate method)": [[156, "mia_processes.bricks.tools.tools.List_Duplicate.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.list_to_file method)": [[156, "mia_processes.bricks.tools.tools.List_To_File.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.make_a_list method)": [[156, "mia_processes.bricks.tools.tools.Make_A_List.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.make_cvr_reg_physio method)": [[156, "mia_processes.bricks.tools.tools.Make_CVR_reg_physio.list_outputs"]], "mia_processes.bricks.tools": [[156, "module-mia_processes.bricks.tools"]], "mia_processes.bricks.tools.tools": [[156, "module-mia_processes.bricks.tools.tools"]], "run_process_mia() (mia_processes.bricks.tools.tools.concat_to_list method)": [[156, "mia_processes.bricks.tools.tools.Concat_to_list.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.concat_to_list_of_list method)": [[156, "mia_processes.bricks.tools.tools.Concat_to_list_of_list.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.delete_data method)": [[156, "mia_processes.bricks.tools.tools.Delete_data.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.files_to_list method)": [[156, "mia_processes.bricks.tools.tools.Files_To_List.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.filter_files_list method)": [[156, "mia_processes.bricks.tools.tools.Filter_Files_List.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.find_in_list method)": [[156, "mia_processes.bricks.tools.tools.Find_In_List.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.get_conditions_from_csv method)": [[156, "mia_processes.bricks.tools.tools.Get_Conditions_From_csv.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.get_patient_name method)": [[156, "mia_processes.bricks.tools.tools.Get_Patient_Name.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.import_data method)": [[156, "mia_processes.bricks.tools.tools.Import_Data.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.input_filter method)": [[156, "mia_processes.bricks.tools.tools.Input_Filter.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.list_duplicate method)": [[156, "mia_processes.bricks.tools.tools.List_Duplicate.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.list_to_file method)": [[156, "mia_processes.bricks.tools.tools.List_To_File.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.make_a_list method)": [[156, "mia_processes.bricks.tools.tools.Make_A_List.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.make_cvr_reg_physio method)": [[156, "mia_processes.bricks.tools.tools.Make_CVR_reg_physio.run_process_mia"]], "spm_hrf() (mia_processes.bricks.tools.tools.make_cvr_reg_physio method)": [[156, "mia_processes.bricks.tools.tools.Make_CVR_reg_physio.spm_hrf"]], "mia_processes.pipelines": [[157, "module-mia_processes.pipelines"]], "co2_inhalation (class in mia_processes.pipelines.cerebvascularreact.co2_inhalation)": [[158, "mia_processes.pipelines.CerebVascularReact.co2_inhalation.CO2_inhalation"]], "mia_processes.pipelines.cerebvascularreact": [[158, "module-mia_processes.pipelines.CerebVascularReact"]], "mia_processes.pipelines.cerebvascularreact.co2_inhalation": [[158, "module-mia_processes.pipelines.CerebVascularReact.co2_inhalation"]], "pipeline_definition() (mia_processes.pipelines.cerebvascularreact.co2_inhalation.co2_inhalation method)": [[158, "mia_processes.pipelines.CerebVascularReact.co2_inhalation.CO2_inhalation.pipeline_definition"]], "dwi_whole_brain_tractography (class in mia_processes.pipelines.dwitractography.dwi_whole_brain_tractography)": [[159, "mia_processes.pipelines.DWITractography.dwi_whole_brain_tractography.Dwi_whole_brain_tractography"]], "mia_processes.pipelines.dwitractography": [[159, "module-mia_processes.pipelines.DWITractography"]], "mia_processes.pipelines.dwitractography.dwi_whole_brain_tractography": [[159, "module-mia_processes.pipelines.DWITractography.dwi_whole_brain_tractography"]], "pipeline_definition() (mia_processes.pipelines.dwitractography.dwi_whole_brain_tractography.dwi_whole_brain_tractography method)": [[159, "mia_processes.pipelines.DWITractography.dwi_whole_brain_tractography.Dwi_whole_brain_tractography.pipeline_definition"]], "anat_airmask (class in mia_processes.pipelines.preprocess.anat_airmask)": [[160, "mia_processes.pipelines.preprocess.anat_airmask.Anat_airmask"]], "anat_headmask (class in mia_processes.pipelines.preprocess.anat_headmask)": [[160, "mia_processes.pipelines.preprocess.anat_headmask.Anat_headmask"]], "anat_mni_tpms (class in mia_processes.pipelines.preprocess.anat_mni_tpms)": [[160, "mia_processes.pipelines.preprocess.anat_mni_tpms.Anat_mni_tpms"]], "anat_skullstrip (class in mia_processes.pipelines.preprocess.anat_skullstrip)": [[160, "mia_processes.pipelines.preprocess.anat_skullstrip.Anat_skullstrip"]], "anat_skullstrip_synthstrip (class in mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip)": [[160, "mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip.Anat_skullstrip_synthstrip"]], "anat_spatial_norm (class in mia_processes.pipelines.preprocess.anat_spatial_norm)": [[160, "mia_processes.pipelines.preprocess.anat_spatial_norm.Anat_spatial_norm"]], "bold_hmc (class in mia_processes.pipelines.preprocess.bold_hmc)": [[160, "mia_processes.pipelines.preprocess.bold_hmc.Bold_hmc"]], "bold_mni_align (class in mia_processes.pipelines.preprocess.bold_mni_align)": [[160, "mia_processes.pipelines.preprocess.bold_mni_align.Bold_mni_align"]], "bold_spatial_preprocessing1 (class in mia_processes.pipelines.preprocess.bold_spatial_preprocessing1)": [[160, "mia_processes.pipelines.preprocess.bold_spatial_preprocessing1.Bold_spatial_preprocessing1"]], "bold_spatial_preprocessing2 (class in mia_processes.pipelines.preprocess.bold_spatial_preprocessing2)": [[160, "mia_processes.pipelines.preprocess.bold_spatial_preprocessing2.Bold_spatial_preprocessing2"]], "dwi_fod_msmt_csd (class in mia_processes.pipelines.preprocess.dwi_fod_msmt_csd)": [[160, "mia_processes.pipelines.preprocess.dwi_fod_msmt_csd.Dwi_fod_msmt_csd"]], "dwi_preprocessing (class in mia_processes.pipelines.preprocess.dwi_preprocessing)": [[160, "mia_processes.pipelines.preprocess.dwi_preprocessing.Dwi_preprocessing"]], "spatial_mask (class in mia_processes.pipelines.preprocess.spatial_mask)": [[160, "mia_processes.pipelines.preprocess.spatial_mask.Spatial_mask"]], "mia_processes.pipelines.preprocess": [[160, "module-mia_processes.pipelines.preprocess"]], "mia_processes.pipelines.preprocess.anat_airmask": [[160, "module-mia_processes.pipelines.preprocess.anat_airmask"]], "mia_processes.pipelines.preprocess.anat_headmask": [[160, "module-mia_processes.pipelines.preprocess.anat_headmask"]], "mia_processes.pipelines.preprocess.anat_mni_tpms": [[160, "module-mia_processes.pipelines.preprocess.anat_mni_tpms"]], "mia_processes.pipelines.preprocess.anat_skullstrip": [[160, "module-mia_processes.pipelines.preprocess.anat_skullstrip"]], "mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip": [[160, "module-mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip"]], "mia_processes.pipelines.preprocess.anat_spatial_norm": [[160, "module-mia_processes.pipelines.preprocess.anat_spatial_norm"]], "mia_processes.pipelines.preprocess.bold_hmc": [[160, "module-mia_processes.pipelines.preprocess.bold_hmc"]], "mia_processes.pipelines.preprocess.bold_mni_align": [[160, "module-mia_processes.pipelines.preprocess.bold_mni_align"]], "mia_processes.pipelines.preprocess.bold_spatial_preprocessing1": [[160, "module-mia_processes.pipelines.preprocess.bold_spatial_preprocessing1"]], "mia_processes.pipelines.preprocess.bold_spatial_preprocessing2": [[160, "module-mia_processes.pipelines.preprocess.bold_spatial_preprocessing2"]], "mia_processes.pipelines.preprocess.dwi_fod_msmt_csd": [[160, "module-mia_processes.pipelines.preprocess.dwi_fod_msmt_csd"]], "mia_processes.pipelines.preprocess.dwi_preprocessing": [[160, "module-mia_processes.pipelines.preprocess.dwi_preprocessing"]], "mia_processes.pipelines.preprocess.spatial_mask": [[160, "module-mia_processes.pipelines.preprocess.spatial_mask"]], "pipeline_definition() (mia_processes.pipelines.preprocess.anat_airmask.anat_airmask method)": [[160, "mia_processes.pipelines.preprocess.anat_airmask.Anat_airmask.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.anat_headmask.anat_headmask method)": [[160, "mia_processes.pipelines.preprocess.anat_headmask.Anat_headmask.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.anat_mni_tpms.anat_mni_tpms method)": [[160, "mia_processes.pipelines.preprocess.anat_mni_tpms.Anat_mni_tpms.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.anat_skullstrip.anat_skullstrip method)": [[160, "mia_processes.pipelines.preprocess.anat_skullstrip.Anat_skullstrip.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip.anat_skullstrip_synthstrip method)": [[160, "mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip.Anat_skullstrip_synthstrip.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.anat_spatial_norm.anat_spatial_norm method)": [[160, "mia_processes.pipelines.preprocess.anat_spatial_norm.Anat_spatial_norm.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.bold_hmc.bold_hmc method)": [[160, "mia_processes.pipelines.preprocess.bold_hmc.Bold_hmc.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.bold_mni_align.bold_mni_align method)": [[160, "mia_processes.pipelines.preprocess.bold_mni_align.Bold_mni_align.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.bold_spatial_preprocessing1.bold_spatial_preprocessing1 method)": [[160, "mia_processes.pipelines.preprocess.bold_spatial_preprocessing1.Bold_spatial_preprocessing1.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.bold_spatial_preprocessing2.bold_spatial_preprocessing2 method)": [[160, "mia_processes.pipelines.preprocess.bold_spatial_preprocessing2.Bold_spatial_preprocessing2.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.dwi_fod_msmt_csd.dwi_fod_msmt_csd method)": [[160, "mia_processes.pipelines.preprocess.dwi_fod_msmt_csd.Dwi_fod_msmt_csd.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.dwi_preprocessing.dwi_preprocessing method)": [[160, "mia_processes.pipelines.preprocess.dwi_preprocessing.Dwi_preprocessing.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.spatial_mask.spatial_mask method)": [[160, "mia_processes.pipelines.preprocess.spatial_mask.Spatial_mask.pipeline_definition"]], "anat_mriqc (class in mia_processes.pipelines.qualitycontrol.anat_mriqc)": [[161, "mia_processes.pipelines.qualityControl.anat_mriqc.Anat_mriqc"]], "bold_mriqc (class in mia_processes.pipelines.qualitycontrol.bold_mriqc)": [[161, "mia_processes.pipelines.qualityControl.bold_mriqc.Bold_mriqc"]], "mia_processes.pipelines.qualitycontrol": [[161, "module-mia_processes.pipelines.qualityControl"]], "mia_processes.pipelines.qualitycontrol.anat_mriqc": [[161, "module-mia_processes.pipelines.qualityControl.anat_mriqc"]], "mia_processes.pipelines.qualitycontrol.bold_mriqc": [[161, "module-mia_processes.pipelines.qualityControl.bold_mriqc"]], "pipeline_definition() (mia_processes.pipelines.qualitycontrol.anat_mriqc.anat_mriqc method)": [[161, "mia_processes.pipelines.qualityControl.anat_mriqc.Anat_mriqc.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.qualitycontrol.bold_mriqc.bold_mriqc method)": [[161, "mia_processes.pipelines.qualityControl.bold_mriqc.Bold_mriqc.pipeline_definition"]], "bold_iqms (class in mia_processes.pipelines.reports.bold_iqms)": [[162, "mia_processes.pipelines.reports.bold_iqms.Bold_iqms"]], "extract_roi_param (class in mia_processes.pipelines.reports.extract_roi_param)": [[162, "mia_processes.pipelines.reports.extract_roi_param.Extract_roi_param"]], "mia_processes.pipelines.reports": [[162, "module-mia_processes.pipelines.reports"]], "mia_processes.pipelines.reports.bold_iqms": [[162, "module-mia_processes.pipelines.reports.bold_iqms"]], "mia_processes.pipelines.reports.extract_roi_param": [[162, "module-mia_processes.pipelines.reports.extract_roi_param"]], "pipeline_definition() (mia_processes.pipelines.reports.bold_iqms.bold_iqms method)": [[162, "mia_processes.pipelines.reports.bold_iqms.Bold_iqms.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.reports.extract_roi_param.extract_roi_param method)": [[162, "mia_processes.pipelines.reports.extract_roi_param.Extract_roi_param.pipeline_definition"]], "bold_stat_cvr (class in mia_processes.pipelines.stat.bold_stat_cvr)": [[163, "mia_processes.pipelines.stat.bold_stat_cvr.Bold_stat_cvr"]], "mia_processes.pipelines.stat": [[163, "module-mia_processes.pipelines.stat"]], "mia_processes.pipelines.stat.bold_stat_cvr": [[163, "module-mia_processes.pipelines.stat.bold_stat_cvr"]], "pipeline_definition() (mia_processes.pipelines.stat.bold_stat_cvr.bold_stat_cvr method)": [[163, "mia_processes.pipelines.stat.bold_stat_cvr.Bold_stat_cvr.pipeline_definition"]], "pagenumcanvas (class in mia_processes.utils.tools)": [[164, "mia_processes.utils.tools.PageNumCanvas"]], "report (class in mia_processes.utils.report)": [[164, "mia_processes.utils.report.Report"]], "reportline (class in mia_processes.utils.tools)": [[164, "mia_processes.utils.tools.ReportLine"]], "__init__() (mia_processes.utils.report.report method)": [[164, "mia_processes.utils.report.Report.__init__"]], "__init__() (mia_processes.utils.tools.pagenumcanvas method)": [[164, "mia_processes.utils.tools.PageNumCanvas.__init__"]], "__init__() (mia_processes.utils.tools.reportline method)": [[164, "mia_processes.utils.tools.ReportLine.__init__"]], "checkfileext() (in module mia_processes.utils.tools)": [[164, "mia_processes.utils.tools.checkFileExt"]], "check_orientations() (in module mia_processes.utils.tools)": [[164, "mia_processes.utils.tools.check_orientations"]], "co2_inhal_cvr_make_report() (mia_processes.utils.report.report method)": [[164, "mia_processes.utils.report.Report.co2_inhal_cvr_make_report"]], "del_dbfieldvalue() (in module mia_processes.utils.tools)": [[164, "mia_processes.utils.tools.del_dbFieldValue"]], "dict4runtime_update() (in module mia_processes.utils.tools)": [[164, "mia_processes.utils.tools.dict4runtime_update"]], "draw() (mia_processes.utils.tools.reportline method)": [[164, "mia_processes.utils.tools.ReportLine.draw"]], "draw_page_number() (mia_processes.utils.tools.pagenumcanvas method)": [[164, "mia_processes.utils.tools.PageNumCanvas.draw_page_number"]], "get_dbfieldvalue() (in module mia_processes.utils.tools)": [[164, "mia_processes.utils.tools.get_dbFieldValue"]], "get_iqms_data() (mia_processes.utils.report.report method)": [[164, "mia_processes.utils.report.Report.get_iqms_data"]], "mia_processes.utils": [[164, "module-mia_processes.utils"]], "mia_processes.utils.report": [[164, "module-mia_processes.utils.report"]], "mia_processes.utils.tools": [[164, "module-mia_processes.utils.tools"]], "mriqc_anat_make_report() (mia_processes.utils.report.report method)": [[164, "mia_processes.utils.report.Report.mriqc_anat_make_report"]], "mriqc_func_make_report() (mia_processes.utils.report.report method)": [[164, "mia_processes.utils.report.Report.mriqc_func_make_report"]], "mriqc_get_all_run() (in module mia_processes.utils.tools)": [[164, "mia_processes.utils.tools.mriqc_get_all_run"]], "mriqc_group_iqms_tsv() (in module mia_processes.utils.tools)": [[164, "mia_processes.utils.tools.mriqc_group_iqms_tsv"]], "mriqc_group_make_report() (mia_processes.utils.report.report method)": [[164, "mia_processes.utils.report.Report.mriqc_group_make_report"]], "plot_boxplot_points() (in module mia_processes.utils.tools)": [[164, "mia_processes.utils.tools.plot_boxplot_points"]], "plot_qi2() (in module mia_processes.utils.tools)": [[164, "mia_processes.utils.tools.plot_qi2"]], "plot_segmentation() (in module mia_processes.utils.tools)": [[164, "mia_processes.utils.tools.plot_segmentation"]], "plot_slice_planes() (in module mia_processes.utils.tools)": [[164, "mia_processes.utils.tools.plot_slice_planes"]], "save() (mia_processes.utils.tools.pagenumcanvas method)": [[164, "mia_processes.utils.tools.PageNumCanvas.save"]], "set_dbfieldvalue() (in module mia_processes.utils.tools)": [[164, "mia_processes.utils.tools.set_dbFieldValue"]], "showpage() (mia_processes.utils.tools.pagenumcanvas method)": [[164, "mia_processes.utils.tools.PageNumCanvas.showPage"]]}})