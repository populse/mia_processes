Search.setIndex({"alltitles": {"3D Gaussian smoothing of image volumes": [[29, "d-gaussian-smoothing-of-image-volumes"], [83, "d-gaussian-smoothing-of-image-volumes"]], "3D Whole Brain MRI Segmentation using AssemblyNet (volBrain)": [[84, "d-whole-brain-mri-segmentation-using-assemblynet-volbrain"]], "AffineInitializer brick": [[13, "affineinitializer-brick"]], "Align together scans of different modalities": [[77, "align-together-scans-of-different-modalities"]], "An example of fMRI data pre-processing": [[144, "an-example-of-fmri-data-pre-processing"], [145, "an-example-of-fmri-data-pre-processing"], [146, "an-example-of-fmri-data-pre-processing"]], "AnatIQMs brick": [[87, "anatiqms-brick"]], "Anat_airmask pipeline": [[136, "anat-airmask-pipeline"]], "Anat_headmask pipeline": [[137, "anat-headmask-pipeline"]], "Anat_mni_tpms pipeline": [[138, "anat-mni-tpms-pipeline"]], "Anat_mriqc pipeline": [[151, "anat-mriqc-pipeline"]], "Anat_skullstrip pipeline": [[139, "anat-skullstrip-pipeline"]], "Anat_skullstrip_synthstrip pipeline": [[140, "anat-skullstrip-synthstrip-pipeline"]], "Anat_spatial_norm pipeline": [[141, "anat-spatial-norm-pipeline"]], "Apply a binary mask to an image": [[68, "apply-a-binary-mask-to-an-image"]], "Apply bias field correction to an input file using the bias image": [[56, "apply-bias-field-correction-to-an-input-file-using-the-bias-image"]], "Apply spatial transformations or reslice images": [[48, "apply-spatial-transformations-or-reslice-images"]], "ApplyBiasCorrection brick": [[56, "applybiascorrection-brick"]], "ApplyTransforms brick": [[14, "applytransforms-brick"]], "ArtifactMask brick": [[57, "artifactmask-brick"]], "AssemblyNetDocker brick": [[84, "assemblynetdocker-brick"]], "Automask brick": [[0, "automask-brick"]], "Bet brick": [[22, "bet-brick"]], "BetSurfacesExtraction brick": [[23, "betsurfacesextraction-brick"]], "Bias correction and skull stripping of a structural image": [[139, "bias-correction-and-skull-stripping-of-a-structural-image"]], "Binarize an input volume (or volume-encoded surface file)": [[19, "binarize-an-input-volume-or-volume-encoded-surface-file"]], "Binarize brick": [[19, "binarize-brick"], [58, "binarize-brick"]], "Binarizes the input image applying the given lower threshold": [[58, "binarizes-the-input-image-applying-the-given-lower-threshold"]], "BoldIQMsPlot brick": [[89, "boldiqmsplot-brick"]], "BoldQMs brick": [[88, "boldqms-brick"]], "Bold_hmc pipeline": [[142, "bold-hmc-pipeline"]], "Bold_iqms pipeline": [[154, "bold-iqms-pipeline"]], "Bold_mni_align pipeline": [[143, "bold-mni-align-pipeline"]], "Bold_mriqc pipeline": [[152, "bold-mriqc-pipeline"]], "Bold_signals_roi pipeline": [[153, "bold-signals-roi-pipeline"]], "Bold_spatial_preprocessing1 pipeline": [[144, "bold-spatial-preprocessing1-pipeline"]], "Bold_spatial_preprocessing2 pipeline": [[145, "bold-spatial-preprocessing2-pipeline"]], "Bold_spatial_preprocessing3 pipeline": [[146, "bold-spatial-preprocessing3-pipeline"]], "Bold_stat_cvr brick": [[156, "bold-stat-cvr-brick"]], "Brain Extraction with BET (FSL)": [[22, "brain-extraction-with-bet-fsl"]], "Brain Tractography with MRTrix": [[132, "brain-tractography-with-mrtrix"]], "Brain tissue segmentation using FAST (FSL)": [[27, "brain-tissue-segmentation-using-fast-fsl"]], "Bring back every slice of a BOLD image to the reference slice time.": [[82, "bring-back-every-slice-of-a-bold-image-to-the-reference-slice-time"]], "CO2_inhalation pipeline": [[131, "co2-inhalation-pipeline"]], "Calc brick": [[1, "calc-brick"]], "CalcDropTRs brick": [[2, "calcdroptrs-brick"]], "Calculate the FD (framewise displacement) as in [Power2012]": [[92, "calculate-the-fd-framewise-displacement-as-in-power2012"]], "CarpetParcellation brick": [[90, "carpetparcellation-brick"]], "Cerebrovascular reactivity (CVR) evaluation under CO2 challenge": [[131, "cerebrovascular-reactivity-cvr-evaluation-under-co2-challenge"]], "Clip the intensity range as prescribed by the percentiles": [[67, "clip-the-intensity-range-as-prescribed-by-the-percentiles"]], "Compute head mask from skull stripped structural image using Denoise from Dipy": [[137, "compute-head-mask-from-skull-stripped-structural-image-using-denoise-from-dipy"]], "Compute iteratively the lateralization of activation in functional MRI data.": [[93, "compute-iteratively-the-lateralization-of-activation-in-functional-mri-data"]], "Compute metrics from tensors": [[53, "compute-metrics-from-tensors"]], "Compute no-reference IQMs (image quality metrics) from functional (BOLD)": [[154, "compute-no-reference-iqms-image-quality-metrics-from-functional-bold"]], "Compute rotation mask, air mask, artifact mask and hat mask for structural data following step 1 from [Mortamet2009]": [[136, "compute-rotation-mask-air-mask-artifact-mask-and-hat-mask-for-structural-data-following-step-1-from-mortamet2009"]], "Compute summary statistic on image intensities along a specified axis of a single image": [[47, "compute-summary-statistic-on-image-intensities-along-a-specified-axis-of-a-single-image"]], "Compute the Arterial Input Function (AIF) from dynamic MRI perfusion data": [[127, "compute-the-arterial-input-function-aif-from-dynamic-mri-perfusion-data"]], "Compute the rotation mask image": [[72, "compute-the-rotation-mask-image"]], "ComputeBrainVolume brick": [[30, "computebrainvolume-brick"]], "ComputeDKI brick": [[17, "computedki-brick"]], "ComputeDVARS brick": [[91, "computedvars-brick"]], "Computes DVARS (derivative of variance)": [[91, "computes-dvars-derivative-of-variance"]], "Computes FWHMs using AFNI FWHMx": [[4, "computes-fwhms-using-afni-fwhmx"]], "Computes a quality index for each sub-brick (3D volumes for each TR) in a 3D+time dataset using AFNI 3dTqual": [[7, "computes-a-quality-index-for-each-sub-brick-3d-volumes-for-each-tr-in-a-3d-time-dataset-using-afni-3dtqual"]], "Computes a threshold from the histogram of the magnitude gradient image using a segmentation of the input image": [[65, "computes-a-threshold-from-the-histogram-of-the-magnitude-gradient-image-using-a-segmentation-of-the-input-image"]], "Computes artifact mask": [[57, "computes-artifact-mask"]], "Computes the anatomical Image Quality Metrics (IQMs) as defined in mriqc v22.06": [[87, "computes-the-anatomical-image-quality-metrics-iqms-as-defined-in-mriqc-v22-06"]], "Computes the deformation that best aligns the model (atlas) with an image, then if necessary, apply this deformation to spatially normalize images": [[80, "computes-the-deformation-that-best-aligns-the-model-atlas-with-an-image-then-if-necessary-apply-this-deformation-to-spatially-normalize-images"]], "Computes the functional Image Quality Metrics (IQMs) as defined in mriqc v22.06": [[88, "computes-the-functional-image-quality-metrics-iqms-as-defined-in-mriqc-v22-06"]], "Computes the number of spikes": [[103, "computes-the-number-of-spikes"]], "Computes the time-course SNR for a time series": [[74, "computes-the-time-course-snr-for-a-time-series"]], "Concat_to_list  brick": [[111, "concat-to-list-brick"]], "Concat_to_list_of_list brick": [[112, "concat-to-list-of-list-brick"]], "Concatenate several images into one": [[43, "concatenate-several-images-into-one"]], "Concatenating multiple DWI series": [[34, "concatenating-multiple-dwi-series"]], "Conform T1w image": [[59, "conform-t1w-image"]], "ConformImage brick": [[59, "conformimage-brick"]], "ConstrainedSphericalDeconvolution brick": [[31, "constrainedsphericaldeconvolution-brick"]], "ConvROI brick": [[60, "convroi-brick"]], "ConvertXFM brick": [[24, "convertxfm-brick"]], "Coregister brick": [[77, "coregister-brick"]], "Create SPM design for multiple regression (SPM12 fMRI factorial Design)": [[107, "create-spm-design-for-multiple-regression-spm12-fmri-factorial-design"]], "Create SPM design for one sample t-test (SPM12 fMRI factorial Design)": [[108, "create-spm-design-for-one-sample-t-test-spm12-fmri-factorial-design"]], "Create SPM design for paired t-test (SPM12 fMRI factorial Design)": [[109, "create-spm-design-for-paired-t-test-spm12-fmri-factorial-design"]], "Create SPM design for two sample t-test (SPM12 fMRI factorial Design)": [[110, "create-spm-design-for-two-sample-t-test-spm12-fmri-factorial-design"]], "Create a brain-extraction workflow using SynthStrip (Freesurfer)": [[140, "create-a-brain-extraction-workflow-using-synthstrip-freesurfer"]], "Create a brain-only mask of the image using AFNI 3dAutomask": [[0, "create-a-brain-only-mask-of-the-image-using-afni-3dautomask"]], "Create tissue boundaries with a T1w and registratiojn in DWI space": [[149, "create-tissue-boundaries-with-a-t1w-and-registratiojn-in-dwi-space"]], "DWI preprocessing using a reverse-phase encoded b0": [[148, "dwi-preprocessing-using-a-reverse-phase-encoded-b0"]], "DWIBiasCorrect brick": [[32, "dwibiascorrect-brick"]], "DWIBrainMask brick": [[33, "dwibrainmask-brick"]], "DWICat brick": [[34, "dwicat-brick"]], "DWIDenoise brick": [[35, "dwidenoise-brick"]], "DWIExtract brick": [[36, "dwiextract-brick"]], "DWIPreproc brick": [[37, "dwipreproc-brick"]], "Deconv_from_aif brick": [[113, "deconv-from-aif-brick"]], "Deconvolution of the tissue response curve with AIF": [[113, "deconvolution-of-the-tissue-response-curve-with-aif"]], "Delete data from database": [[114, "delete-data-from-database"]], "Delete_data brick": [[114, "delete-data-brick"]], "Denoise DWI data": [[35, "denoise-dwi-data"]], "Denoise brick": [[18, "denoise-brick"]], "Denoise image using Non-Local Means algorithm (NLMEANS)": [[18, "denoise-image-using-non-local-means-algorithm-nlmeans"]], "Deoblique dataset (ie transform dataset from oblique to cardinal) using AFNI 3drefit": [[8, "deoblique-dataset-ie-transform-dataset-from-oblique-to-cardinal-using-afni-3drefit"]], "Despike brick": [[3, "despike-brick"]], "Detect non-steady-state at the beginning of a bold 4D image": [[69, "detect-non-steady-state-at-the-beginning-of-a-bold-4d-image"]], "Diffusion tensor estimation": [[40, "diffusion-tensor-estimation"]], "Dilate brainmask, subtract from itself then generate the union of obtained crown mask and epi parcellation": [[90, "dilate-brainmask-subtract-from-itself-then-generate-the-union-of-obtained-crown-mask-and-epi-parcellation"]], "Drop volumes of bold datasets, using AFNI 3dcalc": [[2, "drop-volumes-of-bold-datasets-using-afni-3dcalc"]], "Dwi_fod_msmt_csd pipeline": [[147, "dwi-fod-msmt-csd-pipeline"]], "Dwi_preprocessing pipeline": [[148, "dwi-preprocessing-pipeline"]], "Dwi_tissue_boundaries pipeline": [[149, "dwi-tissue-boundaries-pipeline"]], "Dwi_whole_brain_tractograpy pipeline": [[132, "dwi-whole-brain-tractograpy-pipeline"]], "EditingTrack brick": [[38, "editingtrack-brick"]], "Enhance brick": [[61, "enhance-brick"]], "EpiReg brick": [[25, "epireg-brick"]], "Estimate DWI fiber orientation distribution (FOD)": [[147, "estimate-dwi-fiber-orientation-distribution-fod"]], "Estimate SNR using a segmentation file": [[62, "estimate-snr-using-a-segmentation-file"]], "Estimate contrasts of interest (SPM12 fMRI contrast manager)": [[104, "estimate-contrasts-of-interest-spm12-fmri-contrast-manager"]], "Estimate fibre orientation distributions (FOD)": [[31, "estimate-fibre-orientation-distributions-fod"]], "Estimate response function for spherical deconvolution using the Tournier algorithm": [[51, "estimate-response-function-for-spherical-deconvolution-using-the-tournier-algorithm"]], "Estimate response function(s) for spherical deconvolution using the Dhollander algorithm": [[50, "estimate-response-function-s-for-spherical-deconvolution-using-the-dhollander-algorithm"]], "EstimateConstrast brick": [[104, "estimateconstrast-brick"]], "EstimateModel brick": [[105, "estimatemodel-brick"]], "EstimateSNR brick": [[62, "estimatesnr-brick"]], "Extract a specific ROI from a segmentation file using labels": [[63, "extract-a-specific-roi-from-a-segmentation-file-using-labels"]], "Extract region of interest (ROI) from an image using fslroi (FSL)": [[26, "extract-region-of-interest-roi-from-an-image-using-fslroi-fsl"]], "Extract shell or b=0 volumes from DWI data": [[36, "extract-shell-or-b-0-volumes-from-dwi-data"]], "Extract signals from ROI using a segmentation file with label": [[64, "extract-signals-from-roi-using-a-segmentation-file-with-label"]], "Extract the peaks of a spherical harmonic function in each voxel": [[52, "extract-the-peaks-of-a-spherical-harmonic-function-in-each-voxel"]], "ExtractROI brick": [[26, "extractroi-brick"]], "ExtractROIbyLabel brick": [[63, "extractroibylabel-brick"]], "ExtractSignalROI brick": [[64, "extractsignalroi-brick"]], "Extract_roi_param pipeline": [[155, "extract-roi-param-pipeline"]], "FWHMx brick": [[4, "fwhmx-brick"]], "FastSegment brick": [[27, "fastsegment-brick"]], "Files_To_List brick": [[115, "files-to-list-brick"]], "Filter tracking data": [[39, "filter-tracking-data"]], "Filter_Files_List brick": [[116, "filter-files-list-brick"]], "FilteringTrack brick": [[39, "filteringtrack-brick"]], "Find_In_List brick": [[117, "find-in-list-brick"]], "FitTensor brick": [[40, "fittensor-brick"]], "Flirt brick": [[28, "flirt-brick"]], "FramewiseDisplacement brick": [[92, "framewisedisplacement-brick"]], "From 2 objects, generating a list containing all these objects": [[128, "from-2-objects-generating-a-list-containing-all-these-objects"]], "From 3 file names, generate a list containing all these file names": [[115, "from-3-file-names-generate-a-list-containing-all-these-file-names"]], "From a file name, generating a list containing this file name and the file name itself": [[125, "from-a-file-name-generating-a-list-containing-this-file-name-and-the-file-name-itself"]], "From a list of files, generation of a single file": [[126, "from-a-list-of-files-generation-of-a-single-file"]], "From a list of files, select the 1rst element that contains a pattern": [[117, "from-a-list-of-files-select-the-1rst-element-that-contains-a-pattern"]], "From a list of images resulting from a previous segmentation, produces a grey matter mask": [[150, "from-a-list-of-images-resulting-from-a-previous-segmentation-produces-a-grey-matter-mask"]], "GCOR brick": [[5, "gcor-brick"]], "GE2REC pipeline": [[133, "ge2rec-pipeline"]], "GE2REC_without_behavioural_data pipeline": [[134, "ge2rec-without-behavioural-data-pipeline"]], "GM_WM_Normalize brick": [[78, "gm-wm-normalize-brick"]], "Generate a five-tissues-type (5TT) segmented tissue image with FSL": [[42, "generate-a-five-tissues-type-5tt-segmented-tissue-image-with-fsl"]], "Generate a group report for mriqc pipeline": [[100, "generate-a-group-report-for-mriqc-pipeline"]], "Generate a mask image appropriate for seeding streamlines on the grey matter-white matter interface": [[41, "generate-a-mask-image-appropriate-for-seeding-streamlines-on-the-grey-matter-white-matter-interface"]], "Generate the physiological regressor for cerebrovascular reactivity evaluation": [[129, "generate-the-physiological-regressor-for-cerebrovascular-reactivity-evaluation"]], "Generate5tt2gmwmi brick": [[41, "generate5tt2gmwmi-brick"]], "Generate5ttfsl brick": [[42, "generate5ttfsl-brick"]], "Generates a whole brain mask from a DWI image.": [[33, "generates-a-whole-brain-mask-from-a-dwi-image"]], "Generates files containing summary data for each region of interest": [[102, "generates-files-containing-summary-data-for-each-region-of-interest"]], "Generates report for Perfusion study using DSC-MRI": [[101, "generates-report-for-perfusion-study-using-dsc-mri"]], "Generates the report for CVR evaluation using hypercapnia challenge pipeline": [[97, "generates-the-report-for-cvr-evaluation-using-hypercapnia-challenge-pipeline"]], "Generates the report for GE2REC pipeline (language and memory)": [[99, "generates-the-report-for-ge2rec-pipeline-language-and-memory"]], "Generates the report for anatomical data in mriqc pipeline": [[96, "generates-the-report-for-anatomical-data-in-mriqc-pipeline"]], "Generates the report for functional data in mriqc pipeline": [[98, "generates-the-report-for-functional-data-in-mriqc-pipeline"]], "Get AssemblyNet labels names or get labels from names": [[86, "get-assemblynet-labels-names-or-get-labels-from-names"]], "Get Assemblynet segmentation labels": [[85, "get-assemblynet-segmentation-labels"]], "Get no-reference IQMs (image quality metrics) from functional (BOLD) data using mriqc functional workflow (mriqc v22.06)": [[152, "get-no-reference-iqms-image-quality-metrics-from-functional-bold-data-using-mriqc-functional-workflow-mriqc-v22-06"]], "Get no-reference IQMs (image quality metrics) from structural (T1w and T2w) data using mriqc anatomical workflow (mriqc v22.06)": [[151, "get-no-reference-iqms-image-quality-metrics-from-structural-t1w-and-t2w-data-using-mriqc-anatomical-workflow-mriqc-v22-06"]], "Get template image from TemplateFlow": [[75, "get-template-image-from-templateflow"]], "Get templates tissues probability map and register them in subject space": [[138, "get-templates-tissues-probability-map-and-register-them-in-subject-space"]], "GetLabels brick": [[85, "getlabels-brick"]], "Get_Conditions_From_BIDS_tsv brick": [[118, "get-conditions-from-bids-tsv-brick"]], "Get_Conditions_From_csv brick": [[119, "get-conditions-from-csv-brick"]], "Get_Eprime_info_GE2REC brick": [[120, "get-eprime-info-ge2rec-brick"]], "Get_Patient_Name brick": [[121, "get-patient-name-brick"]], "Get_Regressors_From_csv brick": [[122, "get-regressors-from-csv-brick"]], "GradientThreshold brick": [[65, "gradientthreshold-brick"]], "Harmonize brick": [[66, "harmonize-brick"]], "Harmonize input image using a white matter mask": [[66, "harmonize-input-image-using-a-white-matter-mask"]], "Head motion correction of a bold image": [[142, "head-motion-correction-of-a-bold-image"]], "Image convolution with one image": [[60, "image-convolution-with-one-image"]], "Image enhancing": [[61, "image-enhancing"]], "Image registration using ANTs Registration": [[16, "image-registration-using-ants-registration"]], "Import reference data into the current pipeline": [[123, "import-reference-data-into-the-current-pipeline"]], "Import_Data  brick": [[123, "import-data-brick"]], "Indices and tables for developers": [[157, "indices-and-tables-for-developers"]], "Initialize an affine transform using ANTs AffineInitizer": [[13, "initialize-an-affine-transform-using-ants-affineinitizer"]], "Input_Filter brick": [[124, "input-filter-brick"]], "IntensityClip brick": [[67, "intensityclip-brick"]], "Interactive mapping of language and memory with the GE2REC protocol": [[133, "interactive-mapping-of-language-and-memory-with-the-ge2rec-protocol"]], "Interactive mapping of language and memory with the GE2REC protocol without behavioural data": [[134, "interactive-mapping-of-language-and-memory-with-the-ge2rec-protocol-without-behavioural-data"]], "LabelsCorrespondence brick": [[86, "labelscorrespondence-brick"]], "LateralizationIndexCurve brick": [[93, "lateralizationindexcurve-brick"]], "Level1Design brick": [[106, "level1design-brick"]], "Linear (affine) intra- and inter-modal brain image registration using FLIRT (FSL)": [[28, "linear-affine-intra-and-inter-modal-brain-image-registration-using-flirt-fsl"]], "List_Duplicate brick": [[125, "list-duplicate-brick"]], "List_To_File brick": [[126, "list-to-file-brick"]], "MRCat brick": [[43, "mrcat-brick"]], "MRConvert brick": [[44, "mrconvert-brick"]], "MRDeGibbs brick": [[45, "mrdegibbs-brick"]], "MRGridRegrid brick": [[46, "mrgridregrid-brick"]], "MRMath brick": [[47, "mrmath-brick"]], "MRTransform brick": [[48, "mrtransform-brick"]], "MTNormalise brick": [[49, "mtnormalise-brick"]], "Make an output list corresponding to the concatenation of list1 and list2": [[111, "make-an-output-list-corresponding-to-the-concatenation-of-list1-and-list2"]], "Make an output list of list containing the iteration of the input list1 with each element of the input list2": [[112, "make-an-output-list-of-list-containing-the-iteration-of-the-input-list1-with-each-element-of-the-input-list2"]], "Make_AIF brick": [[127, "make-aif-brick"]], "Make_CVR_reg_physio brick": [[129, "make-cvr-reg-physio-brick"]], "Make_a_list brick": [[128, "make-a-list-brick"]], "Makes a binary mask image at a given threshold": [[76, "makes-a-binary-mask-image-at-a-given-threshold"]], "Makes the mean and standard deviation of parametric maps": [[94, "makes-the-mean-and-standard-deviation-of-parametric-maps"]], "Mask brick": [[68, "mask-brick"]], "Mean of bold images (using mean option of the AFNI 3dTstat)": [[11, "mean-of-bold-images-using-mean-option-of-the-afni-3dtstat"]], "Mean_stdDev_calc brick": [[94, "mean-stddev-calc-brick"]], "Mia_processes\u2019s documentation": [[130, "mia-processes-s-documentation"]], "Model Estimation using classical (ReML - Restricted Maximum Likelihood) procedure (SPM12 fMRI model estimation)": [[105, "model-estimation-using-classical-reml-restricted-maximum-likelihood-procedure-spm12-fmri-model-estimation"]], "Modify transformation matrix using convert_xfm (FSL)": [[24, "modify-transformation-matrix-using-convert-xfm-fsl"]], "Multi-tissue informed log-domain intensity normalisation": [[49, "multi-tissue-informed-log-domain-intensity-normalisation"]], "MultipleRegressionDesign brick": [[107, "multipleregressiondesign-brick"]], "N4 Bias field correction using ANTs N4BiasFieldCorrection": [[15, "n4-bias-field-correction-using-ants-n4biasfieldcorrection"]], "N4BiasFieldCorrection brick": [[15, "n4biasfieldcorrection-brick"]], "NewSegment brick": [[79, "newsegment-brick"]], "NonSteadyDetector brick": [[69, "nonsteadydetector-brick"]], "Normalises only the grey or/and white matter from a set of images": [[78, "normalises-only-the-grey-or-and-white-matter-from-a-set-of-images"]], "Normalize12 brick": [[80, "normalize12-brick"]], "Obtain usuful information for GE2REC pipeline from E-Prime file": [[120, "obtain-usuful-information-for-ge2rec-pipeline-from-e-prime-file"]], "OneSampleTTestDesign brick": [[108, "onesamplettestdesign-brick"]], "OutlierCount brick": [[6, "outliercount-brick"]], "PairedTTestDesign brick": [[109, "pairedttestdesign-brick"]], "Perfdsc pipeline": [[135, "perfdsc-pipeline"]], "Perform B1 field inhomogeneity correction for a DWI image": [[32, "perform-b1-field-inhomogeneity-correction-for-a-dwi-image"]], "Perform changes of the voxel grid that require interpolation of the image": [[46, "perform-changes-of-the-voxel-grid-that-require-interpolation-of-the-image"]], "Perform conversion between FSL\u2019s transformation matrix format to mrtrix3\u2019s": [[55, "perform-conversion-between-fsls-transformation-matrix-format-to-mrtrix3s"]], "Perform conversion between different file types and optionally extract a subset of the input image": [[44, "perform-conversion-between-different-file-types-and-optionally-extract-a-subset-of-the-input-image"]], "Perform diffusion image pre-processing using FSL\u2019s topup and eddy tool": [[37, "perform-diffusion-image-pre-processing-using-fsls-topup-and-eddy-tool"]], "Perform various editing operations on track files": [[38, "perform-various-editing-operations-on-track-files"]], "Performs streamlines tractography": [[54, "performs-streamlines-tractography"]], "Perfusion Dynamic Susceptibility Contrast MRI": [[135, "perfusion-dynamic-susceptibility-contrast-mri"]], "Plot signals from ROI using a segmentation file with label": [[95, "plot-signals-from-roi-using-a-segmentation-file-with-label"]], "PlotSignalROI brick": [[95, "plotsignalroi-brick"]], "Produces gray matter masks for various ROIs and means, standard deviations, laterality indices for beta and spmT values in these ROIs": [[155, "produces-gray-matter-masks-for-various-rois-and-means-standard-deviations-laterality-indices-for-beta-and-spmt-values-in-these-rois"]], "Purpose": [[157, "purpose"]], "QualityIndex brick": [[7, "qualityindex-brick"]], "Realign brick": [[81, "realign-brick"]], "Realigns a time-series of images acquired from the same subject": [[81, "realigns-a-time-series-of-images-acquired-from-the-same-subject"]], "Reconstruction of the diffusion signal with the kurtosis tensor model": [[17, "reconstruction-of-the-diffusion-signal-with-the-kurtosis-tensor-model"]], "References": [[169, null]], "RefitDeoblique brick": [[8, "refitdeoblique-brick"]], "Register EPI images to structural images": [[25, "register-epi-images-to-structural-images"]], "Register a mean functional image EPI in MNI space (for checking out registration)": [[143, "register-a-mean-functional-image-epi-in-mni-space-for-checking-out-registration"]], "Registers each 3D volume from the input dataset to the base volume using AFNI 3dvolreg": [[12, "registers-each-3d-volume-from-the-input-dataset-to-the-base-volume-using-afni-3dvolreg"]], "Registration brick": [[16, "registration-brick"]], "Remove Gibbs ringing artifacts": [[45, "remove-gibbs-ringing-artifacts"]], "Removes spikes from the 3D+time input dataset using AFNI 3dDespike": [[3, "removes-spikes-from-the-3d-time-input-dataset-using-afni-3ddespike"]], "ReportAnatMriqc brick": [[96, "reportanatmriqc-brick"]], "ReportCO2inhalCvr brick": [[97, "reportco2inhalcvr-brick"]], "ReportFuncMriqc brick": [[98, "reportfuncmriqc-brick"]], "ReportGE2REC brick": [[99, "reportge2rec-brick"]], "ReportGroupMriqc brick": [[100, "reportgroupmriqc-brick"]], "ReportPerfDsc brick": [[101, "reportperfdsc-brick"]], "Resample1 brick": [[70, "resample1-brick"]], "Resample2 brick": [[71, "resample2-brick"]], "Resamples an image to the resolution of a reference image using nilearn.image.resample_to_img()": [[70, "resamples-an-image-to-the-resolution-of-a-reference-image-using-nilearn-image-resample-to-img"]], "ResponseSDDhollander brick": [[50, "responsesddhollander-brick"]], "ResponseSTrournie brick": [[51, "responsestrournie-brick"]], "Result_collector brick": [[102, "result-collector-brick"]], "RotationMask brick": [[72, "rotationmask-brick"]], "SPM-based first level GLM analysis used in the CVR evaluation": [[156, "spm-based-first-level-glm-analysis-used-in-the-cvr-evaluation"]], "Sanitize brick": [[73, "sanitize-brick"]], "Sanitize input bold image": [[73, "sanitize-input-bold-image"]], "Segments,  bias  corrects  and  spatially normalises - all in the same model": [[79, "segments-bias-corrects-and-spatially-normalises-all-in-the-same-model"]], "Selects one or more (slicing) elements from a list": [[116, "selects-one-or-more-slicing-elements-from-a-list"]], "Sets images to the resolution of a reference image using using nilearn.image.resample_to_img()": [[71, "sets-images-to-the-resolution-of-a-reference-image-using-using-nilearn-image-resample-to-img"]], "Skull-stripping using SynthStrip tool (mri_synthstrip in FreeSurfer) as done in mriqc v22.06": [[21, "skull-stripping-using-synthstrip-tool-mri-synthstrip-in-freesurfer-as-done-in-mriqc-v22-06"]], "SkullStrip brick": [[9, "skullstrip-brick"]], "Slice-time correction of bold images (using mean option of the AFNI 3dTshift)": [[10, "slice-time-correction-of-bold-images-using-mean-option-of-the-afni-3dtshift"]], "SliceTiming brick": [[82, "slicetiming-brick"]], "Smooth brick": [[29, "smooth-brick"], [83, "smooth-brick"]], "Spatial normalization to MNI (using MNI152NLin2009cAsym template)": [[141, "spatial-normalization-to-mni-using-mni152nlin2009casym-template"]], "Spatial_mask pipeline": [[150, "spatial-mask-pipeline"]], "SphericalHarmonicExtraction brick": [[52, "sphericalharmonicextraction-brick"]], "Spikes brick": [[103, "spikes-brick"]], "Submodules": [[158, "submodules"], [161, "submodules"], [162, "submodules"], [163, "submodules"], [164, "submodules"], [165, "submodules"], [166, "submodules"], [167, "submodules"], [168, "submodules"], [169, "submodules"], [171, "submodules"], [172, "submodules"], [174, "submodules"], [175, "submodules"], [176, "submodules"], [177, "submodules"], [178, "submodules"], [179, "submodules"], [180, "submodules"]], "Subpackages": [[158, "subpackages"], [159, "subpackages"], [160, "subpackages"], [170, "subpackages"], [173, "subpackages"]], "Surfaces (skull, inskull, outskull, outskin) extraction using BET (FSL)": [[23, "surfaces-skull-inskull-outskull-outskin-extraction-using-bet-fsl"]], "SynthStrip brick": [[20, "synthstrip-brick"]], "SynthStripMriqc brick": [[21, "synthstripmriqc-brick"]], "TSNR brick": [[74, "tsnr-brick"]], "TShift brick": [[10, "tshift-brick"]], "TStatMean brick": [[11, "tstatmean-brick"]], "TemplateFromTemplateFlow brick": [[75, "templatefromtemplateflow-brick"]], "TensorMetrics brick": [[53, "tensormetrics-brick"]], "Threshold brick": [[76, "threshold-brick"]], "To filter the content of the Data Browser tab or the output data of another brick": [[124, "to-filter-the-content-of-the-data-browser-tab-or-the-output-data-of-another-brick"]], "Tractography brick": [[54, "tractography-brick"]], "TransformFSLConvert brick": [[55, "transformfslconvert-brick"]], "TwoSampleTTestDesign brick": [[110, "twosamplettestdesign-brick"]], "Using AFNI 3dSkullStrip, from T1-weighted MRI images, extract the brain from surrounding tissue": [[9, "using-afni-3dskullstrip-from-t1-weighted-mri-images-extract-the-brain-from-surrounding-tissue"]], "Using AFNI 3dToutcount, computes outliers for all sub-bricks (3D volumes for each TR) in the input dataset": [[6, "using-afni-3dtoutcount-computes-outliers-for-all-sub-bricks-3d-volumes-for-each-tr-in-the-input-dataset"]], "Using AFNI GCOR, computes the average correlation between every voxel and every other voxel, over any given mask": [[5, "using-afni-gcor-computes-the-average-correlation-between-every-voxel-and-every-other-voxel-over-any-given-mask"]], "Using ANTs ApplyTransforms, transforms an input image according to a reference image and a transform (or a set of transforms)": [[14, "using-ants-applytransforms-transforms-an-input-image-according-to-a-reference-image-and-a-transform-or-a-set-of-transforms"]], "Volreg brick": [[12, "volreg-brick"]], "Voxel-by-voxel arithmetic on 3D datasets 1, using AFNI 3dcalc": [[1, "voxel-by-voxel-arithmetic-on-3d-datasets-using-afni-3dcalc"]], "fMRI model specification for GLM analysis.": [[106, "fmri-model-specification-for-glm-analysis"]], "mia_processes": [[181, "mia-processes"]], "mia_processes package": [[158, "module-mia_processes"]], "mia_processes.bricks package": [[159, "module-mia_processes.bricks"]], "mia_processes.bricks.preprocess package": [[160, "module-mia_processes.bricks.preprocess"]], "mia_processes.bricks.preprocess.afni package": [[161, "module-mia_processes.bricks.preprocess.afni"]], "mia_processes.bricks.preprocess.afni.processes module": [[161, "module-mia_processes.bricks.preprocess.afni.processes"]], "mia_processes.bricks.preprocess.ants package": [[162, "module-mia_processes.bricks.preprocess.ants"]], "mia_processes.bricks.preprocess.ants.processes module": [[162, "module-mia_processes.bricks.preprocess.ants.processes"]], "mia_processes.bricks.preprocess.dipy package": [[163, "module-mia_processes.bricks.preprocess.dipy"]], "mia_processes.bricks.preprocess.dipy.processes module": [[163, "module-mia_processes.bricks.preprocess.dipy.processes"]], "mia_processes.bricks.preprocess.freesurfer package": [[164, "module-mia_processes.bricks.preprocess.freesurfer"]], "mia_processes.bricks.preprocess.freesurfer.processes module": [[164, "module-mia_processes.bricks.preprocess.freesurfer.processes"]], "mia_processes.bricks.preprocess.fsl package": [[165, "module-mia_processes.bricks.preprocess.fsl"]], "mia_processes.bricks.preprocess.fsl.processes module": [[165, "module-mia_processes.bricks.preprocess.fsl.processes"]], "mia_processes.bricks.preprocess.mrtrix package": [[166, "module-mia_processes.bricks.preprocess.mrtrix"]], "mia_processes.bricks.preprocess.mrtrix.processes module": [[166, "module-mia_processes.bricks.preprocess.mrtrix.processes"]], "mia_processes.bricks.preprocess.others package": [[167, "module-mia_processes.bricks.preprocess.others"]], "mia_processes.bricks.preprocess.others.processing module": [[167, "module-mia_processes.bricks.preprocess.others.processing"]], "mia_processes.bricks.preprocess.spm package": [[168, "module-mia_processes.bricks.preprocess.spm"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing module": [[168, "module-mia_processes.bricks.preprocess.spm.spatial_preprocessing"]], "mia_processes.bricks.reports package": [[169, "module-mia_processes.bricks.reports"]], "mia_processes.bricks.reports.processes module": [[169, "module-mia_processes.bricks.reports.processes"]], "mia_processes.bricks.reports.reporting module": [[169, "module-mia_processes.bricks.reports.reporting"]], "mia_processes.bricks.stat package": [[170, "module-mia_processes.bricks.stat"]], "mia_processes.bricks.stat.spm package": [[171, "module-mia_processes.bricks.stat.spm"]], "mia_processes.bricks.stat.spm.model module": [[171, "module-mia_processes.bricks.stat.spm.model"]], "mia_processes.bricks.tools package": [[172, "module-mia_processes.bricks.tools"]], "mia_processes.bricks.tools.tools module": [[172, "module-mia_processes.bricks.tools.tools"]], "mia_processes.info module": [[158, "module-mia_processes.info"]], "mia_processes.pipelines package": [[173, "module-mia_processes.pipelines"]], "mia_processes.pipelines.CerebVascularReact package": [[174, "module-mia_processes.pipelines.CerebVascularReact"]], "mia_processes.pipelines.CerebVascularReact.co2_inhalation module": [[174, "module-mia_processes.pipelines.CerebVascularReact.co2_inhalation"]], "mia_processes.pipelines.DWITractography package": [[175, "module-mia_processes.pipelines.DWITractography"]], "mia_processes.pipelines.DWITractography.dwi_whole_brain_tractography module": [[175, "module-mia_processes.pipelines.DWITractography.dwi_whole_brain_tractography"]], "mia_processes.pipelines.preprocess package": [[176, "module-mia_processes.pipelines.preprocess"]], "mia_processes.pipelines.preprocess.anat_airmask module": [[176, "module-mia_processes.pipelines.preprocess.anat_airmask"]], "mia_processes.pipelines.preprocess.anat_headmask module": [[176, "module-mia_processes.pipelines.preprocess.anat_headmask"]], "mia_processes.pipelines.preprocess.anat_mni_tpms module": [[176, "module-mia_processes.pipelines.preprocess.anat_mni_tpms"]], "mia_processes.pipelines.preprocess.anat_skullstrip module": [[176, "module-mia_processes.pipelines.preprocess.anat_skullstrip"]], "mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip module": [[176, "module-mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip"]], "mia_processes.pipelines.preprocess.anat_spatial_norm module": [[176, "module-mia_processes.pipelines.preprocess.anat_spatial_norm"]], "mia_processes.pipelines.preprocess.bold_hmc module": [[176, "module-mia_processes.pipelines.preprocess.bold_hmc"]], "mia_processes.pipelines.preprocess.bold_mni_align module": [[176, "module-mia_processes.pipelines.preprocess.bold_mni_align"]], "mia_processes.pipelines.preprocess.bold_spatial_preprocessing1 module": [[176, "module-mia_processes.pipelines.preprocess.bold_spatial_preprocessing1"]], "mia_processes.pipelines.preprocess.bold_spatial_preprocessing2 module": [[176, "module-mia_processes.pipelines.preprocess.bold_spatial_preprocessing2"]], "mia_processes.pipelines.preprocess.dwi_fod_msmt_csd module": [[176, "module-mia_processes.pipelines.preprocess.dwi_fod_msmt_csd"]], "mia_processes.pipelines.preprocess.dwipreprocessing module": [[176, "module-mia_processes.pipelines.preprocess.dwi_preprocessing"]], "mia_processes.pipelines.preprocess.spatial_mask module": [[176, "module-mia_processes.pipelines.preprocess.spatial_mask"]], "mia_processes.pipelines.qualityControl package": [[177, "module-mia_processes.pipelines.qualityControl"]], "mia_processes.pipelines.qualityControl.anat_mriqc module": [[177, "module-mia_processes.pipelines.qualityControl.anat_mriqc"]], "mia_processes.pipelines.qualityControl.bold_mriqc module": [[177, "module-mia_processes.pipelines.qualityControl.bold_mriqc"]], "mia_processes.pipelines.reports package": [[178, "module-mia_processes.pipelines.reports"]], "mia_processes.pipelines.reports.bold_iqms module": [[178, "module-mia_processes.pipelines.reports.bold_iqms"]], "mia_processes.pipelines.reports.extract_roi_param module": [[178, "module-mia_processes.pipelines.reports.extract_roi_param"]], "mia_processes.pipelines.stat package": [[179, "module-mia_processes.pipelines.stat"]], "mia_processes.pipelines.stat.bold_stat_cvr module": [[179, "module-mia_processes.pipelines.stat.bold_stat_cvr"]], "mia_processes.process_matlab module": [[158, "module-mia_processes.process_matlab"]], "mia_processes.utils package": [[180, "module-mia_processes.utils"]], "mia_processes.utils.report module": [[180, "module-mia_processes.utils.report"]], "mia_processes.utils.tools module": [[180, "module-mia_processes.utils.tools"]]}, "docnames": ["documentation/bricks/preprocess/afni/Automask", "documentation/bricks/preprocess/afni/Calc", "documentation/bricks/preprocess/afni/CalcDropTRs", "documentation/bricks/preprocess/afni/Despike", "documentation/bricks/preprocess/afni/FWHMx", "documentation/bricks/preprocess/afni/GCOR", "documentation/bricks/preprocess/afni/OutlierCount", "documentation/bricks/preprocess/afni/QualityIndex", "documentation/bricks/preprocess/afni/RefitDeoblique", "documentation/bricks/preprocess/afni/SkullStrip", "documentation/bricks/preprocess/afni/TShift", "documentation/bricks/preprocess/afni/TStatMean", "documentation/bricks/preprocess/afni/Volreg", "documentation/bricks/preprocess/ants/AffineInitializer", "documentation/bricks/preprocess/ants/ApplyTransform", "documentation/bricks/preprocess/ants/N4BiasFieldCorrection", "documentation/bricks/preprocess/ants/Registration", "documentation/bricks/preprocess/dipy/ComputeDKI", "documentation/bricks/preprocess/dipy/Denoise", "documentation/bricks/preprocess/freesurfer/Binarize", "documentation/bricks/preprocess/freesurfer/SynthStrip", "documentation/bricks/preprocess/freesurfer/SynthStripMriqc", "documentation/bricks/preprocess/fsl/Bet", "documentation/bricks/preprocess/fsl/BetSurfacesExtraction", "documentation/bricks/preprocess/fsl/ConvertXFM", "documentation/bricks/preprocess/fsl/EpiReg", "documentation/bricks/preprocess/fsl/ExtractROI", "documentation/bricks/preprocess/fsl/FastSegment", "documentation/bricks/preprocess/fsl/Flirt", "documentation/bricks/preprocess/fsl/Smooth", "documentation/bricks/preprocess/matlab_wrap/ComputeBrainVolume", "documentation/bricks/preprocess/mrtrix/ConstrainedSphericalDeconvolution", "documentation/bricks/preprocess/mrtrix/DWIBiasCorrect", "documentation/bricks/preprocess/mrtrix/DWIBrainMask", "documentation/bricks/preprocess/mrtrix/DWICat", "documentation/bricks/preprocess/mrtrix/DWIDenoise", "documentation/bricks/preprocess/mrtrix/DWIExtract", "documentation/bricks/preprocess/mrtrix/DWIPreproc", "documentation/bricks/preprocess/mrtrix/EditingTrack", "documentation/bricks/preprocess/mrtrix/FilteringTrack", "documentation/bricks/preprocess/mrtrix/FitTensor", "documentation/bricks/preprocess/mrtrix/Generate5tt2gmwmi", "documentation/bricks/preprocess/mrtrix/Generate5ttfsl", "documentation/bricks/preprocess/mrtrix/MRCat", "documentation/bricks/preprocess/mrtrix/MRConvert", "documentation/bricks/preprocess/mrtrix/MRDeGibbs", "documentation/bricks/preprocess/mrtrix/MRGridRegrid", "documentation/bricks/preprocess/mrtrix/MRMath", "documentation/bricks/preprocess/mrtrix/MRTransform", "documentation/bricks/preprocess/mrtrix/MTNormalise", "documentation/bricks/preprocess/mrtrix/ResponseSDDhollander", "documentation/bricks/preprocess/mrtrix/ResponseSDTournier", "documentation/bricks/preprocess/mrtrix/SphericalHarmonicExtraction", "documentation/bricks/preprocess/mrtrix/TensorMetrics", "documentation/bricks/preprocess/mrtrix/Tractography", "documentation/bricks/preprocess/mrtrix/TransformFSLConvert", "documentation/bricks/preprocess/others/ApplyBiasCorrection", "documentation/bricks/preprocess/others/ArtifactMask", "documentation/bricks/preprocess/others/Binarize", "documentation/bricks/preprocess/others/ConformImage", "documentation/bricks/preprocess/others/ConvROI", "documentation/bricks/preprocess/others/Enhance", "documentation/bricks/preprocess/others/EstimateSNR", "documentation/bricks/preprocess/others/ExtractROIbyLabel", "documentation/bricks/preprocess/others/ExtractSignalROI", "documentation/bricks/preprocess/others/GradientThreshold", "documentation/bricks/preprocess/others/Harmonize", "documentation/bricks/preprocess/others/IntensityClip", "documentation/bricks/preprocess/others/Mask", "documentation/bricks/preprocess/others/NonSteadyDetector", "documentation/bricks/preprocess/others/Resample1", "documentation/bricks/preprocess/others/Resample2", "documentation/bricks/preprocess/others/RotationMask", "documentation/bricks/preprocess/others/Sanitize", "documentation/bricks/preprocess/others/TSNR", "documentation/bricks/preprocess/others/TemplateFromTemplateFlow", "documentation/bricks/preprocess/others/Threshold", "documentation/bricks/preprocess/spm/Coregister", "documentation/bricks/preprocess/spm/GM_WM_Normalize", "documentation/bricks/preprocess/spm/NewSegment", "documentation/bricks/preprocess/spm/Normalize12", "documentation/bricks/preprocess/spm/Realign", "documentation/bricks/preprocess/spm/SliceTiming", "documentation/bricks/preprocess/spm/Smooth", "documentation/bricks/preprocess/volbrain/AssemblyNetDocker", "documentation/bricks/preprocess/volbrain/GetLabels", "documentation/bricks/preprocess/volbrain/LabelsCorrespondence", "documentation/bricks/reports/AnatIQMs", "documentation/bricks/reports/BoldIQMs", "documentation/bricks/reports/BoldIQMsPlot", "documentation/bricks/reports/CarpetParcellation", "documentation/bricks/reports/ComputeDVARS", "documentation/bricks/reports/FramewiseDisplacement", "documentation/bricks/reports/LateralizationIndexCurve", "documentation/bricks/reports/Mean_stdDev_calc", "documentation/bricks/reports/PlotSignalROI", "documentation/bricks/reports/ReportAnatMriqc", "documentation/bricks/reports/ReportCO2inhalCvr", "documentation/bricks/reports/ReportFuncMriqc", "documentation/bricks/reports/ReportGE2REC", "documentation/bricks/reports/ReportGroupMriqc", "documentation/bricks/reports/ReportPerfDsc", "documentation/bricks/reports/Result_collector", "documentation/bricks/reports/Spikes", "documentation/bricks/stats/spm/EstimateContrast", "documentation/bricks/stats/spm/EstimateModel", "documentation/bricks/stats/spm/Level1Design", "documentation/bricks/stats/spm/MultipleRegressionDesign", "documentation/bricks/stats/spm/OneSampleTTestDesign", "documentation/bricks/stats/spm/PairedTTestDesign", "documentation/bricks/stats/spm/TwoSampleTTestDesign", "documentation/bricks/tools/Concat_to_list", "documentation/bricks/tools/Concat_to_list_of_list", "documentation/bricks/tools/Deconv_from_aif", "documentation/bricks/tools/Delete_data", "documentation/bricks/tools/Files_To_List", "documentation/bricks/tools/Filter_Files_List", "documentation/bricks/tools/Find_In_List", "documentation/bricks/tools/Get_Conditions_From_BIDS_tsv", "documentation/bricks/tools/Get_Conditions_From_csv", "documentation/bricks/tools/Get_Eprime_info_GE2REC", "documentation/bricks/tools/Get_Patient_Name", "documentation/bricks/tools/Get_Regressors_From_csv", "documentation/bricks/tools/Import_Data", "documentation/bricks/tools/Input_Filter", "documentation/bricks/tools/List_Duplicate", "documentation/bricks/tools/List_To_File", "documentation/bricks/tools/Make_AIF", "documentation/bricks/tools/Make_A_List", "documentation/bricks/tools/Make_CVR_reg_physio", "documentation/documentation", "documentation/pipelines/CerebVascularReact/CO2_inhalation", "documentation/pipelines/DWITractography/Dwi_whole_brain_tractograpy", "documentation/pipelines/FunctionalLangageMemory/GE2REC", "documentation/pipelines/FunctionalLangageMemory/GE2REC_without_behavioural_data", "documentation/pipelines/Perfusion/Perfdsc", "documentation/pipelines/preprocess/Anat_airmask", "documentation/pipelines/preprocess/Anat_headmask", "documentation/pipelines/preprocess/Anat_mni_tpms", "documentation/pipelines/preprocess/Anat_skullstrip", "documentation/pipelines/preprocess/Anat_skullstrip_synthstrip", "documentation/pipelines/preprocess/Anat_spatial_norm", "documentation/pipelines/preprocess/Bold_hmc", "documentation/pipelines/preprocess/Bold_mni_align", "documentation/pipelines/preprocess/Bold_spatial_preprocessing1", "documentation/pipelines/preprocess/Bold_spatial_preprocessing2", "documentation/pipelines/preprocess/Bold_spatial_preprocessing3", "documentation/pipelines/preprocess/Dwi_fod_msmt_csd", "documentation/pipelines/preprocess/Dwi_preprocessing", "documentation/pipelines/preprocess/Dwi_tissue_boundaries", "documentation/pipelines/preprocess/Spatial_mask", "documentation/pipelines/qualityControl/Anat_mriqc", "documentation/pipelines/qualityControl/Bold_mriqc", "documentation/pipelines/qualityControl/Bold_signals_roi", "documentation/pipelines/reports/Bold_iqms", "documentation/pipelines/reports/Extract_roi_param", "documentation/pipelines/stat/Bold_stat_cvr", "index", "mia_processes", "mia_processes.bricks", "mia_processes.bricks.preprocess", "mia_processes.bricks.preprocess.afni", "mia_processes.bricks.preprocess.ants", "mia_processes.bricks.preprocess.dipy", "mia_processes.bricks.preprocess.freesurfer", "mia_processes.bricks.preprocess.fsl", "mia_processes.bricks.preprocess.mrtrix", "mia_processes.bricks.preprocess.others", "mia_processes.bricks.preprocess.spm", "mia_processes.bricks.reports", "mia_processes.bricks.stat", "mia_processes.bricks.stat.spm", "mia_processes.bricks.tools", "mia_processes.pipelines", "mia_processes.pipelines.CerebVascularReact", "mia_processes.pipelines.DWITractography", "mia_processes.pipelines.preprocess", "mia_processes.pipelines.qualityControl", "mia_processes.pipelines.reports", "mia_processes.pipelines.stat", "mia_processes.utils", "modules"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1}, "filenames": ["documentation/bricks/preprocess/afni/Automask.rst", "documentation/bricks/preprocess/afni/Calc.rst", "documentation/bricks/preprocess/afni/CalcDropTRs.rst", "documentation/bricks/preprocess/afni/Despike.rst", "documentation/bricks/preprocess/afni/FWHMx.rst", "documentation/bricks/preprocess/afni/GCOR.rst", "documentation/bricks/preprocess/afni/OutlierCount.rst", "documentation/bricks/preprocess/afni/QualityIndex.rst", "documentation/bricks/preprocess/afni/RefitDeoblique.rst", "documentation/bricks/preprocess/afni/SkullStrip.rst", "documentation/bricks/preprocess/afni/TShift.rst", "documentation/bricks/preprocess/afni/TStatMean.rst", "documentation/bricks/preprocess/afni/Volreg.rst", "documentation/bricks/preprocess/ants/AffineInitializer.rst", "documentation/bricks/preprocess/ants/ApplyTransform.rst", "documentation/bricks/preprocess/ants/N4BiasFieldCorrection.rst", "documentation/bricks/preprocess/ants/Registration.rst", "documentation/bricks/preprocess/dipy/ComputeDKI.rst", "documentation/bricks/preprocess/dipy/Denoise.rst", "documentation/bricks/preprocess/freesurfer/Binarize.rst", "documentation/bricks/preprocess/freesurfer/SynthStrip.rst", "documentation/bricks/preprocess/freesurfer/SynthStripMriqc.rst", "documentation/bricks/preprocess/fsl/Bet.rst", "documentation/bricks/preprocess/fsl/BetSurfacesExtraction.rst", "documentation/bricks/preprocess/fsl/ConvertXFM.rst", "documentation/bricks/preprocess/fsl/EpiReg.rst", "documentation/bricks/preprocess/fsl/ExtractROI.rst", "documentation/bricks/preprocess/fsl/FastSegment.rst", "documentation/bricks/preprocess/fsl/Flirt.rst", "documentation/bricks/preprocess/fsl/Smooth.rst", "documentation/bricks/preprocess/matlab_wrap/ComputeBrainVolume.rst", "documentation/bricks/preprocess/mrtrix/ConstrainedSphericalDeconvolution.rst", "documentation/bricks/preprocess/mrtrix/DWIBiasCorrect.rst", "documentation/bricks/preprocess/mrtrix/DWIBrainMask.rst", "documentation/bricks/preprocess/mrtrix/DWICat.rst", "documentation/bricks/preprocess/mrtrix/DWIDenoise.rst", "documentation/bricks/preprocess/mrtrix/DWIExtract.rst", "documentation/bricks/preprocess/mrtrix/DWIPreproc.rst", "documentation/bricks/preprocess/mrtrix/EditingTrack.rst", "documentation/bricks/preprocess/mrtrix/FilteringTrack.rst", "documentation/bricks/preprocess/mrtrix/FitTensor.rst", "documentation/bricks/preprocess/mrtrix/Generate5tt2gmwmi.rst", "documentation/bricks/preprocess/mrtrix/Generate5ttfsl.rst", "documentation/bricks/preprocess/mrtrix/MRCat.rst", "documentation/bricks/preprocess/mrtrix/MRConvert.rst", "documentation/bricks/preprocess/mrtrix/MRDeGibbs.rst", "documentation/bricks/preprocess/mrtrix/MRGridRegrid.rst", "documentation/bricks/preprocess/mrtrix/MRMath.rst", "documentation/bricks/preprocess/mrtrix/MRTransform.rst", "documentation/bricks/preprocess/mrtrix/MTNormalise.rst", "documentation/bricks/preprocess/mrtrix/ResponseSDDhollander.rst", "documentation/bricks/preprocess/mrtrix/ResponseSDTournier.rst", "documentation/bricks/preprocess/mrtrix/SphericalHarmonicExtraction.rst", "documentation/bricks/preprocess/mrtrix/TensorMetrics.rst", "documentation/bricks/preprocess/mrtrix/Tractography.rst", "documentation/bricks/preprocess/mrtrix/TransformFSLConvert.rst", "documentation/bricks/preprocess/others/ApplyBiasCorrection.rst", "documentation/bricks/preprocess/others/ArtifactMask.rst", "documentation/bricks/preprocess/others/Binarize.rst", "documentation/bricks/preprocess/others/ConformImage.rst", "documentation/bricks/preprocess/others/ConvROI.rst", "documentation/bricks/preprocess/others/Enhance.rst", "documentation/bricks/preprocess/others/EstimateSNR.rst", "documentation/bricks/preprocess/others/ExtractROIbyLabel.rst", "documentation/bricks/preprocess/others/ExtractSignalROI.rst", "documentation/bricks/preprocess/others/GradientThreshold.rst", "documentation/bricks/preprocess/others/Harmonize.rst", "documentation/bricks/preprocess/others/IntensityClip.rst", "documentation/bricks/preprocess/others/Mask.rst", "documentation/bricks/preprocess/others/NonSteadyDetector.rst", "documentation/bricks/preprocess/others/Resample1.rst", "documentation/bricks/preprocess/others/Resample2.rst", "documentation/bricks/preprocess/others/RotationMask.rst", "documentation/bricks/preprocess/others/Sanitize.rst", "documentation/bricks/preprocess/others/TSNR.rst", "documentation/bricks/preprocess/others/TemplateFromTemplateFlow.rst", "documentation/bricks/preprocess/others/Threshold.rst", "documentation/bricks/preprocess/spm/Coregister.rst", "documentation/bricks/preprocess/spm/GM_WM_Normalize.rst", "documentation/bricks/preprocess/spm/NewSegment.rst", "documentation/bricks/preprocess/spm/Normalize12.rst", "documentation/bricks/preprocess/spm/Realign.rst", "documentation/bricks/preprocess/spm/SliceTiming.rst", "documentation/bricks/preprocess/spm/Smooth.rst", "documentation/bricks/preprocess/volbrain/AssemblyNetDocker.rst", "documentation/bricks/preprocess/volbrain/GetLabels.rst", "documentation/bricks/preprocess/volbrain/LabelsCorrespondence.rst", "documentation/bricks/reports/AnatIQMs.rst", "documentation/bricks/reports/BoldIQMs.rst", "documentation/bricks/reports/BoldIQMsPlot.rst", "documentation/bricks/reports/CarpetParcellation.rst", "documentation/bricks/reports/ComputeDVARS.rst", "documentation/bricks/reports/FramewiseDisplacement.rst", "documentation/bricks/reports/LateralizationIndexCurve.rst", "documentation/bricks/reports/Mean_stdDev_calc.rst", "documentation/bricks/reports/PlotSignalROI.rst", "documentation/bricks/reports/ReportAnatMriqc.rst", "documentation/bricks/reports/ReportCO2inhalCvr.rst", "documentation/bricks/reports/ReportFuncMriqc.rst", "documentation/bricks/reports/ReportGE2REC.rst", "documentation/bricks/reports/ReportGroupMriqc.rst", "documentation/bricks/reports/ReportPerfDsc.rst", "documentation/bricks/reports/Result_collector.rst", "documentation/bricks/reports/Spikes.rst", "documentation/bricks/stats/spm/EstimateContrast.rst", "documentation/bricks/stats/spm/EstimateModel.rst", "documentation/bricks/stats/spm/Level1Design.rst", "documentation/bricks/stats/spm/MultipleRegressionDesign.rst", "documentation/bricks/stats/spm/OneSampleTTestDesign.rst", "documentation/bricks/stats/spm/PairedTTestDesign.rst", "documentation/bricks/stats/spm/TwoSampleTTestDesign.rst", "documentation/bricks/tools/Concat_to_list.rst", "documentation/bricks/tools/Concat_to_list_of_list.rst", "documentation/bricks/tools/Deconv_from_aif.rst", "documentation/bricks/tools/Delete_data.rst", "documentation/bricks/tools/Files_To_List.rst", "documentation/bricks/tools/Filter_Files_List.rst", "documentation/bricks/tools/Find_In_List.rst", "documentation/bricks/tools/Get_Conditions_From_BIDS_tsv.rst", "documentation/bricks/tools/Get_Conditions_From_csv.rst", "documentation/bricks/tools/Get_Eprime_info_GE2REC.rst", "documentation/bricks/tools/Get_Patient_Name.rst", "documentation/bricks/tools/Get_Regressors_From_csv.rst", "documentation/bricks/tools/Import_Data.rst", "documentation/bricks/tools/Input_Filter.rst", "documentation/bricks/tools/List_Duplicate.rst", "documentation/bricks/tools/List_To_File.rst", "documentation/bricks/tools/Make_AIF.rst", "documentation/bricks/tools/Make_A_List.rst", "documentation/bricks/tools/Make_CVR_reg_physio.rst", "documentation/documentation.rst", "documentation/pipelines/CerebVascularReact/CO2_inhalation.rst", "documentation/pipelines/DWITractography/Dwi_whole_brain_tractograpy.rst", "documentation/pipelines/FunctionalLangageMemory/GE2REC.rst", "documentation/pipelines/FunctionalLangageMemory/GE2REC_without_behavioural_data.rst", "documentation/pipelines/Perfusion/Perfdsc.rst", "documentation/pipelines/preprocess/Anat_airmask.rst", "documentation/pipelines/preprocess/Anat_headmask.rst", "documentation/pipelines/preprocess/Anat_mni_tpms.rst", "documentation/pipelines/preprocess/Anat_skullstrip.rst", "documentation/pipelines/preprocess/Anat_skullstrip_synthstrip.rst", "documentation/pipelines/preprocess/Anat_spatial_norm.rst", "documentation/pipelines/preprocess/Bold_hmc.rst", "documentation/pipelines/preprocess/Bold_mni_align.rst", "documentation/pipelines/preprocess/Bold_spatial_preprocessing1.rst", "documentation/pipelines/preprocess/Bold_spatial_preprocessing2.rst", "documentation/pipelines/preprocess/Bold_spatial_preprocessing3.rst", "documentation/pipelines/preprocess/Dwi_fod_msmt_csd.rst", "documentation/pipelines/preprocess/Dwi_preprocessing.rst", "documentation/pipelines/preprocess/Dwi_tissue_boundaries.rst", "documentation/pipelines/preprocess/Spatial_mask.rst", "documentation/pipelines/qualityControl/Anat_mriqc.rst", "documentation/pipelines/qualityControl/Bold_mriqc.rst", "documentation/pipelines/qualityControl/Bold_signals_roi.rst", "documentation/pipelines/reports/Bold_iqms.rst", "documentation/pipelines/reports/Extract_roi_param.rst", "documentation/pipelines/stat/Bold_stat_cvr.rst", "index.rst", "mia_processes.rst", "mia_processes.bricks.rst", "mia_processes.bricks.preprocess.rst", "mia_processes.bricks.preprocess.afni.rst", "mia_processes.bricks.preprocess.ants.rst", "mia_processes.bricks.preprocess.dipy.rst", "mia_processes.bricks.preprocess.freesurfer.rst", "mia_processes.bricks.preprocess.fsl.rst", "mia_processes.bricks.preprocess.mrtrix.rst", "mia_processes.bricks.preprocess.others.rst", "mia_processes.bricks.preprocess.spm.rst", "mia_processes.bricks.reports.rst", "mia_processes.bricks.stat.rst", "mia_processes.bricks.stat.spm.rst", "mia_processes.bricks.tools.rst", "mia_processes.pipelines.rst", "mia_processes.pipelines.CerebVascularReact.rst", "mia_processes.pipelines.DWITractography.rst", "mia_processes.pipelines.preprocess.rst", "mia_processes.pipelines.qualityControl.rst", "mia_processes.pipelines.reports.rst", "mia_processes.pipelines.stat.rst", "mia_processes.utils.rst", "modules.rst"], "indexentries": {"__init__() (mia_processes.bricks.preprocess.afni.processes.automask method)": [[161, "mia_processes.bricks.preprocess.afni.processes.Automask.__init__", false]], "__init__() (mia_processes.bricks.preprocess.afni.processes.calc method)": [[161, "mia_processes.bricks.preprocess.afni.processes.Calc.__init__", false]], "__init__() (mia_processes.bricks.preprocess.afni.processes.calcdroptrs method)": [[161, "mia_processes.bricks.preprocess.afni.processes.CalcDropTRs.__init__", false]], "__init__() (mia_processes.bricks.preprocess.afni.processes.despike method)": [[161, "mia_processes.bricks.preprocess.afni.processes.Despike.__init__", false]], "__init__() (mia_processes.bricks.preprocess.afni.processes.fwhmx method)": [[161, "mia_processes.bricks.preprocess.afni.processes.FWHMx.__init__", false]], "__init__() (mia_processes.bricks.preprocess.afni.processes.gcor method)": [[161, "mia_processes.bricks.preprocess.afni.processes.GCOR.__init__", false]], "__init__() (mia_processes.bricks.preprocess.afni.processes.outliercount method)": [[161, "mia_processes.bricks.preprocess.afni.processes.OutlierCount.__init__", false]], "__init__() (mia_processes.bricks.preprocess.afni.processes.qualityindex method)": [[161, "mia_processes.bricks.preprocess.afni.processes.QualityIndex.__init__", false]], "__init__() (mia_processes.bricks.preprocess.afni.processes.refitdeoblique method)": [[161, "mia_processes.bricks.preprocess.afni.processes.RefitDeoblique.__init__", false]], "__init__() (mia_processes.bricks.preprocess.afni.processes.skullstrip method)": [[161, "mia_processes.bricks.preprocess.afni.processes.SkullStrip.__init__", false]], "__init__() (mia_processes.bricks.preprocess.afni.processes.tshift method)": [[161, "mia_processes.bricks.preprocess.afni.processes.TShift.__init__", false]], "__init__() (mia_processes.bricks.preprocess.afni.processes.tstatmean method)": [[161, "mia_processes.bricks.preprocess.afni.processes.TStatMean.__init__", false]], "__init__() (mia_processes.bricks.preprocess.afni.processes.volreg method)": [[161, "mia_processes.bricks.preprocess.afni.processes.Volreg.__init__", false]], "__init__() (mia_processes.bricks.preprocess.ants.processes.affineinitializer method)": [[162, "mia_processes.bricks.preprocess.ants.processes.AffineInitializer.__init__", false]], "__init__() (mia_processes.bricks.preprocess.ants.processes.applytransforms method)": [[162, "mia_processes.bricks.preprocess.ants.processes.ApplyTransforms.__init__", false]], "__init__() (mia_processes.bricks.preprocess.ants.processes.n4biasfieldcorrection method)": [[162, "mia_processes.bricks.preprocess.ants.processes.N4BiasFieldCorrection.__init__", false]], "__init__() (mia_processes.bricks.preprocess.ants.processes.registration method)": [[162, "mia_processes.bricks.preprocess.ants.processes.Registration.__init__", false]], "__init__() (mia_processes.bricks.preprocess.dipy.processes.computedki method)": [[163, "mia_processes.bricks.preprocess.dipy.processes.ComputeDKI.__init__", false]], "__init__() (mia_processes.bricks.preprocess.dipy.processes.denoise method)": [[163, "mia_processes.bricks.preprocess.dipy.processes.Denoise.__init__", false]], "__init__() (mia_processes.bricks.preprocess.freesurfer.processes.binarize method)": [[164, "mia_processes.bricks.preprocess.freesurfer.processes.Binarize.__init__", false]], "__init__() (mia_processes.bricks.preprocess.freesurfer.processes.synthstrip method)": [[164, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStrip.__init__", false]], "__init__() (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc method)": [[164, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.__init__", false]], "__init__() (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc.convblock method)": [[164, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.ConvBlock.__init__", false]], "__init__() (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc.stripmodel method)": [[164, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.StripModel.__init__", false]], "__init__() (mia_processes.bricks.preprocess.fsl.processes.bet method)": [[165, "mia_processes.bricks.preprocess.fsl.processes.Bet.__init__", false]], "__init__() (mia_processes.bricks.preprocess.fsl.processes.betsurfacesextraction method)": [[165, "mia_processes.bricks.preprocess.fsl.processes.BetSurfacesExtraction.__init__", false]], "__init__() (mia_processes.bricks.preprocess.fsl.processes.convertxfm method)": [[165, "mia_processes.bricks.preprocess.fsl.processes.ConvertXFM.__init__", false]], "__init__() (mia_processes.bricks.preprocess.fsl.processes.epireg method)": [[165, "mia_processes.bricks.preprocess.fsl.processes.EpiReg.__init__", false]], "__init__() (mia_processes.bricks.preprocess.fsl.processes.extractroi method)": [[165, "mia_processes.bricks.preprocess.fsl.processes.ExtractROI.__init__", false]], "__init__() (mia_processes.bricks.preprocess.fsl.processes.fastsegment method)": [[165, "mia_processes.bricks.preprocess.fsl.processes.FastSegment.__init__", false]], "__init__() (mia_processes.bricks.preprocess.fsl.processes.flirt method)": [[165, "mia_processes.bricks.preprocess.fsl.processes.Flirt.__init__", false]], "__init__() (mia_processes.bricks.preprocess.fsl.processes.smooth method)": [[165, "mia_processes.bricks.preprocess.fsl.processes.Smooth.__init__", false]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.constrainedsphericaldeconvolution method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.ConstrainedSphericalDeconvolution.__init__", false]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.dwibiascorrect method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.DWIBiasCorrect.__init__", false]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.dwibrainmask method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.DWIBrainMask.__init__", false]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.dwicat method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.DWICat.__init__", false]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.dwidenoise method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.DWIDenoise.__init__", false]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.dwiextract method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.DWIExtract.__init__", false]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.dwipreproc method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.DWIPreproc.__init__", false]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.editingtrack method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.EditingTrack.__init__", false]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.filteringtrack method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.FilteringTrack.__init__", false]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.fittensor method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.FitTensor.__init__", false]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.generate5tt2gmwmi method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.Generate5tt2gmwmi.__init__", false]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.generate5ttfsl method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.Generate5ttfsl.__init__", false]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.mrcat method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.MRCat.__init__", false]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.mrconvert method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.MRConvert.__init__", false]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.mrdegibbs method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.MRDeGibbs.__init__", false]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.mrgridregrid method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.MRGridRegrid.__init__", false]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.mrmath method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.MRMath.__init__", false]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.mrtransform method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.MRTransform.__init__", false]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.mtnormalise method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.MTNormalise.__init__", false]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.responsesddhollander method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.ResponseSDDhollander.__init__", false]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.responsesdtournier method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.ResponseSDTournier.__init__", false]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.sphericalharmonicextraction method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.SphericalHarmonicExtraction.__init__", false]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.tensormetrics method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.TensorMetrics.__init__", false]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.tractography method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.Tractography.__init__", false]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.transformfslconvert method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.TransformFSLConvert.__init__", false]], "__init__() (mia_processes.bricks.preprocess.others.processing.applybiascorrection method)": [[167, "mia_processes.bricks.preprocess.others.processing.ApplyBiasCorrection.__init__", false]], "__init__() (mia_processes.bricks.preprocess.others.processing.artifactmask method)": [[167, "mia_processes.bricks.preprocess.others.processing.ArtifactMask.__init__", false]], "__init__() (mia_processes.bricks.preprocess.others.processing.binarize method)": [[167, "mia_processes.bricks.preprocess.others.processing.Binarize.__init__", false]], "__init__() (mia_processes.bricks.preprocess.others.processing.conformimage method)": [[167, "mia_processes.bricks.preprocess.others.processing.ConformImage.__init__", false]], "__init__() (mia_processes.bricks.preprocess.others.processing.convroi method)": [[167, "mia_processes.bricks.preprocess.others.processing.ConvROI.__init__", false]], "__init__() (mia_processes.bricks.preprocess.others.processing.enhance method)": [[167, "mia_processes.bricks.preprocess.others.processing.Enhance.__init__", false]], "__init__() (mia_processes.bricks.preprocess.others.processing.estimatesnr method)": [[167, "mia_processes.bricks.preprocess.others.processing.EstimateSNR.__init__", false]], "__init__() (mia_processes.bricks.preprocess.others.processing.extractroibylabel method)": [[167, "mia_processes.bricks.preprocess.others.processing.ExtractROIbyLabel.__init__", false]], "__init__() (mia_processes.bricks.preprocess.others.processing.extractsignalroi method)": [[167, "mia_processes.bricks.preprocess.others.processing.ExtractSignalROI.__init__", false]], "__init__() (mia_processes.bricks.preprocess.others.processing.gradientthreshold method)": [[167, "mia_processes.bricks.preprocess.others.processing.GradientThreshold.__init__", false]], "__init__() (mia_processes.bricks.preprocess.others.processing.harmonize method)": [[167, "mia_processes.bricks.preprocess.others.processing.Harmonize.__init__", false]], "__init__() (mia_processes.bricks.preprocess.others.processing.intensityclip method)": [[167, "mia_processes.bricks.preprocess.others.processing.IntensityClip.__init__", false]], "__init__() (mia_processes.bricks.preprocess.others.processing.mask method)": [[167, "mia_processes.bricks.preprocess.others.processing.Mask.__init__", false]], "__init__() (mia_processes.bricks.preprocess.others.processing.nonsteadystatedetector method)": [[167, "mia_processes.bricks.preprocess.others.processing.NonSteadyStateDetector.__init__", false]], "__init__() (mia_processes.bricks.preprocess.others.processing.resample1 method)": [[167, "mia_processes.bricks.preprocess.others.processing.Resample1.__init__", false]], "__init__() (mia_processes.bricks.preprocess.others.processing.resample2 method)": [[167, "mia_processes.bricks.preprocess.others.processing.Resample2.__init__", false]], "__init__() (mia_processes.bricks.preprocess.others.processing.rotationmask method)": [[167, "mia_processes.bricks.preprocess.others.processing.RotationMask.__init__", false]], "__init__() (mia_processes.bricks.preprocess.others.processing.sanitize method)": [[167, "mia_processes.bricks.preprocess.others.processing.Sanitize.__init__", false]], "__init__() (mia_processes.bricks.preprocess.others.processing.templatefromtemplateflow method)": [[167, "mia_processes.bricks.preprocess.others.processing.TemplateFromTemplateFlow.__init__", false]], "__init__() (mia_processes.bricks.preprocess.others.processing.threshold method)": [[167, "mia_processes.bricks.preprocess.others.processing.Threshold.__init__", false]], "__init__() (mia_processes.bricks.preprocess.others.processing.tsnr method)": [[167, "mia_processes.bricks.preprocess.others.processing.TSNR.__init__", false]], "__init__() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.coregister method)": [[168, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Coregister.__init__", false]], "__init__() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.gm_wm_normalize method)": [[168, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.GM_WM_Normalize.__init__", false]], "__init__() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.newsegment method)": [[168, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.NewSegment.__init__", false]], "__init__() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.normalize12 method)": [[168, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Normalize12.__init__", false]], "__init__() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.realign method)": [[168, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Realign.__init__", false]], "__init__() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.slicetiming method)": [[168, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.SliceTiming.__init__", false]], "__init__() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.smooth method)": [[168, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Smooth.__init__", false]], "__init__() (mia_processes.bricks.reports.processes.anatiqms method)": [[169, "mia_processes.bricks.reports.processes.AnatIQMs.__init__", false]], "__init__() (mia_processes.bricks.reports.processes.boldiqms method)": [[169, "mia_processes.bricks.reports.processes.BoldIQMs.__init__", false]], "__init__() (mia_processes.bricks.reports.processes.boldiqmsplot method)": [[169, "mia_processes.bricks.reports.processes.BoldIQMsPlot.__init__", false]], "__init__() (mia_processes.bricks.reports.processes.carpetparcellation method)": [[169, "mia_processes.bricks.reports.processes.CarpetParcellation.__init__", false]], "__init__() (mia_processes.bricks.reports.processes.computedvars method)": [[169, "mia_processes.bricks.reports.processes.ComputeDVARS.__init__", false]], "__init__() (mia_processes.bricks.reports.processes.framewisedisplacement method)": [[169, "mia_processes.bricks.reports.processes.FramewiseDisplacement.__init__", false]], "__init__() (mia_processes.bricks.reports.processes.lateralizationindexcurve method)": [[169, "mia_processes.bricks.reports.processes.LateralizationIndexCurve.__init__", false]], "__init__() (mia_processes.bricks.reports.processes.mean_stddev_calc method)": [[169, "mia_processes.bricks.reports.processes.Mean_stdDev_calc.__init__", false]], "__init__() (mia_processes.bricks.reports.processes.plotsignalroi method)": [[169, "mia_processes.bricks.reports.processes.PlotSignalROI.__init__", false]], "__init__() (mia_processes.bricks.reports.processes.result_collector method)": [[169, "mia_processes.bricks.reports.processes.Result_collector.__init__", false]], "__init__() (mia_processes.bricks.reports.processes.spikes method)": [[169, "mia_processes.bricks.reports.processes.Spikes.__init__", false]], "__init__() (mia_processes.bricks.reports.reporting.reportanatmriqc method)": [[169, "mia_processes.bricks.reports.reporting.ReportAnatMriqc.__init__", false]], "__init__() (mia_processes.bricks.reports.reporting.reportco2inhalcvr method)": [[169, "mia_processes.bricks.reports.reporting.ReportCO2inhalCvr.__init__", false]], "__init__() (mia_processes.bricks.reports.reporting.reportfuncmriqc method)": [[169, "mia_processes.bricks.reports.reporting.ReportFuncMriqc.__init__", false]], "__init__() (mia_processes.bricks.reports.reporting.reportge2rec method)": [[169, "mia_processes.bricks.reports.reporting.ReportGE2REC.__init__", false]], "__init__() (mia_processes.bricks.reports.reporting.reportgroupmriqc method)": [[169, "mia_processes.bricks.reports.reporting.ReportGroupMriqc.__init__", false]], "__init__() (mia_processes.bricks.reports.reporting.reportperfdsc method)": [[169, "mia_processes.bricks.reports.reporting.ReportPerfDsc.__init__", false]], "__init__() (mia_processes.bricks.stat.spm.model.estimatecontrast method)": [[171, "mia_processes.bricks.stat.spm.model.EstimateContrast.__init__", false]], "__init__() (mia_processes.bricks.stat.spm.model.estimatemodel method)": [[171, "mia_processes.bricks.stat.spm.model.EstimateModel.__init__", false]], "__init__() (mia_processes.bricks.stat.spm.model.level1design method)": [[171, "mia_processes.bricks.stat.spm.model.Level1Design.__init__", false]], "__init__() (mia_processes.bricks.stat.spm.model.multipleregressiondesign method)": [[171, "mia_processes.bricks.stat.spm.model.MultipleRegressionDesign.__init__", false]], "__init__() (mia_processes.bricks.stat.spm.model.onesamplettestdesign method)": [[171, "mia_processes.bricks.stat.spm.model.OneSampleTTestDesign.__init__", false]], "__init__() (mia_processes.bricks.stat.spm.model.pairedttestdesign method)": [[171, "mia_processes.bricks.stat.spm.model.PairedTTestDesign.__init__", false]], "__init__() (mia_processes.bricks.stat.spm.model.twosamplettestdesign method)": [[171, "mia_processes.bricks.stat.spm.model.TwoSampleTTestDesign.__init__", false]], "__init__() (mia_processes.bricks.tools.tools.concat_to_list method)": [[172, "mia_processes.bricks.tools.tools.Concat_to_list.__init__", false]], "__init__() (mia_processes.bricks.tools.tools.concat_to_list_of_list method)": [[172, "mia_processes.bricks.tools.tools.Concat_to_list_of_list.__init__", false]], "__init__() (mia_processes.bricks.tools.tools.deconv_from_aif method)": [[172, "mia_processes.bricks.tools.tools.Deconv_from_aif.__init__", false]], "__init__() (mia_processes.bricks.tools.tools.delete_data method)": [[172, "mia_processes.bricks.tools.tools.Delete_data.__init__", false]], "__init__() (mia_processes.bricks.tools.tools.files_to_list method)": [[172, "mia_processes.bricks.tools.tools.Files_To_List.__init__", false]], "__init__() (mia_processes.bricks.tools.tools.filter_files_list method)": [[172, "mia_processes.bricks.tools.tools.Filter_Files_List.__init__", false]], "__init__() (mia_processes.bricks.tools.tools.find_in_list method)": [[172, "mia_processes.bricks.tools.tools.Find_In_List.__init__", false]], "__init__() (mia_processes.bricks.tools.tools.get_conditions_from_bids_tsv method)": [[172, "mia_processes.bricks.tools.tools.Get_Conditions_From_BIDS_tsv.__init__", false]], "__init__() (mia_processes.bricks.tools.tools.get_conditions_from_csv method)": [[172, "mia_processes.bricks.tools.tools.Get_Conditions_From_csv.__init__", false]], "__init__() (mia_processes.bricks.tools.tools.get_eprime_info_ge2rec method)": [[172, "mia_processes.bricks.tools.tools.Get_Eprime_Info_GE2REC.__init__", false]], "__init__() (mia_processes.bricks.tools.tools.get_patient_name method)": [[172, "mia_processes.bricks.tools.tools.Get_Patient_Name.__init__", false]], "__init__() (mia_processes.bricks.tools.tools.get_regressors_from_csv method)": [[172, "mia_processes.bricks.tools.tools.Get_Regressors_From_csv.__init__", false]], "__init__() (mia_processes.bricks.tools.tools.import_data method)": [[172, "mia_processes.bricks.tools.tools.Import_Data.__init__", false]], "__init__() (mia_processes.bricks.tools.tools.input_filter method)": [[172, "mia_processes.bricks.tools.tools.Input_Filter.__init__", false]], "__init__() (mia_processes.bricks.tools.tools.list_duplicate method)": [[172, "mia_processes.bricks.tools.tools.List_Duplicate.__init__", false]], "__init__() (mia_processes.bricks.tools.tools.list_to_file method)": [[172, "mia_processes.bricks.tools.tools.List_To_File.__init__", false]], "__init__() (mia_processes.bricks.tools.tools.make_a_list method)": [[172, "mia_processes.bricks.tools.tools.Make_A_List.__init__", false]], "__init__() (mia_processes.bricks.tools.tools.make_aif method)": [[172, "mia_processes.bricks.tools.tools.Make_AIF.__init__", false]], "__init__() (mia_processes.bricks.tools.tools.make_cvr_reg_physio method)": [[172, "mia_processes.bricks.tools.tools.Make_CVR_reg_physio.__init__", false]], "__init__() (mia_processes.process_matlab.processmatlab method)": [[158, "mia_processes.process_matlab.ProcessMatlab.__init__", false]], "__init__() (mia_processes.utils.report.report method)": [[180, "mia_processes.utils.report.Report.__init__", false]], "__init__() (mia_processes.utils.tools.pagenumcanvas method)": [[180, "mia_processes.utils.tools.PageNumCanvas.__init__", false]], "__init__() (mia_processes.utils.tools.reportline method)": [[180, "mia_processes.utils.tools.ReportLine.__init__", false]], "add_exit() (mia_processes.process_matlab.processmatlab method)": [[158, "mia_processes.process_matlab.ProcessMatlab.add_exit", false]], "add_path() (mia_processes.process_matlab.processmatlab method)": [[158, "mia_processes.process_matlab.ProcessMatlab.add_path", false]], "affineinitializer (class in mia_processes.bricks.preprocess.ants.processes)": [[162, "mia_processes.bricks.preprocess.ants.processes.AffineInitializer", false]], "anat_airmask (class in mia_processes.pipelines.preprocess.anat_airmask)": [[176, "mia_processes.pipelines.preprocess.anat_airmask.Anat_airmask", false]], "anat_headmask (class in mia_processes.pipelines.preprocess.anat_headmask)": [[176, "mia_processes.pipelines.preprocess.anat_headmask.Anat_headmask", false]], "anat_mni_tpms (class in mia_processes.pipelines.preprocess.anat_mni_tpms)": [[176, "mia_processes.pipelines.preprocess.anat_mni_tpms.Anat_mni_tpms", false]], "anat_mriqc (class in mia_processes.pipelines.qualitycontrol.anat_mriqc)": [[177, "mia_processes.pipelines.qualityControl.anat_mriqc.Anat_mriqc", false]], "anat_skullstrip (class in mia_processes.pipelines.preprocess.anat_skullstrip)": [[176, "mia_processes.pipelines.preprocess.anat_skullstrip.Anat_skullstrip", false]], "anat_skullstrip_synthstrip (class in mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip)": [[176, "mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip.Anat_skullstrip_synthstrip", false]], "anat_spatial_norm (class in mia_processes.pipelines.preprocess.anat_spatial_norm)": [[176, "mia_processes.pipelines.preprocess.anat_spatial_norm.Anat_spatial_norm", false]], "anatiqms (class in mia_processes.bricks.reports.processes)": [[169, "mia_processes.bricks.reports.processes.AnatIQMs", false]], "applybiascorrection (class in mia_processes.bricks.preprocess.others.processing)": [[167, "mia_processes.bricks.preprocess.others.processing.ApplyBiasCorrection", false]], "applytransforms (class in mia_processes.bricks.preprocess.ants.processes)": [[162, "mia_processes.bricks.preprocess.ants.processes.ApplyTransforms", false]], "art_qi1() (in module mia_processes.bricks.reports.processes)": [[169, "mia_processes.bricks.reports.processes.art_qi1", false]], "art_qi2() (in module mia_processes.bricks.reports.processes)": [[169, "mia_processes.bricks.reports.processes.art_qi2", false]], "artifact_mask() (in module mia_processes.bricks.preprocess.others.processing)": [[167, "mia_processes.bricks.preprocess.others.processing.artifact_mask", false]], "artifactmask (class in mia_processes.bricks.preprocess.others.processing)": [[167, "mia_processes.bricks.preprocess.others.processing.ArtifactMask", false]], "automask (class in mia_processes.bricks.preprocess.afni.processes)": [[161, "mia_processes.bricks.preprocess.afni.processes.Automask", false]], "bet (class in mia_processes.bricks.preprocess.fsl.processes)": [[165, "mia_processes.bricks.preprocess.fsl.processes.Bet", false]], "betsurfacesextraction (class in mia_processes.bricks.preprocess.fsl.processes)": [[165, "mia_processes.bricks.preprocess.fsl.processes.BetSurfacesExtraction", false]], "binarize (class in mia_processes.bricks.preprocess.freesurfer.processes)": [[164, "mia_processes.bricks.preprocess.freesurfer.processes.Binarize", false]], "binarize (class in mia_processes.bricks.preprocess.others.processing)": [[167, "mia_processes.bricks.preprocess.others.processing.Binarize", false]], "bol_ar_time() (mia_processes.bricks.tools.tools.deconv_from_aif method)": [[172, "mia_processes.bricks.tools.tools.Deconv_from_aif.bol_ar_time", false]], "bol_ar_time() (mia_processes.bricks.tools.tools.make_aif method)": [[172, "mia_processes.bricks.tools.tools.Make_AIF.bol_ar_time", false]], "bold_hmc (class in mia_processes.pipelines.preprocess.bold_hmc)": [[176, "mia_processes.pipelines.preprocess.bold_hmc.Bold_hmc", false]], "bold_iqms (class in mia_processes.pipelines.reports.bold_iqms)": [[178, "mia_processes.pipelines.reports.bold_iqms.Bold_iqms", false]], "bold_mni_align (class in mia_processes.pipelines.preprocess.bold_mni_align)": [[176, "mia_processes.pipelines.preprocess.bold_mni_align.Bold_mni_align", false]], "bold_mriqc (class in mia_processes.pipelines.qualitycontrol.bold_mriqc)": [[177, "mia_processes.pipelines.qualityControl.bold_mriqc.Bold_mriqc", false]], "bold_spatial_preprocessing1 (class in mia_processes.pipelines.preprocess.bold_spatial_preprocessing1)": [[176, "mia_processes.pipelines.preprocess.bold_spatial_preprocessing1.Bold_spatial_preprocessing1", false]], "bold_spatial_preprocessing2 (class in mia_processes.pipelines.preprocess.bold_spatial_preprocessing2)": [[176, "mia_processes.pipelines.preprocess.bold_spatial_preprocessing2.Bold_spatial_preprocessing2", false]], "bold_stat_cvr (class in mia_processes.pipelines.stat.bold_stat_cvr)": [[179, "mia_processes.pipelines.stat.bold_stat_cvr.Bold_stat_cvr", false]], "boldiqms (class in mia_processes.bricks.reports.processes)": [[169, "mia_processes.bricks.reports.processes.BoldIQMs", false]], "boldiqmsplot (class in mia_processes.bricks.reports.processes)": [[169, "mia_processes.bricks.reports.processes.BoldIQMsPlot", false]], "calc (class in mia_processes.bricks.preprocess.afni.processes)": [[161, "mia_processes.bricks.preprocess.afni.processes.Calc", false]], "calcdroptrs (class in mia_processes.bricks.preprocess.afni.processes)": [[161, "mia_processes.bricks.preprocess.afni.processes.CalcDropTRs", false]], "carpetparcellation (class in mia_processes.bricks.reports.processes)": [[169, "mia_processes.bricks.reports.processes.CarpetParcellation", false]], "change_directory() (mia_processes.process_matlab.processmatlab method)": [[158, "mia_processes.process_matlab.ProcessMatlab.change_directory", false]], "check_orientations() (in module mia_processes.utils.tools)": [[180, "mia_processes.utils.tools.check_orientations", false]], "checkfileext() (in module mia_processes.utils.tools)": [[180, "mia_processes.utils.tools.checkFileExt", false]], "cjv() (in module mia_processes.bricks.reports.processes)": [[169, "mia_processes.bricks.reports.processes.cjv", false]], "cnr() (in module mia_processes.bricks.reports.processes)": [[169, "mia_processes.bricks.reports.processes.cnr", false]], "co2_inhal_cvr_make_report() (mia_processes.utils.report.report method)": [[180, "mia_processes.utils.report.Report.co2_inhal_cvr_make_report", false]], "co2_inhalation (class in mia_processes.pipelines.cerebvascularreact.co2_inhalation)": [[174, "mia_processes.pipelines.CerebVascularReact.co2_inhalation.CO2_inhalation", false]], "computedki (class in mia_processes.bricks.preprocess.dipy.processes)": [[163, "mia_processes.bricks.preprocess.dipy.processes.ComputeDKI", false]], "computedvars (class in mia_processes.bricks.reports.processes)": [[169, "mia_processes.bricks.reports.processes.ComputeDVARS", false]], "concat_to_list (class in mia_processes.bricks.tools.tools)": [[172, "mia_processes.bricks.tools.tools.Concat_to_list", false]], "concat_to_list_of_list (class in mia_processes.bricks.tools.tools)": [[172, "mia_processes.bricks.tools.tools.Concat_to_list_of_list", false]], "conform() (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc method)": [[164, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.conform", false]], "conformimage (class in mia_processes.bricks.preprocess.others.processing)": [[167, "mia_processes.bricks.preprocess.others.processing.ConformImage", false]], "constrainedsphericaldeconvolution (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.ConstrainedSphericalDeconvolution", false]], "convert_to_native_types() (mia_processes.bricks.tools.tools.make_aif method)": [[172, "mia_processes.bricks.tools.tools.Make_AIF.convert_to_native_types", false]], "convertxfm (class in mia_processes.bricks.preprocess.fsl.processes)": [[165, "mia_processes.bricks.preprocess.fsl.processes.ConvertXFM", false]], "convroi (class in mia_processes.bricks.preprocess.others.processing)": [[167, "mia_processes.bricks.preprocess.others.processing.ConvROI", false]], "coregister (class in mia_processes.bricks.preprocess.spm.spatial_preprocessing)": [[168, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Coregister", false]], "deconv_from_aif (class in mia_processes.bricks.tools.tools)": [[172, "mia_processes.bricks.tools.tools.Deconv_from_aif", false]], "deconv_osvd() (mia_processes.bricks.tools.tools.deconv_from_aif method)": [[172, "mia_processes.bricks.tools.tools.Deconv_from_aif.deconv_osvd", false]], "del_dbfieldvalue() (in module mia_processes.utils.tools)": [[180, "mia_processes.utils.tools.del_dbFieldValue", false]], "delete_data (class in mia_processes.bricks.tools.tools)": [[172, "mia_processes.bricks.tools.tools.Delete_data", false]], "delta_r2star() (mia_processes.bricks.tools.tools.deconv_from_aif method)": [[172, "mia_processes.bricks.tools.tools.Deconv_from_aif.delta_r2star", false]], "denoise (class in mia_processes.bricks.preprocess.dipy.processes)": [[163, "mia_processes.bricks.preprocess.dipy.processes.Denoise", false]], "despike (class in mia_processes.bricks.preprocess.afni.processes)": [[161, "mia_processes.bricks.preprocess.afni.processes.Despike", false]], "dict4runtime_update() (in module mia_processes.utils.tools)": [[180, "mia_processes.utils.tools.dict4runtime_update", false]], "display_parameter() (mia_processes.process_matlab.processmatlab method)": [[158, "mia_processes.process_matlab.ProcessMatlab.display_parameter", false]], "draw() (mia_processes.utils.tools.reportline method)": [[180, "mia_processes.utils.tools.ReportLine.draw", false]], "draw_page_number() (mia_processes.utils.tools.pagenumcanvas method)": [[180, "mia_processes.utils.tools.PageNumCanvas.draw_page_number", false]], "dwi_fod_msmt_csd (class in mia_processes.pipelines.preprocess.dwi_fod_msmt_csd)": [[176, "mia_processes.pipelines.preprocess.dwi_fod_msmt_csd.Dwi_fod_msmt_csd", false]], "dwi_preprocessing (class in mia_processes.pipelines.preprocess.dwi_preprocessing)": [[176, "mia_processes.pipelines.preprocess.dwi_preprocessing.Dwi_preprocessing", false]], "dwi_whole_brain_tractography (class in mia_processes.pipelines.dwitractography.dwi_whole_brain_tractography)": [[175, "mia_processes.pipelines.DWITractography.dwi_whole_brain_tractography.Dwi_whole_brain_tractography", false]], "dwibiascorrect (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.DWIBiasCorrect", false]], "dwibrainmask (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.DWIBrainMask", false]], "dwicat (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.DWICat", false]], "dwidenoise (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.DWIDenoise", false]], "dwiextract (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.DWIExtract", false]], "dwipreproc (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.DWIPreproc", false]], "editingtrack (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.EditingTrack", false]], "efc() (in module mia_processes.bricks.reports.processes)": [[169, "mia_processes.bricks.reports.processes.efc", false]], "enhance (class in mia_processes.bricks.preprocess.others.processing)": [[167, "mia_processes.bricks.preprocess.others.processing.Enhance", false]], "epireg (class in mia_processes.bricks.preprocess.fsl.processes)": [[165, "mia_processes.bricks.preprocess.fsl.processes.EpiReg", false]], "estimatecontrast (class in mia_processes.bricks.stat.spm.model)": [[171, "mia_processes.bricks.stat.spm.model.EstimateContrast", false]], "estimatemodel (class in mia_processes.bricks.stat.spm.model)": [[171, "mia_processes.bricks.stat.spm.model.EstimateModel", false]], "estimatesnr (class in mia_processes.bricks.preprocess.others.processing)": [[167, "mia_processes.bricks.preprocess.others.processing.EstimateSNR", false]], "extract_roi_param (class in mia_processes.pipelines.reports.extract_roi_param)": [[178, "mia_processes.pipelines.reports.extract_roi_param.Extract_roi_param", false]], "extractroi (class in mia_processes.bricks.preprocess.fsl.processes)": [[165, "mia_processes.bricks.preprocess.fsl.processes.ExtractROI", false]], "extractroibylabel (class in mia_processes.bricks.preprocess.others.processing)": [[167, "mia_processes.bricks.preprocess.others.processing.ExtractROIbyLabel", false]], "extractsignalroi (class in mia_processes.bricks.preprocess.others.processing)": [[167, "mia_processes.bricks.preprocess.others.processing.ExtractSignalROI", false]], "fastsegment (class in mia_processes.bricks.preprocess.fsl.processes)": [[165, "mia_processes.bricks.preprocess.fsl.processes.FastSegment", false]], "fber() (in module mia_processes.bricks.reports.processes)": [[169, "mia_processes.bricks.reports.processes.fber", false]], "files_to_list (class in mia_processes.bricks.tools.tools)": [[172, "mia_processes.bricks.tools.tools.Files_To_List", false]], "filter_files_list (class in mia_processes.bricks.tools.tools)": [[172, "mia_processes.bricks.tools.tools.Filter_Files_List", false]], "filteringtrack (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.FilteringTrack", false]], "find_in_list (class in mia_processes.bricks.tools.tools)": [[172, "mia_processes.bricks.tools.tools.Find_In_List", false]], "find_peaks() (in module mia_processes.bricks.reports.processes)": [[169, "mia_processes.bricks.reports.processes.find_peaks", false]], "find_spikes() (in module mia_processes.bricks.reports.processes)": [[169, "mia_processes.bricks.reports.processes.find_spikes", false]], "fittensor (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.FitTensor", false]], "flirt (class in mia_processes.bricks.preprocess.fsl.processes)": [[165, "mia_processes.bricks.preprocess.fsl.processes.Flirt", false]], "forward() (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc.convblock method)": [[164, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.ConvBlock.forward", false]], "forward() (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc.stripmodel method)": [[164, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.StripModel.forward", false]], "framewisedisplacement (class in mia_processes.bricks.reports.processes)": [[169, "mia_processes.bricks.reports.processes.FramewiseDisplacement", false]], "fuzzy_jaccard() (in module mia_processes.bricks.reports.processes)": [[169, "mia_processes.bricks.reports.processes.fuzzy_jaccard", false]], "fwhmx (class in mia_processes.bricks.preprocess.afni.processes)": [[161, "mia_processes.bricks.preprocess.afni.processes.FWHMx", false]], "gaussfir() (mia_processes.bricks.tools.tools.make_cvr_reg_physio method)": [[172, "mia_processes.bricks.tools.tools.Make_CVR_reg_physio.gaussfir", false]], "gcor (class in mia_processes.bricks.preprocess.afni.processes)": [[161, "mia_processes.bricks.preprocess.afni.processes.GCOR", false]], "ge2rec_make_report() (mia_processes.utils.report.report method)": [[180, "mia_processes.utils.report.Report.ge2rec_make_report", false]], "generate5tt2gmwmi (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.Generate5tt2gmwmi", false]], "generate5ttfsl (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.Generate5ttfsl", false]], "get_conditions_from_bids_tsv (class in mia_processes.bricks.tools.tools)": [[172, "mia_processes.bricks.tools.tools.Get_Conditions_From_BIDS_tsv", false]], "get_conditions_from_csv (class in mia_processes.bricks.tools.tools)": [[172, "mia_processes.bricks.tools.tools.Get_Conditions_From_csv", false]], "get_covariates() (in module mia_processes.bricks.stat.spm.model)": [[171, "mia_processes.bricks.stat.spm.model.get_covariates", false]], "get_dbfieldvalue() (in module mia_processes.utils.tools)": [[180, "mia_processes.utils.tools.get_dbFieldValue", false]], "get_eprime_info_ge2rec (class in mia_processes.bricks.tools.tools)": [[172, "mia_processes.bricks.tools.tools.Get_Eprime_Info_GE2REC", false]], "get_gitversion() (in module mia_processes.info)": [[158, "mia_processes.info.get_gitversion", false]], "get_iqms_data() (mia_processes.utils.report.report method)": [[180, "mia_processes.utils.report.Report.get_iqms_data", false]], "get_patient_name (class in mia_processes.bricks.tools.tools)": [[172, "mia_processes.bricks.tools.tools.Get_Patient_Name", false]], "get_regressors_from_csv (class in mia_processes.bricks.tools.tools)": [[172, "mia_processes.bricks.tools.tools.Get_Regressors_From_csv", false]], "gfb_conv() (mia_processes.bricks.tools.tools.make_cvr_reg_physio method)": [[172, "mia_processes.bricks.tools.tools.Make_CVR_reg_physio.gfb_conv", false]], "gm_wm_normalize (class in mia_processes.bricks.preprocess.spm.spatial_preprocessing)": [[168, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.GM_WM_Normalize", false]], "gradientthreshold (class in mia_processes.bricks.preprocess.others.processing)": [[167, "mia_processes.bricks.preprocess.others.processing.GradientThreshold", false]], "gsr() (in module mia_processes.bricks.reports.processes)": [[169, "mia_processes.bricks.reports.processes.gsr", false]], "harmonize (class in mia_processes.bricks.preprocess.others.processing)": [[167, "mia_processes.bricks.preprocess.others.processing.Harmonize", false]], "image_binary_dilation() (in module mia_processes.bricks.reports.processes)": [[169, "mia_processes.bricks.reports.processes.image_binary_dilation", false]], "import_data (class in mia_processes.bricks.tools.tools)": [[172, "mia_processes.bricks.tools.tools.Import_Data", false]], "input_filter (class in mia_processes.bricks.tools.tools)": [[172, "mia_processes.bricks.tools.tools.Input_Filter", false]], "intensityclip (class in mia_processes.bricks.preprocess.others.processing)": [[167, "mia_processes.bricks.preprocess.others.processing.IntensityClip", false]], "is_outlier() (in module mia_processes.bricks.preprocess.others.processing)": [[167, "mia_processes.bricks.preprocess.others.processing.is_outlier", false]], "lateralization_index_iter_curves() (in module mia_processes.bricks.reports.processes)": [[169, "mia_processes.bricks.reports.processes.lateralization_index_iter_curves", false]], "lateralizationindexcurve (class in mia_processes.bricks.reports.processes)": [[169, "mia_processes.bricks.reports.processes.LateralizationIndexCurve", false]], "level1design (class in mia_processes.bricks.stat.spm.model)": [[171, "mia_processes.bricks.stat.spm.model.Level1Design", false]], "list_duplicate (class in mia_processes.bricks.tools.tools)": [[172, "mia_processes.bricks.tools.tools.List_Duplicate", false]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.automask method)": [[161, "mia_processes.bricks.preprocess.afni.processes.Automask.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.calc method)": [[161, "mia_processes.bricks.preprocess.afni.processes.Calc.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.calcdroptrs method)": [[161, "mia_processes.bricks.preprocess.afni.processes.CalcDropTRs.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.despike method)": [[161, "mia_processes.bricks.preprocess.afni.processes.Despike.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.fwhmx method)": [[161, "mia_processes.bricks.preprocess.afni.processes.FWHMx.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.gcor method)": [[161, "mia_processes.bricks.preprocess.afni.processes.GCOR.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.outliercount method)": [[161, "mia_processes.bricks.preprocess.afni.processes.OutlierCount.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.qualityindex method)": [[161, "mia_processes.bricks.preprocess.afni.processes.QualityIndex.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.refitdeoblique method)": [[161, "mia_processes.bricks.preprocess.afni.processes.RefitDeoblique.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.skullstrip method)": [[161, "mia_processes.bricks.preprocess.afni.processes.SkullStrip.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.tshift method)": [[161, "mia_processes.bricks.preprocess.afni.processes.TShift.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.tstatmean method)": [[161, "mia_processes.bricks.preprocess.afni.processes.TStatMean.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.volreg method)": [[161, "mia_processes.bricks.preprocess.afni.processes.Volreg.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.ants.processes.affineinitializer method)": [[162, "mia_processes.bricks.preprocess.ants.processes.AffineInitializer.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.ants.processes.applytransforms method)": [[162, "mia_processes.bricks.preprocess.ants.processes.ApplyTransforms.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.ants.processes.n4biasfieldcorrection method)": [[162, "mia_processes.bricks.preprocess.ants.processes.N4BiasFieldCorrection.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.ants.processes.registration method)": [[162, "mia_processes.bricks.preprocess.ants.processes.Registration.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.dipy.processes.computedki method)": [[163, "mia_processes.bricks.preprocess.dipy.processes.ComputeDKI.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.dipy.processes.denoise method)": [[163, "mia_processes.bricks.preprocess.dipy.processes.Denoise.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.freesurfer.processes.binarize method)": [[164, "mia_processes.bricks.preprocess.freesurfer.processes.Binarize.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.freesurfer.processes.synthstrip method)": [[164, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStrip.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc method)": [[164, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.fsl.processes.bet method)": [[165, "mia_processes.bricks.preprocess.fsl.processes.Bet.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.fsl.processes.betsurfacesextraction method)": [[165, "mia_processes.bricks.preprocess.fsl.processes.BetSurfacesExtraction.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.fsl.processes.convertxfm method)": [[165, "mia_processes.bricks.preprocess.fsl.processes.ConvertXFM.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.fsl.processes.epireg method)": [[165, "mia_processes.bricks.preprocess.fsl.processes.EpiReg.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.fsl.processes.extractroi method)": [[165, "mia_processes.bricks.preprocess.fsl.processes.ExtractROI.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.fsl.processes.fastsegment method)": [[165, "mia_processes.bricks.preprocess.fsl.processes.FastSegment.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.fsl.processes.flirt method)": [[165, "mia_processes.bricks.preprocess.fsl.processes.Flirt.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.fsl.processes.smooth method)": [[165, "mia_processes.bricks.preprocess.fsl.processes.Smooth.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.constrainedsphericaldeconvolution method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.ConstrainedSphericalDeconvolution.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.dwibiascorrect method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.DWIBiasCorrect.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.dwibrainmask method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.DWIBrainMask.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.dwicat method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.DWICat.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.dwidenoise method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.DWIDenoise.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.dwiextract method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.DWIExtract.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.dwipreproc method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.DWIPreproc.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.editingtrack method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.EditingTrack.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.filteringtrack method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.FilteringTrack.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.fittensor method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.FitTensor.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.generate5tt2gmwmi method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.Generate5tt2gmwmi.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.generate5ttfsl method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.Generate5ttfsl.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.mrcat method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.MRCat.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.mrconvert method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.MRConvert.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.mrdegibbs method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.MRDeGibbs.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.mrgridregrid method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.MRGridRegrid.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.mrmath method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.MRMath.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.mrtransform method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.MRTransform.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.mtnormalise method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.MTNormalise.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.responsesddhollander method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.ResponseSDDhollander.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.responsesdtournier method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.ResponseSDTournier.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.sphericalharmonicextraction method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.SphericalHarmonicExtraction.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.tensormetrics method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.TensorMetrics.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.tractography method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.Tractography.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.transformfslconvert method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.TransformFSLConvert.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.applybiascorrection method)": [[167, "mia_processes.bricks.preprocess.others.processing.ApplyBiasCorrection.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.artifactmask method)": [[167, "mia_processes.bricks.preprocess.others.processing.ArtifactMask.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.binarize method)": [[167, "mia_processes.bricks.preprocess.others.processing.Binarize.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.conformimage method)": [[167, "mia_processes.bricks.preprocess.others.processing.ConformImage.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.convroi method)": [[167, "mia_processes.bricks.preprocess.others.processing.ConvROI.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.enhance method)": [[167, "mia_processes.bricks.preprocess.others.processing.Enhance.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.estimatesnr method)": [[167, "mia_processes.bricks.preprocess.others.processing.EstimateSNR.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.extractroibylabel method)": [[167, "mia_processes.bricks.preprocess.others.processing.ExtractROIbyLabel.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.extractsignalroi method)": [[167, "mia_processes.bricks.preprocess.others.processing.ExtractSignalROI.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.gradientthreshold method)": [[167, "mia_processes.bricks.preprocess.others.processing.GradientThreshold.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.harmonize method)": [[167, "mia_processes.bricks.preprocess.others.processing.Harmonize.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.intensityclip method)": [[167, "mia_processes.bricks.preprocess.others.processing.IntensityClip.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.mask method)": [[167, "mia_processes.bricks.preprocess.others.processing.Mask.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.nonsteadystatedetector method)": [[167, "mia_processes.bricks.preprocess.others.processing.NonSteadyStateDetector.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.resample1 method)": [[167, "mia_processes.bricks.preprocess.others.processing.Resample1.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.resample2 method)": [[167, "mia_processes.bricks.preprocess.others.processing.Resample2.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.rotationmask method)": [[167, "mia_processes.bricks.preprocess.others.processing.RotationMask.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.sanitize method)": [[167, "mia_processes.bricks.preprocess.others.processing.Sanitize.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.templatefromtemplateflow method)": [[167, "mia_processes.bricks.preprocess.others.processing.TemplateFromTemplateFlow.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.threshold method)": [[167, "mia_processes.bricks.preprocess.others.processing.Threshold.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.tsnr method)": [[167, "mia_processes.bricks.preprocess.others.processing.TSNR.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.coregister method)": [[168, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Coregister.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.gm_wm_normalize method)": [[168, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.GM_WM_Normalize.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.newsegment method)": [[168, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.NewSegment.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.normalize12 method)": [[168, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Normalize12.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.realign method)": [[168, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Realign.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.slicetiming method)": [[168, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.SliceTiming.list_outputs", false]], "list_outputs() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.smooth method)": [[168, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Smooth.list_outputs", false]], "list_outputs() (mia_processes.bricks.reports.processes.anatiqms method)": [[169, "mia_processes.bricks.reports.processes.AnatIQMs.list_outputs", false]], "list_outputs() (mia_processes.bricks.reports.processes.boldiqms method)": [[169, "mia_processes.bricks.reports.processes.BoldIQMs.list_outputs", false]], "list_outputs() (mia_processes.bricks.reports.processes.boldiqmsplot method)": [[169, "mia_processes.bricks.reports.processes.BoldIQMsPlot.list_outputs", false]], "list_outputs() (mia_processes.bricks.reports.processes.carpetparcellation method)": [[169, "mia_processes.bricks.reports.processes.CarpetParcellation.list_outputs", false]], "list_outputs() (mia_processes.bricks.reports.processes.computedvars method)": [[169, "mia_processes.bricks.reports.processes.ComputeDVARS.list_outputs", false]], "list_outputs() (mia_processes.bricks.reports.processes.framewisedisplacement method)": [[169, "mia_processes.bricks.reports.processes.FramewiseDisplacement.list_outputs", false]], "list_outputs() (mia_processes.bricks.reports.processes.lateralizationindexcurve method)": [[169, "mia_processes.bricks.reports.processes.LateralizationIndexCurve.list_outputs", false]], "list_outputs() (mia_processes.bricks.reports.processes.mean_stddev_calc method)": [[169, "mia_processes.bricks.reports.processes.Mean_stdDev_calc.list_outputs", false]], "list_outputs() (mia_processes.bricks.reports.processes.plotsignalroi method)": [[169, "mia_processes.bricks.reports.processes.PlotSignalROI.list_outputs", false]], "list_outputs() (mia_processes.bricks.reports.processes.result_collector method)": [[169, "mia_processes.bricks.reports.processes.Result_collector.list_outputs", false]], "list_outputs() (mia_processes.bricks.reports.processes.spikes method)": [[169, "mia_processes.bricks.reports.processes.Spikes.list_outputs", false]], "list_outputs() (mia_processes.bricks.reports.reporting.reportanatmriqc method)": [[169, "mia_processes.bricks.reports.reporting.ReportAnatMriqc.list_outputs", false]], "list_outputs() (mia_processes.bricks.reports.reporting.reportco2inhalcvr method)": [[169, "mia_processes.bricks.reports.reporting.ReportCO2inhalCvr.list_outputs", false]], "list_outputs() (mia_processes.bricks.reports.reporting.reportfuncmriqc method)": [[169, "mia_processes.bricks.reports.reporting.ReportFuncMriqc.list_outputs", false]], "list_outputs() (mia_processes.bricks.reports.reporting.reportge2rec method)": [[169, "mia_processes.bricks.reports.reporting.ReportGE2REC.list_outputs", false]], "list_outputs() (mia_processes.bricks.reports.reporting.reportgroupmriqc method)": [[169, "mia_processes.bricks.reports.reporting.ReportGroupMriqc.list_outputs", false]], "list_outputs() (mia_processes.bricks.reports.reporting.reportperfdsc method)": [[169, "mia_processes.bricks.reports.reporting.ReportPerfDsc.list_outputs", false]], "list_outputs() (mia_processes.bricks.stat.spm.model.estimatecontrast method)": [[171, "mia_processes.bricks.stat.spm.model.EstimateContrast.list_outputs", false]], "list_outputs() (mia_processes.bricks.stat.spm.model.estimatemodel method)": [[171, "mia_processes.bricks.stat.spm.model.EstimateModel.list_outputs", false]], "list_outputs() (mia_processes.bricks.stat.spm.model.level1design method)": [[171, "mia_processes.bricks.stat.spm.model.Level1Design.list_outputs", false]], "list_outputs() (mia_processes.bricks.stat.spm.model.multipleregressiondesign method)": [[171, "mia_processes.bricks.stat.spm.model.MultipleRegressionDesign.list_outputs", false]], "list_outputs() (mia_processes.bricks.stat.spm.model.onesamplettestdesign method)": [[171, "mia_processes.bricks.stat.spm.model.OneSampleTTestDesign.list_outputs", false]], "list_outputs() (mia_processes.bricks.stat.spm.model.pairedttestdesign method)": [[171, "mia_processes.bricks.stat.spm.model.PairedTTestDesign.list_outputs", false]], "list_outputs() (mia_processes.bricks.stat.spm.model.twosamplettestdesign method)": [[171, "mia_processes.bricks.stat.spm.model.TwoSampleTTestDesign.list_outputs", false]], "list_outputs() (mia_processes.bricks.tools.tools.concat_to_list method)": [[172, "mia_processes.bricks.tools.tools.Concat_to_list.list_outputs", false]], "list_outputs() (mia_processes.bricks.tools.tools.concat_to_list_of_list method)": [[172, "mia_processes.bricks.tools.tools.Concat_to_list_of_list.list_outputs", false]], "list_outputs() (mia_processes.bricks.tools.tools.deconv_from_aif method)": [[172, "mia_processes.bricks.tools.tools.Deconv_from_aif.list_outputs", false]], "list_outputs() (mia_processes.bricks.tools.tools.delete_data method)": [[172, "mia_processes.bricks.tools.tools.Delete_data.list_outputs", false]], "list_outputs() (mia_processes.bricks.tools.tools.files_to_list method)": [[172, "mia_processes.bricks.tools.tools.Files_To_List.list_outputs", false]], "list_outputs() (mia_processes.bricks.tools.tools.filter_files_list method)": [[172, "mia_processes.bricks.tools.tools.Filter_Files_List.list_outputs", false]], "list_outputs() (mia_processes.bricks.tools.tools.find_in_list method)": [[172, "mia_processes.bricks.tools.tools.Find_In_List.list_outputs", false]], "list_outputs() (mia_processes.bricks.tools.tools.get_conditions_from_bids_tsv method)": [[172, "mia_processes.bricks.tools.tools.Get_Conditions_From_BIDS_tsv.list_outputs", false]], "list_outputs() (mia_processes.bricks.tools.tools.get_conditions_from_csv method)": [[172, "mia_processes.bricks.tools.tools.Get_Conditions_From_csv.list_outputs", false]], "list_outputs() (mia_processes.bricks.tools.tools.get_eprime_info_ge2rec method)": [[172, "mia_processes.bricks.tools.tools.Get_Eprime_Info_GE2REC.list_outputs", false]], "list_outputs() (mia_processes.bricks.tools.tools.get_patient_name method)": [[172, "mia_processes.bricks.tools.tools.Get_Patient_Name.list_outputs", false]], "list_outputs() (mia_processes.bricks.tools.tools.get_regressors_from_csv method)": [[172, "mia_processes.bricks.tools.tools.Get_Regressors_From_csv.list_outputs", false]], "list_outputs() (mia_processes.bricks.tools.tools.import_data method)": [[172, "mia_processes.bricks.tools.tools.Import_Data.list_outputs", false]], "list_outputs() (mia_processes.bricks.tools.tools.input_filter method)": [[172, "mia_processes.bricks.tools.tools.Input_Filter.list_outputs", false]], "list_outputs() (mia_processes.bricks.tools.tools.list_duplicate method)": [[172, "mia_processes.bricks.tools.tools.List_Duplicate.list_outputs", false]], "list_outputs() (mia_processes.bricks.tools.tools.list_to_file method)": [[172, "mia_processes.bricks.tools.tools.List_To_File.list_outputs", false]], "list_outputs() (mia_processes.bricks.tools.tools.make_a_list method)": [[172, "mia_processes.bricks.tools.tools.Make_A_List.list_outputs", false]], "list_outputs() (mia_processes.bricks.tools.tools.make_aif method)": [[172, "mia_processes.bricks.tools.tools.Make_AIF.list_outputs", false]], "list_outputs() (mia_processes.bricks.tools.tools.make_cvr_reg_physio method)": [[172, "mia_processes.bricks.tools.tools.Make_CVR_reg_physio.list_outputs", false]], "list_to_file (class in mia_processes.bricks.tools.tools)": [[172, "mia_processes.bricks.tools.tools.List_To_File", false]], "make_a_list (class in mia_processes.bricks.tools.tools)": [[172, "mia_processes.bricks.tools.tools.Make_A_List", false]], "make_aif (class in mia_processes.bricks.tools.tools)": [[172, "mia_processes.bricks.tools.tools.Make_AIF", false]], "make_cvr_reg_physio (class in mia_processes.bricks.tools.tools)": [[172, "mia_processes.bricks.tools.tools.Make_CVR_reg_physio", false]], "mask (class in mia_processes.bricks.preprocess.others.processing)": [[167, "mia_processes.bricks.preprocess.others.processing.Mask", false]], "mean_stddev_calc (class in mia_processes.bricks.reports.processes)": [[169, "mia_processes.bricks.reports.processes.Mean_stdDev_calc", false]], "mia_processes": [[158, "module-mia_processes", false]], "mia_processes.bricks": [[159, "module-mia_processes.bricks", false]], "mia_processes.bricks.preprocess": [[160, "module-mia_processes.bricks.preprocess", false]], "mia_processes.bricks.preprocess.afni": [[161, "module-mia_processes.bricks.preprocess.afni", false]], "mia_processes.bricks.preprocess.afni.processes": [[161, "module-mia_processes.bricks.preprocess.afni.processes", false]], "mia_processes.bricks.preprocess.ants": [[162, "module-mia_processes.bricks.preprocess.ants", false]], "mia_processes.bricks.preprocess.ants.processes": [[162, "module-mia_processes.bricks.preprocess.ants.processes", false]], "mia_processes.bricks.preprocess.dipy": [[163, "module-mia_processes.bricks.preprocess.dipy", false]], "mia_processes.bricks.preprocess.dipy.processes": [[163, "module-mia_processes.bricks.preprocess.dipy.processes", false]], "mia_processes.bricks.preprocess.freesurfer": [[164, "module-mia_processes.bricks.preprocess.freesurfer", false]], "mia_processes.bricks.preprocess.freesurfer.processes": [[164, "module-mia_processes.bricks.preprocess.freesurfer.processes", false]], "mia_processes.bricks.preprocess.fsl": [[165, "module-mia_processes.bricks.preprocess.fsl", false]], "mia_processes.bricks.preprocess.fsl.processes": [[165, "module-mia_processes.bricks.preprocess.fsl.processes", false]], "mia_processes.bricks.preprocess.mrtrix": [[166, "module-mia_processes.bricks.preprocess.mrtrix", false]], "mia_processes.bricks.preprocess.mrtrix.processes": [[166, "module-mia_processes.bricks.preprocess.mrtrix.processes", false]], "mia_processes.bricks.preprocess.others": [[167, "module-mia_processes.bricks.preprocess.others", false]], "mia_processes.bricks.preprocess.others.processing": [[167, "module-mia_processes.bricks.preprocess.others.processing", false]], "mia_processes.bricks.preprocess.spm": [[168, "module-mia_processes.bricks.preprocess.spm", false]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing": [[168, "module-mia_processes.bricks.preprocess.spm.spatial_preprocessing", false]], "mia_processes.bricks.reports": [[169, "module-mia_processes.bricks.reports", false]], "mia_processes.bricks.reports.processes": [[169, "module-mia_processes.bricks.reports.processes", false]], "mia_processes.bricks.reports.reporting": [[169, "module-mia_processes.bricks.reports.reporting", false]], "mia_processes.bricks.stat": [[170, "module-mia_processes.bricks.stat", false]], "mia_processes.bricks.stat.spm": [[171, "module-mia_processes.bricks.stat.spm", false]], "mia_processes.bricks.stat.spm.model": [[171, "module-mia_processes.bricks.stat.spm.model", false]], "mia_processes.bricks.tools": [[172, "module-mia_processes.bricks.tools", false]], "mia_processes.bricks.tools.tools": [[172, "module-mia_processes.bricks.tools.tools", false]], "mia_processes.info": [[158, "module-mia_processes.info", false]], "mia_processes.pipelines": [[173, "module-mia_processes.pipelines", false]], "mia_processes.pipelines.cerebvascularreact": [[174, "module-mia_processes.pipelines.CerebVascularReact", false]], "mia_processes.pipelines.cerebvascularreact.co2_inhalation": [[174, "module-mia_processes.pipelines.CerebVascularReact.co2_inhalation", false]], "mia_processes.pipelines.dwitractography": [[175, "module-mia_processes.pipelines.DWITractography", false]], "mia_processes.pipelines.dwitractography.dwi_whole_brain_tractography": [[175, "module-mia_processes.pipelines.DWITractography.dwi_whole_brain_tractography", false]], "mia_processes.pipelines.preprocess": [[176, "module-mia_processes.pipelines.preprocess", false]], "mia_processes.pipelines.preprocess.anat_airmask": [[176, "module-mia_processes.pipelines.preprocess.anat_airmask", false]], "mia_processes.pipelines.preprocess.anat_headmask": [[176, "module-mia_processes.pipelines.preprocess.anat_headmask", false]], "mia_processes.pipelines.preprocess.anat_mni_tpms": [[176, "module-mia_processes.pipelines.preprocess.anat_mni_tpms", false]], "mia_processes.pipelines.preprocess.anat_skullstrip": [[176, "module-mia_processes.pipelines.preprocess.anat_skullstrip", false]], "mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip": [[176, "module-mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip", false]], "mia_processes.pipelines.preprocess.anat_spatial_norm": [[176, "module-mia_processes.pipelines.preprocess.anat_spatial_norm", false]], "mia_processes.pipelines.preprocess.bold_hmc": [[176, "module-mia_processes.pipelines.preprocess.bold_hmc", false]], "mia_processes.pipelines.preprocess.bold_mni_align": [[176, "module-mia_processes.pipelines.preprocess.bold_mni_align", false]], "mia_processes.pipelines.preprocess.bold_spatial_preprocessing1": [[176, "module-mia_processes.pipelines.preprocess.bold_spatial_preprocessing1", false]], "mia_processes.pipelines.preprocess.bold_spatial_preprocessing2": [[176, "module-mia_processes.pipelines.preprocess.bold_spatial_preprocessing2", false]], "mia_processes.pipelines.preprocess.dwi_fod_msmt_csd": [[176, "module-mia_processes.pipelines.preprocess.dwi_fod_msmt_csd", false]], "mia_processes.pipelines.preprocess.dwi_preprocessing": [[176, "module-mia_processes.pipelines.preprocess.dwi_preprocessing", false]], "mia_processes.pipelines.preprocess.spatial_mask": [[176, "module-mia_processes.pipelines.preprocess.spatial_mask", false]], "mia_processes.pipelines.qualitycontrol": [[177, "module-mia_processes.pipelines.qualityControl", false]], "mia_processes.pipelines.qualitycontrol.anat_mriqc": [[177, "module-mia_processes.pipelines.qualityControl.anat_mriqc", false]], "mia_processes.pipelines.qualitycontrol.bold_mriqc": [[177, "module-mia_processes.pipelines.qualityControl.bold_mriqc", false]], "mia_processes.pipelines.reports": [[178, "module-mia_processes.pipelines.reports", false]], "mia_processes.pipelines.reports.bold_iqms": [[178, "module-mia_processes.pipelines.reports.bold_iqms", false]], "mia_processes.pipelines.reports.extract_roi_param": [[178, "module-mia_processes.pipelines.reports.extract_roi_param", false]], "mia_processes.pipelines.stat": [[179, "module-mia_processes.pipelines.stat", false]], "mia_processes.pipelines.stat.bold_stat_cvr": [[179, "module-mia_processes.pipelines.stat.bold_stat_cvr", false]], "mia_processes.process_matlab": [[158, "module-mia_processes.process_matlab", false]], "mia_processes.utils": [[180, "module-mia_processes.utils", false]], "mia_processes.utils.report": [[180, "module-mia_processes.utils.report", false]], "mia_processes.utils.tools": [[180, "module-mia_processes.utils.tools", false]], "module": [[158, "module-mia_processes", false], [158, "module-mia_processes.info", false], [158, "module-mia_processes.process_matlab", false], [159, "module-mia_processes.bricks", false], [160, "module-mia_processes.bricks.preprocess", false], [161, "module-mia_processes.bricks.preprocess.afni", false], [161, "module-mia_processes.bricks.preprocess.afni.processes", false], [162, "module-mia_processes.bricks.preprocess.ants", false], [162, "module-mia_processes.bricks.preprocess.ants.processes", false], [163, "module-mia_processes.bricks.preprocess.dipy", false], [163, "module-mia_processes.bricks.preprocess.dipy.processes", false], [164, "module-mia_processes.bricks.preprocess.freesurfer", false], [164, "module-mia_processes.bricks.preprocess.freesurfer.processes", false], [165, "module-mia_processes.bricks.preprocess.fsl", false], [165, "module-mia_processes.bricks.preprocess.fsl.processes", false], [166, "module-mia_processes.bricks.preprocess.mrtrix", false], [166, "module-mia_processes.bricks.preprocess.mrtrix.processes", false], [167, "module-mia_processes.bricks.preprocess.others", false], [167, "module-mia_processes.bricks.preprocess.others.processing", false], [168, "module-mia_processes.bricks.preprocess.spm", false], [168, "module-mia_processes.bricks.preprocess.spm.spatial_preprocessing", false], [169, "module-mia_processes.bricks.reports", false], [169, "module-mia_processes.bricks.reports.processes", false], [169, "module-mia_processes.bricks.reports.reporting", false], [170, "module-mia_processes.bricks.stat", false], [171, "module-mia_processes.bricks.stat.spm", false], [171, "module-mia_processes.bricks.stat.spm.model", false], [172, "module-mia_processes.bricks.tools", false], [172, "module-mia_processes.bricks.tools.tools", false], [173, "module-mia_processes.pipelines", false], [174, "module-mia_processes.pipelines.CerebVascularReact", false], [174, "module-mia_processes.pipelines.CerebVascularReact.co2_inhalation", false], [175, "module-mia_processes.pipelines.DWITractography", false], [175, "module-mia_processes.pipelines.DWITractography.dwi_whole_brain_tractography", false], [176, "module-mia_processes.pipelines.preprocess", false], [176, "module-mia_processes.pipelines.preprocess.anat_airmask", false], [176, "module-mia_processes.pipelines.preprocess.anat_headmask", false], [176, "module-mia_processes.pipelines.preprocess.anat_mni_tpms", false], [176, "module-mia_processes.pipelines.preprocess.anat_skullstrip", false], [176, "module-mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip", false], [176, "module-mia_processes.pipelines.preprocess.anat_spatial_norm", false], [176, "module-mia_processes.pipelines.preprocess.bold_hmc", false], [176, "module-mia_processes.pipelines.preprocess.bold_mni_align", false], [176, "module-mia_processes.pipelines.preprocess.bold_spatial_preprocessing1", false], [176, "module-mia_processes.pipelines.preprocess.bold_spatial_preprocessing2", false], [176, "module-mia_processes.pipelines.preprocess.dwi_fod_msmt_csd", false], [176, "module-mia_processes.pipelines.preprocess.dwi_preprocessing", false], [176, "module-mia_processes.pipelines.preprocess.spatial_mask", false], [177, "module-mia_processes.pipelines.qualityControl", false], [177, "module-mia_processes.pipelines.qualityControl.anat_mriqc", false], [177, "module-mia_processes.pipelines.qualityControl.bold_mriqc", false], [178, "module-mia_processes.pipelines.reports", false], [178, "module-mia_processes.pipelines.reports.bold_iqms", false], [178, "module-mia_processes.pipelines.reports.extract_roi_param", false], [179, "module-mia_processes.pipelines.stat", false], [179, "module-mia_processes.pipelines.stat.bold_stat_cvr", false], [180, "module-mia_processes.utils", false], [180, "module-mia_processes.utils.report", false], [180, "module-mia_processes.utils.tools", false]], "mrcat (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.MRCat", false]], "mrconvert (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.MRConvert", false]], "mrdegibbs (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.MRDeGibbs", false]], "mrgridregrid (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.MRGridRegrid", false]], "mriqc_anat_make_report() (mia_processes.utils.report.report method)": [[180, "mia_processes.utils.report.Report.mriqc_anat_make_report", false]], "mriqc_func_make_report() (mia_processes.utils.report.report method)": [[180, "mia_processes.utils.report.Report.mriqc_func_make_report", false]], "mriqc_get_all_run() (in module mia_processes.utils.tools)": [[180, "mia_processes.utils.tools.mriqc_get_all_run", false]], "mriqc_group_iqms_tsv() (in module mia_processes.utils.tools)": [[180, "mia_processes.utils.tools.mriqc_group_iqms_tsv", false]], "mriqc_group_make_report() (mia_processes.utils.report.report method)": [[180, "mia_processes.utils.report.Report.mriqc_group_make_report", false]], "mrmath (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.MRMath", false]], "mrtransform (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.MRTransform", false]], "mtnormalise (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.MTNormalise", false]], "multipleregressiondesign (class in mia_processes.bricks.stat.spm.model)": [[171, "mia_processes.bricks.stat.spm.model.MultipleRegressionDesign", false]], "n4biasfieldcorrection (class in mia_processes.bricks.preprocess.ants.processes)": [[162, "mia_processes.bricks.preprocess.ants.processes.N4BiasFieldCorrection", false]], "newsegment (class in mia_processes.bricks.preprocess.spm.spatial_preprocessing)": [[168, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.NewSegment", false]], "nonsteadystatedetector (class in mia_processes.bricks.preprocess.others.processing)": [[167, "mia_processes.bricks.preprocess.others.processing.NonSteadyStateDetector", false]], "normalize12 (class in mia_processes.bricks.preprocess.spm.spatial_preprocessing)": [[168, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Normalize12", false]], "normalize_mc_params() (in module mia_processes.bricks.reports.processes)": [[169, "mia_processes.bricks.reports.processes.normalize_mc_params", false]], "onesamplettestdesign (class in mia_processes.bricks.stat.spm.model)": [[171, "mia_processes.bricks.stat.spm.model.OneSampleTTestDesign", false]], "outliercount (class in mia_processes.bricks.preprocess.afni.processes)": [[161, "mia_processes.bricks.preprocess.afni.processes.OutlierCount", false]], "pagenumcanvas (class in mia_processes.utils.tools)": [[180, "mia_processes.utils.tools.PageNumCanvas", false]], "pairedttestdesign (class in mia_processes.bricks.stat.spm.model)": [[171, "mia_processes.bricks.stat.spm.model.PairedTTestDesign", false]], "perf_dsc_make_report() (mia_processes.utils.report.report method)": [[180, "mia_processes.utils.report.Report.perf_dsc_make_report", false]], "pipeline_definition() (mia_processes.pipelines.cerebvascularreact.co2_inhalation.co2_inhalation method)": [[174, "mia_processes.pipelines.CerebVascularReact.co2_inhalation.CO2_inhalation.pipeline_definition", false]], "pipeline_definition() (mia_processes.pipelines.dwitractography.dwi_whole_brain_tractography.dwi_whole_brain_tractography method)": [[175, "mia_processes.pipelines.DWITractography.dwi_whole_brain_tractography.Dwi_whole_brain_tractography.pipeline_definition", false]], "pipeline_definition() (mia_processes.pipelines.preprocess.anat_airmask.anat_airmask method)": [[176, "mia_processes.pipelines.preprocess.anat_airmask.Anat_airmask.pipeline_definition", false]], "pipeline_definition() (mia_processes.pipelines.preprocess.anat_headmask.anat_headmask method)": [[176, "mia_processes.pipelines.preprocess.anat_headmask.Anat_headmask.pipeline_definition", false]], "pipeline_definition() (mia_processes.pipelines.preprocess.anat_mni_tpms.anat_mni_tpms method)": [[176, "mia_processes.pipelines.preprocess.anat_mni_tpms.Anat_mni_tpms.pipeline_definition", false]], "pipeline_definition() (mia_processes.pipelines.preprocess.anat_skullstrip.anat_skullstrip method)": [[176, "mia_processes.pipelines.preprocess.anat_skullstrip.Anat_skullstrip.pipeline_definition", false]], "pipeline_definition() (mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip.anat_skullstrip_synthstrip method)": [[176, "mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip.Anat_skullstrip_synthstrip.pipeline_definition", false]], "pipeline_definition() (mia_processes.pipelines.preprocess.anat_spatial_norm.anat_spatial_norm method)": [[176, "mia_processes.pipelines.preprocess.anat_spatial_norm.Anat_spatial_norm.pipeline_definition", false]], "pipeline_definition() (mia_processes.pipelines.preprocess.bold_hmc.bold_hmc method)": [[176, "mia_processes.pipelines.preprocess.bold_hmc.Bold_hmc.pipeline_definition", false]], "pipeline_definition() (mia_processes.pipelines.preprocess.bold_mni_align.bold_mni_align method)": [[176, "mia_processes.pipelines.preprocess.bold_mni_align.Bold_mni_align.pipeline_definition", false]], "pipeline_definition() (mia_processes.pipelines.preprocess.bold_spatial_preprocessing1.bold_spatial_preprocessing1 method)": [[176, "mia_processes.pipelines.preprocess.bold_spatial_preprocessing1.Bold_spatial_preprocessing1.pipeline_definition", false]], "pipeline_definition() (mia_processes.pipelines.preprocess.bold_spatial_preprocessing2.bold_spatial_preprocessing2 method)": [[176, "mia_processes.pipelines.preprocess.bold_spatial_preprocessing2.Bold_spatial_preprocessing2.pipeline_definition", false]], "pipeline_definition() (mia_processes.pipelines.preprocess.dwi_fod_msmt_csd.dwi_fod_msmt_csd method)": [[176, "mia_processes.pipelines.preprocess.dwi_fod_msmt_csd.Dwi_fod_msmt_csd.pipeline_definition", false]], "pipeline_definition() (mia_processes.pipelines.preprocess.dwi_preprocessing.dwi_preprocessing method)": [[176, "mia_processes.pipelines.preprocess.dwi_preprocessing.Dwi_preprocessing.pipeline_definition", false]], "pipeline_definition() (mia_processes.pipelines.preprocess.spatial_mask.spatial_mask method)": [[176, "mia_processes.pipelines.preprocess.spatial_mask.Spatial_mask.pipeline_definition", false]], "pipeline_definition() (mia_processes.pipelines.qualitycontrol.anat_mriqc.anat_mriqc method)": [[177, "mia_processes.pipelines.qualityControl.anat_mriqc.Anat_mriqc.pipeline_definition", false]], "pipeline_definition() (mia_processes.pipelines.qualitycontrol.bold_mriqc.bold_mriqc method)": [[177, "mia_processes.pipelines.qualityControl.bold_mriqc.Bold_mriqc.pipeline_definition", false]], "pipeline_definition() (mia_processes.pipelines.reports.bold_iqms.bold_iqms method)": [[178, "mia_processes.pipelines.reports.bold_iqms.Bold_iqms.pipeline_definition", false]], "pipeline_definition() (mia_processes.pipelines.reports.extract_roi_param.extract_roi_param method)": [[178, "mia_processes.pipelines.reports.extract_roi_param.Extract_roi_param.pipeline_definition", false]], "pipeline_definition() (mia_processes.pipelines.stat.bold_stat_cvr.bold_stat_cvr method)": [[179, "mia_processes.pipelines.stat.bold_stat_cvr.Bold_stat_cvr.pipeline_definition", false]], "plot_boxplot_points() (in module mia_processes.utils.tools)": [[180, "mia_processes.utils.tools.plot_boxplot_points", false]], "plot_qi2() (in module mia_processes.utils.tools)": [[180, "mia_processes.utils.tools.plot_qi2", false]], "plot_realignment_parameters() (in module mia_processes.utils.tools)": [[180, "mia_processes.utils.tools.plot_realignment_parameters", false]], "plot_segmentation() (in module mia_processes.utils.tools)": [[180, "mia_processes.utils.tools.plot_segmentation", false]], "plot_slice_planes() (in module mia_processes.utils.tools)": [[180, "mia_processes.utils.tools.plot_slice_planes", false]], "plotsignalroi (class in mia_processes.bricks.reports.processes)": [[169, "mia_processes.bricks.reports.processes.PlotSignalROI", false]], "processmatlab (class in mia_processes.process_matlab)": [[158, "mia_processes.process_matlab.ProcessMatlab", false]], "qualityindex (class in mia_processes.bricks.preprocess.afni.processes)": [[161, "mia_processes.bricks.preprocess.afni.processes.QualityIndex", false]], "realign (class in mia_processes.bricks.preprocess.spm.spatial_preprocessing)": [[168, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Realign", false]], "refitdeoblique (class in mia_processes.bricks.preprocess.afni.processes)": [[161, "mia_processes.bricks.preprocess.afni.processes.RefitDeoblique", false]], "registration (class in mia_processes.bricks.preprocess.ants.processes)": [[162, "mia_processes.bricks.preprocess.ants.processes.Registration", false]], "regress_poly() (in module mia_processes.bricks.reports.processes)": [[169, "mia_processes.bricks.reports.processes.regress_poly", false]], "report (class in mia_processes.utils.report)": [[180, "mia_processes.utils.report.Report", false]], "reportanatmriqc (class in mia_processes.bricks.reports.reporting)": [[169, "mia_processes.bricks.reports.reporting.ReportAnatMriqc", false]], "reportco2inhalcvr (class in mia_processes.bricks.reports.reporting)": [[169, "mia_processes.bricks.reports.reporting.ReportCO2inhalCvr", false]], "reportfuncmriqc (class in mia_processes.bricks.reports.reporting)": [[169, "mia_processes.bricks.reports.reporting.ReportFuncMriqc", false]], "reportge2rec (class in mia_processes.bricks.reports.reporting)": [[169, "mia_processes.bricks.reports.reporting.ReportGE2REC", false]], "reportgroupmriqc (class in mia_processes.bricks.reports.reporting)": [[169, "mia_processes.bricks.reports.reporting.ReportGroupMriqc", false]], "reportline (class in mia_processes.utils.tools)": [[180, "mia_processes.utils.tools.ReportLine", false]], "reportperfdsc (class in mia_processes.bricks.reports.reporting)": [[169, "mia_processes.bricks.reports.reporting.ReportPerfDsc", false]], "resample1 (class in mia_processes.bricks.preprocess.others.processing)": [[167, "mia_processes.bricks.preprocess.others.processing.Resample1", false]], "resample2 (class in mia_processes.bricks.preprocess.others.processing)": [[167, "mia_processes.bricks.preprocess.others.processing.Resample2", false]], "resample_like() (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc method)": [[164, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.resample_like", false]], "responsesddhollander (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.ResponseSDDhollander", false]], "responsesdtournier (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.ResponseSDTournier", false]], "result_collector (class in mia_processes.bricks.reports.processes)": [[169, "mia_processes.bricks.reports.processes.Result_collector", false]], "rotationmask (class in mia_processes.bricks.preprocess.others.processing)": [[167, "mia_processes.bricks.preprocess.others.processing.RotationMask", false]], "round_half_up() (mia_processes.bricks.tools.tools.deconv_from_aif method)": [[172, "mia_processes.bricks.tools.tools.Deconv_from_aif.round_half_up", false]], "rpve() (in module mia_processes.bricks.reports.processes)": [[169, "mia_processes.bricks.reports.processes.rpve", false]], "run() (mia_processes.process_matlab.processmatlab method)": [[158, "mia_processes.process_matlab.ProcessMatlab.run", false]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.automask method)": [[161, "mia_processes.bricks.preprocess.afni.processes.Automask.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.calc method)": [[161, "mia_processes.bricks.preprocess.afni.processes.Calc.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.calcdroptrs method)": [[161, "mia_processes.bricks.preprocess.afni.processes.CalcDropTRs.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.despike method)": [[161, "mia_processes.bricks.preprocess.afni.processes.Despike.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.fwhmx method)": [[161, "mia_processes.bricks.preprocess.afni.processes.FWHMx.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.gcor method)": [[161, "mia_processes.bricks.preprocess.afni.processes.GCOR.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.outliercount method)": [[161, "mia_processes.bricks.preprocess.afni.processes.OutlierCount.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.qualityindex method)": [[161, "mia_processes.bricks.preprocess.afni.processes.QualityIndex.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.refitdeoblique method)": [[161, "mia_processes.bricks.preprocess.afni.processes.RefitDeoblique.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.skullstrip method)": [[161, "mia_processes.bricks.preprocess.afni.processes.SkullStrip.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.tshift method)": [[161, "mia_processes.bricks.preprocess.afni.processes.TShift.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.tstatmean method)": [[161, "mia_processes.bricks.preprocess.afni.processes.TStatMean.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.volreg method)": [[161, "mia_processes.bricks.preprocess.afni.processes.Volreg.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.ants.processes.affineinitializer method)": [[162, "mia_processes.bricks.preprocess.ants.processes.AffineInitializer.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.ants.processes.applytransforms method)": [[162, "mia_processes.bricks.preprocess.ants.processes.ApplyTransforms.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.ants.processes.n4biasfieldcorrection method)": [[162, "mia_processes.bricks.preprocess.ants.processes.N4BiasFieldCorrection.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.ants.processes.registration method)": [[162, "mia_processes.bricks.preprocess.ants.processes.Registration.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.dipy.processes.computedki method)": [[163, "mia_processes.bricks.preprocess.dipy.processes.ComputeDKI.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.dipy.processes.denoise method)": [[163, "mia_processes.bricks.preprocess.dipy.processes.Denoise.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.freesurfer.processes.binarize method)": [[164, "mia_processes.bricks.preprocess.freesurfer.processes.Binarize.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.freesurfer.processes.synthstrip method)": [[164, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStrip.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc method)": [[164, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.fsl.processes.bet method)": [[165, "mia_processes.bricks.preprocess.fsl.processes.Bet.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.fsl.processes.betsurfacesextraction method)": [[165, "mia_processes.bricks.preprocess.fsl.processes.BetSurfacesExtraction.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.fsl.processes.convertxfm method)": [[165, "mia_processes.bricks.preprocess.fsl.processes.ConvertXFM.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.fsl.processes.epireg method)": [[165, "mia_processes.bricks.preprocess.fsl.processes.EpiReg.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.fsl.processes.extractroi method)": [[165, "mia_processes.bricks.preprocess.fsl.processes.ExtractROI.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.fsl.processes.fastsegment method)": [[165, "mia_processes.bricks.preprocess.fsl.processes.FastSegment.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.fsl.processes.flirt method)": [[165, "mia_processes.bricks.preprocess.fsl.processes.Flirt.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.fsl.processes.smooth method)": [[165, "mia_processes.bricks.preprocess.fsl.processes.Smooth.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.constrainedsphericaldeconvolution method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.ConstrainedSphericalDeconvolution.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.dwibiascorrect method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.DWIBiasCorrect.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.dwibrainmask method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.DWIBrainMask.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.dwicat method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.DWICat.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.dwidenoise method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.DWIDenoise.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.dwiextract method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.DWIExtract.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.dwipreproc method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.DWIPreproc.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.editingtrack method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.EditingTrack.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.filteringtrack method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.FilteringTrack.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.fittensor method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.FitTensor.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.generate5tt2gmwmi method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.Generate5tt2gmwmi.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.generate5ttfsl method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.Generate5ttfsl.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.mrcat method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.MRCat.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.mrconvert method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.MRConvert.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.mrdegibbs method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.MRDeGibbs.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.mrgridregrid method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.MRGridRegrid.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.mrmath method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.MRMath.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.mrtransform method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.MRTransform.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.mtnormalise method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.MTNormalise.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.responsesddhollander method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.ResponseSDDhollander.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.responsesdtournier method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.ResponseSDTournier.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.sphericalharmonicextraction method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.SphericalHarmonicExtraction.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.tensormetrics method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.TensorMetrics.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.tractography method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.Tractography.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.transformfslconvert method)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.TransformFSLConvert.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.applybiascorrection method)": [[167, "mia_processes.bricks.preprocess.others.processing.ApplyBiasCorrection.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.artifactmask method)": [[167, "mia_processes.bricks.preprocess.others.processing.ArtifactMask.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.binarize method)": [[167, "mia_processes.bricks.preprocess.others.processing.Binarize.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.conformimage method)": [[167, "mia_processes.bricks.preprocess.others.processing.ConformImage.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.convroi method)": [[167, "mia_processes.bricks.preprocess.others.processing.ConvROI.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.enhance method)": [[167, "mia_processes.bricks.preprocess.others.processing.Enhance.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.estimatesnr method)": [[167, "mia_processes.bricks.preprocess.others.processing.EstimateSNR.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.extractroibylabel method)": [[167, "mia_processes.bricks.preprocess.others.processing.ExtractROIbyLabel.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.extractsignalroi method)": [[167, "mia_processes.bricks.preprocess.others.processing.ExtractSignalROI.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.gradientthreshold method)": [[167, "mia_processes.bricks.preprocess.others.processing.GradientThreshold.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.harmonize method)": [[167, "mia_processes.bricks.preprocess.others.processing.Harmonize.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.intensityclip method)": [[167, "mia_processes.bricks.preprocess.others.processing.IntensityClip.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.mask method)": [[167, "mia_processes.bricks.preprocess.others.processing.Mask.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.nonsteadystatedetector method)": [[167, "mia_processes.bricks.preprocess.others.processing.NonSteadyStateDetector.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.resample1 method)": [[167, "mia_processes.bricks.preprocess.others.processing.Resample1.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.resample2 method)": [[167, "mia_processes.bricks.preprocess.others.processing.Resample2.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.rotationmask method)": [[167, "mia_processes.bricks.preprocess.others.processing.RotationMask.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.sanitize method)": [[167, "mia_processes.bricks.preprocess.others.processing.Sanitize.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.templatefromtemplateflow method)": [[167, "mia_processes.bricks.preprocess.others.processing.TemplateFromTemplateFlow.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.threshold method)": [[167, "mia_processes.bricks.preprocess.others.processing.Threshold.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.tsnr method)": [[167, "mia_processes.bricks.preprocess.others.processing.TSNR.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.coregister method)": [[168, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Coregister.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.gm_wm_normalize method)": [[168, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.GM_WM_Normalize.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.newsegment method)": [[168, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.NewSegment.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.normalize12 method)": [[168, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Normalize12.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.realign method)": [[168, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Realign.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.slicetiming method)": [[168, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.SliceTiming.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.smooth method)": [[168, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Smooth.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.reports.processes.anatiqms method)": [[169, "mia_processes.bricks.reports.processes.AnatIQMs.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.reports.processes.boldiqms method)": [[169, "mia_processes.bricks.reports.processes.BoldIQMs.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.reports.processes.boldiqmsplot method)": [[169, "mia_processes.bricks.reports.processes.BoldIQMsPlot.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.reports.processes.carpetparcellation method)": [[169, "mia_processes.bricks.reports.processes.CarpetParcellation.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.reports.processes.computedvars method)": [[169, "mia_processes.bricks.reports.processes.ComputeDVARS.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.reports.processes.framewisedisplacement method)": [[169, "mia_processes.bricks.reports.processes.FramewiseDisplacement.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.reports.processes.lateralizationindexcurve method)": [[169, "mia_processes.bricks.reports.processes.LateralizationIndexCurve.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.reports.processes.mean_stddev_calc method)": [[169, "mia_processes.bricks.reports.processes.Mean_stdDev_calc.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.reports.processes.plotsignalroi method)": [[169, "mia_processes.bricks.reports.processes.PlotSignalROI.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.reports.processes.result_collector method)": [[169, "mia_processes.bricks.reports.processes.Result_collector.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.reports.processes.spikes method)": [[169, "mia_processes.bricks.reports.processes.Spikes.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.reports.reporting.reportanatmriqc method)": [[169, "mia_processes.bricks.reports.reporting.ReportAnatMriqc.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.reports.reporting.reportco2inhalcvr method)": [[169, "mia_processes.bricks.reports.reporting.ReportCO2inhalCvr.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.reports.reporting.reportfuncmriqc method)": [[169, "mia_processes.bricks.reports.reporting.ReportFuncMriqc.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.reports.reporting.reportge2rec method)": [[169, "mia_processes.bricks.reports.reporting.ReportGE2REC.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.reports.reporting.reportgroupmriqc method)": [[169, "mia_processes.bricks.reports.reporting.ReportGroupMriqc.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.reports.reporting.reportperfdsc method)": [[169, "mia_processes.bricks.reports.reporting.ReportPerfDsc.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.stat.spm.model.estimatecontrast method)": [[171, "mia_processes.bricks.stat.spm.model.EstimateContrast.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.stat.spm.model.estimatemodel method)": [[171, "mia_processes.bricks.stat.spm.model.EstimateModel.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.stat.spm.model.level1design method)": [[171, "mia_processes.bricks.stat.spm.model.Level1Design.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.stat.spm.model.multipleregressiondesign method)": [[171, "mia_processes.bricks.stat.spm.model.MultipleRegressionDesign.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.stat.spm.model.onesamplettestdesign method)": [[171, "mia_processes.bricks.stat.spm.model.OneSampleTTestDesign.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.stat.spm.model.pairedttestdesign method)": [[171, "mia_processes.bricks.stat.spm.model.PairedTTestDesign.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.stat.spm.model.twosamplettestdesign method)": [[171, "mia_processes.bricks.stat.spm.model.TwoSampleTTestDesign.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.tools.tools.concat_to_list method)": [[172, "mia_processes.bricks.tools.tools.Concat_to_list.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.tools.tools.concat_to_list_of_list method)": [[172, "mia_processes.bricks.tools.tools.Concat_to_list_of_list.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.tools.tools.deconv_from_aif method)": [[172, "mia_processes.bricks.tools.tools.Deconv_from_aif.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.tools.tools.delete_data method)": [[172, "mia_processes.bricks.tools.tools.Delete_data.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.tools.tools.files_to_list method)": [[172, "mia_processes.bricks.tools.tools.Files_To_List.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.tools.tools.filter_files_list method)": [[172, "mia_processes.bricks.tools.tools.Filter_Files_List.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.tools.tools.find_in_list method)": [[172, "mia_processes.bricks.tools.tools.Find_In_List.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.tools.tools.get_conditions_from_bids_tsv method)": [[172, "mia_processes.bricks.tools.tools.Get_Conditions_From_BIDS_tsv.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.tools.tools.get_conditions_from_csv method)": [[172, "mia_processes.bricks.tools.tools.Get_Conditions_From_csv.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.tools.tools.get_eprime_info_ge2rec method)": [[172, "mia_processes.bricks.tools.tools.Get_Eprime_Info_GE2REC.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.tools.tools.get_patient_name method)": [[172, "mia_processes.bricks.tools.tools.Get_Patient_Name.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.tools.tools.get_regressors_from_csv method)": [[172, "mia_processes.bricks.tools.tools.Get_Regressors_From_csv.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.tools.tools.import_data method)": [[172, "mia_processes.bricks.tools.tools.Import_Data.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.tools.tools.input_filter method)": [[172, "mia_processes.bricks.tools.tools.Input_Filter.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.tools.tools.list_duplicate method)": [[172, "mia_processes.bricks.tools.tools.List_Duplicate.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.tools.tools.list_to_file method)": [[172, "mia_processes.bricks.tools.tools.List_To_File.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.tools.tools.make_a_list method)": [[172, "mia_processes.bricks.tools.tools.Make_A_List.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.tools.tools.make_aif method)": [[172, "mia_processes.bricks.tools.tools.Make_AIF.run_process_mia", false]], "run_process_mia() (mia_processes.bricks.tools.tools.make_cvr_reg_physio method)": [[172, "mia_processes.bricks.tools.tools.Make_CVR_reg_physio.run_process_mia", false]], "sanitize (class in mia_processes.bricks.preprocess.others.processing)": [[167, "mia_processes.bricks.preprocess.others.processing.Sanitize", false]], "save() (mia_processes.utils.tools.pagenumcanvas method)": [[180, "mia_processes.utils.tools.PageNumCanvas.save", false]], "set_dbfieldvalue() (in module mia_processes.utils.tools)": [[180, "mia_processes.utils.tools.set_dbFieldValue", false]], "set_global_variable() (mia_processes.process_matlab.processmatlab method)": [[158, "mia_processes.process_matlab.ProcessMatlab.set_global_variable", false]], "set_variable() (mia_processes.process_matlab.processmatlab method)": [[158, "mia_processes.process_matlab.ProcessMatlab.set_variable", false]], "showpage() (mia_processes.utils.tools.pagenumcanvas method)": [[180, "mia_processes.utils.tools.PageNumCanvas.showPage", false]], "skullstrip (class in mia_processes.bricks.preprocess.afni.processes)": [[161, "mia_processes.bricks.preprocess.afni.processes.SkullStrip", false]], "slicetiming (class in mia_processes.bricks.preprocess.spm.spatial_preprocessing)": [[168, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.SliceTiming", false]], "smooth (class in mia_processes.bricks.preprocess.fsl.processes)": [[165, "mia_processes.bricks.preprocess.fsl.processes.Smooth", false]], "smooth (class in mia_processes.bricks.preprocess.spm.spatial_preprocessing)": [[168, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Smooth", false]], "snr() (in module mia_processes.bricks.reports.processes)": [[169, "mia_processes.bricks.reports.processes.snr", false]], "snr_dietrich() (in module mia_processes.bricks.reports.processes)": [[169, "mia_processes.bricks.reports.processes.snr_dietrich", false]], "spatial_mask (class in mia_processes.pipelines.preprocess.spatial_mask)": [[176, "mia_processes.pipelines.preprocess.spatial_mask.Spatial_mask", false]], "sphericalharmonicextraction (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.SphericalHarmonicExtraction", false]], "spikes (class in mia_processes.bricks.reports.processes)": [[169, "mia_processes.bricks.reports.processes.Spikes", false]], "spm_hrf() (mia_processes.bricks.tools.tools.make_cvr_reg_physio method)": [[172, "mia_processes.bricks.tools.tools.Make_CVR_reg_physio.spm_hrf", false]], "summary_stats() (in module mia_processes.bricks.reports.processes)": [[169, "mia_processes.bricks.reports.processes.summary_stats", false]], "synthstrip (class in mia_processes.bricks.preprocess.freesurfer.processes)": [[164, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStrip", false]], "synthstripmriqc (class in mia_processes.bricks.preprocess.freesurfer.processes)": [[164, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc", false]], "synthstripmriqc.convblock (class in mia_processes.bricks.preprocess.freesurfer.processes)": [[164, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.ConvBlock", false]], "synthstripmriqc.stripmodel (class in mia_processes.bricks.preprocess.freesurfer.processes)": [[164, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.StripModel", false]], "templatefromtemplateflow (class in mia_processes.bricks.preprocess.others.processing)": [[167, "mia_processes.bricks.preprocess.others.processing.TemplateFromTemplateFlow", false]], "tensormetrics (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.TensorMetrics", false]], "threshold (class in mia_processes.bricks.preprocess.others.processing)": [[167, "mia_processes.bricks.preprocess.others.processing.Threshold", false]], "threshold() (in module mia_processes.bricks.preprocess.others.processing)": [[167, "mia_processes.bricks.preprocess.others.processing.threshold", false]], "tractography (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.Tractography", false]], "transformfslconvert (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[166, "mia_processes.bricks.preprocess.mrtrix.processes.TransformFSLConvert", false]], "tshift (class in mia_processes.bricks.preprocess.afni.processes)": [[161, "mia_processes.bricks.preprocess.afni.processes.TShift", false]], "tsnr (class in mia_processes.bricks.preprocess.others.processing)": [[167, "mia_processes.bricks.preprocess.others.processing.TSNR", false]], "tstatmean (class in mia_processes.bricks.preprocess.afni.processes)": [[161, "mia_processes.bricks.preprocess.afni.processes.TStatMean", false]], "twosamplettestdesign (class in mia_processes.bricks.stat.spm.model)": [[171, "mia_processes.bricks.stat.spm.model.TwoSampleTTestDesign", false]], "volreg (class in mia_processes.bricks.preprocess.afni.processes)": [[161, "mia_processes.bricks.preprocess.afni.processes.Volreg", false]], "volume_fraction() (in module mia_processes.bricks.reports.processes)": [[169, "mia_processes.bricks.reports.processes.volume_fraction", false]], "wm2max() (in module mia_processes.bricks.reports.processes)": [[169, "mia_processes.bricks.reports.processes.wm2max", false]]}, "objects": {"": [[158, 0, 0, "-", "mia_processes"]], "mia_processes": [[159, 0, 0, "-", "bricks"], [158, 0, 0, "-", "info"], [173, 0, 0, "-", "pipelines"], [158, 0, 0, "-", "process_matlab"], [180, 0, 0, "-", "utils"]], "mia_processes.bricks": [[160, 0, 0, "-", "preprocess"], [169, 0, 0, "-", "reports"], [170, 0, 0, "-", "stat"], [172, 0, 0, "-", "tools"]], "mia_processes.bricks.preprocess": [[161, 0, 0, "-", "afni"], [162, 0, 0, "-", "ants"], [163, 0, 0, "-", "dipy"], [164, 0, 0, "-", "freesurfer"], [165, 0, 0, "-", "fsl"], [166, 0, 0, "-", "mrtrix"], [167, 0, 0, "-", "others"], [168, 0, 0, "-", "spm"]], "mia_processes.bricks.preprocess.afni": [[161, 0, 0, "-", "processes"]], "mia_processes.bricks.preprocess.afni.processes": [[161, 1, 1, "", "Automask"], [161, 1, 1, "", "Calc"], [161, 1, 1, "", "CalcDropTRs"], [161, 1, 1, "", "Despike"], [161, 1, 1, "", "FWHMx"], [161, 1, 1, "", "GCOR"], [161, 1, 1, "", "OutlierCount"], [161, 1, 1, "", "QualityIndex"], [161, 1, 1, "", "RefitDeoblique"], [161, 1, 1, "", "SkullStrip"], [161, 1, 1, "", "TShift"], [161, 1, 1, "", "TStatMean"], [161, 1, 1, "", "Volreg"]], "mia_processes.bricks.preprocess.afni.processes.Automask": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "list_outputs"], [161, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.Calc": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "list_outputs"], [161, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.CalcDropTRs": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "list_outputs"], [161, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.Despike": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "list_outputs"], [161, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.FWHMx": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "list_outputs"], [161, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.GCOR": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "list_outputs"], [161, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.OutlierCount": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "list_outputs"], [161, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.QualityIndex": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "list_outputs"], [161, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.RefitDeoblique": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "list_outputs"], [161, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.SkullStrip": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "list_outputs"], [161, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.TShift": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "list_outputs"], [161, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.TStatMean": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "list_outputs"], [161, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.Volreg": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "list_outputs"], [161, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.ants": [[162, 0, 0, "-", "processes"]], "mia_processes.bricks.preprocess.ants.processes": [[162, 1, 1, "", "AffineInitializer"], [162, 1, 1, "", "ApplyTransforms"], [162, 1, 1, "", "N4BiasFieldCorrection"], [162, 1, 1, "", "Registration"]], "mia_processes.bricks.preprocess.ants.processes.AffineInitializer": [[162, 2, 1, "", "__init__"], [162, 2, 1, "", "list_outputs"], [162, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.ants.processes.ApplyTransforms": [[162, 2, 1, "", "__init__"], [162, 2, 1, "", "list_outputs"], [162, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.ants.processes.N4BiasFieldCorrection": [[162, 2, 1, "", "__init__"], [162, 2, 1, "", "list_outputs"], [162, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.ants.processes.Registration": [[162, 2, 1, "", "__init__"], [162, 2, 1, "", "list_outputs"], [162, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.dipy": [[163, 0, 0, "-", "processes"]], "mia_processes.bricks.preprocess.dipy.processes": [[163, 1, 1, "", "ComputeDKI"], [163, 1, 1, "", "Denoise"]], "mia_processes.bricks.preprocess.dipy.processes.ComputeDKI": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "list_outputs"], [163, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.dipy.processes.Denoise": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "list_outputs"], [163, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.freesurfer": [[164, 0, 0, "-", "processes"]], "mia_processes.bricks.preprocess.freesurfer.processes": [[164, 1, 1, "", "Binarize"], [164, 1, 1, "", "SynthStrip"], [164, 1, 1, "", "SynthStripMriqc"]], "mia_processes.bricks.preprocess.freesurfer.processes.Binarize": [[164, 2, 1, "", "__init__"], [164, 2, 1, "", "list_outputs"], [164, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.freesurfer.processes.SynthStrip": [[164, 2, 1, "", "__init__"], [164, 2, 1, "", "list_outputs"], [164, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc": [[164, 1, 1, "", "ConvBlock"], [164, 1, 1, "", "StripModel"], [164, 2, 1, "", "__init__"], [164, 2, 1, "", "conform"], [164, 2, 1, "", "list_outputs"], [164, 2, 1, "", "resample_like"], [164, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.ConvBlock": [[164, 2, 1, "", "__init__"], [164, 2, 1, "", "forward"]], "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.StripModel": [[164, 2, 1, "", "__init__"], [164, 2, 1, "", "forward"]], "mia_processes.bricks.preprocess.fsl": [[165, 0, 0, "-", "processes"]], "mia_processes.bricks.preprocess.fsl.processes": [[165, 1, 1, "", "Bet"], [165, 1, 1, "", "BetSurfacesExtraction"], [165, 1, 1, "", "ConvertXFM"], [165, 1, 1, "", "EpiReg"], [165, 1, 1, "", "ExtractROI"], [165, 1, 1, "", "FastSegment"], [165, 1, 1, "", "Flirt"], [165, 1, 1, "", "Smooth"]], "mia_processes.bricks.preprocess.fsl.processes.Bet": [[165, 2, 1, "", "__init__"], [165, 2, 1, "", "list_outputs"], [165, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.fsl.processes.BetSurfacesExtraction": [[165, 2, 1, "", "__init__"], [165, 2, 1, "", "list_outputs"], [165, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.fsl.processes.ConvertXFM": [[165, 2, 1, "", "__init__"], [165, 2, 1, "", "list_outputs"], [165, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.fsl.processes.EpiReg": [[165, 2, 1, "", "__init__"], [165, 2, 1, "", "list_outputs"], [165, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.fsl.processes.ExtractROI": [[165, 2, 1, "", "__init__"], [165, 2, 1, "", "list_outputs"], [165, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.fsl.processes.FastSegment": [[165, 2, 1, "", "__init__"], [165, 2, 1, "", "list_outputs"], [165, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.fsl.processes.Flirt": [[165, 2, 1, "", "__init__"], [165, 2, 1, "", "list_outputs"], [165, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.fsl.processes.Smooth": [[165, 2, 1, "", "__init__"], [165, 2, 1, "", "list_outputs"], [165, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix": [[166, 0, 0, "-", "processes"]], "mia_processes.bricks.preprocess.mrtrix.processes": [[166, 1, 1, "", "ConstrainedSphericalDeconvolution"], [166, 1, 1, "", "DWIBiasCorrect"], [166, 1, 1, "", "DWIBrainMask"], [166, 1, 1, "", "DWICat"], [166, 1, 1, "", "DWIDenoise"], [166, 1, 1, "", "DWIExtract"], [166, 1, 1, "", "DWIPreproc"], [166, 1, 1, "", "EditingTrack"], [166, 1, 1, "", "FilteringTrack"], [166, 1, 1, "", "FitTensor"], [166, 1, 1, "", "Generate5tt2gmwmi"], [166, 1, 1, "", "Generate5ttfsl"], [166, 1, 1, "", "MRCat"], [166, 1, 1, "", "MRConvert"], [166, 1, 1, "", "MRDeGibbs"], [166, 1, 1, "", "MRGridRegrid"], [166, 1, 1, "", "MRMath"], [166, 1, 1, "", "MRTransform"], [166, 1, 1, "", "MTNormalise"], [166, 1, 1, "", "ResponseSDDhollander"], [166, 1, 1, "", "ResponseSDTournier"], [166, 1, 1, "", "SphericalHarmonicExtraction"], [166, 1, 1, "", "TensorMetrics"], [166, 1, 1, "", "Tractography"], [166, 1, 1, "", "TransformFSLConvert"]], "mia_processes.bricks.preprocess.mrtrix.processes.ConstrainedSphericalDeconvolution": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "list_outputs"], [166, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.DWIBiasCorrect": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "list_outputs"], [166, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.DWIBrainMask": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "list_outputs"], [166, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.DWICat": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "list_outputs"], [166, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.DWIDenoise": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "list_outputs"], [166, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.DWIExtract": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "list_outputs"], [166, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.DWIPreproc": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "list_outputs"], [166, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.EditingTrack": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "list_outputs"], [166, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.FilteringTrack": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "list_outputs"], [166, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.FitTensor": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "list_outputs"], [166, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.Generate5tt2gmwmi": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "list_outputs"], [166, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.Generate5ttfsl": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "list_outputs"], [166, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.MRCat": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "list_outputs"], [166, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.MRConvert": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "list_outputs"], [166, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.MRDeGibbs": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "list_outputs"], [166, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.MRGridRegrid": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "list_outputs"], [166, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.MRMath": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "list_outputs"], [166, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.MRTransform": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "list_outputs"], [166, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.MTNormalise": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "list_outputs"], [166, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.ResponseSDDhollander": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "list_outputs"], [166, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.ResponseSDTournier": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "list_outputs"], [166, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.SphericalHarmonicExtraction": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "list_outputs"], [166, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.TensorMetrics": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "list_outputs"], [166, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.Tractography": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "list_outputs"], [166, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.TransformFSLConvert": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "list_outputs"], [166, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others": [[167, 0, 0, "-", "processing"]], "mia_processes.bricks.preprocess.others.processing": [[167, 1, 1, "", "ApplyBiasCorrection"], [167, 1, 1, "", "ArtifactMask"], [167, 1, 1, "", "Binarize"], [167, 1, 1, "", "ConformImage"], [167, 1, 1, "", "ConvROI"], [167, 1, 1, "", "Enhance"], [167, 1, 1, "", "EstimateSNR"], [167, 1, 1, "", "ExtractROIbyLabel"], [167, 1, 1, "", "ExtractSignalROI"], [167, 1, 1, "", "GradientThreshold"], [167, 1, 1, "", "Harmonize"], [167, 1, 1, "", "IntensityClip"], [167, 1, 1, "", "Mask"], [167, 1, 1, "", "NonSteadyStateDetector"], [167, 1, 1, "", "Resample1"], [167, 1, 1, "", "Resample2"], [167, 1, 1, "", "RotationMask"], [167, 1, 1, "", "Sanitize"], [167, 1, 1, "", "TSNR"], [167, 1, 1, "", "TemplateFromTemplateFlow"], [167, 1, 1, "", "Threshold"], [167, 3, 1, "", "artifact_mask"], [167, 3, 1, "", "is_outlier"], [167, 3, 1, "", "threshold"]], "mia_processes.bricks.preprocess.others.processing.ApplyBiasCorrection": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "list_outputs"], [167, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.ArtifactMask": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "list_outputs"], [167, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.Binarize": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "list_outputs"], [167, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.ConformImage": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "list_outputs"], [167, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.ConvROI": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "list_outputs"], [167, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.Enhance": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "list_outputs"], [167, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.EstimateSNR": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "list_outputs"], [167, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.ExtractROIbyLabel": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "list_outputs"], [167, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.ExtractSignalROI": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "list_outputs"], [167, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.GradientThreshold": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "list_outputs"], [167, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.Harmonize": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "list_outputs"], [167, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.IntensityClip": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "list_outputs"], [167, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.Mask": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "list_outputs"], [167, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.NonSteadyStateDetector": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "list_outputs"], [167, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.Resample1": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "list_outputs"], [167, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.Resample2": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "list_outputs"], [167, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.RotationMask": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "list_outputs"], [167, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.Sanitize": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "list_outputs"], [167, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.TSNR": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "list_outputs"], [167, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.TemplateFromTemplateFlow": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "list_outputs"], [167, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.Threshold": [[167, 2, 1, "", "__init__"], [167, 2, 1, "", "list_outputs"], [167, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.spm": [[168, 0, 0, "-", "spatial_preprocessing"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing": [[168, 1, 1, "", "Coregister"], [168, 1, 1, "", "GM_WM_Normalize"], [168, 1, 1, "", "NewSegment"], [168, 1, 1, "", "Normalize12"], [168, 1, 1, "", "Realign"], [168, 1, 1, "", "SliceTiming"], [168, 1, 1, "", "Smooth"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Coregister": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "list_outputs"], [168, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing.GM_WM_Normalize": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "list_outputs"], [168, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing.NewSegment": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "list_outputs"], [168, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Normalize12": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "list_outputs"], [168, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Realign": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "list_outputs"], [168, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing.SliceTiming": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "list_outputs"], [168, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Smooth": [[168, 2, 1, "", "__init__"], [168, 2, 1, "", "list_outputs"], [168, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports": [[169, 0, 0, "-", "processes"], [169, 0, 0, "-", "reporting"]], "mia_processes.bricks.reports.processes": [[169, 1, 1, "", "AnatIQMs"], [169, 1, 1, "", "BoldIQMs"], [169, 1, 1, "", "BoldIQMsPlot"], [169, 1, 1, "", "CarpetParcellation"], [169, 1, 1, "", "ComputeDVARS"], [169, 1, 1, "", "FramewiseDisplacement"], [169, 1, 1, "", "LateralizationIndexCurve"], [169, 1, 1, "", "Mean_stdDev_calc"], [169, 1, 1, "", "PlotSignalROI"], [169, 1, 1, "", "Result_collector"], [169, 1, 1, "", "Spikes"], [169, 3, 1, "", "art_qi1"], [169, 3, 1, "", "art_qi2"], [169, 3, 1, "", "cjv"], [169, 3, 1, "", "cnr"], [169, 3, 1, "", "efc"], [169, 3, 1, "", "fber"], [169, 3, 1, "", "find_peaks"], [169, 3, 1, "", "find_spikes"], [169, 3, 1, "", "fuzzy_jaccard"], [169, 3, 1, "", "gsr"], [169, 3, 1, "", "image_binary_dilation"], [169, 3, 1, "", "lateralization_index_iter_curves"], [169, 3, 1, "", "normalize_mc_params"], [169, 3, 1, "", "regress_poly"], [169, 3, 1, "", "rpve"], [169, 3, 1, "", "snr"], [169, 3, 1, "", "snr_dietrich"], [169, 3, 1, "", "summary_stats"], [169, 3, 1, "", "volume_fraction"], [169, 3, 1, "", "wm2max"]], "mia_processes.bricks.reports.processes.AnatIQMs": [[169, 2, 1, "", "__init__"], [169, 2, 1, "", "list_outputs"], [169, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.processes.BoldIQMs": [[169, 2, 1, "", "__init__"], [169, 2, 1, "", "list_outputs"], [169, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.processes.BoldIQMsPlot": [[169, 2, 1, "", "__init__"], [169, 2, 1, "", "list_outputs"], [169, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.processes.CarpetParcellation": [[169, 2, 1, "", "__init__"], [169, 2, 1, "", "list_outputs"], [169, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.processes.ComputeDVARS": [[169, 2, 1, "", "__init__"], [169, 2, 1, "", "list_outputs"], [169, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.processes.FramewiseDisplacement": [[169, 2, 1, "", "__init__"], [169, 2, 1, "", "list_outputs"], [169, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.processes.LateralizationIndexCurve": [[169, 2, 1, "", "__init__"], [169, 2, 1, "", "list_outputs"], [169, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.processes.Mean_stdDev_calc": [[169, 2, 1, "", "__init__"], [169, 2, 1, "", "list_outputs"], [169, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.processes.PlotSignalROI": [[169, 2, 1, "", "__init__"], [169, 2, 1, "", "list_outputs"], [169, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.processes.Result_collector": [[169, 2, 1, "", "__init__"], [169, 2, 1, "", "list_outputs"], [169, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.processes.Spikes": [[169, 2, 1, "", "__init__"], [169, 2, 1, "", "list_outputs"], [169, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.reporting": [[169, 1, 1, "", "ReportAnatMriqc"], [169, 1, 1, "", "ReportCO2inhalCvr"], [169, 1, 1, "", "ReportFuncMriqc"], [169, 1, 1, "", "ReportGE2REC"], [169, 1, 1, "", "ReportGroupMriqc"], [169, 1, 1, "", "ReportPerfDsc"]], "mia_processes.bricks.reports.reporting.ReportAnatMriqc": [[169, 2, 1, "", "__init__"], [169, 2, 1, "", "list_outputs"], [169, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.reporting.ReportCO2inhalCvr": [[169, 2, 1, "", "__init__"], [169, 2, 1, "", "list_outputs"], [169, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.reporting.ReportFuncMriqc": [[169, 2, 1, "", "__init__"], [169, 2, 1, "", "list_outputs"], [169, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.reporting.ReportGE2REC": [[169, 2, 1, "", "__init__"], [169, 2, 1, "", "list_outputs"], [169, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.reporting.ReportGroupMriqc": [[169, 2, 1, "", "__init__"], [169, 2, 1, "", "list_outputs"], [169, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.reporting.ReportPerfDsc": [[169, 2, 1, "", "__init__"], [169, 2, 1, "", "list_outputs"], [169, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.stat": [[171, 0, 0, "-", "spm"]], "mia_processes.bricks.stat.spm": [[171, 0, 0, "-", "model"]], "mia_processes.bricks.stat.spm.model": [[171, 1, 1, "", "EstimateContrast"], [171, 1, 1, "", "EstimateModel"], [171, 1, 1, "", "Level1Design"], [171, 1, 1, "", "MultipleRegressionDesign"], [171, 1, 1, "", "OneSampleTTestDesign"], [171, 1, 1, "", "PairedTTestDesign"], [171, 1, 1, "", "TwoSampleTTestDesign"], [171, 3, 1, "", "get_covariates"]], "mia_processes.bricks.stat.spm.model.EstimateContrast": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "list_outputs"], [171, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.stat.spm.model.EstimateModel": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "list_outputs"], [171, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.stat.spm.model.Level1Design": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "list_outputs"], [171, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.stat.spm.model.MultipleRegressionDesign": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "list_outputs"], [171, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.stat.spm.model.OneSampleTTestDesign": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "list_outputs"], [171, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.stat.spm.model.PairedTTestDesign": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "list_outputs"], [171, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.stat.spm.model.TwoSampleTTestDesign": [[171, 2, 1, "", "__init__"], [171, 2, 1, "", "list_outputs"], [171, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools": [[172, 0, 0, "-", "tools"]], "mia_processes.bricks.tools.tools": [[172, 1, 1, "", "Concat_to_list"], [172, 1, 1, "", "Concat_to_list_of_list"], [172, 1, 1, "", "Deconv_from_aif"], [172, 1, 1, "", "Delete_data"], [172, 1, 1, "", "Files_To_List"], [172, 1, 1, "", "Filter_Files_List"], [172, 1, 1, "", "Find_In_List"], [172, 1, 1, "", "Get_Conditions_From_BIDS_tsv"], [172, 1, 1, "", "Get_Conditions_From_csv"], [172, 1, 1, "", "Get_Eprime_Info_GE2REC"], [172, 1, 1, "", "Get_Patient_Name"], [172, 1, 1, "", "Get_Regressors_From_csv"], [172, 1, 1, "", "Import_Data"], [172, 1, 1, "", "Input_Filter"], [172, 1, 1, "", "List_Duplicate"], [172, 1, 1, "", "List_To_File"], [172, 1, 1, "", "Make_AIF"], [172, 1, 1, "", "Make_A_List"], [172, 1, 1, "", "Make_CVR_reg_physio"]], "mia_processes.bricks.tools.tools.Concat_to_list": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "list_outputs"], [172, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Concat_to_list_of_list": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "list_outputs"], [172, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Deconv_from_aif": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "bol_ar_time"], [172, 2, 1, "", "deconv_osvd"], [172, 2, 1, "", "delta_r2star"], [172, 2, 1, "", "list_outputs"], [172, 2, 1, "", "round_half_up"], [172, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Delete_data": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "list_outputs"], [172, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Files_To_List": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "list_outputs"], [172, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Filter_Files_List": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "list_outputs"], [172, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Find_In_List": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "list_outputs"], [172, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Get_Conditions_From_BIDS_tsv": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "list_outputs"], [172, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Get_Conditions_From_csv": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "list_outputs"], [172, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Get_Eprime_Info_GE2REC": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "list_outputs"], [172, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Get_Patient_Name": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "list_outputs"], [172, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Get_Regressors_From_csv": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "list_outputs"], [172, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Import_Data": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "list_outputs"], [172, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Input_Filter": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "list_outputs"], [172, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.List_Duplicate": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "list_outputs"], [172, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.List_To_File": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "list_outputs"], [172, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Make_AIF": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "bol_ar_time"], [172, 2, 1, "", "convert_to_native_types"], [172, 2, 1, "", "list_outputs"], [172, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Make_A_List": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "list_outputs"], [172, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Make_CVR_reg_physio": [[172, 2, 1, "", "__init__"], [172, 2, 1, "", "gaussfir"], [172, 2, 1, "", "gfb_conv"], [172, 2, 1, "", "list_outputs"], [172, 2, 1, "", "run_process_mia"], [172, 2, 1, "", "spm_hrf"]], "mia_processes.info": [[158, 3, 1, "", "get_gitversion"]], "mia_processes.pipelines": [[174, 0, 0, "-", "CerebVascularReact"], [175, 0, 0, "-", "DWITractography"], [176, 0, 0, "-", "preprocess"], [177, 0, 0, "-", "qualityControl"], [178, 0, 0, "-", "reports"], [179, 0, 0, "-", "stat"]], "mia_processes.pipelines.CerebVascularReact": [[174, 0, 0, "-", "co2_inhalation"]], "mia_processes.pipelines.CerebVascularReact.co2_inhalation": [[174, 1, 1, "", "CO2_inhalation"]], "mia_processes.pipelines.CerebVascularReact.co2_inhalation.CO2_inhalation": [[174, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.DWITractography": [[175, 0, 0, "-", "dwi_whole_brain_tractography"]], "mia_processes.pipelines.DWITractography.dwi_whole_brain_tractography": [[175, 1, 1, "", "Dwi_whole_brain_tractography"]], "mia_processes.pipelines.DWITractography.dwi_whole_brain_tractography.Dwi_whole_brain_tractography": [[175, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess": [[176, 0, 0, "-", "anat_airmask"], [176, 0, 0, "-", "anat_headmask"], [176, 0, 0, "-", "anat_mni_tpms"], [176, 0, 0, "-", "anat_skullstrip"], [176, 0, 0, "-", "anat_skullstrip_synthstrip"], [176, 0, 0, "-", "anat_spatial_norm"], [176, 0, 0, "-", "bold_hmc"], [176, 0, 0, "-", "bold_mni_align"], [176, 0, 0, "-", "bold_spatial_preprocessing1"], [176, 0, 0, "-", "bold_spatial_preprocessing2"], [176, 0, 0, "-", "dwi_fod_msmt_csd"], [176, 0, 0, "-", "dwi_preprocessing"], [176, 0, 0, "-", "spatial_mask"]], "mia_processes.pipelines.preprocess.anat_airmask": [[176, 1, 1, "", "Anat_airmask"]], "mia_processes.pipelines.preprocess.anat_airmask.Anat_airmask": [[176, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.anat_headmask": [[176, 1, 1, "", "Anat_headmask"]], "mia_processes.pipelines.preprocess.anat_headmask.Anat_headmask": [[176, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.anat_mni_tpms": [[176, 1, 1, "", "Anat_mni_tpms"]], "mia_processes.pipelines.preprocess.anat_mni_tpms.Anat_mni_tpms": [[176, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.anat_skullstrip": [[176, 1, 1, "", "Anat_skullstrip"]], "mia_processes.pipelines.preprocess.anat_skullstrip.Anat_skullstrip": [[176, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip": [[176, 1, 1, "", "Anat_skullstrip_synthstrip"]], "mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip.Anat_skullstrip_synthstrip": [[176, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.anat_spatial_norm": [[176, 1, 1, "", "Anat_spatial_norm"]], "mia_processes.pipelines.preprocess.anat_spatial_norm.Anat_spatial_norm": [[176, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.bold_hmc": [[176, 1, 1, "", "Bold_hmc"]], "mia_processes.pipelines.preprocess.bold_hmc.Bold_hmc": [[176, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.bold_mni_align": [[176, 1, 1, "", "Bold_mni_align"]], "mia_processes.pipelines.preprocess.bold_mni_align.Bold_mni_align": [[176, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.bold_spatial_preprocessing1": [[176, 1, 1, "", "Bold_spatial_preprocessing1"]], "mia_processes.pipelines.preprocess.bold_spatial_preprocessing1.Bold_spatial_preprocessing1": [[176, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.bold_spatial_preprocessing2": [[176, 1, 1, "", "Bold_spatial_preprocessing2"]], "mia_processes.pipelines.preprocess.bold_spatial_preprocessing2.Bold_spatial_preprocessing2": [[176, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.dwi_fod_msmt_csd": [[176, 1, 1, "", "Dwi_fod_msmt_csd"]], "mia_processes.pipelines.preprocess.dwi_fod_msmt_csd.Dwi_fod_msmt_csd": [[176, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.dwi_preprocessing": [[176, 1, 1, "", "Dwi_preprocessing"]], "mia_processes.pipelines.preprocess.dwi_preprocessing.Dwi_preprocessing": [[176, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.spatial_mask": [[176, 1, 1, "", "Spatial_mask"]], "mia_processes.pipelines.preprocess.spatial_mask.Spatial_mask": [[176, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.qualityControl": [[177, 0, 0, "-", "anat_mriqc"], [177, 0, 0, "-", "bold_mriqc"]], "mia_processes.pipelines.qualityControl.anat_mriqc": [[177, 1, 1, "", "Anat_mriqc"]], "mia_processes.pipelines.qualityControl.anat_mriqc.Anat_mriqc": [[177, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.qualityControl.bold_mriqc": [[177, 1, 1, "", "Bold_mriqc"]], "mia_processes.pipelines.qualityControl.bold_mriqc.Bold_mriqc": [[177, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.reports": [[178, 0, 0, "-", "bold_iqms"], [178, 0, 0, "-", "extract_roi_param"]], "mia_processes.pipelines.reports.bold_iqms": [[178, 1, 1, "", "Bold_iqms"]], "mia_processes.pipelines.reports.bold_iqms.Bold_iqms": [[178, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.reports.extract_roi_param": [[178, 1, 1, "", "Extract_roi_param"]], "mia_processes.pipelines.reports.extract_roi_param.Extract_roi_param": [[178, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.stat": [[179, 0, 0, "-", "bold_stat_cvr"]], "mia_processes.pipelines.stat.bold_stat_cvr": [[179, 1, 1, "", "Bold_stat_cvr"]], "mia_processes.pipelines.stat.bold_stat_cvr.Bold_stat_cvr": [[179, 2, 1, "", "pipeline_definition"]], "mia_processes.process_matlab": [[158, 1, 1, "", "ProcessMatlab"]], "mia_processes.process_matlab.ProcessMatlab": [[158, 2, 1, "", "__init__"], [158, 2, 1, "", "add_exit"], [158, 2, 1, "", "add_path"], [158, 2, 1, "", "change_directory"], [158, 2, 1, "", "display_parameter"], [158, 2, 1, "", "run"], [158, 2, 1, "", "set_global_variable"], [158, 2, 1, "", "set_variable"]], "mia_processes.utils": [[180, 0, 0, "-", "report"], [180, 0, 0, "-", "tools"]], "mia_processes.utils.report": [[180, 1, 1, "", "Report"]], "mia_processes.utils.report.Report": [[180, 2, 1, "", "__init__"], [180, 2, 1, "", "co2_inhal_cvr_make_report"], [180, 2, 1, "", "ge2rec_make_report"], [180, 2, 1, "", "get_iqms_data"], [180, 2, 1, "", "mriqc_anat_make_report"], [180, 2, 1, "", "mriqc_func_make_report"], [180, 2, 1, "", "mriqc_group_make_report"], [180, 2, 1, "", "perf_dsc_make_report"]], "mia_processes.utils.tools": [[180, 1, 1, "", "PageNumCanvas"], [180, 1, 1, "", "ReportLine"], [180, 3, 1, "", "checkFileExt"], [180, 3, 1, "", "check_orientations"], [180, 3, 1, "", "del_dbFieldValue"], [180, 3, 1, "", "dict4runtime_update"], [180, 3, 1, "", "get_dbFieldValue"], [180, 3, 1, "", "mriqc_get_all_run"], [180, 3, 1, "", "mriqc_group_iqms_tsv"], [180, 3, 1, "", "plot_boxplot_points"], [180, 3, 1, "", "plot_qi2"], [180, 3, 1, "", "plot_realignment_parameters"], [180, 3, 1, "", "plot_segmentation"], [180, 3, 1, "", "plot_slice_planes"], [180, 3, 1, "", "set_dbFieldValue"]], "mia_processes.utils.tools.PageNumCanvas": [[180, 2, 1, "", "__init__"], [180, 2, 1, "", "draw_page_number"], [180, 2, 1, "", "save"], [180, 2, 1, "", "showPage"]], "mia_processes.utils.tools.ReportLine": [[180, 2, 1, "", "__init__"], [180, 2, 1, "", "draw"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "terms": {"": [10, 16, 22, 25, 27, 28, 29, 38, 51, 53, 61, 77, 81, 83, 84, 92, 99, 106, 113, 131, 132, 133, 134, 135, 148, 149, 156, 164, 166, 168, 172], "0": [0, 1, 2, 5, 6, 10, 12, 13, 14, 15, 16, 18, 19, 22, 25, 26, 27, 28, 29, 31, 33, 37, 38, 40, 44, 45, 46, 47, 48, 49, 50, 51, 54, 58, 67, 73, 76, 77, 79, 80, 81, 82, 83, 88, 89, 91, 92, 96, 98, 103, 104, 106, 107, 108, 109, 110, 116, 118, 119, 120, 122, 126, 128, 132, 133, 134, 141, 143, 145, 146, 148, 154, 164, 166, 167, 169, 172, 180], "0000001000": 91, "000002": 82, "00001": [79, 80], "0001": [79, 80, 145], "00010": 169, "00047": 169, "001": [6, 63, 77, 79, 80, 121], "001_47": 63, "001_48": 63, "001_bold": [64, 93, 95], "001_bold_extracted_signals_47_48": [64, 95], "001_bold_spac": 64, "001_bold_space_1": 95, "001_bold_space_47": 95, "001_bold_space_47_48": 95, "001_bold_space_48": 95, "001_bold_space_concate_47_48": 95, "001_concate_47_48": 63, "001_data": [107, 108, 109, 110], "001_eprim": 120, "001_eprime_correct_respons": 120, "001_eprime_encodage_reco": 120, "001_se": 118, "002": [99, 117, 134], "002_data": [107, 108, 109, 110], "00355": 133, "005": 16, "006": 169, "01": [16, 77], "01_anatomical_mriqcreport_2023_05_12_16_26_12_58": 114, "01_desc": [57, 89, 90, 143, 152, 154], "01_label": [87, 138], "01_task": 118, "02": [15, 77], "020": 133, "0264": 169, "02_t1w": 75, "02_task": 118, "03641888": 133, "045": [106, 122], "05": [79, 80, 119, 143], "06": [96, 98, 106, 122, 138, 140, 141, 142, 143, 154, 164, 176, 177], "0612": 88, "06123": 5, "07": [16, 122, 141], "08": [16, 141, 143], "09": [106, 122], "0mm": 44, "1": [0, 2, 6, 7, 12, 13, 14, 16, 18, 19, 20, 21, 22, 26, 27, 28, 37, 44, 45, 47, 48, 54, 57, 58, 59, 63, 69, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 97, 100, 101, 104, 105, 106, 107, 108, 109, 110, 112, 118, 120, 122, 123, 126, 132, 138, 141, 143, 146, 151, 152, 156, 164, 167, 169, 172, 176, 180], "10": [2, 13, 26, 38, 62, 67, 79, 80, 82, 83, 97, 101, 106, 118, 119, 132, 133, 143, 167, 169], "100": [16, 19, 54, 80, 113, 143], "1000": [16, 31, 54, 91, 143, 154, 169], "10000": [16, 143], "1002": 169, "1007": [133, 169], "100g": 113, "101": 119, "102": 119, "103": 119, "105": [106, 119], "10k": 132, "10th": 127, "11": [40, 82, 119, 127, 169], "110": 80, "1109": 169, "112": [80, 119, 146], "1120": 169, "116": 119, "117": 106, "117026": 84, "119": 119, "12": [15, 26, 28, 40, 77, 82, 106, 118, 122, 169, 180], "120": [46, 80], "123": 119, "125": 119, "128": [93, 106, 169], "13": [82, 97, 101, 119], "130": [80, 119], "133": 84, "134": 119, "136": [93, 169], "137": 119, "14": [40, 82, 106, 122], "140": [80, 169], "141": 119, "143": 119, "144": 119, "146": 119, "147": 169, "148": 119, "15": [13, 16, 48, 49, 50, 54, 82, 119, 133, 141], "150": [79, 80, 119], "152": [106, 119], "154": 119, "155": [106, 119, 122], "1562": 133, "157": 119, "1579": 133, "159": 119, "16": [82, 106, 164, 167, 169, 172], "161": 119, "163": [93, 169], "164": 119, "168": [119, 122], "17": [82, 106, 119, 122], "170": 119, "174": 119, "177": 119, "178": 106, "179": 119, "18": [28, 82], "182": 119, "184": 119, "188": 119, "19": [82, 106, 169], "191": 119, "195": [106, 122], "196": 119, "197": 119, "1993": 167, "1997": 169, "1_co2_inhal_cvr_report_2024_01_24_09_34_58_08": [97, 101], "1_ge2rec_report_2024_01_24_09_34_58_08": 99, "1d": [7, 10, 12], "1e": [15, 16, 141, 143], "1rst": 172, "1st": [10, 12, 97, 101, 106], "2": [10, 12, 13, 14, 15, 16, 18, 27, 28, 29, 37, 38, 40, 44, 45, 46, 47, 48, 50, 52, 54, 75, 77, 79, 80, 81, 82, 83, 85, 86, 88, 89, 105, 106, 107, 108, 109, 110, 112, 116, 119, 120, 122, 123, 129, 131, 132, 141, 143, 148, 154, 164, 169, 172], "20": [15, 16, 45, 79, 82, 93, 106, 118, 119, 141, 143], "200": [15, 54], "2000": 54, "20000": 38, "2005": 17, "2006": 169, "2007": [93, 169], "200k": 132, "2010": 169, "2012": 91, "2015": 169, "2016": 169, "2019": 50, "202": 119, "2020": [84, 133], "2021": 133, "2021grals037": 133, "2022": 133, "204": 119, "206": 106, "208": 119, "20969": 169, "21": [82, 106], "215": 119, "219": 84, "22": [82, 119, 141, 142, 143, 151, 152, 154, 164, 167, 176], "221": 106, "222": 119, "225": 106, "227": 119, "23": [82, 106, 122], "233": 119, "236": 119, "238": 119, "24": [44, 82, 106, 118, 122], "240": 119, "242": 119, "245": 119, "248": 119, "24996667": 119, "2499667": 119, "249967": 119, "25": [44, 54, 82, 143], "250": [16, 143], "254": 119, "255": 180, "256": [28, 77, 119], "256dimens": 75, "26": [38, 82, 106, 119, 122, 169], "260": [18, 119], "265": 119, "267": 119, "269": 119, "27": [54, 82, 106], "274": 119, "28": [48, 82, 106, 122], "281": 119, "282": 106, "282095": 49, "283": 119, "285": 119, "287": 119, "29": [82, 119], "290": 119, "294": 119, "299": 119, "2995ded957961a7f3704de57eee88eb6cc30d52d": 164, "2_j": 169, "2_n": 169, "2d": [15, 19, 28], "2n": 169, "2nd": [54, 77, 80, 81, 106], "3": [5, 6, 7, 13, 14, 15, 16, 22, 25, 26, 27, 28, 31, 40, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 76, 77, 79, 80, 81, 82, 83, 85, 86, 106, 107, 108, 109, 110, 119, 122, 128, 132, 133, 134, 139, 140, 141, 143, 146, 150, 154, 167, 169, 172, 180], "30": [15, 16, 52, 80, 82, 118, 143, 145], "300": [15, 31, 48], "3000": [31, 36, 89], "300000": 169, "301": 119, "303": 119, "31": [82, 106, 119, 122], "310": 119, "314": 119, "317": 119, "319": 119, "32": [54, 82, 106, 119, 122, 172], "3237": 169, "326": 119, "33": [82, 119], "332": 119, "33333333e": 119, "335": 119, "337": 119, "3389": [133, 169], "339": 119, "34": [82, 106, 122], "341": 119, "344": 119, "346": 119, "35": [1, 82, 119], "35069148": 133, "355": 29, "36": [82, 106, 118], "37": 82, "375": 169, "38": 82, "385": 169, "39": [82, 106, 122], "3d": [2, 4, 9, 11, 15, 19, 26, 54, 70, 81, 127, 131, 144, 145, 146, 161, 163, 165, 168, 169, 172], "3dautomask": 161, "3dcalc": 161, "3dcliplevel": 0, "3dtstat": 161, "3dvolreg": [161, 176], "3rd": [10, 12, 77, 81, 106], "3t": [97, 101, 102, 131], "3x4": 48, "4": [12, 14, 15, 16, 19, 28, 54, 77, 79, 81, 82, 83, 85, 86, 106, 107, 108, 109, 110, 116, 132, 140, 141, 143, 145, 146, 149, 169, 180], "40": [50, 80, 82, 118, 119, 133], "41": [82, 106], "42": [82, 106, 119, 122, 169], "427": 106, "43": [82, 106], "44": [82, 119, 122], "45": [54, 82, 122], "45ab13e1bf6fdbf5e29c90cef44055b0b9cf391b": 167, "46": [82, 122], "47": [63, 64, 82, 95, 119, 153], "48": [63, 64, 82, 95, 118, 153], "49": [82, 106, 119, 122], "4929083": 30, "49996667": 119, "4999667": 119, "499967": 119, "4d": [15, 22, 26, 34, 48, 54, 70, 79, 81, 127, 131, 144, 145, 146, 167, 172, 180], "4depi": 0, "4th": [48, 54, 79, 106, 172], "4x4": [28, 48], "5": [0, 1, 6, 7, 10, 14, 15, 16, 18, 19, 22, 28, 35, 40, 44, 54, 79, 80, 81, 82, 85, 86, 96, 97, 98, 101, 106, 107, 108, 109, 110, 132, 141, 149, 167, 169, 172, 180], "50": [15, 80, 82, 92, 140, 154], "500": [16, 38, 143], "5000": 54, "51": [82, 119], "52": [82, 106, 119, 122], "53": [82, 106, 122], "54": 106, "55": [29, 54, 122], "56": [16, 97, 101, 119, 122, 141, 143], "563": 122, "57": [99, 131, 134], "58": [106, 122], "585": [106, 122], "59": [106, 169], "596": 122, "5a0f0408bd0c176dbc46088c6ffe279269180f3f": 180, "5d": 48, "5mm": 44, "5th": [10, 12, 106], "5tt": [41, 54, 149, 166], "5tt2gmwmi": [41, 166], "5tt_coreg": [39, 149], "5tt_roi": 26, "5ttgen": [42, 166], "5x": 100, "6": [15, 28, 29, 48, 51, 54, 79, 82, 83, 85, 86, 103, 106, 107, 108, 109, 110, 119, 133, 149, 154, 164, 167, 169, 172, 180], "60": [28, 52, 54, 79, 80, 118, 119], "61": [106, 122], "62": 119, "63": 122, "64": [102, 106, 119, 122, 164], "65": [22, 106, 119], "650886": 169, "66": [106, 122], "67": [106, 119, 122], "6th": 106, "7": [28, 49, 50, 77, 79, 80, 81, 82, 85, 86, 106, 107, 108, 109, 110, 164], "70": [80, 146], "72": 106, "73": [106, 122], "74": 119, "74996667": 119, "7499667": 119, "749967": 119, "75": 122, "752": 122, "752138": 133, "76": [80, 119, 146], "765": [106, 122], "77": 122, "78": [80, 119, 146], "79": [106, 122], "7nd": 80, "7th": [10, 12, 77, 81], "8": [16, 31, 40, 61, 79, 82, 83, 105, 106, 107, 108, 109, 110, 119, 122, 127, 131, 143], "80": 80, "805": [106, 122], "81": 106, "82": [106, 122], "85": [80, 119, 122, 146], "86": 122, "865": [106, 122], "87": [106, 122], "88": [119, 122], "89": 119, "9": [0, 28, 40, 54, 67, 81, 82, 106, 122], "90": [28, 80], "903": 169, "91": [106, 122, 169], "910": 169, "92": 119, "935": [106, 122], "94": 119, "9433981886792453": 82, "95": [54, 169], "955": [106, 122], "96": [62, 106, 119, 122], "98": [106, 119, 122, 169], "99": [61, 67, 122, 169], "995": 16, "99996667": 119, "9999667": 119, "999967": 119, "A": [0, 9, 15, 16, 22, 23, 27, 31, 34, 37, 39, 46, 54, 58, 60, 70, 76, 77, 78, 79, 80, 81, 83, 84, 87, 88, 89, 93, 94, 96, 97, 98, 99, 100, 101, 102, 106, 111, 112, 114, 115, 116, 117, 123, 124, 125, 126, 129, 131, 132, 133, 134, 144, 145, 146, 148, 149, 150, 151, 152, 153, 155, 156, 158, 162, 167, 169], "As": [22, 66, 72, 107, 108, 109, 110, 135], "At": 54, "Be": [0, 58, 59, 61, 66, 68, 72, 114], "By": [19, 22, 27, 40, 44, 50, 91, 157], "For": [1, 10, 14, 16, 19, 25, 28, 44, 61, 63, 64, 65, 77, 78, 81, 102, 107, 108, 109, 110, 119, 176, 180], "If": [2, 10, 15, 16, 17, 20, 21, 25, 28, 31, 34, 35, 37, 38, 40, 41, 44, 46, 47, 48, 49, 54, 60, 71, 77, 79, 80, 81, 82, 83, 84, 93, 94, 95, 102, 105, 106, 107, 108, 109, 110, 114, 115, 116, 123, 126, 132, 148, 151, 155, 167, 169, 172, 180], "In": [17, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 81, 85, 86, 105, 106, 127, 132, 133, 134, 147, 148, 157, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 180], "It": [1, 16, 17, 20, 25, 26, 27, 28, 30, 48, 82, 93, 102, 104, 105, 113, 127, 129, 135, 149, 169], "NOT": [0, 39, 42, 54], "No": [77, 79, 80, 81, 106, 107, 108, 109, 110], "OF": 164, "OR": 54, "Of": 54, "On": [157, 180], "One": [10, 77, 80, 81, 106, 118, 119, 122, 156, 157], "That": 27, "The": [1, 3, 7, 10, 12, 13, 16, 17, 18, 23, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 60, 61, 70, 71, 76, 77, 78, 79, 80, 81, 82, 89, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 113, 114, 116, 117, 118, 119, 120, 122, 123, 126, 127, 129, 131, 132, 133, 134, 135, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180], "Then": [60, 167], "There": [28, 107, 108, 109, 110], "These": [15, 17, 77, 81, 105, 151, 152], "To": [25, 60, 67, 71, 79, 94, 102, 104, 106, 130, 147, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172], "Will": 29, "With": [77, 81, 107, 108, 109, 110, 133], "_": [94, 102, 164, 167, 169], "_002": [70, 76], "_003": 70, "_1": 169, "_2": [71, 169], "__init__": [158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 180, 181], "_ar_est_yw": 169, "_bin": 58, "_data": 71, "_enh": 61, "_estimate_snr": 62, "_flatten_dict": 169, "_grad": 65, "_harmon": 66, "_mask": [0, 57, 68], "_prepare_mask": 169, "_qc": 114, "_robust_zscor": 169, "_rotmask": 72, "_stddev": 74, "_thresh": 19, "_tsnr": 74, "_undefin": 82, "_valid": 73, "a2": 22, "ab": 19, "ablair": 102, "abnorm": 113, "about": [25, 77, 87, 88, 97, 101, 102, 113, 134, 155], "abov": 76, "absenc": 30, "absmax": 47, "absmin": 47, "absolut": [19, 107, 108, 109, 110, 167, 180], "abstract": 169, "ac": 169, "aca": [102, 111, 112, 123, 169], "aca_l": [60, 123], "aca_l_mean_beta_bold": 94, "aca_l_mean_spmt_bold": [94, 102], "aca_l_std_beta_bold": 94, "aca_l_std_spmt_bold": 94, "aca_r": [60, 123], "aca_r_mean_beta_bold": 94, "aca_r_mean_spmt_bold": [94, 102], "aca_r_std_beta_bold": 94, "aca_r_std_spmt_bold": 94, "accept": [38, 54, 77, 129, 180], "accord": [41, 76, 82, 84, 162], "account": [81, 106, 129, 131], "accur": [10, 12, 81], "accuraci": 127, "achiev": [37, 131], "acm": [111, 112, 123], "acm_l": [60, 123], "acm_l_mean_beta_bold": 94, "acm_l_mean_spmt_bold": [94, 102], "acm_l_std_beta_bold": 94, "acm_l_std_spmt_bold": 94, "acm_r": [60, 123], "acm_r_mean_beta_bold": 94, "acm_r_mean_spmt_bold": [94, 102], "acm_r_std_beta_bold": 94, "acm_r_std_spmt_bold": 94, "acmd": [97, 101, 102, 131], "acp": 112, "acquir": [17, 37, 45, 106, 131, 135, 168], "acquisit": [10, 20, 37, 44, 82, 106, 113, 146, 168, 169], "across": [6, 7, 20, 44, 47, 48, 75, 91, 169, 180], "act": [39, 42, 54, 132, 149, 166], "act_imag": [39, 54], "activ": [97, 101, 106, 107, 108, 109, 110, 131, 133, 164, 169], "actual": [54, 76, 87, 88, 116, 126], "ad": [17, 44, 53, 78, 93, 104, 105, 180], "ad_fil": 53, "adapt": [21, 57, 58, 59, 61, 62, 65, 66, 67, 68, 69, 72, 73, 74, 87, 88, 90, 91, 92, 93, 103, 136, 137, 138, 140, 141, 142, 143, 167, 169, 172, 176, 180], "adc": 53, "adc_fil": 53, "add": [4, 10, 25, 39, 86, 104, 114, 122, 158, 180], "add_exit": [158, 181], "add_path": [158, 181], "addit": [17, 22, 37, 39, 42, 78, 81, 106, 107, 108, 109, 110, 122], "additionl": [107, 108, 109, 110], "adequaci": 113, "administ": 131, "administr": 131, "advanc": 132, "aff12": 12, "affin": [16, 79, 80, 141, 143, 162, 165], "affine_regular": 79, "affine_regularization_typ": 80, "affineiniti": [130, 160, 162], "affinetransform": 13, "affinetransform_": 13, "affinetransform_t1w": 13, "affreg": [79, 80], "afni": [92, 130, 139, 154, 159, 160, 176, 177], "after": [0, 19, 48, 54, 58, 70, 76, 78, 82, 91, 94, 113, 133, 134, 166, 167, 169], "afunc": 82, "ag": [97, 99, 101, 102, 131, 134, 155], "again": 27, "against": 38, "agent": [113, 135, 172], "agnost": 20, "aid": 27, "aif": 172, "aif_fil": [113, 127], "aim": [31, 50, 61, 107, 108, 109, 110, 132, 147, 148, 149], "air": [57, 79, 87, 96, 138, 151, 167, 169, 176], "air_mask": 96, "air_t1w_mask": [57, 87, 96, 136], "airdata": 167, "airmask": [87, 169], "ak": 17, "al": [45, 91, 133, 169], "algorithm": [0, 12, 15, 31, 40, 54, 79, 80, 127, 132, 147, 166, 167, 169], "alias": 106, "align": [10, 12, 13, 16, 28, 37, 79, 143, 152, 168], "align_seepi": 37, "all": [4, 17, 19, 27, 28, 33, 34, 36, 37, 38, 39, 40, 44, 46, 54, 58, 63, 77, 81, 82, 83, 87, 88, 91, 95, 100, 103, 106, 107, 108, 109, 110, 114, 132, 147, 154, 156, 157, 161, 169, 172, 180], "allow": [1, 17, 19, 23, 28, 54, 77, 84, 93, 106, 107, 108, 109, 110, 113, 124, 149, 153, 155], "along": [4, 5, 6, 28, 43, 44, 46, 166, 169], "alongsid": 113, "alp": 133, "alpha": 6, "alphaparamet": [14, 16], "alreadi": [16, 28, 42, 77, 81, 104, 105], "also": [1, 10, 17, 22, 25, 27, 28, 54, 77, 80, 81, 100, 102, 106, 107, 108, 109, 110, 114, 131, 132, 133, 148, 155], "alt": 10, "altern": 21, "although": [77, 81], "altminu": 10, "altogeth": 91, "altplu": 10, "alwai": 3, "among": [46, 61, 93, 107, 108, 109, 110], "amount": [31, 46, 48, 106, 135], "amplitud": [39, 52, 54], "amygdala": 42, "an": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 71, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 117, 118, 120, 121, 125, 127, 128, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 180], "analys": [106, 133, 134, 148, 176], "analysi": [20, 21, 97, 99, 101, 105, 107, 108, 109, 110, 127, 129, 131, 133, 134, 171, 175, 176], "analyz": [131, 133, 134], "anat": [77, 79, 80, 87, 96, 100, 115, 116, 123, 124, 126, 131, 133, 134, 144, 145, 146, 151, 153, 180], "anat1_001": 117, "anat1_002": 117, "anat1_003": 117, "anat2_002": 117, "anat_airmask": [130, 158, 173], "anat_fig_col": 96, "anat_fig_row": 96, "anat_fil": [131, 133, 134, 144, 145, 146, 151, 180], "anat_headmask": [130, 158, 173], "anat_inf_slice_start": 96, "anat_mni_tpm": [130, 151, 158, 173], "anat_mriqc": [130, 158, 173], "anat_mriqc_pipelin": 177, "anat_out_voxel_s": 146, "anat_report": 151, "anat_seg8": 79, "anat_skullstrip": [130, 158, 173], "anat_skullstrip_synthstrip": [130, 158, 173], "anat_slices_gap": 96, "anat_spatial_norm": [130, 158, 173], "anatiqm": [130, 159, 169], "anatom": [0, 39, 41, 42, 54, 57, 59, 61, 62, 65, 66, 72, 97, 99, 101, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 144, 145, 146, 149, 167, 169, 176, 177], "ancova": [107, 108, 109, 110], "andi": 132, "angl": [28, 54], "angle_rep": 28, "angular": [28, 39, 92], "ani": [1, 19, 20, 21, 38, 39, 45, 54, 77, 80, 97, 101, 102, 106, 107, 108, 109, 110, 128, 161], "anisotropi": [17, 53], "anoth": 172, "ant": [32, 130, 139, 140, 143, 159, 160, 167], "anterior": [37, 80, 132, 148, 169], "antipod": 48, "ants_random_se": [151, 152], "ants_warp": 14, "ap": [37, 132, 148], "apat": 102, "apath": 102, "apodis": 48, "app": 169, "appar": [48, 53], "apparatu": 131, "appli": [1, 14, 16, 18, 22, 28, 31, 42, 46, 49, 50, 51, 54, 67, 76, 77, 78, 81, 82, 94, 106, 107, 108, 109, 110, 123, 124, 127, 136, 138, 143, 149, 166, 167, 172], "applic": [58, 76], "apply_isoxfm": 28, "apply_to_fil": [77, 78, 80], "apply_xfm": [28, 153], "applybiascorrect": [130, 160, 167], "applymask": 167, "applytransform": [130, 136, 138, 160, 162], "applyxfm": 28, "approach": [93, 131, 133, 134, 169], "appropri": [28, 46, 54, 166], "approxim": [29, 52, 79, 80], "ar": [0, 1, 10, 15, 16, 17, 18, 19, 22, 23, 26, 27, 28, 31, 33, 34, 36, 37, 38, 40, 43, 44, 45, 46, 47, 48, 49, 50, 54, 58, 59, 61, 66, 67, 68, 70, 71, 72, 76, 77, 79, 80, 81, 82, 83, 87, 88, 89, 93, 94, 97, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 114, 115, 117, 119, 120, 122, 127, 129, 131, 132, 133, 134, 135, 143, 144, 145, 146, 147, 148, 149, 151, 152, 156, 157, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 180], "arbitrari": 20, "arc": 13, "area": [28, 127], "arfifact": [66, 72], "arg": [4, 180], "argument": [22, 26, 28, 54, 180], "aris": [79, 80, 169], "arithmet": 161, "around": [12, 13, 28, 77, 81, 89, 131, 169], "arrai": [106, 167, 169, 172], "arriv": [113, 127, 172], "art": 169, "art_mask": 96, "art_qi1": [159, 169], "art_qi2": [159, 169], "art_t1w_mask": [57, 87, 96, 136], "artefact": [45, 148], "arteri": [113, 172], "articl": 18, "artifact": [79, 80, 81, 87, 96, 127, 166, 167, 169, 172, 176], "artifact_mask": [160, 167], "artifactmask": [130, 160, 167], "artifactu": 169, "artifici": 28, "artmask": [87, 169], "as_closest_canon": 59, "asap": 102, "ascend": [82, 146], "ascii": [19, 48], "aspect": [87, 88], "asqc": 167, "assemblynet": 153, "assemblynetdock": [130, 153], "assess": [27, 93, 113, 129, 131, 133, 169, 172], "assign": [54, 158], "associ": [52, 63, 64, 97, 101, 105, 106, 123, 127, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172], "assum": [1, 37, 82, 106, 107, 108, 109, 110, 146], "assumpt": 15, "atc": 132, "atkinson": 169, "atkinson1997": 169, "atla": [75, 168], "atom": [130, 157, 158, 161, 162, 163, 164, 165, 167, 168, 176, 177], "attempt": 54, "attribut": [39, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172], "auditori": 133, "autoclip": [6, 7], "autoexport_nodes_paramet": [174, 175, 176, 177, 178, 179], "automask": [6, 7, 130, 153, 160, 161], "automask_": 0, "automask_func": [0, 114], "automask_mean_func_valid": 98, "automask_mean_reg_func_valid": [4, 5, 6, 7, 90, 91, 143, 154], "automask_reg_func_valid": 88, "automat": [2, 17, 44, 46, 82, 97, 101, 105, 106, 123, 132, 148, 169], "automaticcali": 37, "autoregress": 106, "avail": [16, 25, 37, 106, 120, 123, 135, 151, 152, 173], "averag": [10, 11, 18, 77, 91, 95, 113, 127, 129, 135, 148, 149, 153, 161], "awai": 67, "ax": [13, 44, 45, 46, 47, 48, 59, 169, 180], "axi": [4, 5, 6, 13, 28, 37, 43, 44, 54, 166, 169, 180], "axial": [17, 45, 53, 103], "az": 31, "b": [1, 15, 17, 22, 31, 33, 37, 44, 77, 80, 81, 104, 111, 112, 132, 139, 147, 148, 149, 166, 169, 172], "b0": [40, 149, 176], "b0_revers": [132, 148], "b0mean": 28, "b0mean_flirt_log": 28, "b0mean_registered_with_t1w": 28, "b0mean_t1w_flirt": 28, "b1": 166, "back": [10, 77, 81, 168], "background": [28, 57, 79, 169, 180], "backtrack": 54, "bactal": [97, 101, 102, 131], "bad": 120, "balanc": 49, "balanced_numb": 49, "ball": 169, "band": 89, "bandwidth": [169, 172], "banjac": 133, "bare": 151, "base": [15, 19, 25, 28, 31, 37, 38, 39, 40, 45, 54, 76, 79, 84, 105, 106, 113, 127, 132, 133, 135, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 177, 178, 179, 180], "baselin": [104, 127], "basi": [31, 49, 106], "basic": [15, 93, 105, 106, 132, 158, 167, 172], "basu": [50, 51], "baudouin": 84, "bavl": 44, "bayesian": 105, "bb": 80, "bbr": [25, 28], "bbrslope": 28, "bbrtype": 28, "becaus": [77, 79, 80, 81], "becom": 76, "been": [15, 37, 42, 54, 77, 78, 81, 93, 95, 106, 113, 124, 127, 133, 151, 152, 169], "befor": [10, 16, 35, 38, 45, 48, 78, 80, 81, 94, 97, 101, 148], "begin": [44, 94, 103, 123, 127, 167], "behav": 133, "behavior": [127, 133, 172], "behaviour": [99, 130, 133], "behavouri": 134, "being": [1, 54, 77, 80, 81], "below": [76, 82], "best": [27, 77, 168, 180], "bet": [130, 151, 160, 165], "bet2": [22, 23], "beta": [97, 101, 131, 156, 178], "beta_0001": [94, 97, 101, 104, 105, 155, 156], "beta_0002": [104, 105, 155, 156], "beta_0003": [104, 105, 155, 156], "beta_0004": [104, 105, 155, 156], "beta_0005": [104, 105, 155, 156], "beta_0006": [104, 105, 155, 156], "beta_0007": [104, 105, 155, 156], "beta_0008": [104, 105, 155, 156], "beta_000k": [105, 155], "beta_001": 109, "beta_002": 109, "beta_cmap": [97, 101], "beta_imag": [97, 101, 104, 105, 155, 156], "beta_vmax": [97, 101], "beta_vmin": [97, 101], "betsurf": [22, 23], "betsurfacesextract": [25, 130, 153, 160, 165], "better": [30, 77, 81, 169], "between": [1, 6, 10, 13, 15, 16, 25, 37, 39, 54, 76, 77, 79, 80, 82, 85, 86, 91, 96, 97, 98, 100, 101, 106, 107, 108, 109, 110, 113, 116, 129, 133, 147, 151, 152, 155, 161, 166, 167, 180], "bg": 169, "bgvalu": 28, "bia": [22, 32, 36, 80, 87, 132, 140, 143, 144, 146, 148, 162, 167, 168, 176], "bias_correct": 139, "bias_corrected_imag": [79, 144, 146], "bias_field_imag": [79, 144, 146], "bias_field_map": 32, "bias_fwhm": [80, 145], "bias_imag": [15, 56, 139, 140, 143], "bias_regular": [80, 145], "biasfield_anat": 79, "biasfwhm": [79, 80], "biasreg": [79, 80], "bid": [118, 172], "bin": [16, 28, 106], "bin_col_nul": 19, "binar": [130, 139, 160, 164, 167], "binari": [20, 21, 22, 27, 31, 34, 39, 40, 52, 63, 64, 90, 133, 148, 167, 169], "binval": 19, "binvalnot": 19, "biolog": [17, 132, 149], "biorhythm": 106, "bla": 180, "blabla": [164, 169, 178], "blackman": 28, "blob": [164, 167, 180], "bloc": 118, "bloc_ev": 118, "block": [18, 106, 119, 133, 134, 164], "block_radiu": 18, "blood": [113, 129, 131, 135], "blur": [28, 169], "bob_01": 131, "bodi": 28, "bol_ar_tim": [159, 172], "bold": [25, 88, 89, 91, 94, 102, 103, 131, 143, 153, 161, 167, 169, 176, 180], "bold_hcm": 142, "bold_hmc": [130, 158, 173], "bold_il_mean_beta": [131, 155], "bold_il_mean_spmt": [102, 131, 155], "bold_il_std_beta": [131, 155], "bold_il_std_spmt": [131, 155], "bold_iqm": [130, 158, 173], "bold_mean_beta": [131, 155], "bold_mean_spmt": [102, 131, 155], "bold_mni_align": [130, 158, 173], "bold_mri_qc": 130, "bold_mriqc": [154, 158, 173], "bold_signals_roi": 130, "bold_spatial_preprocessing1": [130, 131, 158, 173], "bold_spatial_preprocessing2": [130, 146, 158, 173], "bold_spatial_preprocessing3": 130, "bold_stat": 179, "bold_stat_cvr": [130, 131, 158, 173], "bold_std_beta": [102, 131, 155], "bold_std_spmt": [131, 155], "boldiqm": [130, 159, 169], "boldiqmsplot": [130, 159, 169], "boldqc_out_fil": 154, "boldref": 143, "bolu": [113, 127, 172], "bone": 79, "book": 132, "bool": 169, "boolean": [3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 19, 20, 21, 22, 24, 25, 27, 28, 31, 32, 35, 36, 37, 38, 39, 40, 42, 44, 48, 49, 50, 51, 52, 53, 54, 63, 66, 67, 73, 76, 77, 79, 81, 83, 85, 86, 91, 92, 102, 103, 104, 105, 107, 108, 109, 110, 123, 142, 154, 167, 180], "border": [20, 21, 45], "border_mm": [20, 21], "bori": [84, 167], "both": [16, 23, 28, 33, 67, 115], "bottom": [82, 146], "bound": [67, 80], "boundari": [20, 21, 25, 28, 41, 132], "box": [80, 100], "boxplot": [100, 180], "brain": [17, 18, 19, 20, 21, 25, 30, 31, 39, 40, 41, 42, 50, 52, 63, 64, 75, 81, 88, 89, 90, 91, 95, 96, 97, 99, 101, 107, 108, 109, 110, 113, 127, 131, 133, 135, 141, 143, 147, 148, 154, 161, 165, 166, 169, 172, 175, 176], "brain_mask": [16, 20, 21, 52, 90, 96, 98, 141, 147, 148], "braincolor": [84, 85, 86], "brainmask": [34, 41, 42, 154], "brainstem": [85, 86], "break": 180, "breath": 131, "brick": [130, 131, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 157, 158, 176, 177, 178, 180, 181], "broadcast": 133, "broader": 113, "browser": 172, "bspline": [14, 15, 16, 143], "bspline_fitting_dist": 15, "bspline_ord": 15, "bsplineexponenti": [16, 143], "bsplinesyn": [16, 143], "bt": 172, "build": [106, 172, 174, 175, 176, 177, 178, 179], "built": [1, 31, 50, 94, 157, 176], "bundl": 48, "button": [104, 105, 124, 133], "bval": [17, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 132, 148], "bval_scal": 44, "bvec": [17, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 132, 148], "bwr_r": 180, "bzero": 36, "c": [1, 22, 104, 111, 112, 172], "c1": [76, 78, 150], "c1anat": [76, 79, 144, 146, 150], "c1anat_002": 76, "c2": [78, 150], "c2anat": [76, 79, 144, 146, 150], "c3anat": [76, 79, 144, 146, 150], "c4anat": [76, 79, 144, 146, 150], "c5anat": [76, 79, 144, 146, 150], "c6anat": 150, "c_": 1, "c_aif_toeplitz": 172, "c_func_pad": 172, "c_img_1": 1, "c_vol_4d": 172, "cach": 75, "calc": [2, 130, 139, 160, 161], "calcdroptr": [130, 160, 161], "calcul": [28, 41, 51, 67, 77, 82, 91, 94, 102, 107, 108, 109, 110, 113, 127, 133, 155, 158, 159, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 177, 179], "call": 103, "can": [0, 10, 15, 16, 17, 19, 22, 27, 28, 46, 48, 77, 78, 79, 80, 83, 102, 105, 106, 107, 108, 109, 110, 114, 129, 131, 157, 158, 162, 164, 169, 180], "candid": 127, "cannot": [2, 19, 87, 88], "cannula": 131, "canon": [59, 106, 129], "canva": 180, "capsul": 77, "captur": 131, "carbogen": 131, "carbon": 129, "care": 0, "carpet": [89, 90, 98, 114, 143, 152, 154], "carpet_dseg": [89, 90, 143, 152, 154], "carpet_seg": [89, 152, 154], "carpetparcel": [130, 159, 169], "carpetplot": [89, 169], "carreful": [58, 59, 61, 66, 68, 72, 114], "cartographi": 133, "case": [31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 102, 105, 169], "cast": 73, "catch": 123, "categori": 113, "categoris": 118, "caviti": 84, "cbf": [113, 135], "cbf_imag": 113, "cbv": [113, 135], "cbv_imag": 113, "cc": [16, 143], "cell": 106, "center": [16, 18, 22, 107, 108, 109, 110, 169, 171], "centr": 22, "central": 93, "cerebellar": 93, "cerebellum": [85, 86, 89], "cerebr": [113, 129, 131, 135], "cerebrospin": [31, 89, 138, 147, 176], "cerebrovascular": [113, 174, 176], "cerebrum": [85, 86], "cerebvascularreact": [130, 158, 173], "certain": [36, 130, 166, 180], "challeng": [129, 174, 180], "chang": [27, 28, 44, 91, 105, 106, 127, 131, 135, 158, 164, 166, 172], "change_directori": [158, 181], "channel": 79, "channel_fil": 79, "channel_info": 79, "char": [28, 83], "charact": 123, "character": 169, "characteris": 106, "characterist": [113, 127], "check": [77, 81, 84, 114, 149, 176, 180], "check_orient": [158, 180], "checkfileext": [158, 180], "chi": 169, "choic": 133, "choos": [40, 44, 54, 77, 85, 86, 100, 107, 108, 109, 110, 132], "chosen": [82, 100, 105, 107, 108, 109, 110], "ci": 79, "cing_l": 155, "cing_r": 155, "cingul": 93, "circl": 169, "cite": [20, 21, 84, 93, 169], "cjv": [159, 169], "cl_file": 53, "clampinp": 28, "class": [27, 65, 79, 80, 81, 103, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 177, 178, 179, 180], "classic": [4, 16, 106, 162, 171], "classif": 27, "classifi": [27, 167], "clean": 25, "cleanup": [22, 79], "clfrac": 0, "cli": [21, 164], "click": 124, "clin": 169, "clinic": [135, 169], "clip": [0, 6, 7, 16, 73, 97, 101, 140, 167], "close": [15, 18, 52, 89, 91, 169], "closest": 59, "cl\u00e9ment": 84, "cmap": 180, "cmap_1": 180, "cmap_2": 180, "cnn": 84, "cnr": [159, 169], "co": [1, 129, 131, 132, 149], "co2": [169, 180], "co2_inhal": [130, 158, 173], "co2_inhal_cvr_make_report": [158, 180], "coars": [28, 77], "coarse_search": 28, "code": [81, 99, 127, 131, 134, 172], "coeffici": [7, 31, 39, 40, 48, 52, 53, 77, 97, 101, 104, 105, 131, 155], "cofund": [91, 92], "coil": 169, "coincid": [106, 107, 108, 109, 110], "collaps": 16, "collapse_output_transform": 16, "colleagu": [57, 66, 72], "collect": [102, 169], "color": [97, 101, 180], "colormap": [97, 101], "column": [19, 96, 97, 98, 101, 106, 118, 119, 122, 127, 156, 180], "com": [162, 164, 167, 180], "combin": [4, 5, 6, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], "come": [80, 167], "command": [22, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 161, 166], "commenc": 38, "commissur": 80, "commit": 158, "common": 167, "commun": 157, "compar": [87, 88, 132, 147, 169], "compart": [49, 147], "comparti": 31, "compat": [82, 91, 105, 172], "complet": [37, 135, 157, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 177, 178, 179], "compli": 106, "compon": [0, 49, 52, 132], "composit": [14, 16, 136, 138, 141, 143], "composite_transform": [16, 141, 143], "compositeaffin": [16, 143], "comput": [1, 11, 14, 16, 17, 18, 19, 30, 31, 40, 45, 49, 52, 54, 62, 66, 89, 133, 134, 151, 152, 157, 161, 163, 166, 167, 168, 169, 172, 176], "computebrainvolum": 130, "computedki": [130, 160, 163], "computedvar": [130, 159, 169], "computeth": 53, "con": 119, "con_0001": 104, "con_0002": 104, "con_0003": 104, "con_0004": 104, "con_0005": 105, "con_0006": 105, "con_0007": 105, "con_0008": 105, "con_001": [107, 108, 110], "con_002": 110, "con_imag": [104, 105], "concat_dwi1_dwi2": 34, "concat_filename1_filenam": 34, "concat_to_list": [130, 155, 159, 172], "concat_to_list_of_list": [130, 155, 159, 172], "concat_xfm": 24, "concaten": [37, 47, 63, 123, 148, 166, 172], "concentr": [113, 135, 169, 172], "concept": 30, "cond": 106, "cond1": 106, "cond2": 106, "cond_dur": [118, 119], "cond_nam": [118, 119], "cond_onset": [118, 119], "condit": [97, 101, 104, 105, 106, 113, 118, 119, 172], "conf": 169, "confer": 169, "configur": [32, 37], "conform": [160, 164, 167], "conform_imag": 167, "conformimag": [130, 151, 160, 167], "confound": [69, 74, 131, 167], "confund": [69, 74], "conjunct": 39, "connect": [0, 169], "connectom": 169, "consid": [52, 91, 172], "consist": [37, 46, 58, 59, 61, 66, 68, 72, 79, 133], "constrain": [42, 54, 132, 147, 149], "constrainedsphericaldeconvolut": [130, 160, 166], "constraint": 31, "construct": [50, 51, 102, 135], "constructor": 180, "contact": 81, "contain": [19, 25, 27, 31, 37, 38, 39, 54, 76, 77, 80, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 118, 119, 122, 131, 147, 150, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 178, 179, 180], "conten": [118, 119, 122], "continu": [54, 70, 131], "contrast": [18, 20, 25, 67, 94, 102, 105, 106, 107, 108, 110, 113, 156, 169, 171, 172], "contrast_typ": 94, "contribut": [40, 97, 172], "control": [20, 21, 26, 79, 80, 104, 105, 120, 131, 133, 167, 177], "conv": [60, 94], "conv_roi_mak": 155, "convaca_l": [60, 71, 94, 155], "convaca_l_2": 71, "convaca_r": [60, 71, 94, 155], "convaca_r_2": 71, "convacm_l": [60, 71, 94, 155], "convacm_l_2": 71, "convacm_r": [60, 71, 94, 155], "convacm_r_2": 71, "convacp_l": 155, "convacp_r": 155, "convblock": [160, 164], "convent": 48, "converg": [15, 16, 51], "convergence_threshold": [15, 16, 141, 143], "convergence_window_s": [16, 141, 143], "convers": [148, 149, 166], "convert": [29, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 149, 166, 172], "convert_to_native_typ": [159, 172], "convert_xfm": 165, "convertxfm": [130, 153, 160, 165], "convolut": [15, 84, 155, 164, 167, 172], "convolv": [60, 94, 106, 129, 167, 169], "convolve_with": [60, 167], "convpica_l": 155, "convpica_r": 155, "convroi": [130, 155, 160, 167], "convroi_bold": [60, 155, 167], "convroi_bold2": [71, 167], "convsca_l": 155, "convsca_r": 155, "coolterm": 129, "coord": [12, 44], "coordin": [28, 44, 54], "copi": [12, 15, 81], "copy_head": 15, "copyorigin": 12, "cor": 180, "coregist": [25, 130, 132, 144, 145, 146, 149, 160, 168], "coregisterd": 77, "coregistered_fil": 77, "coregistered_sourc": [77, 144], "coregistr": [132, 149], "coron": 45, "corratio": 28, "correct": [16, 25, 36, 37, 45, 82, 88, 91, 106, 120, 132, 140, 143, 144, 146, 147, 148, 154, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 176], "correct_answ": 99, "correct_respons": 99, "correctli": [60, 71, 94, 102, 167, 169], "correl": [6, 7, 16, 28, 77, 88, 105, 106, 107, 108, 109, 110, 161, 169], "correspond": [10, 31, 44, 52, 58, 77, 85, 86, 87, 88, 89, 94, 102, 115, 116, 124, 125, 126, 132, 144, 153, 155, 160, 169, 171, 172, 180], "corrupt": [15, 129, 169], "cortic": [42, 85, 86, 89, 149], "cosinewindowedsinc": [14, 16, 143], "cost": [16, 28, 39], "cost_fun": 77, "cost_func": 28, "cost_funct": 77, "could": [16, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 77, 79, 95, 102, 132, 144, 146], "count": [6, 7, 44, 154], "count_fil": 19, "coup\u00e9": 84, "cours": [102, 167], "covari": [107, 108, 109, 110, 171], "covariates_cent": [107, 108, 109, 110], "covariates_interact": [107, 108, 109, 110], "covariates_nam": [107, 108, 109, 110], "covariates_vector": [107, 108, 109, 110], "cover": [39, 180], "covertli": 133, "cp_file": 53, "crash": [1, 105], "creat": [22, 23, 26, 31, 60, 70, 71, 80, 81, 94, 102, 104, 105, 106, 127, 129, 132, 135, 156, 161, 167, 169, 171, 172, 176, 180], "creation": 149, "criteria": [38, 54], "criterion": [38, 169], "crop": [2, 42, 54], "crop_at_gmwmi": 54, "cropped_": 2, "cropped_func": 2, "cross": [16, 54, 77, 133, 147], "crown": [89, 169], "crude": [12, 50], "cs_file": 53, "csd": [31, 132, 147], "cseg": 90, "cseg_": 90, "cseg_t_tpl": [89, 90, 152, 154], "csf": [20, 21, 25, 27, 31, 33, 50, 55, 75, 79, 85, 86, 138, 147, 149, 176], "csf_file": 50, "csf_odf": 31, "csf_odf_norm": 147, "csf_probseg": [87, 138], "csf_tpl": [87, 138], "csf_txt": 31, "csv": [39, 64, 84, 95, 99, 118, 119, 122, 129, 131, 172], "csv_correct_respons": 120, "csv_encodage_reco": 120, "csv_file": [119, 122], "csv_file_out": 39, "cube": 106, "cubic": [10, 12, 46, 48], "current": [1, 18, 79, 81, 82, 102, 105, 107, 108, 109, 110, 148, 172], "curv": [93, 99, 169], "customis": [161, 162, 163, 164, 165, 166, 168, 171], "cut": 54, "cutoff": [54, 79, 80], "cutoff_idx": 180, "cval": 164, "cvi": 106, "cvr": [169, 172, 174, 176, 179, 180], "cvr_physio_reg": [97, 129], "cvr_reg": 129, "d": [3, 22, 111, 167, 172], "d11": 40, "d12": 40, "d13": 40, "d22": 40, "d23": 40, "d33": 40, "d_": 3, "d_func": 3, "dartel": 79, "dartel_input_imag": 79, "data": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 94, 95, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 113, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 128, 129, 130, 131, 132, 133, 135, 137, 138, 139, 140, 141, 142, 143, 147, 148, 149, 150, 153, 154, 155, 156, 162, 166, 169, 171, 172, 176, 177, 178, 180], "data_1": 180, "data_2": 180, "data_is_shel": [37, 148], "data_mask": 172, "data_typ": [28, 83], "databas": [60, 71, 82, 89, 94, 102, 104, 105, 106, 121, 123, 155, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 180], "database_scan": 124, "databrows": 124, "datafram": 180, "dataset": [0, 4, 11, 36, 161, 166, 169], "datatyp": 67, "david": 167, "db": 180, "db_filenam": 180, "de": 84, "deactiv": [97, 101], "decompos": 50, "decomposit": 172, "deconv_from_aif": [130, 159, 172], "deconv_osvd": [159, 172], "deconvolut": [15, 31, 54, 132, 147, 166, 172], "deconvolv": [15, 50], "dedic": [158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 177, 178, 180], "deduc": 94, "deduct": 94, "deep": [20, 89], "def": 80, "default": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 61, 63, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 87, 88, 89, 90, 91, 92, 96, 97, 98, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 114, 123, 132, 136, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 152, 153, 157, 172, 180], "default_valu": [14, 180], "defaunt": 46, "defin": [10, 16, 38, 39, 48, 49, 54, 58, 59, 61, 66, 68, 72, 76, 80, 85, 86, 94, 104, 105, 106, 107, 108, 109, 110, 115, 118, 123, 149, 153, 155, 156, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172], "deform": [48, 78, 79, 144, 146, 150], "deformation_field": [48, 80], "deformation_field_5d": 48, "deformation_fil": [78, 80, 150], "degre": [13, 17, 28, 31, 50, 51, 77, 80, 81, 169], "del_dbfieldvalu": [158, 180], "delai": 113, "delet": [37, 70, 71, 94, 167, 172, 180], "delete_data": [130, 159, 172], "delimit": 131, "deliv": [113, 135], "deliveri": 131, "delta": 28, "delta_r2star": [159, 172], "deltar2": 172, "demean": [5, 169], "demon": [16, 143], "deni": 84, "denois": [67, 130, 132, 148, 160, 163, 166, 176], "denoise_": 18, "denoise_func": 18, "denoise_ss_t1w_enh_grad": 137, "densiti": [31, 39, 48, 54, 132, 166], "deobliq": 142, "deobliqu": [142, 161], "depend": [17, 28, 85, 86, 110, 131], "deriv": [39, 42, 51, 53, 97, 99, 101, 104, 105, 106, 131, 164], "derived_dat": [93, 99], "derived_data": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 121, 123, 127, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], "desc": [75, 114, 136, 141, 143], "descend": [82, 146], "describ": [15, 57, 66, 72, 75, 77, 79, 80, 169, 180], "descript": [75, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 177, 178, 179, 180], "design": [1, 37, 104, 105, 106, 118, 119, 122, 133, 134, 156, 171, 174], "design_typ": 119, "desir": [38, 46, 54, 102], "despik": [130, 142, 160, 161], "detail": [106, 127, 156], "detect": [103, 127, 152, 154, 167, 169], "determin": [13, 28, 40, 46, 48, 54, 67, 81, 97, 101, 113, 120, 127, 133], "determinist": 54, "detrend": [4, 6, 7, 10, 103], "dev": 74, "develop": [30, 81, 102], "deviat": [18, 29, 98, 131, 167, 169, 178], "dholland": 166, "diagnos": 113, "dict": 180, "dict4runtim": 180, "dict4runtime_upd": [158, 180], "dictionari": [97, 99, 101, 102, 105, 106, 120, 122, 131, 134, 155, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 180], "dietrich": 169, "dietrich2007": 169, "diff2struct_fsl": 55, "diff_mrtrix_format": 44, "differ": [10, 12, 27, 28, 46, 79, 80, 81, 82, 106, 132, 147, 149, 166, 168, 169], "diffus": [31, 32, 33, 34, 35, 36, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 132, 147, 148, 149, 166, 175], "difumo": 75, "dig": 169, "dilat": [0, 19, 39, 51, 169], "dimens": [13, 14, 15, 16, 19, 28, 42, 44, 46, 48, 79, 80, 106, 127, 139, 140, 143, 150, 169, 172, 180], "dimension": [14, 105, 149], "dioxid": 129, "dipi": [17, 18, 130, 159, 160, 176], "direct": [10, 25, 28, 31, 37, 39, 48, 52, 54, 77, 81, 83, 132, 148, 169], "directli": [156, 157, 161, 162, 163, 164, 165, 166, 168, 171], "directori": [37, 60, 71, 94, 102, 104, 105, 106, 107, 108, 109, 110, 123, 158, 167, 169, 172, 180], "disabl": [44, 46, 91], "discard": [38, 54, 69, 154], "disclaim": [30, 151, 152], "discret": 45, "discuss": [151, 152], "disk": 79, "disord": 113, "dispers": 106, "displac": [12, 154, 169], "displai": [96, 97, 98, 101, 133, 158, 180], "display_paramet": [158, 181], "distanc": [15, 20, 21, 77, 79, 80, 81, 167], "distorst": 148, "distort": [16, 25, 37, 132, 148, 166], "distribut": [18, 39, 48, 50, 54, 67, 105, 113, 132, 166, 169, 176], "distrort": 148, "divid": 91, "dki": [17, 40, 163], "do": [0, 5, 12, 25, 28, 37, 39, 42, 54, 103, 106, 107, 108, 109, 110, 134, 161, 162, 163, 164, 165, 166, 167, 168, 171], "docker": [84, 153], "document": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 177, 178, 179, 180], "doe": [0, 28, 50], "doesn": [79, 80], "dof": [28, 149], "doi": [133, 169], "domain": 166, "domin": [93, 99, 134], "dominanthand": [99, 134], "don": 22, "done": [16, 19, 22, 40, 81, 107, 108, 109, 110, 132, 142, 147, 148, 149, 164, 169], "doubl": [14, 16, 28, 83], "doublet": 102, "down": [46, 82, 146], "download": [104, 105], "downloaded_data": [77, 80, 118, 119, 120, 122, 129, 131], "downloaded_data_data": 46, "downsampl": [28, 54], "downsample_factor": 54, "downsiz": 39, "dramat": 91, "draw": [158, 180], "draw_page_numb": [158, 180], "drift": 106, "driven": 169, "drop": 89, "drop_tr": 89, "droptr": 161, "dsc": [113, 127, 135, 169, 172, 180], "dseg": 143, "dti": [17, 40], "dtype": [67, 83], "due": [79, 80, 91, 106], "dummi": [88, 89], "dummy_tr": 154, "durat": [106, 118, 119, 172], "dure": [12, 15, 31, 36, 37, 48, 54, 97, 99, 101, 105, 106, 113, 120, 123, 127, 129, 131, 133, 144, 145, 146, 172], "dvar": [88, 89, 98, 154, 169], "dvars_": 91, "dvars_fil": 154, "dvars_intensity_norm": 154, "dvars_reg_func_valid": [88, 89, 91, 154], "dvars_remove_zero_vari": 154, "dw": 44, "dwi": [17, 31, 37, 40, 44, 45, 46, 47, 48, 50, 51, 54, 55, 132, 166, 175, 176], "dwi1": [34, 43], "dwi2": [34, 43], "dwi2fod": [31, 166], "dwi2mask": [33, 37, 166], "dwi2respons": [50, 51, 166], "dwi2tensor": [40, 166], "dwi__tracto_out_se": 54, "dwi_b0": 40, "dwi_b0_inverse_phas": 37, "dwi_bias_field_map": 32, "dwi_brain_mask": 37, "dwi_brainmask": [17, 31, 32, 33, 35, 38, 40, 49, 50, 51], "dwi_bval": 17, "dwi_bvec": 17, "dwi_bzero": 36, "dwi_csf_odf": 31, "dwi_csffod": 49, "dwi_csffod_norm": 49, "dwi_denois": 35, "dwi_denoised_unringed_dwifslpreproc_unbia": [147, 148, 149], "dwi_denoised_unringed_dwifslpreproc_unbias_brain_mask": [147, 148], "dwi_denoised_unringed_dwifslpreproc_unbias_csf_odf_norm": 147, "dwi_denoised_unringed_dwifslpreproc_unbias_gm_odf_norm": 147, "dwi_denoised_unringed_dwifslpreproc_unbias_odf_predicted_sign": 147, "dwi_denoised_unringed_dwifslpreproc_unbias_response_voxel": 147, "dwi_denoised_unringed_dwifslpreproc_unbias_wm_odf_norm": 147, "dwi_denoised_unringed_dwifslpreproc_unbias_wm_odf_norm_peak": 132, "dwi_denoised_unringed_dwifslpreproc_unbias_wm_odf_norm_tracto": 132, "dwi_denoised_unringed_dwifslpreproc_unbias_wm_odf_norm_tracto_10k": 132, "dwi_denoised_unringed_dwifslpreproc_unbias_wm_odf_norm_tracto_200k": 132, "dwi_denoised_unringed_dwifslpreproc_unbias_wm_odf_norm_tracto_sift": 132, "dwi_dki": 40, "dwi_dki_ad": 17, "dwi_dki_ak": 17, "dwi_dki_fa": 17, "dwi_dki_kfa": 17, "dwi_dki_md": 17, "dwi_dki_mk": 17, "dwi_dki_mkt": 17, "dwi_dki_rd": 17, "dwi_dki_rk": 17, "dwi_dti": [40, 53], "dwi_dti_ad": 53, "dwi_dti_adc": 53, "dwi_dti_c": 53, "dwi_dti_cl": 53, "dwi_dti_cp": 53, "dwi_dti_fa": 53, "dwi_dti_predicted_sign": 40, "dwi_dti_rd": 53, "dwi_dti_valu": 53, "dwi_dti_vector": 53, "dwi_fod_msmt_csd": [130, 158, 173], "dwi_fslpreproc": 37, "dwi_gm_odf": 31, "dwi_gmfod": 49, "dwi_gmfod_norm": 49, "dwi_mean": 47, "dwi_noise_map": 35, "dwi_odf_predicted_sign": 31, "dwi_preprocess": [130, 173, 176], "dwi_regrid": 46, "dwi_response_csf": [31, 50], "dwi_response_gm": [31, 50], "dwi_response_voxel": [50, 51], "dwi_response_wm": [31, 50, 51], "dwi_tissue_boundari": 130, "dwi_tracto": 54, "dwi_transform": 48, "dwi_unbia": 32, "dwi_unring": 45, "dwi_whole_brain_tractographi": [158, 173], "dwi_whole_brain_tractograpi": 130, "dwi_wm_odf": 31, "dwi_wmfod": 49, "dwi_wmfod_norm": 49, "dwibiascorrect": [130, 160, 166], "dwibrainmask": [130, 160, 166], "dwicat": [130, 160, 166], "dwidenois": [130, 160, 166], "dwiextract": [130, 160, 166], "dwifslpreproc": [37, 166], "dwipreproc": [45, 130, 160, 166], "dwipreprocess": [158, 173], "dwitractographi": [130, 158, 173], "dyn": 180, "dynam": [54, 105, 113, 129, 172], "dynamiqu": 105, "e": [7, 15, 17, 22, 31, 37, 38, 44, 45, 48, 54, 79, 80, 91, 97, 101, 102, 105, 107, 108, 109, 110, 111, 116, 123, 126, 131, 133, 134, 149, 151, 152, 169, 172], "e021008da0a2ef1c48e882baf932139a673349f9": 167, "each": [4, 5, 10, 13, 16, 26, 27, 28, 31, 38, 39, 46, 50, 51, 54, 60, 61, 63, 64, 75, 77, 79, 81, 85, 86, 91, 94, 95, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 113, 118, 119, 123, 127, 132, 147, 153, 156, 160, 161, 166, 167, 169, 172, 180], "easili": 157, "eastern": 79, "ecc": 77, "echo": [25, 28, 37, 131, 135, 144, 145, 146, 169, 172], "echospac": [25, 28], "eddi": [148, 166], "eddy_mask": 37, "eddy_opt": [37, 148], "eddy_qc": 37, "eddy_slspec": 37, "eddyqc_al": 37, "eddyqc_text": 37, "edg": [12, 19, 25, 89], "edit": [132, 166], "editingtrack": [130, 160, 166], "editor": 167, "edward": 167, "efc": [159, 169], "effect": [25, 79, 80, 93, 97, 99, 101, 102, 104, 105, 106, 107, 108, 109, 110, 131, 169], "effici": 113, "effort": [151, 152], "eigenvalu": 53, "eigenvector": 53, "eigval": 53, "either": [10, 25, 27, 28, 46, 48, 77, 82, 95, 105, 133, 146], "el": 31, "element": [58, 79, 80, 94, 102, 105, 106, 123, 125, 126, 127, 167, 169, 171, 172], "elsevi": 84, "elsewher": 104, "empir": 40, "empti": [169, 180], "emsp": [77, 78, 79, 80, 81, 115, 116, 117, 123, 124, 125, 126, 131, 144], "enabl": [44, 77, 81], "encapsul": 160, "encod": [25, 28, 37, 77, 81, 120, 132, 133, 164, 169], "encodag": 120, "encount": 73, "end": [22, 38, 59, 67, 129, 131, 132, 133, 134, 149, 169], "endpoint": 54, "ends_onli": 38, "energi": 169, "enforc": 36, "english": 133, "enhanc": [130, 137, 160, 167], "enough": 54, "ensembl": 84, "ensp": [77, 78, 79, 80, 81, 115, 116, 117, 123, 124, 125, 126, 131, 144], "ensur": [54, 127, 129, 131], "enter": [38, 54, 83, 99, 107, 108, 109, 110, 131, 134], "entir": 54, "entiti": 75, "entri": [10, 49, 60, 71, 94, 102, 115, 167, 169], "entropi": [77, 169], "environ": [151, 152, 157], "eoption": [77, 80, 81], "epi": [16, 28, 37, 132, 135, 148, 165, 169, 176], "epi2str_inv": 25, "epi2str_ma": 25, "epi2struct": [24, 25], "epi2struct_1vol": 25, "epi2struct_concate_struc2mni": 24, "epi2struct_fast_seg": 25, "epi2struct_fast_wmedg": 25, "epi2struct_fast_wmseg": 25, "epi2struct_fieldmap2str": 25, "epi2struct_fieldmaprads2epi": 25, "epi2struct_fieldmaprads2epi_shift": 25, "epi2struct_fieldmaprads2str": 25, "epi2struct_inv": 25, "epi2struct_warp": 25, "epi_data": 169, "epi_mask": 143, "epi_mean": [143, 154], "epi_mni": 143, "epi_parc": [143, 154], "epi_reg": [25, 165], "epi_tsnr": 154, "epilepsi": [99, 133, 134], "epireg": [130, 153, 160, 165], "epoch": 106, "eprim": 133, "eprime_fil": [120, 133], "eq": 169, "equal": [2, 14, 19, 31, 40, 48, 81, 93, 104, 110], "equat": 169, "equival": 78, "ergonom": 157, "erod": [0, 19, 50, 66, 169], "erode2d": 19, "erodemask": 66, "eros": [0, 19, 50], "error": [1, 36, 105, 151, 152, 169], "ess_0001": [104, 105], "ess_0002": [104, 105], "ess_0003": [104, 105], "ess_0004": [104, 105], "ess_imag": [104, 105], "essenti": 113, "est": 80, "estim": [15, 16, 17, 22, 32, 35, 37, 39, 52, 77, 79, 80, 81, 97, 99, 101, 106, 107, 108, 109, 110, 132, 137, 144, 145, 146, 148, 155, 166, 167, 169, 171], "estimate_dkt": 40, "estimatecontrast": [104, 130, 133, 134, 155, 156, 170, 171], "estimatemodel": [130, 133, 134, 155, 156, 170, 171], "estimatesnr": [130, 160, 167], "estimation_method": 105, "estwrit": [77, 80, 81, 145], "et": [45, 91, 169], "etc": [27, 28, 48, 54, 79, 102, 106, 113, 127, 131, 150, 167, 169, 172], "etco2": [97, 129, 131], "euler": 28, "evalu": [113, 174, 179], "even": [28, 172], "event": [106, 118, 119, 133, 134], "event_ev": 118, "everi": [147, 161, 168], "everyth": 76, "evetn": 118, "ex": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 169, 172, 180], "ex2": 86, "exactli": [102, 169], "examin": [107, 108, 109, 110], "exampl": [1, 10, 14, 16, 19, 25, 31, 41, 63, 64, 65, 75, 77, 78, 81, 93, 95, 102, 104, 105, 118, 172, 180], "exce": [107, 108, 109, 110], "except": [77, 106, 114], "excess": 61, "exclud": [20, 21, 28, 36, 38, 54, 107, 108, 109, 110, 127], "exclus": [6, 7, 10, 16, 22, 24, 28, 29, 30, 37, 38, 54, 80, 104, 129, 131, 132, 148], "exclusif": 114, "execut": [1, 37, 39], "exist": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 79, 80, 81, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 117, 118, 119, 120, 121, 122, 125, 127, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 167, 169, 180], "exit": [38, 54, 107, 108, 109, 110, 158], "expans": [17, 106], "experi": [113, 120, 127, 129, 131, 133, 134], "experiment": [106, 107, 108, 109, 110, 118, 120], "explan": [134, 156], "explicit": [107, 108, 109, 110], "explicit_mask_fil": [107, 108, 109, 110], "explicitli": [46, 106], "exploit": 132, "exponenti": [16, 143], "export": [44, 124], "export_bvec_bv": 44, "expr": [1, 139], "express": [1, 91], "ext": [169, 180], "ext_dic": 180, "extend": [35, 100], "extens": [0, 1, 2, 3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 103, 113, 117, 127, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 180], "extern": 50, "extra": 81, "extract": [19, 20, 21, 25, 93, 95, 129, 132, 148, 149, 153, 161, 165, 166, 167, 176, 178], "extract_roi_param": [130, 131, 158, 173], "extractroi": [130, 160, 165], "extractroibylabel": [130, 153, 160, 167], "extractsignalroi": [130, 153, 160, 167], "extrem": [79, 80, 89, 169], "ey": [3, 22, 75], "f": [22, 99, 104, 105, 131, 134, 167, 169], "f1": 119, "f2": 119, "f662acfce8def4717e0c3414618f3a5de5913b31": 167, "f_contrast_nam": 104, "f_contrast_t_nam": 104, "fa": [17, 50, 53, 54], "fa_fil": 53, "fa_thresh": 50, "faa": [123, 172], "faa_2": [123, 172], "fact": [54, 106, 132], "facto": [107, 108, 109, 110], "factor": [15, 16, 46, 49, 106, 107, 108, 109, 110, 169, 172], "factor1": [105, 106], "factor2": [105, 106], "factor_info": [105, 106], "factori": [105, 106], "fail": 38, "failure_mod": 169, "fairli": 15, "fals": [5, 6, 7, 10, 12, 13, 14, 15, 16, 19, 20, 21, 22, 24, 25, 28, 31, 32, 36, 37, 38, 39, 40, 42, 44, 48, 49, 50, 51, 52, 53, 54, 63, 67, 73, 77, 79, 81, 83, 85, 86, 92, 102, 103, 104, 105, 141, 142, 154, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 180], "faq": 28, "fast": [25, 32, 42, 52, 106, 151, 165], "faster": [52, 79, 80, 81], "fastest": [77, 81], "fastseg": [65, 130, 160, 165], "fber": [159, 169], "fbirn": 169, "fd": [88, 89, 98, 169], "fd_": 92, "fd_file": 154, "fd_normal": 154, "fd_parameter_sourc": 154, "fd_radiu": 154, "fd_reg_func_valid_on": [88, 89, 92, 154], "fd_scale_gm": 39, "fd_thresh": [89, 154], "fd_thresh_valu": 39, "feat_mult": 164, "feed": [22, 113], "few": 12, "fewer": [79, 80], "fiber": [31, 50, 54, 132, 176], "fibr": [39, 48, 50, 51, 132, 147, 166], "fiedmap": 25, "field": [22, 28, 37, 48, 49, 75, 78, 79, 80, 131, 132, 135, 139, 140, 143, 144, 145, 146, 148, 150, 162, 166, 167, 180], "field_map_regist": 28, "field_map_registered_mask": 28, "field_typ": 180, "fieldmap": [25, 28], "fieldmapmask": 28, "fig_col": 180, "fig_row": 180, "figsiz": 180, "figur": [89, 98, 169, 180], "fil": 169, "file": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 118, 119, 121, 122, 123, 127, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 164, 166, 167, 169, 171, 172, 180], "file1": [106, 115], "file2": [106, 115], "file3": 115, "file_in_db": [123, 172], "file_list": [115, 126], "file_nam": [125, 167, 180], "filenam": [4, 6, 7, 29, 77, 81, 83, 90, 91, 92, 106, 123, 172], "filepath": 169, "files_nam": 180, "files_remov": 114, "files_to_list": [130, 131, 155, 159, 172], "files_to_resampl": [70, 71], "fill": [37, 60, 71, 94, 102, 107, 108, 109, 110, 121, 167, 169], "filter": [29, 35, 41, 67, 76, 78, 84, 106, 114, 116, 123, 126, 127, 132, 166, 169, 171, 172], "filter_files_list": [77, 130, 159, 172], "filtered_list": 116, "filteringtrack": [130, 160, 166], "final": [4, 5, 6, 10, 15, 24, 28, 39, 50, 51, 67, 94, 124, 127, 144, 145, 146, 147, 156, 169], "find": [0, 23, 52, 54, 77], "find_in_list": [130, 155, 159, 172], "find_peak": [159, 169], "find_spik": [159, 169], "fine": [12, 28, 77], "fine_search": 28, "finer": 127, "finit": 106, "fir": [105, 106, 172], "first": [1, 5, 10, 14, 16, 19, 27, 28, 35, 37, 40, 44, 49, 54, 76, 81, 94, 96, 97, 98, 100, 101, 102, 107, 108, 109, 110, 113, 116, 117, 119, 122, 126, 133, 140, 147, 169], "fit": [15, 17, 40, 49, 67, 81, 105, 169], "fit_pdf": 180, "fittensor": [130, 160, 166], "five": [39, 54], "fix": [13, 16, 24, 54, 78, 162], "fix_scale_skew": 24, "fixat": 133, "fixed_imag": [13, 16], "fixed_image_mask": 16, "flag": 14, "flip": 48, "flirt": [25, 55, 130, 132, 149, 153, 160, 165], "flirtsch": 28, "flix_ax": 48, "float": [0, 3, 5, 6, 10, 13, 14, 15, 16, 18, 19, 22, 25, 28, 29, 31, 36, 37, 38, 44, 46, 49, 50, 52, 54, 58, 62, 67, 76, 77, 79, 80, 81, 82, 83, 88, 89, 91, 92, 97, 101, 103, 104, 105, 106, 107, 108, 109, 110, 118, 119, 120, 122, 132, 143, 148, 151, 152, 154, 167, 169, 172, 180], "float32": [67, 73, 83], "float64": 83, "flow": [113, 129, 131, 135], "flowabl": 180, "fluid": [31, 89, 147], "fmap": 25, "fmap2epi_mat": 25, "fmap2str_mat": 25, "fmap_epi": 25, "fmap_mag": 25, "fmap_str": 25, "fmapmag": 25, "fmapmag_str": 25, "fmapmagbrain": 25, "fmri": [22, 77, 80, 81, 91, 97, 99, 101, 113, 127, 129, 131, 133, 134, 156, 169, 171], "fmri_t": 106, "fmri_t0": 106, "fmrib": 28, "fmriplot": 89, "fmriprep": [16, 143, 162], "fnhum": 133, "fnin": 169, "fninf": 169, "focal": 133, "focu": 169, "fod": [39, 48, 54, 132, 166], "fod_direction_fil": 48, "fod_modul": 48, "fod_reori": 48, "folder": [104, 105, 106, 107, 108, 109, 110], "follow": [14, 27, 40, 77, 78, 79, 102, 106, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 164, 169, 171, 172, 176], "foo": [123, 172], "foo_1": [123, 172], "foot": [82, 146], "footer": 180, "footprint": 169, "forc": [14, 28, 36, 51, 155], "force_sc": 28, "foreground": 169, "form": [14, 15, 16, 35, 37, 38, 44, 52, 54, 79, 80, 143, 180], "format": [0, 1, 2, 3, 9, 10, 11, 12, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 84, 113, 127, 129, 131, 148, 149, 166, 169], "formul": 106, "forward": [79, 144, 146, 164], "forward_deformation_field": [79, 144, 146], "found": [16, 117, 132, 148, 157, 158, 162, 164, 167, 169], "four": 19, "fourier": [10, 12, 105, 106, 152], "fourier_han": [105, 106], "fourth": [44, 105], "fov": [22, 28], "frac": [22, 169], "fraction": [0, 6, 17, 22, 27, 53, 169], "frame": [19, 79, 103, 154], "frame_no": 19, "framemask": 169, "framewis": [154, 169], "framewisedisplac": [130, 159, 169], "framework": 54, "freedom": 28, "freeesurfer_path": 21, "freesurf": [19, 20, 130, 151, 159, 160, 176], "frequenc": 15, "friedman": 169, "from": [10, 16, 17, 20, 21, 27, 28, 31, 40, 41, 44, 45, 46, 47, 48, 50, 51, 52, 54, 57, 58, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 79, 80, 82, 84, 87, 88, 91, 92, 93, 94, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 113, 118, 121, 123, 124, 129, 131, 133, 134, 138, 140, 141, 142, 143, 146, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 176, 177, 180], "fron_l": 155, "fron_r": 155, "front": [133, 169], "frontal": 93, "fsfast": 92, "fsl": [25, 29, 32, 44, 65, 92, 130, 132, 149, 151, 159, 160, 166, 167], "fsl_motion_outli": [92, 169], "fsldir": 28, "fslroi": 165, "full": [28, 29, 79, 80, 83, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 177, 178, 179], "fullmean": [107, 108, 109, 110], "fullwarp": 25, "func": [0, 2, 3, 8, 10, 11, 12, 18, 29, 69, 73, 74, 77, 81, 82, 83, 88, 98, 100, 103, 115, 116, 124, 125, 126, 129, 131, 142, 144, 145, 146, 150, 152, 153], "func_1": 106, "func_2": 106, "func_brain_mask": 18, "func_extracted_signals_47_48": 153, "func_extracted_signals_lob": 153, "func_extracted_signals_macrostructur": 153, "func_extracted_signals_tissu": 153, "func_fig_col": 98, "func_fig_row": 98, "func_fil": [113, 127, 129, 131, 144, 145, 146, 152], "func_func_qc": 98, "func_gen": [133, 134], "func_gene_fil": [133, 134], "func_inf_slice_start": 98, "func_mask": 0, "func_out_voxel_s": 146, "func_recal": [133, 134], "func_recall_fil": [133, 134], "func_reco": [133, 134], "func_reco_fil": [133, 134], "func_ref_functional_mriqcreport_2023_03_31_11_42_10_75": [98, 152], "func_report": 152, "func_slices_gap": 98, "func_stddev": 74, "func_tsnr": 74, "func_valid": [73, 89, 154], "func_valid_fmriplot": [89, 98], "function": [1, 16, 17, 22, 28, 31, 39, 48, 59, 62, 77, 91, 97, 99, 101, 103, 105, 106, 113, 129, 131, 132, 133, 134, 142, 144, 145, 146, 147, 150, 153, 156, 166, 167, 169, 172, 176, 177, 178, 180], "functionallangagememori": 130, "further": [106, 127, 151, 152, 156], "fuzzy_jaccard": [159, 169], "fwhm": [15, 29, 77, 79, 80, 81, 83, 87, 88, 161], "fwhm_": 4, "fwhm_combin": 154, "fwhm_detrend": 154, "fwhm_mean_reg_func_valid": [4, 88], "fwhm_t1w": 87, "fwhmx": [130, 151, 154, 160, 161], "g": [15, 22, 48, 79, 80, 91, 97, 101, 102, 123, 131, 151, 152, 172], "ga": [97, 101, 102, 131, 155], "gadolinium": [113, 127, 135, 172], "gamma": [105, 106, 172], "ganzetti": 169, "ganzetti2016": 169, "gap": [96, 97, 98, 101, 180], "gasadmin": [97, 101, 102, 131, 155], "gaussfir": [159, 172], "gaussian": [14, 15, 16, 17, 18, 46, 77, 79, 80, 81, 143, 165, 168, 172], "gaussiandisplacementfield": [16, 143], "gc": [16, 143], "gcor": [130, 154, 160, 161], "gd": 172, "ge": [120, 133, 134], "ge2rec": [130, 169, 172, 180], "ge2rec_make_report": [158, 180], "gener": [16, 22, 23, 31, 37, 53, 54, 77, 80, 81, 105, 106, 113, 131, 133, 134, 135, 149, 158, 159, 166, 167, 169, 171, 172, 178, 180], "generate5tt2gmwmi": [130, 160, 166], "generate5ttfsl": [41, 130, 160, 166], "genericlabel": [16, 143], "geometr": 16, "get": [12, 16, 22, 23, 25, 31, 35, 38, 40, 50, 51, 54, 118, 119, 121, 122, 133, 136, 141, 143, 153, 167, 168, 172, 176, 177, 180], "get_ad": 53, "get_adc": 53, "get_c": 53, "get_cl": 53, "get_conditions_from_bids_tsv": [130, 159, 172], "get_conditions_from_csv": [130, 159, 172], "get_count_fil": 19, "get_covari": [170, 171], "get_cp": 53, "get_csv_fil": 39, "get_dbfieldvalu": [158, 180], "get_eprime_info_ge2rec": [130, 159, 172], "get_fa": 53, "get_final_voxel": [50, 51], "get_gitvers": [158, 181], "get_input_spec": [158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 177, 178, 179], "get_iqms_data": [158, 180], "get_mu_fil": 39, "get_out_selection_fil": 39, "get_output_b0": 40, "get_output_spec": [158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 177, 178, 179], "get_patient_nam": [130, 159, 172], "get_predicted_sign": [31, 40, 147], "get_rd": 53, "get_registered_fil": 28, "get_regressors_from_csv": [130, 159, 172], "get_tck_weights_out_desc": 38, "get_valu": 53, "get_vector": 53, "getconditionsfrombids_bloc_exampl": [], "getconditionsfrombids_event_exampl": [], "getlabel": [130, 153], "gfb_conv": [159, 172], "ghost": 169, "giannelli": 169, "giannelli2010": 169, "gibb": [148, 166], "gifti": 79, "giraud": 84, "gist_rainbow": 180, "git": 158, "github": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 162, 164, 167, 168, 180], "give": [77, 79, 80, 81, 111, 112, 123, 151, 152, 172], "given": [10, 16, 25, 39, 54, 67, 106, 107, 108, 109, 110, 113, 116, 120, 135, 153, 158, 161, 167], "glm": [97, 99, 101, 129, 131, 133, 134, 171, 179], "global": [5, 16, 88, 106, 107, 108, 109, 110, 147, 158], "global_ab": 28, "global_calc": [107, 108, 109, 110], "global_calc_valu": [107, 108, 109, 110], "global_intensity_norm": 106, "globalmean": 19, "gm": [31, 39, 50, 54, 75, 78, 79, 85, 86, 107, 108, 109, 110, 138, 147, 169, 176], "gm_file": 50, "gm_filter": 76, "gm_odf": 31, "gm_odf_norm": 147, "gm_probseg": [87, 138], "gm_tpl": [87, 138], "gm_txt": 31, "gm_wm_normal": [130, 150, 160, 168], "gmwmseed_coreg": [54, 149], "go": [106, 118], "goal": [79, 80], "good": [25, 80, 120, 169], "gpu": 21, "grad_fil": 44, "gradient": [22, 36, 44, 137, 167], "gradientthreshold": [130, 160, 167], "grai": [25, 89, 93, 132, 147, 149, 169, 178], "gram": 113, "grand": [107, 108, 109, 110], "graviti": 22, "greater": [52, 127, 167], "grei": [25, 27, 31, 42, 54, 76, 79, 138, 155, 156, 166, 168, 176], "grenobl": 133, "greys_r": [97, 101, 180], "grid": [54, 164, 166], "grid_siz": 54, "ground": [87, 88], "grouop": 110, "group": [37, 110, 147, 169, 180], "group1_fil": 110, "group2_fil": 110, "group_contrast": 104, "gsr": [159, 169], "gz": [0, 1, 2, 3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 35, 37, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 84, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 101, 103, 132, 136, 137, 138, 139, 140, 141, 142, 143, 148, 149, 150, 151, 152, 153, 154, 180], "h5": [14, 16, 136, 138, 141, 143], "ha": [37, 42, 54, 77, 106, 124, 151, 152], "had": 133, "haemodynam": 106, "half": [29, 37, 48, 79, 80, 83, 172], "hammingwindowedsinc": [14, 16, 143], "han": [28, 106], "hand": [99, 124, 134, 157], "handl": 167, "hard": 27, "harmon": [31, 39, 48, 50, 51, 72, 87, 130, 132, 151, 160, 166, 167], "hat": [57, 87, 96, 169, 176], "hat_t1w_mask": [57, 87, 136], "hatmask": 87, "have": [1, 15, 16, 27, 28, 31, 37, 39, 54, 60, 71, 77, 78, 79, 80, 81, 93, 94, 95, 102, 106, 107, 108, 109, 110, 113, 127, 133, 167, 169], "hcm": 142, "hdr": [29, 71, 77, 79, 80, 81, 83, 113, 117, 127, 129, 131, 144, 150], "head": [22, 57, 77, 81, 82, 87, 91, 136, 139, 140, 146, 151, 154, 169, 176], "head_mask": [57, 96, 136], "header": [10, 15, 37, 44, 46, 48, 77, 81, 167], "headmask": [87, 169], "headphon": 133, "health": 113, "hear": 133, "heard": 133, "heart": 131, "heavi": [79, 80], "height": [106, 180], "help": [1, 147, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 177, 178, 179], "hemi": [102, 169], "hemispher": [93, 102, 155, 169], "hemodynam": [105, 106, 129, 172], "heptic": [10, 12], "here": [16, 54, 93, 114, 157, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172], "heurist": 39, "hi": 46, "high": [12, 54, 106, 180], "higher": [73, 77, 81, 91, 97, 101, 104, 106, 127, 131, 169, 172], "highest": 81, "hippocampi": 42, "hippocampu": 153, "histogram": [15, 16, 28, 77, 167], "histogram_sharpen": 15, "histori": 114, "hit": 19, "hmc": 142, "hmc_epi": 154, "hmc_motion": 154, "hoaglin": 167, "home": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], "homemad": 160, "homeusernam": 79, "how": [28, 30, 53, 113, 167], "howev": [132, 149], "hpf": 106, "hrf": [105, 106, 129, 172], "html": [162, 164, 167, 168], "http": [162, 164, 167, 168, 169, 180], "hum": 133, "hypercapn": 129, "hypercapnia": [131, 174], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 63, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 120, 123, 126, 127, 129, 131, 132, 133, 134, 135, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 174, 176, 178, 180], "icv": 169, "ideal": [113, 127], "ident": [37, 48, 77, 81, 105, 151, 152, 164], "identif": [89, 169], "identifi": [27, 118, 127], "ie": [0, 1, 5, 10, 12, 14, 15, 16, 18, 19, 36, 50, 54, 96, 97, 98, 101], "ieee": 169, "ifod": 54, "ifod1": 54, "ifod2": 54, "ifod2_n_sampl": 54, "ifod_pow": 54, "iglewicz": 167, "ignor": [5, 10, 28, 106], "ii": 10, "iid": 105, "il": 155, "im": 83, "imag": [1, 2, 3, 4, 5, 6, 7, 12, 13, 15, 17, 19, 20, 21, 22, 23, 24, 27, 30, 31, 34, 35, 36, 39, 40, 45, 49, 50, 51, 52, 53, 54, 55, 57, 62, 63, 64, 67, 74, 77, 79, 84, 89, 91, 93, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 113, 127, 129, 131, 132, 133, 134, 135, 136, 138, 140, 141, 144, 145, 146, 147, 148, 149, 153, 155, 156, 157, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 176, 177, 180], "image_binary_dil": [159, 169], "image_to_align": 80, "images_to_convolv": [60, 167], "imdata": 167, "img": [29, 71, 77, 79, 80, 81, 83, 113, 117, 127, 129, 131, 144, 150, 169], "img_1": 1, "img_2": 1, "img_3": 1, "img_typ": 27, "implaus": 132, "implement": [1, 92, 93, 105, 169], "impli": [83, 107, 108, 109, 110], "implicit": [83, 107, 108, 109, 110, 133], "implicit_mask": 83, "import": [28, 79, 104, 105, 113, 172], "import_data": [130, 155, 159, 172], "improv": [22, 54, 81, 132], "impuls": 106, "in_b0_revers": [132, 148], "in_bval": 44, "in_bvec": 44, "in_channel": 164, "in_direct": 31, "in_diw": [132, 148], "in_dummy_tr": 88, "in_dvars_fil": [88, 89], "in_dwi": [17, 44, 132, 147, 148, 149], "in_dwi_pe_dir": [132, 148], "in_dwi_ro_tim": [132, 148], "in_epi": [25, 88], "in_ext": 180, "in_fd_fil": [88, 89], "in_fd_thresh": 88, "in_fil": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 76, 81, 82, 83, 84, 91, 92, 93, 95, 103, 107, 108, 114, 121, 136, 137, 139, 140, 142, 169, 180], "in_file_a": [1, 2], "in_file_b": 1, "in_file_c": 1, "in_filt": 78, "in_fod": 39, "in_func": 89, "in_fwhm": 87, "in_fwhm_fil": 88, "in_gcor": 88, "in_hmc": 88, "in_inu": 87, "in_list": [116, 117], "in_mask": [17, 18, 31, 32, 34, 35, 40, 41, 42, 50, 51, 88, 91, 136, 169], "in_matrix_fil": 28, "in_mni_tpm": 169, "in_noinu": 87, "in_outliers_fil": [88, 89], "in_qi_fil": 88, "in_ra": [87, 138], "in_refer": 28, "in_seg": 64, "in_sh_coeff": 52, "in_spikes_fil": [88, 89], "in_t1": 25, "in_t1w": [132, 149], "in_templ": [75, 136, 138, 141, 143], "in_tpm": 169, "in_track": [38, 39], "in_transfo": 24, "in_transfo_2": 24, "in_transform": 55, "in_trasfo_2": 24, "in_tsnr": 88, "in_weight": 28, "in_weight_volum": 12, "inc": 119, "inch": 180, "includ": [22, 33, 36, 37, 38, 54, 75, 81, 97, 101, 104, 105, 106, 107, 108, 109, 110, 122, 127, 129, 131, 133, 157, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172], "include_intercept": 107, "inclus": [26, 38, 54, 169], "inclusion_ord": [38, 54], "incorpor": 49, "increas": [28, 79, 80, 131, 149], "increasingli": 77, "increment": 13, "independ": [105, 106, 110], "index": [1, 2, 10, 26, 79, 82, 88, 93, 96, 97, 98, 99, 101, 102, 105, 116, 126, 127, 133, 134, 154, 155, 157, 161, 172, 178], "index_filt": [116, 126], "indic": [6, 37, 42, 45, 47, 76, 81, 83, 91, 93, 97, 99, 101, 102, 105, 113, 116, 127, 131, 133, 135, 169, 172], "indicatewheth": 16, "indirectli": [120, 133], "individu": [50, 105, 129, 133, 180], "induc": [131, 169], "induct": 131, "inf": [79, 80], "inferior": 169, "infin": 79, "influenc": 169, "info": [172, 181], "inform": [16, 25, 27, 28, 77, 87, 88, 91, 97, 101, 102, 105, 106, 113, 118, 119, 122, 132, 133, 155, 158, 166, 172, 180], "inhal": 169, "inherit": 157, "inheritance_d": [161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172], "inheritance_dict": [161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172], "inhomogen": [37, 132, 135, 148, 166, 169], "initi": [1, 5, 16, 28, 40, 50, 51, 54, 141, 143, 157, 158], "initial_moving_transform": 16, "initial_moving_transform_com": 16, "initialis": [82, 106, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172], "initialize_transforms_per_stag": 16, "inject": [113, 135], "inner": 49, "input": [0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 177, 178, 179], "input_filt": [130, 159, 172], "input_imag": 14, "input_image_typ": 14, "input_nii": 164, "insert": 169, "insight": [113, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], "inskul": [22, 165], "inskull_mask_fil": [22, 23], "inskull_mesh_vtk_fil": [22, 23], "instabl": 172, "instal": [37, 130, 151], "instanc": 118, "instanti": [161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172], "instead": [14, 16, 19, 40, 172], "insula_l": 155, "insula_r": 155, "int": [27, 28, 46, 48, 69, 73, 75, 81, 83, 89, 106, 107, 108, 109, 110, 169, 172], "int16": [67, 83], "int32": 83, "integ": [0, 1, 2, 4, 5, 6, 7, 10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 26, 28, 30, 31, 35, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 63, 64, 77, 80, 81, 82, 83, 85, 86, 88, 95, 96, 97, 98, 101, 103, 105, 106, 116, 126, 143, 146, 153, 154, 172, 180], "integr": [39, 54, 93, 132, 166], "intens": [15, 16, 22, 25, 27, 28, 34, 40, 44, 48, 73, 79, 80, 89, 91, 97, 101, 106, 127, 132, 140, 147, 166, 167, 169], "intensity_norm": 91, "intensityclip": [130, 160, 167], "inter": [77, 100, 165], "interact": [105, 106, 107, 108, 109, 110, 171], "intercept": 107, "interdepend": 133, "interest": [18, 28, 38, 54, 94, 97, 99, 101, 129, 131, 165, 169, 171, 172], "interfac": [54, 79, 157, 166, 167], "interleav": [82, 146], "intermedi": [25, 37], "intern": [29, 123, 133, 172], "interp": [28, 46, 70, 77, 80, 81, 149], "interpol": [10, 12, 14, 16, 28, 35, 45, 48, 77, 81, 107, 108, 109, 110, 136, 138, 141, 143, 153, 166], "interpolation_paramet": [14, 16], "interscan_interv": 106, "intersect": 169, "interv": [6, 7], "intial_moving_transform": 16, "intra": 165, "intracrani": 84, "introduc": [28, 106], "inu": 169, "invers": [16, 38, 48, 78, 79, 136, 138, 141, 143, 149, 172], "inverse_composite_transform": [16, 136, 138, 141, 143], "inverse_deformation_field": 79, "inverse_warped_imag": 16, "invert": [14, 19, 24, 48, 67], "invert_initial_moving_transform": 16, "invert_transform_flag": 14, "invert_xfm": 24, "investig": 93, "involv": [23, 77, 79, 80, 113, 131, 135], "inward": 0, "io": [162, 164, 167, 168], "ion": 169, "iqm": [91, 92, 96, 98, 100, 169, 177, 178, 180], "iqms_fil": [96, 98, 180], "iqms_plot": 98, "iqr": 100, "irm": 178, "is_outli": [160, 167], "is_plug": [161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172], "isotrop": [28, 77, 81], "item": [16, 19, 22, 27, 29, 31, 34, 36, 38, 43, 44, 45, 49, 50, 58, 70, 71, 76, 77, 79, 80, 81, 82, 83, 87, 104, 105, 106, 107, 108, 109, 110, 117, 120, 122, 131, 133, 143, 144, 145, 146, 156], "iter": [13, 15, 16, 22, 39, 40, 49, 51, 77, 133, 134, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172], "iter_voxel": 51, "itk": 84, "itk_global_default_number_of_thread": 151, "its": [19, 31, 42, 81, 82, 106, 113, 117, 127, 135, 155, 157, 169], "itself": [0, 15, 54, 169, 172], "iwl": 40, "iy_anat": 79, "j": [93, 169], "jac": 48, "jacmp": 169, "jacobian": 48, "jan": 133, "jensen": 17, "jet_r": 180, "jh": 17, "jiggl": 77, "jmri": 169, "jobtyp": [77, 78, 80, 81, 145, 146], "joint": [24, 77], "jos\u00e9": 84, "json": [87, 88, 96, 98, 113, 114, 127, 154, 172, 180], "just": 26, "k": [10, 93, 105, 155, 169], "k_i": 169, "keep": [37, 42, 54], "kei": [97, 101, 102, 105, 106, 120, 122, 127, 155, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 180], "kellner": 45, "kept": [0, 76, 114], "kernel": [29, 77, 81, 83, 147], "kfa": 17, "known": [157, 169, 180], "kth": [105, 155], "kurtosi": [40, 169], "kutta": 54, "kwarg": [174, 175, 176, 177, 178, 179, 180], "l": [99, 102, 111, 112, 123, 134, 169], "l1039": 167, "l301": 167, "l394": 167, "l405": 167, "l448": 167, "l474": 167, "l550": 180, "l75": 167, "l899": 167, "l92": 167, "l970": 167, "l974": 167, "label": [19, 75, 84, 138, 153, 167, 169, 180], "labeldiff": 28, "labels_nam": 86, "labels_structur": 153, "labelscorrespond": [130, 153], "lagrang": [10, 12], "lanczoswindowedsinc": [14, 16, 141, 143], "landscap": 20, "larg": [28, 84], "larger": 0, "largest": [0, 10, 27], "last": [14, 19, 158], "later": [10, 99, 102, 131, 133, 134, 169, 178], "laterality_index": 102, "lateralization_index_iter_curv": [159, 169], "lateralizationindexcurv": [130, 159, 169], "lateralizationpathologi": [99, 134], "latter": [79, 115], "launch": [158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172], "le": 153, "lead": 135, "leaki": 164, "leakyrelu": 164, "learn": [16, 20], "least": [10, 12, 28, 31, 38, 40, 54, 80, 107, 108, 110, 147], "leastsq": 28, "leav": 44, "left": [37, 45, 93, 102, 132, 148, 153, 169], "legendr": [6, 52, 54], "len": 16, "length": [2, 38, 54, 59, 104, 105, 106, 127, 167], "lepetit": 84, "less": 77, "letter": 102, "level": [0, 104, 105, 106, 107, 108, 109, 110, 124, 129, 131, 133, 166, 172], "level1design": [105, 118, 119, 120, 122, 130, 133, 134, 156, 170, 171, 172], "leverag": 20, "li": [39, 93, 169], "li_curv": 99, "li_it": 169, "lib_dir": [123, 172], "librari": [77, 78, 123, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176], "licens": [30, 84], "lidzba": [93, 169], "lie": 41, "light": [79, 80], "like": [77, 81, 94, 102, 113, 127, 164, 169, 172], "likelihood": 171, "limit": [16, 26], "limits_": 169, "line": [22, 37, 96, 97, 98, 100, 101, 180], "linear": [10, 12, 14, 16, 37, 46, 48, 53, 70, 97, 99, 101, 106, 129, 138, 143, 148, 165], "linear_transform": 48, "link": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 98, 100, 103, 104, 105, 106, 107, 108, 109, 110, 118, 132, 136, 137, 138, 140, 141, 142, 143, 151, 152, 153, 154, 156, 157, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172], "list": [10, 14, 15, 16, 19, 22, 27, 28, 31, 34, 36, 38, 43, 44, 45, 46, 48, 49, 50, 58, 60, 61, 63, 64, 70, 71, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 93, 94, 95, 99, 102, 104, 105, 106, 107, 108, 109, 110, 114, 118, 119, 120, 122, 123, 124, 131, 138, 143, 144, 145, 146, 153, 155, 156, 169, 171, 172, 180], "list1": 172, "list2": 172, "list_dupl": [130, 144, 159, 172], "list_output": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 180], "list_to_fil": [130, 131, 151, 159, 172], "listen": 133, "listoflist": 112, "littl": [79, 80], "lmax": 31, "lmn": 133, "ln": 169, "load": [106, 123, 127], "lobe": [39, 84, 85, 86, 132, 133, 153, 166], "local": [13, 45, 135, 163], "local_abl": 28, "local_search": 13, "locat": [46, 54, 89], "log": [28, 40, 129, 131, 166, 169], "logic": 1, "long": [77, 80, 81, 83], "longer": [106, 132], "look": [77, 81, 82, 117], "lookup": [39, 52], "loop": 49, "lot": 81, "low": [15, 28, 169, 172, 180], "lower": [2, 16, 67, 81, 97, 101, 169], "lr": [37, 132, 148], "m": [10, 22, 82, 93, 97, 101, 102, 132, 149, 169, 172], "ma": 40, "macrostructur": [84, 85, 86, 153], "mad": [6, 7, 169], "mad_air": 169, "made": [78, 102, 106, 124, 150, 151, 152], "magdata": 129, "magmax": 47, "magnet": [113, 127, 129, 131, 135, 169, 172], "magnitud": [25, 53, 167], "magnota2006": 169, "magnotta": 169, "mai": [1, 12, 28, 77, 78, 81, 106, 169], "main": [28, 49, 105, 106, 131, 133, 134, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172], "mainli": 158, "major": 106, "make": [0, 19, 82, 147, 167, 169, 172, 176, 180], "make_a_list": [130, 156, 159, 172], "make_aif": [113, 130, 159, 172], "make_cvr_reg_physio": [130, 131, 159, 172], "make_initresult": [161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172], "make_null_lob": 39, "manag": [124, 157], "manat": [79, 144, 146], "mandatori": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 100, 103, 104, 105, 107, 108, 109, 110, 114, 115, 132, 136, 137, 138, 139, 140, 141, 142, 143, 147, 148, 149, 151, 152, 153, 154, 180], "manipul": 172, "manjon": 84, "mansenc": 84, "manual": [10, 18, 42, 156], "map": [13, 15, 20, 22, 27, 28, 32, 35, 39, 48, 53, 65, 75, 78, 79, 87, 97, 101, 135, 144, 146, 148, 156, 168, 169, 176, 180], "marchenko": 35, "mark": 113, "mask": [4, 6, 7, 12, 15, 16, 17, 18, 20, 21, 22, 23, 28, 31, 32, 34, 35, 37, 38, 39, 40, 42, 49, 50, 51, 52, 54, 60, 63, 64, 75, 77, 81, 83, 84, 87, 88, 91, 96, 97, 98, 101, 102, 103, 105, 106, 107, 108, 109, 110, 113, 127, 130, 131, 132, 138, 139, 140, 141, 143, 147, 148, 149, 151, 152, 154, 156, 160, 161, 166, 167, 169, 172, 176, 178], "mask_003": [150, 155, 156], "mask_anat_002": [155, 156], "mask_fil": [4, 5, 6, 7, 22, 68, 113], "mask_imag": [15, 105, 106], "mask_left": 169, "mask_right": 169, "mask_swc1_anat_003": 113, "mask_swc1anat": 106, "mask_swc1anat_003": 150, "mask_threshold": 106, "master": 162, "mat": [13, 14, 16, 24, 25, 28, 55, 79, 97, 104, 105, 106, 107, 108, 109, 110, 129, 156], "match": [16, 19, 34, 39, 46, 48, 52, 77, 106, 114, 132, 164, 166], "matlab": [30, 93, 158, 160, 169, 172], "matlab_wrap": [130, 160], "matplotlib": 100, "matric": [24, 165], "matrix": [12, 28, 48, 84, 106, 107, 108, 109, 110, 122, 156, 166, 171, 172], "matrix_affin": 84, "matrix_affine_native_to_mni_t1w": 84, "matrix_struct_to_diff": 28, "matt": [16, 141, 143], "matter": [15, 25, 27, 28, 31, 42, 54, 76, 79, 89, 93, 132, 138, 147, 149, 156, 166, 167, 168, 169, 176, 178], "max": [12, 15, 19, 28, 47, 54, 169], "max_32bit": 73, "max_featur": 164, "max_it": 51, "max_lenght": 54, "max_pool": 164, "max_sh": [31, 50, 51], "max_voxel": 169, "maximis": 77, "maximum": [10, 19, 26, 29, 31, 38, 49, 50, 51, 54, 76, 79, 80, 83, 91, 97, 101, 113, 135, 169, 171], "maxlength": 38, "maxw": 45, "maxweight": 38, "mcr": 30, "mcwi": 79, "md": 17, "md1d": 12, "md1d_file": 12, "mean": [1, 12, 16, 17, 47, 53, 79, 80, 81, 88, 91, 98, 102, 104, 107, 108, 109, 110, 113, 127, 131, 135, 152, 154, 161, 163, 169, 176, 178, 180], "mean_": 11, "mean_along_axis3": 47, "mean_func": [11, 98], "mean_imag": 81, "mean_out_fil": 94, "mean_reg_func_valid": [4, 5, 88, 98, 143, 154], "mean_reg_func_valid_bold_qc": 154, "mean_reg_func_valid_functional_qc": 88, "mean_stddev_calc": [130, 155, 159, 169], "meanfunc": [77, 81, 116, 144], "meansquar": [16, 143], "measur": [4, 5, 6, 17, 40, 79, 80, 87, 88, 106, 110, 113, 118, 129, 131, 135, 169, 174, 177], "mechan": 54, "med": 169, "median": [6, 7, 47, 61, 67, 91, 100, 167, 169], "mesh": [22, 23, 54], "mesh_grid": 54, "mesh_vtk_fil": 22, "messag": [1, 180], "metadata": 129, "metal": 151, "meth": [93, 169], "method": [4, 10, 12, 25, 28, 45, 46, 48, 54, 57, 66, 70, 72, 77, 80, 81, 105, 107, 108, 109, 110, 113, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 180], "metric": [16, 89, 113, 127, 141, 143, 166, 169, 177], "metric_weight": [16, 141, 143], "mgz": [19, 20, 21], "mi": [16, 77, 143], "mia": [30, 93, 105, 151, 152], "mia_process": [31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 77, 78, 79, 80, 81, 82, 83, 106, 107, 108, 109, 110, 151, 152, 157], "mia_project": [118, 119, 120, 121, 122], "miaresourc": [93, 123, 172], "micha\u00ebl": 84, "microtim": 172, "microtime_onset": 106, "microtime_resolut": 106, "middl": [82, 146], "midwai": 48, "midway_spac": 48, "mif": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 132, 147, 148, 149], "millilit": 113, "million": 132, "millisecond": 10, "min": [15, 19, 28, 47, 54, 113, 152], "min_lenght": 54, "min_sampl": 28, "min_voxel": 169, "minimis": 77, "minimum": [10, 19, 26, 28, 38, 54, 97, 101, 127], "minlength": 38, "minu": [7, 106], "minut": 113, "minw": 45, "minweight": 38, "mixeltyp": 27, "mixtur": [27, 131], "mk": 17, "mkt": 17, "ml": 113, "mm": [16, 20, 21, 22, 29, 38, 44, 54, 77, 79, 80, 81, 83, 92, 138, 169, 176], "mni": [79, 80, 84, 136, 138, 144, 146, 176], "mni152nlin2009casym": [75, 136, 138, 143, 176], "mni152nlin2009casym_r": [57, 75, 87, 89, 90, 138, 143, 152, 154], "mni_lob": 84, "mni_lobes_t1w": 84, "mni_macrostructur": 84, "mni_macrostructures_t1w": 84, "mni_mask": 84, "mni_masks_t1w": 84, "mni_structur": 84, "mni_structures_t1w": 84, "mni_t1": 84, "mni_t1_t1w": 84, "mni_tissu": 84, "mni_tissues_t1w": 84, "mni_tpm": [87, 138], "mnicolin27": 75, "mnipediatricasym": 75, "modal": [20, 100, 133, 165, 168, 180], "mode": 28, "modeand": 133, "model": [14, 15, 16, 18, 20, 21, 28, 39, 54, 97, 99, 101, 104, 107, 108, 109, 110, 129, 131, 156, 159, 164, 170], "model_serial_correl": 106, "modifi": [48, 106, 165, 166, 167], "modified_in_fil": 81, "modul": [48, 53, 79, 106, 157, 159, 160, 170, 173, 181], "modulated_class_imag": 79, "monitor": 131, "more": [1, 3, 12, 16, 17, 31, 36, 37, 54, 58, 59, 61, 66, 67, 68, 72, 77, 81, 91, 106, 127, 172], "mortamet": [57, 66, 72], "mortamet2009": [169, 176], "mosaic": 180, "most": [10, 12, 22, 52, 81], "motion": [45, 77, 81, 88, 89, 91, 92, 131, 132, 148, 154, 169, 176], "motor": 133, "move": [12, 13, 16, 48, 77, 141, 162], "movement": [12, 77, 92, 142, 148, 154], "moving_imag": [13, 16, 141], "moving_image_mask": 16, "moving_mask": 141, "mr": [93, 97, 101, 102, 131, 135, 155, 169, 180], "mrcat": [130, 160, 166], "mrconvert": [31, 32, 33, 34, 35, 36, 37, 40, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 130, 160, 166], "mrdegibb": [130, 160, 166], "mrf": 79, "mrgrid": [46, 166], "mrgridregrid": [130, 160, 166], "mri": [45, 77, 79, 80, 81, 113, 131, 133, 134, 161, 169, 172, 177], "mri_binar": 164, "mri_synthstrip": [20, 164], "mric": 141, "mriq": [142, 143], "mriqc": [16, 57, 59, 61, 62, 65, 66, 72, 90, 91, 92, 103, 136, 137, 138, 140, 141, 142, 143, 154, 162, 164, 167, 169, 176, 177, 180], "mriqc_1": 21, "mriqc_2": 21, "mriqc_anat_make_report": [158, 180], "mriqc_func_make_report": [158, 180], "mriqc_get_all_run": [158, 180], "mriqc_group": 180, "mriqc_group_iqms_tsv": [158, 180], "mriqc_group_make_report": [158, 180], "mrmath": [130, 160, 166], "mrregist": 48, "mrtransform": [130, 160, 166], "mrtrix": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 130, 149, 159, 160], "mrtrix3": [160, 166], "msmt_csd": [31, 147], "msmtt": 132, "mthresh": 106, "mtnormalis": [130, 160, 166], "mtt": [113, 135], "mtt_imag": 113, "mu": 39, "mu_": 169, "mu_f": 169, "mu_fg": 169, "mu_file_out": 39, "mu_gm": 169, "mu_wm": 169, "much": [151, 152], "multi": [17, 31, 50, 106, 132, 162, 166], "multi_reg": 106, "multicent": 169, "multichannel": 169, "multilabel": [14, 16, 136, 143], "multimod": 133, "multipl": [14, 16, 52, 106, 151, 152, 156, 166, 171, 180], "multipleregressiondesign": [130, 170, 171], "multipli": [76, 91], "multishel": [132, 148], "must": [0, 10, 16, 28, 37, 38, 54, 60, 67, 71, 76, 77, 81, 82, 94, 102, 106, 130, 133, 149, 156, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172], "mutual": [6, 7, 10, 16, 22, 28, 29, 77, 80, 104, 114], "mutualinfo": 28, "mwc1anat": 79, "mwc2anat": 79, "mwc3anat": 79, "mwc4anat": 79, "mwc5anat": 79, "mykytka": 167, "n": [12, 22, 81, 106, 132, 149, 169, 172], "n1": 119, "n2": 119, "n3": 15, "n4": [32, 162], "n4biasfieldcorrect": [130, 139, 140, 143, 160, 162], "n4c": [15, 114], "n4c_": 15, "n4c_mean_reg_func_valid_bia": 143, "n4c_mean_reg_func_valid_composit": 143, "n4c_mean_reg_func_valid_inversecomposit": 143, "n4c_t1w": [15, 139], "n4c_t1w_bia": 139, "n4c_t1w_clip": 140, "n4c_t1w_clipped_bia": [87, 140], "n4c_t1w_clipped_brain_outskin_mask": 87, "n4c_t1w_clipped_harmon": 87, "n_iter": [15, 140], "n_volumes_to_discard": [69, 73], "name": [8, 17, 25, 27, 34, 43, 44, 47, 75, 76, 77, 83, 85, 94, 97, 99, 101, 102, 104, 105, 106, 107, 108, 109, 110, 117, 118, 119, 120, 121, 122, 123, 131, 133, 134, 143, 144, 145, 146, 155, 158, 169, 171, 172, 180], "name_data": [60, 71, 94, 102, 123, 155], "nan": [107, 108, 109, 110], "nasion_post_mask": 57, "nativ": [78, 79, 84, 144, 146, 151, 152, 172, 176], "native_class_imag": [79, 144, 146, 150], "native_lob": 84, "native_lobes_t1w": 84, "native_macrostructur": 84, "native_macrostructures_t1w": 84, "native_mask": 84, "native_mask_t1w": 84, "native_structur": 84, "native_structures_sub": [63, 64, 95], "native_structures_t1w": 84, "native_t1": 84, "native_t1_t1w": 84, "native_tissu": 84, "native_tissues_t1w": 84, "nb_col": 172, "nb_conv_per_level": 164, "nb_dyn": 172, "nb_featur": 164, "nb_level": 164, "nb_row": 172, "nb_sli": 172, "nbsp": [77, 78, 79, 80, 81, 115, 116, 117, 123, 124, 125, 126, 131, 144], "ncc": 77, "ndarrai": [169, 172, 180], "ndim": 164, "nearesr": 46, "nearest": [46, 48, 70, 77, 80, 81, 107, 108, 109, 110, 172], "nearestneighbor": [14, 16, 143], "nearestneighbour": [28, 149, 153], "necessari": [27, 77, 94, 105, 106, 147, 149, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172], "neck": 22, "need": [5, 12, 23, 28, 59, 77, 79, 80, 81, 95, 105, 106, 124, 133, 169, 172], "neg": [10, 15, 31, 39, 93], "negative_valu": 15, "neighbour": [46, 77, 80, 81, 107, 108, 109, 110], "neither": 10, "nerv": 22, "network": [84, 133, 169], "neural": 84, "neuroimag": [75, 84, 129, 131, 169], "neuroinform": 169, "neuroinformat": 169, "neurolog": 113, "neuron": 106, "neurophil": 132, "neurosci": [93, 133, 169], "new": [26, 46, 93, 102, 104, 133, 169], "new_concate_imag": 34, "newseg": [130, 144, 146, 160, 168], "next": [51, 94, 106, 169], "nfirst": 5, "ngau": 79, "nhit": 19, "nibabel": [59, 167, 180], "nifti": [0, 1, 2, 3, 9, 10, 11, 12, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 63, 80, 132, 148, 149, 180], "nifti_gz": [0, 1, 2, 3, 9, 10, 11, 12, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 44, 180], "niftilabelsmask": 64, "nii": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 35, 37, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 180], "nilearn": [64, 167], "nipi": [92, 157, 167], "niprep": [162, 164, 167, 180], "nipyp": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 35, 36, 37, 40, 42, 43, 45, 47, 48, 50, 51, 53, 54, 57, 69, 74, 77, 79, 80, 81, 82, 83, 91, 92, 104, 105, 106, 107, 108, 109, 110, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171], "niter_numb": 49, "niworflow": [67, 68, 73], "niworkflow": [16, 58, 67, 68, 73, 89, 90, 162, 167, 169], "nmi": 77, "nnt": 133, "no_bzero": 36, "no_clamp": 28, "no_clean": 25, "no_crop": 42, "no_csf": 20, "no_demean": 5, "no_dilate_lut": 39, "no_fmapreg": 25, "no_grand_mean_sc": [107, 108, 109, 110], "no_output": 22, "no_resampl": 28, "no_resample_blur": 28, "no_search": 28, "no_zscor": 103, "nobzero": 36, "nocleanup": 37, "node": 124, "nois": [18, 35, 148, 166, 169, 172, 180], "noise_map": 35, "noise_mask": 18, "noise_model": 18, "noisi": 127, "non": [16, 17, 22, 27, 31, 36, 48, 73, 79, 80, 127, 152, 163, 167, 169], "none": [2, 16, 37, 53, 79, 80, 82, 106, 107, 108, 109, 110, 127, 143, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 177, 178, 179, 180], "nonlinear": 106, "nonneg": 67, "nonparameter": 15, "nonsteadydetector": 130, "nonsteadystatedetector": [69, 160, 167], "nonuniform": 15, "nopreselectcompt": 54, "norm": [44, 47, 141, 167], "norm_anat": [96, 97, 99, 101], "norm_anat_cmap": [97, 101], "norm_anat_fig_col": [96, 97, 101], "norm_anat_fig_row": [96, 97, 101], "norm_anat_inf_slice_start": [96, 97, 101], "norm_anat_slices_gap": [96, 97, 101], "norm_anat_vmax": [97, 101], "norm_anat_vmin": [97, 101], "norm_func": [97, 98, 101], "norm_func_cmap": [97, 101], "norm_func_fig_col": [97, 98, 101], "norm_func_fig_row": [97, 98, 101], "norm_func_gen": 99, "norm_func_inf_slice_start": [97, 98, 101], "norm_func_recal": 99, "norm_func_reco": 99, "norm_func_slices_gap": [97, 98, 101], "norm_func_vmax": [97, 101], "norm_func_vmin": [97, 101], "normal": [15, 28, 54, 84, 91, 92, 131, 132, 144, 146, 147, 169, 176], "normalis": [28, 77, 80, 96, 97, 98, 99, 101, 106, 107, 108, 109, 110, 144, 145, 146, 151, 166, 168], "normalize12": [78, 130, 144, 145, 146, 160, 168], "normalize_mc_param": [159, 169], "normalized_anat": [144, 145, 146], "normalized_class_imag": 79, "normalized_fil": [78, 80], "normalized_func": [144, 146], "normalized_imag": 80, "normcor": 28, "normi": 28, "nose": [77, 81], "note": [10, 15, 26, 28, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 79, 93, 104, 105, 107, 108, 109, 110, 124, 126, 132, 149, 150, 172, 180], "noth": [79, 158], "notindb": [161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172], "notion": 102, "nparrai": 167, "nput": [29, 33], "nsampl": 54, "nshift": 45, "nslice": 82, "nt": 172, "nterpol": 152, "ntotvox": 19, "nuisanc": [107, 108, 109, 110], "null": [16, 54], "nulldist": 54, "nulldist1": 54, "nulldist2": 54, "num": 52, "num_slic": 82, "number": [5, 12, 13, 15, 16, 19, 27, 28, 31, 38, 40, 44, 46, 48, 49, 50, 51, 52, 54, 69, 73, 79, 81, 82, 87, 88, 89, 96, 97, 98, 101, 104, 105, 106, 127, 132, 169, 172, 180], "number_of_it": 40, "number_of_iter": [16, 40, 141, 143], "numberofhistogrambin": 15, "numdimens": 167, "numobserv": 167, "numpi": [167, 169, 172, 180], "nvoxtot": 19, "nyquist": 169, "o": 22, "obj1": 128, "obj2": 128, "obj_list": 128, "object": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 70, 71, 77, 79, 80, 81, 82, 84, 93, 95, 96, 104, 105, 106, 107, 108, 109, 110, 133, 144, 145, 146, 147, 150, 156, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 176, 180], "observ": 167, "obtain": [25, 28, 33, 78, 85, 86, 93, 95, 113, 131, 133, 134, 151, 155, 169, 180], "occ_l": 155, "occ_r": 155, "occipit": 93, "occupi": 1, "occur": [77, 79, 80, 81], "occurr": 106, "odf": 31, "oerat": 47, "off": [6, 7, 54, 81], "offer": 157, "offici": 158, "offset": [10, 12], "often": 113, "ok": [77, 80, 81, 180], "ol": 40, "old": [4, 102, 133, 169], "ols_opt": 40, "omit": [16, 31, 38, 107, 108, 109, 110], "omp_num_thread": 151, "onc": [39, 54, 67], "one": [0, 1, 2, 3, 4, 9, 10, 11, 12, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 36, 37, 38, 42, 53, 54, 58, 59, 61, 66, 67, 68, 72, 77, 79, 83, 95, 103, 105, 106, 107, 109, 110, 115, 118, 119, 122, 124, 125, 157, 161, 166, 167, 169, 171, 172, 180], "oned": 12, "oned_fil": [12, 142], "oned_matrix": 12, "ones": 77, "onesamplettestdesign": [109, 110, 130, 170, 171], "onli": [1, 6, 7, 17, 18, 19, 22, 27, 28, 31, 35, 37, 38, 39, 40, 41, 44, 46, 49, 52, 54, 58, 59, 61, 66, 68, 72, 76, 79, 81, 83, 104, 105, 106, 107, 108, 109, 110, 123, 129, 161, 169, 172, 180], "only_nois": 180, "onset": [10, 106, 113, 118, 119, 172], "onto": 169, "open": [105, 124, 157], "oper": [16, 47, 123, 158, 166, 172], "opportun": [107, 108, 109, 110], "oppos": [37, 132, 148], "opposit": [37, 132, 148], "optic": 22, "optim": [13, 20, 162, 166], "optimis": [28, 52], "option": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 61, 63, 65, 66, 67, 68, 70, 72, 73, 74, 75, 76, 77, 81, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 114, 115, 124, 132, 142, 143, 147, 148, 153, 154, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 180], "order": [4, 10, 12, 14, 15, 16, 23, 25, 31, 38, 49, 54, 79, 82, 105, 106, 119, 127, 132, 133, 146, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172], "order_numb": 49, "ordinari": 40, "organ": 118, "orient": [1, 39, 46, 48, 50, 54, 106, 107, 108, 109, 110, 132, 166, 176, 180], "origin": [10, 12, 15, 16, 28, 48, 67, 77, 79, 81, 83, 123, 157, 164, 169, 172, 180], "orth": 106, "orthogon": 31, "orthogonalis": 106, "oscil": 172, "oscillatori": 172, "osvd": 172, "other": [16, 18, 54, 58, 77, 79, 80, 82, 106, 107, 108, 109, 110, 113, 114, 124, 130, 131, 132, 157, 159, 160, 161, 169, 172, 176], "otherwis": [15, 82, 123, 129, 167], "othogonalis": 106, "out": [1, 2, 4, 5, 6, 7, 9, 10, 11, 13, 14, 15, 18, 19, 31, 34, 43, 44, 47, 54, 57, 87, 88, 89, 91, 92, 93, 95, 103, 104, 105, 106, 146, 153, 154, 169, 172, 176, 180], "out_1vol": 25, "out_ad": 17, "out_air_mask": [57, 136], "out_ak": 17, "out_art_mask": [57, 136], "out_b0": 40, "out_brain": [0, 140], "out_brain_suffix": 0, "out_bval": 44, "out_bvec": 44, "out_channel": 164, "out_conc": 63, "out_correct": 140, "out_dir": 180, "out_dir_nam": [104, 105, 106, 107, 108, 109, 110], "out_dkt": 40, "out_fa": 17, "out_fil": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 54, 56, 58, 59, 61, 63, 65, 66, 67, 68, 70, 72, 73, 76, 87, 88, 89, 90, 91, 92, 102, 103, 117, 125, 137, 139, 142, 169, 180], "out_file_format": 44, "out_file_nam": [43, 47], "out_file_rot": 180, "out_file_tra": 180, "out_hat_mask": [57, 136], "out_imag": [60, 71], "out_kfa": 17, "out_list": [111, 125], "out_log": 28, "out_mask": [20, 21, 139, 140], "out_matrix": 28, "out_md": 17, "out_mk": 17, "out_mkt": 17, "out_nam": [34, 180], "out_png": [93, 95, 169], "out_png_lob": 153, "out_png_macrostructur": 153, "out_png_structur": 153, "out_png_tissu": 153, "out_prefix": [0, 1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 29, 77, 80, 81, 82, 83, 90, 91, 92, 96, 98, 103], "out_rd": 17, "out_rk": 17, "out_rot_mask": 136, "out_snr": 62, "out_spm_mat_fil": [104, 105, 107, 108, 109, 110, 156], "out_stddev_fil": 74, "out_suffix": 19, "out_transform": 55, "out_tsnr_fil": 74, "out_tsv": [100, 180], "outlier": [7, 67, 88, 89, 98, 154, 161, 167, 169], "outlier_fract": 154, "outliercount": [160, 161], "outliercount_fil": 154, "outliers_": 6, "outliers_reg_func_valid": [6, 7, 88, 89, 154], "outlierscount": 130, "outlin": 22, "outline_fil": 22, "output": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 177, 178, 179, 180], "output_directori": [123, 167, 172, 180], "output_dtyp": 164, "output_imag": 52, "output_inverse_warped_imag": 16, "output_typ": [0, 1, 2, 3, 9, 10, 11, 12, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "outputfil": 12, "outsid": [28, 38, 77, 81, 169], "outskin": [22, 96, 165], "outskin_mask_fil": [22, 23], "outskin_mesh_fil": [22, 23], "outskin_mesh_vtk_fil": [22, 23], "outskul": [22, 165], "outskull_mask_fil": [22, 23], "outskull_mesh_fil": [22, 23], "outskull_mesh_vtk_fil": [22, 23], "outward": 0, "over": [31, 46, 48, 54, 106, 113, 127, 155, 161, 172], "overal": [107, 108, 109, 110], "overestim": 132, "overlaid": 180, "overrid": 158, "oversampl": [46, 172], "oversample_factor": 48, "overwrit": [102, 169], "overwritten": [58, 59, 60, 61, 66, 68, 72, 94, 104, 105, 107, 108, 109, 110, 169], "own": [107, 108, 109, 110], "oxygen": 131, "p": [169, 172], "p_": 169, "p_max": 67, "p_min": 67, "pa": [37, 132, 148], "packag": [93, 181], "pad": [22, 172], "padding_s": 28, "page": [157, 180], "page_count": 180, "pagenumcanva": [158, 180], "pair": [31, 37, 91, 148], "paired_fil": 109, "pairedttestdesign": [130, 170, 171], "panda": 180, "panel": 180, "paper": [57, 66, 72], "par_l": 155, "par_r": 155, "paradigm": 133, "parallel": 169, "param": [77, 102, 106, 169, 172, 180], "paramagnet": 172, "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 177, 178, 179, 180], "parameter_fil": [102, 169], "parameter_nam": 158, "parameter_sourc": 92, "parametr": [79, 106, 180], "parametric_map": [94, 169], "parcel": [154, 169], "parcelatt": 90, "parenthes": 1, "pariet": 93, "pars": 117, "part": [37, 76, 93, 113, 129, 169], "parti": [130, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172], "partial": [27, 169], "partial_volume_fil": 27, "partial_volume_map": 27, "particip": [131, 133], "particular": [75, 81, 83, 113], "particularli": [113, 172], "pass": [12, 50, 106, 113, 135, 180], "passag": [113, 135], "pastur": 35, "patch": 18, "patch_radiu": 18, "path": [58, 60, 65, 66, 67, 68, 72, 73, 74, 75, 76, 79, 82, 115, 123, 125, 158, 169, 180], "pathlik": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 70, 71, 79, 80, 81, 82, 84, 93, 95, 96, 104, 105, 106, 107, 108, 109, 110, 144, 145, 146, 147, 150, 156], "patholog": 149, "pathologi": [97, 99, 101, 102, 131, 134, 155], "patient": [60, 71, 93, 94, 97, 99, 101, 102, 121, 123, 131, 133, 134, 155, 169, 172], "patient_info": [97, 99, 101, 102, 131, 134, 155], "patient_nam": 121, "patient_ref_data": [97, 101], "patientnam": [60, 71, 94, 99, 102, 121, 123, 134, 155, 167, 169, 172], "patientname_data": [60, 94, 102, 123, 167, 169, 172], "patientname_ge2rec_report_2024_03_19_11_01_15_04": [133, 134], "patientref": [97, 101, 131], "patientref_co2_inhal_cvr_report_2024_03_19_11_01_15_04": 131, "patientref_data": 131, "pattern": [10, 77, 81, 172], "pca": [35, 166], "pct": 19, "pd": 27, "pdf": [84, 96, 97, 98, 99, 100, 101, 114, 131, 133, 134, 151, 152, 180], "pe_dir": 37, "peak": [106, 113, 127, 132, 135, 166], "peaks_imag": 52, "pedir": [25, 28], "per": [16, 27, 39, 49, 54, 79, 82, 97, 99, 101, 105, 106, 107, 108, 109, 110, 113], "percent": 19, "percentag": [16, 120], "percentil": [167, 169], "perf_dsc": 180, "perf_dsc_make_report": [158, 180], "perfdsc": 130, "perfectli": [132, 149], "perform": [1, 15, 25, 28, 31, 35, 40, 43, 47, 48, 52, 77, 97, 99, 101, 106, 107, 108, 109, 110, 120, 133, 147, 149, 166, 169], "perfus": [113, 130, 169, 180], "period": [106, 133], "pet": [77, 80, 81, 107, 108, 109, 110], "ph": 167, "pharmaco": 133, "phase": [25, 28, 37, 77, 81, 132, 169], "phi": 52, "phy": 169, "physic": [79, 80], "physio_data": [129, 131], "physiolog": [97, 131, 172], "pi": 169, "pica": 112, "pierrick": 84, "pilelin": 134, "pilepsi": 133, "pipelin": [35, 77, 114, 124, 130, 156, 157, 158, 169, 172, 181], "pipeline_definit": [173, 174, 175, 176, 177, 178, 179], "pitch": 169, "pixel": [18, 169], "place": 54, "placement": 54, "planar": [53, 131, 135, 144, 145, 146], "plane": [19, 45, 96, 97, 98, 101, 106, 180], "plausibl": [54, 132, 149], "pleas": [3, 20, 21, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 78, 81, 93, 105, 106, 149, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 177, 178, 179], "plot": [89, 96, 97, 98, 101, 131, 152, 153, 169, 180], "plot_boxplot_point": [158, 180], "plot_qi2": [158, 180], "plot_realignment_paramet": [158, 180], "plot_segment": [158, 180], "plot_slice_plan": [158, 180], "plotsignalroi": [130, 153, 159, 169], "plu": 106, "plug": [161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172], "pmc8772037": 133, "pmcid": 133, "pmid": 133, "pmod": 106, "pmod1": 106, "pmod2": 106, "png": [89, 93, 95, 98, 99, 153, 180], "point": [10, 13, 26, 28, 48, 54, 77, 79, 80, 81, 105, 127, 151, 152, 167, 180], "poke": [77, 81], "poli": 106, "polort": [6, 7], "polynomi": [6, 7, 10, 12, 49, 52, 54, 106, 169], "popul": 20, "popular": 15, "populs": [32, 37, 157, 162, 164, 167, 168], "populse_mia": [157, 158, 161, 162, 163, 164, 165, 166, 168, 171], "posit": [49, 54, 67, 81, 93, 116, 126], "positif": 104, "possess": 37, "possibl": [1, 16, 25, 26, 27, 28, 37, 77, 81, 151, 152, 166], "post": [106, 127], "post_n4c_t1w_clipped_masked_inversecomposit": 14, "posterior": [37, 132, 148, 169], "potenti": [49, 131], "power": [54, 91, 169], "power2012": 169, "pp": 84, "pre": [54, 113, 127, 129, 133, 134, 159, 166, 167, 176], "pre_n4c_t1w_clipped_desc": 96, "pre_n4c_t1w_clipped_desc_brain_mask": 140, "prec": 83, "preced": 155, "precis": [39, 54, 73, 81, 151, 152], "predefin": 16, "predict": [31, 40, 147], "predicted_signal_fil": [31, 40, 147], "predictor": [97, 101, 156], "prefer": [93, 105], "prefix": [0, 1, 2, 3, 9, 10, 11, 12, 13, 14, 15, 16, 18, 58, 59, 60, 61, 65, 66, 68, 70, 72, 73, 74, 76, 77, 80, 81, 82, 83, 96, 98, 103], "prefix_stddev": 74, "prefix_to_delet": 94, "prefix_tsnr": 74, "premask": 42, "prematur": 54, "prepar": [51, 132, 147, 149], "prepend": [4, 6, 7, 29, 60, 77, 83, 90, 91, 92], "preproc_dwi": 148, "preprocess": [37, 130, 132, 133, 134, 147, 149, 156, 158, 159, 169, 173], "prescrib": 167, "presenc": [36, 39, 172], "present": [15, 27, 36, 102, 113, 115, 133, 169], "preserv": [48, 83], "press": 133, "previou": [16, 40, 78], "previous": [106, 113, 124, 133, 155, 156], "primari": 118, "prime": [133, 134, 172], "princip": 13, "principal_ax": 13, "print_out_composite_warp_fil": 14, "prior": 15, "probabilist": 54, "probabl": [15, 77, 78, 79, 80, 81, 144, 146, 176], "probal": 87, "problem": [127, 172], "probseg": [75, 138], "proc_mask": 39, "procedur": [77, 169], "process": [10, 15, 30, 31, 35, 36, 39, 54, 76, 79, 82, 97, 113, 124, 127, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 151, 152, 153, 154, 157, 158, 159, 160, 168, 171, 172, 174, 175, 176, 177, 178, 179], "process_matlab": 181, "processmatlab": [158, 181], "processmia": [158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172], "produc": [1, 79, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 178], "product": [47, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172], "program": [0, 23, 52, 77, 81], "project": [104, 105, 106, 107, 108, 109, 110, 169, 180], "proof": 30, "propag": [38, 54], "properli": [124, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172], "properti": [127, 172], "proport": [27, 106, 107, 108, 109, 110, 169], "proportion": 39, "propos": [17, 45, 176], "protocol": [15, 37, 84, 85, 86, 169, 172], "provid": [25, 28, 30, 34, 38, 39, 41, 42, 44, 47, 50, 51, 52, 54, 77, 81, 113, 132, 148, 151, 152, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 176], "proxi": 169, "pseudo": 133, "pseudoword": 133, "psychologi": [133, 134], "pt": 21, "purpos": [91, 132, 133, 134, 148, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 178], "put": [10, 16, 40, 180], "pveseg": 27, "pvm": [87, 169], "py": [158, 164, 167, 180], "python": [93, 116, 126, 169, 172], "q": 6, "q1": 100, "q3": 100, "qc": [87, 88, 180], "qform": 28, "qi": [7, 169], "qi_": 7, "qi_reg_func_valid": 88, "qthr": 6, "quadrant": 7, "qualiti": [81, 161, 167, 169, 177, 180], "quality_index_automask": 154, "qualitycontrol": [130, 158, 173], "qualityindex": [130, 160, 161], "quantif": 17, "quantil": 16, "quartil": 100, "quaternion": 28, "question": 120, "quick": 27, "quintic": [10, 12], "r": [22, 54, 77, 81, 99, 102, 111, 112, 123, 134, 156, 169], "r1_1": 104, "r2": 172, "ra": [133, 134], "rad": [25, 28, 169], "radial": [17, 53], "radian_fract": 13, "radiu": [16, 22, 54, 92, 169], "radius_bins_item_trait": 16, "radius_or_number_of_bin": [16, 141, 143], "rainbow": [97, 101, 180], "rainbow_r": 180, "rais": 54, "random": [16, 54, 61, 133, 141, 143, 151, 152], "random_se": 16, "randomli": 132, "rang": [15, 16, 19, 20, 27, 28, 97, 100, 101, 167, 169, 180], "rank": 7, "rapid": [113, 135], "ras_epi": 154, "rate": [16, 76, 113, 131, 135, 172], "rather": [10, 42, 48], "ratio": [18, 28, 39, 46], "raw": 180, "raw_data": [0, 1, 2, 3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 106, 113, 115, 116, 123, 127, 128, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 172], "rayleigh": 169, "rc1anat": 79, "rc2anat": 79, "rc3anat": 79, "rc4anat": 79, "rc5anat": 79, "rci": 79, "rd": [17, 53], "rd_file": 53, "rdylbu": 180, "re": [28, 75, 77], "reach": [39, 54, 113, 135], "reaction": [107, 108, 109, 110], "reactiv": 174, "readout": [37, 132, 148, 169], "realign": [77, 80, 113, 127, 130, 144, 145, 146, 160, 168, 180], "realigned_fil": 81, "realignment_paramet": [81, 97, 101, 144, 145, 146, 180], "realignment_parameters_gen": 99, "realignment_parameters_recal": 99, "realignment_parameters_reco": 99, "realli": [77, 81], "recal": [99, 133, 134], "receiv": [60, 71, 94, 102, 167, 169], "reco": [120, 133, 134], "recognis": 133, "recognit": [99, 133, 134], "recommend": [28, 77, 81, 105], "reconstruct": [54, 169], "record": [97, 99, 101, 102, 113, 127, 129], "recov": 180, "rectangular": 28, "reduc": [42, 54, 132, 172], "reduce_bia": 22, "reduce_biai": 22, "reduct": 39, "ref": 77, "ref_data": 180, "ref_fil": 169, "ref_pdf": 180, "ref_slic": 82, "ref_t1w": 14, "ref_weight": 28, "refer": [1, 13, 28, 46, 49, 55, 77, 81, 87, 88, 106, 113, 133, 135, 136, 162, 167, 172, 177], "reference_imag": [14, 70, 71, 167], "reference_numb": 49, "refit": 8, "refitdeobliqu": [130, 160, 161], "reflect": [113, 131], "refslic": 82, "reg": [12, 79, 80], "reg1": [106, 122], "reg2": [106, 122], "reg_": 12, "reg_convergence_threshold": 143, "reg_convergence_window_s": 143, "reg_d_func": 142, "reg_d_func_on": [142, 154], "reg_func": 12, "reg_func_md": 12, "reg_func_on": 12, "reg_func_oned_matrix": 12, "reg_func_valid": [6, 7, 88, 91, 154], "reg_func_valid_on": 92, "reg_func_valid_stddev": 98, "reg_func_valid_tsnr": [88, 154], "reg_interpol": 143, "reg_metr": 143, "reg_metric_weight": 143, "reg_number_of_iter": 143, "reg_radius_or_number_of_bin": 143, "reg_sampling_percentag": 143, "reg_sampling_strategi": 143, "reg_shrink_factor": 143, "reg_smoothing_sigma": 143, "reg_transform": 143, "reg_transform_paramet": 143, "regex": 114, "region": [15, 16, 38, 54, 57, 63, 64, 81, 89, 94, 113, 129, 131, 165, 167, 169, 172], "regist": [16, 23, 28, 57, 80, 87, 90, 132, 141, 142, 144, 146, 149, 161, 162, 165, 176], "register_to_mean": 81, "registr": [12, 22, 25, 37, 77, 79, 80, 130, 132, 141, 142, 149, 152, 160, 162, 165, 176], "regress": [97, 101, 104, 105, 106, 155, 169, 171], "regress_poli": [159, 169], "regressor": [97, 101, 106, 107, 108, 109, 110, 122, 131, 133, 156, 172], "regressor_physio": 97, "regressor_physio_etco2_ctl": 156, "regrid": [46, 166], "regular": [16, 143], "regularis": [79, 80], "reguralis": 79, "reject": [54, 132], "rel": [15, 80, 107, 108, 109, 110, 169], "relat": [106, 119, 133, 134, 169, 171], "relationship": 129, "relax": 172, "relev": 127, "reli": 93, "remain": [77, 81, 169], "remap": 15, "rememb": 133, "reml": [106, 171], "remov": [10, 39, 59, 67, 91, 94, 106, 114, 148, 161, 166, 169], "remove_ey": 22, "remove_mean": 169, "remove_untrack": 39, "remove_zero_vari": 91, "reorder": 59, "reorient": 48, "repeat": [133, 172], "repetit": [82, 89, 129], "replac": [3, 18, 28, 48], "replace_fil": 48, "repol": 37, "report": [44, 84, 130, 131, 133, 134, 151, 152, 158, 159, 173, 181], "report_csv": 84, "report_fil": 180, "report_pdf": [84, 100], "report_t1w": 84, "reportanatmriqc": [130, 159, 169], "reportco2inhalcvr": [130, 131, 159, 169], "reportfuncmriqc": [130, 159, 169], "reportge2rec": [130, 159, 169], "reportgroupmriqc": [130, 159, 169], "reportlin": [158, 180], "reportperfdsc": [130, 159, 169], "repositori": 75, "repres": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 79, 80, 81, 82, 84, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 169, 180], "represent": [28, 107, 108, 109, 110], "reproduc": [92, 169], "request": [54, 120], "requir": [1, 15, 16, 30, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 77, 79, 84, 102, 107, 108, 109, 110, 129, 132, 133, 134, 153, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172], "res_0001": 105, "res_0002": 105, "res_0003": 105, "res_000k": 105, "res_0238": 105, "res_0239": 105, "res_0240": 105, "resampl": [28, 60, 61, 71, 80, 106, 164, 167], "resample1": [130, 150, 160, 167], "resample2": [130, 160, 167], "resample_lik": [160, 164], "resample_to_img": 167, "rescal": [15, 28, 44], "rescale_intens": [15, 140], "research": 135, "reserv": 176, "residu": [104, 105, 113, 172], "residu_f": 172, "residual_imag": [104, 105], "resist": 133, "resiz": [60, 94, 167, 169], "reslic": [28, 46, 77, 81, 166], "resm": [104, 105], "resolut": [12, 20, 46, 75, 105, 113, 136, 138, 141, 143, 150, 155, 156, 167, 172, 176], "reson": [113, 127, 129, 131, 169, 172], "resourc": [123, 169], "respect": [44, 180], "respiratori": 131, "respons": [31, 55, 105, 106, 120, 129, 132, 133, 147, 166, 172], "responsesddholland": [31, 130, 160, 166], "responsesdtourni": [130, 160, 166], "rest": [120, 133], "restart": 52, "restrict": 171, "result": [1, 15, 27, 28, 42, 54, 60, 70, 71, 77, 79, 80, 81, 94, 102, 115, 116, 123, 124, 126, 127, 131, 133, 134, 151, 152, 155, 169, 172, 180], "result_collector": [130, 155, 159, 169], "results_aggreg": [102, 131, 155, 169], "retain": [44, 76], "retriev": [82, 106, 123, 172, 180], "retrospect": 15, "return": [10, 126, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 180], "return_mask": 164, "revers": [10, 14, 37, 48, 176], "reweight": 40, "rewritten": [77, 81], "rf": 147, "rfunc": 81, "rgb": 180, "rician": 18, "right": [37, 45, 93, 102, 124, 132, 148, 153, 169], "rigid": [16, 25, 28, 141, 143], "rigid2d": 28, "ring": [148, 166], "risk": 105, "rk": 17, "rk4": 54, "rl": [37, 132, 148], "rlt": 10, "rltplu": 10, "rm": 47, "rmax": 19, "rmin": 19, "ro_tim": 37, "robust": [20, 22], "robustli": 67, "roi": [38, 54, 85, 86, 93, 94, 102, 123, 153, 165, 167, 169, 172, 178], "roi_analysi": [94, 169], "roi_c": 112, "roi_dat": 155, "roi_data": [60, 71, 94, 123, 155, 167, 169, 172], "roi_excl": [38, 54], "roi_fil": 26, "roi_fron": 112, "roi_incl": [38, 54], "roi_incl_ord": [38, 54], "roi_insula": 112, "roi_list": [123, 172], "roi_mask": [38, 54], "roi_nam": 169, "roi_occ": 112, "roi_par": 112, "roi_str": 112, "roi_temp": 112, "roi_tha": 112, "rois_fil": [94, 95, 123, 169], "rois_list": [123, 172], "roll": 169, "root": 48, "roption": [77, 81], "rot_mask": 57, "rot_t1w_mask": 136, "rotat": [12, 13, 28, 57, 81, 87, 97, 99, 101, 144, 145, 146, 167, 169, 176, 180], "rotationmask": [130, 160, 167], "rotmask": [87, 169], "rough": [79, 80], "round": 172, "round_half_up": [159, 172], "row": [31, 89, 119, 122, 127, 169, 180], "rp_func": [81, 97, 101, 116, 144, 145, 146, 156], "rp_func_gen": 99, "rp_func_recal": 99, "rp_func_reco": 99, "rpe_air": 37, "rpe_al": 37, "rpe_non": 37, "rpe_opt": [37, 148], "rpe_pair": 37, "rpv": 105, "rpve": [159, 169], "rpvimag": 105, "rt": [106, 172], "rtm": 81, "rule": 172, "run": [13, 22, 25, 37, 45, 84, 100, 120, 124, 133, 134, 151, 152, 153, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 180, 181], "run_process_mia": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 180], "rung": 54, "runtim": [60, 71, 94, 102, 167, 169], "rx": 169, "ry": 169, "rz": 169, "r\u00e9mi": 84, "s10278": 169, "s11682": 133, "s_": 29, "s_func": 29, "sag": 180, "sagitt": 45, "same": [1, 8, 10, 17, 19, 26, 28, 37, 42, 44, 77, 82, 83, 102, 106, 119, 151, 152, 168, 169, 172], "samp": [79, 80], "sampl": [16, 28, 46, 48, 54, 77, 79, 80, 81, 151, 152, 171], "sampling_dist": [79, 80], "sampling_percentag": [16, 141, 143], "sampling_strategi": [16, 141, 143], "sanit": [130, 152, 160, 167], "sanitizeimag": 73, "save": [12, 15, 19, 28, 63, 79, 87, 88, 127, 158, 169, 180], "save_bia": 15, "save_concate_roi": 63, "save_each_roi": 63, "save_log": 28, "save_md1d_fil": 12, "save_oned_matrix": 12, "sca": 112, "scahefer2018": 75, "scalar": [14, 38], "scale": [24, 34, 37, 44, 46, 49, 106, 107, 108, 109, 110, 166], "scall": [107, 108, 109, 110], "scalp": [22, 23], "scan": [65, 76, 79, 81, 82, 88, 89, 106, 107, 108, 110, 129, 131, 168, 172], "scanner": [28, 131, 169], "sch2d_6dof": 28, "schedul": 28, "scheme": 44, "score": [103, 127, 167], "scratch": 37, "script": [25, 30, 37, 42, 158, 160, 165], "sd": 54, "sd_stream": 54, "sdt": 47, "se": 37, "se_epi_corr": 37, "search": [13, 28, 77, 81, 155, 157], "search_factor": 13, "searchcost": 28, "searchr_i": 28, "searchr_x": 28, "searchr_z": 28, "sec": 106, "second": [1, 10, 24, 28, 37, 40, 42, 44, 49, 54, 81, 82, 106, 107, 108, 109, 110, 116, 118, 132, 133, 140, 148], "secondari": 24, "section": 172, "see": [16, 25, 28, 54, 78, 81, 105, 106, 134, 143, 154, 156, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 177, 178, 179], "seed": [16, 52, 54, 132, 149, 166], "seed_dynam": 54, "seed_gmwmi": 54, "seed_grid_voxel": 54, "seed_imag": 54, "seed_reject": 54, "seed_rnd_voxel": 54, "seed_spher": 54, "seeds_fil": 52, "seem": [132, 149], "seg": [25, 143, 169], "seg_fil": [62, 65, 137], "seg_template_r": 143, "segment": [20, 22, 25, 28, 39, 41, 57, 78, 80, 86, 87, 89, 90, 96, 113, 127, 137, 151, 152, 154, 165, 167, 168, 169, 180], "seismic_r": 180, "select": [38, 39, 44, 46, 50, 51, 53, 54, 77, 78, 79, 81, 106, 123, 124, 127, 147, 150, 166, 172], "selection_file_out": 39, "self": [161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 180], "send": 124, "sennevil": 84, "sensit": 132, "sentenc": 133, "sep": [77, 81], "separ": [4, 10, 27, 50, 77, 81, 89, 113, 161], "seq": 10, "seqminu": 10, "seqplu": 10, "sequenc": [16, 131, 133, 135, 144, 145, 146, 169], "sequenti": [82, 146, 157], "seri": [7, 10, 14, 37, 48, 54, 77, 89, 91, 97, 103, 106, 113, 166, 167, 168], "serial": [106, 172], "seriou": 81, "sess": 106, "sess01_block_onset": 119, "sess01_regressor": 122, "sess02_event_onset": 119, "sess02_regressor": 122, "sess2_cond_n_orth": 106, "sess2_cond_n_tmod": 106, "sess_1_cond_1_duration_1": 106, "sess_1_cond_1_duration_2": 106, "sess_1_cond_1_duration_n": 106, "sess_1_cond_1_onset_1": 106, "sess_1_cond_1_onset_2": 106, "sess_1_cond_1_onset_n": 106, "sess_1_cond_1_orth": 106, "sess_1_cond_1_pmod_1_poli": 106, "sess_1_cond_1_pmod_1_val_1": 106, "sess_1_cond_1_pmod_1_val_2": 106, "sess_1_cond_1_pmod_1_val_n": 106, "sess_1_cond_1_pmod_2_poli": 106, "sess_1_cond_1_pmod_2_val_1": 106, "sess_1_cond_1_pmod_2_val_2": 106, "sess_1_cond_1_pmod_2_val_n": 106, "sess_1_cond_1_pmod_n_poli": 106, "sess_1_cond_1_pmod_n_val_1": 106, "sess_1_cond_1_pmod_n_val_2": 106, "sess_1_cond_1_pmod_n_val_n": 106, "sess_1_cond_1_pmodname_1": 106, "sess_1_cond_1_pmodname_2": 106, "sess_1_cond_1_pmodname_n": 106, "sess_1_cond_1_tmod": 106, "sess_1_cond_2_duration_1": 106, "sess_1_cond_2_duration_2": 106, "sess_1_cond_2_duration_n": 106, "sess_1_cond_2_onset_1": 106, "sess_1_cond_2_onset_2": 106, "sess_1_cond_2_onset_n": 106, "sess_1_cond_2_orth": 106, "sess_1_cond_2_pmod_1_poli": 106, "sess_1_cond_2_pmod_1_val_1": 106, "sess_1_cond_2_pmod_1_val_2": 106, "sess_1_cond_2_pmod_1_val_n": 106, "sess_1_cond_2_pmod_2_poli": 106, "sess_1_cond_2_pmod_2_val_1": 106, "sess_1_cond_2_pmod_2_val_2": 106, "sess_1_cond_2_pmod_2_val_n": 106, "sess_1_cond_2_pmod_n_poli": 106, "sess_1_cond_2_pmod_n_val_1": 106, "sess_1_cond_2_pmod_n_val_2": 106, "sess_1_cond_2_pmod_n_val_n": 106, "sess_1_cond_2_pmodname_1": 106, "sess_1_cond_2_pmodname_2": 106, "sess_1_cond_2_pmodname_n": 106, "sess_1_cond_2_tmod": 106, "sess_1_cond_n_duration_1": 106, "sess_1_cond_n_duration_2": 106, "sess_1_cond_n_duration_n": 106, "sess_1_cond_n_onset_1": 106, "sess_1_cond_n_onset_2": 106, "sess_1_cond_n_onset_n": 106, "sess_1_cond_n_orth": 106, "sess_1_cond_n_pmod_1_poli": 106, "sess_1_cond_n_pmod_1_val_1": 106, "sess_1_cond_n_pmod_1_val_2": 106, "sess_1_cond_n_pmod_1_val_n": 106, "sess_1_cond_n_pmod_2_poli": 106, "sess_1_cond_n_pmod_2_val_1": 106, "sess_1_cond_n_pmod_2_val_2": 106, "sess_1_cond_n_pmod_2_val_n": 106, "sess_1_cond_n_pmod_n_poli": 106, "sess_1_cond_n_pmod_n_val_1": 106, "sess_1_cond_n_pmod_n_val_2": 106, "sess_1_cond_n_pmod_n_val_n": 106, "sess_1_cond_n_pmodname_1": 106, "sess_1_cond_n_pmodname_2": 106, "sess_1_cond_n_pmodname_n": 106, "sess_1_cond_n_tmod": 106, "sess_1_condname_1": 106, "sess_1_condname_2": 106, "sess_1_condname_n": 106, "sess_1_dict_1": 106, "sess_1_dict_2": 106, "sess_1_dict_n": 106, "sess_1_file_1": 106, "sess_1_file_2": 106, "sess_1_file_n": 106, "sess_1_multi": 106, "sess_1_scanpath_1": 106, "sess_2_cond_1_duration_1": 106, "sess_2_cond_1_duration_2": 106, "sess_2_cond_1_duration_n": 106, "sess_2_cond_1_onset_1": 106, "sess_2_cond_1_onset_2": 106, "sess_2_cond_1_onset_n": 106, "sess_2_cond_1_orth": 106, "sess_2_cond_1_pmod_1_poli": 106, "sess_2_cond_1_pmod_1_val_1": 106, "sess_2_cond_1_pmod_1_val_2": 106, "sess_2_cond_1_pmod_1_val_n": 106, "sess_2_cond_1_pmod_2_poli": 106, "sess_2_cond_1_pmod_2_val_1": 106, "sess_2_cond_1_pmod_2_val_2": 106, "sess_2_cond_1_pmod_2_val_n": 106, "sess_2_cond_1_pmod_n_poli": 106, "sess_2_cond_1_pmod_n_val_1": 106, "sess_2_cond_1_pmod_n_val_2": 106, "sess_2_cond_1_pmod_n_val_n": 106, "sess_2_cond_1_pmodname_1": 106, "sess_2_cond_1_pmodname_2": 106, "sess_2_cond_1_pmodname_n": 106, "sess_2_cond_1_tmod": 106, "sess_2_cond_2_duration_1": 106, "sess_2_cond_2_duration_2": 106, "sess_2_cond_2_duration_n": 106, "sess_2_cond_2_onset_1": 106, "sess_2_cond_2_onset_2": 106, "sess_2_cond_2_onset_n": 106, "sess_2_cond_2_orth": 106, "sess_2_cond_2_pmod_1_poli": 106, "sess_2_cond_2_pmod_1_val_1": 106, "sess_2_cond_2_pmod_1_val_2": 106, "sess_2_cond_2_pmod_1_val_n": 106, "sess_2_cond_2_pmod_2_poli": 106, "sess_2_cond_2_pmod_2_val_1": 106, "sess_2_cond_2_pmod_2_val_2": 106, "sess_2_cond_2_pmod_2_val_n": 106, "sess_2_cond_2_pmod_n_poli": 106, "sess_2_cond_2_pmod_n_val_1": 106, "sess_2_cond_2_pmod_n_val_2": 106, "sess_2_cond_2_pmod_n_val_n": 106, "sess_2_cond_2_pmodname_1": 106, "sess_2_cond_2_pmodname_2": 106, "sess_2_cond_2_pmodname_n": 106, "sess_2_cond_2_tmod": 106, "sess_2_cond_n_duration_1": 106, "sess_2_cond_n_duration_2": 106, "sess_2_cond_n_duration_n": 106, "sess_2_cond_n_onset_1": 106, "sess_2_cond_n_onset_2": 106, "sess_2_cond_n_onset_n": 106, "sess_2_cond_n_pmod_1_poli": 106, "sess_2_cond_n_pmod_1_val_1": 106, "sess_2_cond_n_pmod_1_val_2": 106, "sess_2_cond_n_pmod_1_val_n": 106, "sess_2_cond_n_pmod_2_poli": 106, "sess_2_cond_n_pmod_2_val_1": 106, "sess_2_cond_n_pmod_2_val_2": 106, "sess_2_cond_n_pmod_2_val_n": 106, "sess_2_cond_n_pmod_n_poli": 106, "sess_2_cond_n_pmod_n_val_1": 106, "sess_2_cond_n_pmod_n_val_2": 106, "sess_2_cond_n_pmod_n_val_n": 106, "sess_2_cond_n_pmodname_1": 106, "sess_2_cond_n_pmodname_2": 106, "sess_2_cond_n_pmodname_n": 106, "sess_2_condname_1": 106, "sess_2_condname_2": 106, "sess_2_condname_n": 106, "sess_2_dict_1": 106, "sess_2_dict_2": 106, "sess_2_dict_n": 106, "sess_2_file_1": 106, "sess_2_file_2": 106, "sess_2_file_n": 106, "sess_2_multi": 106, "sess_2_scanpath_2": 106, "sess_cond_dur": 106, "sess_cond_nam": 106, "sess_cond_onset": 106, "sess_cond_orth": 106, "sess_cond_pmod_nam": 106, "sess_cond_pmod_poli": 106, "sess_cond_pmod_valu": 106, "sess_cond_tmod": 106, "sess_hpf": 106, "sess_multi": 106, "sess_multi_reg": 106, "sess_n_cond_1_duration_1": 106, "sess_n_cond_1_duration_2": 106, "sess_n_cond_1_duration_n": 106, "sess_n_cond_1_onset_1": 106, "sess_n_cond_1_onset_2": 106, "sess_n_cond_1_onset_n": 106, "sess_n_cond_1_orth": 106, "sess_n_cond_1_pmod_1_poli": 106, "sess_n_cond_1_pmod_1_val_1": 106, "sess_n_cond_1_pmod_1_val_2": 106, "sess_n_cond_1_pmod_1_val_n": 106, "sess_n_cond_1_pmod_2_poli": 106, "sess_n_cond_1_pmod_2_val_1": 106, "sess_n_cond_1_pmod_2_val_2": 106, "sess_n_cond_1_pmod_2_val_n": 106, "sess_n_cond_1_pmod_n_poli": 106, "sess_n_cond_1_pmod_n_val_1": 106, "sess_n_cond_1_pmod_n_val_2": 106, "sess_n_cond_1_pmod_n_val_n": 106, "sess_n_cond_1_pmodname_1": 106, "sess_n_cond_1_pmodname_2": 106, "sess_n_cond_1_pmodname_n": 106, "sess_n_cond_1_tmod": 106, "sess_n_cond_2_duration_1": 106, "sess_n_cond_2_duration_2": 106, "sess_n_cond_2_duration_n": 106, "sess_n_cond_2_onset_1": 106, "sess_n_cond_2_onset_2": 106, "sess_n_cond_2_onset_n": 106, "sess_n_cond_2_orth": 106, "sess_n_cond_2_pmod_1_poli": 106, "sess_n_cond_2_pmod_1_val_1": 106, "sess_n_cond_2_pmod_1_val_2": 106, "sess_n_cond_2_pmod_1_val_n": 106, "sess_n_cond_2_pmod_2_poli": 106, "sess_n_cond_2_pmod_2_val_1": 106, "sess_n_cond_2_pmod_2_val_2": 106, "sess_n_cond_2_pmod_2_val_n": 106, "sess_n_cond_2_pmod_n_poli": 106, "sess_n_cond_2_pmod_n_val_1": 106, "sess_n_cond_2_pmod_n_val_2": 106, "sess_n_cond_2_pmod_n_val_n": 106, "sess_n_cond_2_pmodname_1": 106, "sess_n_cond_2_pmodname_2": 106, "sess_n_cond_2_pmodname_n": 106, "sess_n_cond_2_tmod": 106, "sess_n_cond_n_duration_1": 106, "sess_n_cond_n_duration_2": 106, "sess_n_cond_n_duration_n": 106, "sess_n_cond_n_onset_1": 106, "sess_n_cond_n_onset_2": 106, "sess_n_cond_n_onset_n": 106, "sess_n_cond_n_orth": 106, "sess_n_cond_n_pmod_1_poli": 106, "sess_n_cond_n_pmod_1_val_1": 106, "sess_n_cond_n_pmod_1_val_2": 106, "sess_n_cond_n_pmod_1_val_n": 106, "sess_n_cond_n_pmod_2_poli": 106, "sess_n_cond_n_pmod_2_val_1": 106, "sess_n_cond_n_pmod_2_val_2": 106, "sess_n_cond_n_pmod_2_val_n": 106, "sess_n_cond_n_pmod_n_poli": 106, "sess_n_cond_n_pmod_n_val_1": 106, "sess_n_cond_n_pmod_n_val_2": 106, "sess_n_cond_n_pmod_n_val_n": 106, "sess_n_cond_n_pmodname_1": 106, "sess_n_cond_n_pmodname_2": 106, "sess_n_cond_n_pmodname_n": 106, "sess_n_cond_n_tmod": 106, "sess_n_condname_1": 106, "sess_n_condname_2": 106, "sess_n_condname_n": 106, "sess_n_dict_1": 106, "sess_n_dict_2": 106, "sess_n_dict_n": 106, "sess_n_file_1": 106, "sess_n_file_2": 106, "sess_n_file_n": 106, "sess_n_multi": 106, "sess_n_scanpath_n": 106, "sess_regress": [106, 120, 122], "sess_regress_level1design": [120, 122], "sess_scan": 106, "session": [104, 106, 118, 119, 122, 172, 180], "set": [0, 2, 10, 13, 15, 18, 19, 26, 27, 28, 31, 35, 37, 39, 40, 44, 48, 50, 51, 52, 54, 58, 61, 77, 81, 82, 83, 91, 106, 120, 123, 135, 151, 152, 162, 166, 172], "set_dbfieldvalu": [158, 180], "set_global_vari": [158, 181], "set_vari": [158, 181], "setup": 158, "sever": [22, 75, 106, 132, 147, 153, 166, 172, 180], "sex": [97, 99, 101, 102, 131, 134, 155], "sform": 28, "sfunc": 83, "sgm_amyg_hipp": 42, "sgould": 118, "sh": 52, "sh2peak": [52, 166], "sh_peak": 132, "shannon": 169, "shape": [53, 59, 169, 172, 180], "sharpen": 15, "shehzad": 169, "shehzad2015": 169, "shell": [17, 31, 50, 51, 132, 166], "shift": [10, 12, 45, 169], "shiftmap": 25, "short": [28, 83, 127], "shorter": 132, "should": [16, 17, 24, 25, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 63, 64, 77, 79, 80, 81, 87, 88, 93, 104, 105, 107, 108, 109, 110, 114, 118, 119, 121, 122, 132, 147, 148, 151, 152, 169], "show": [30, 50, 51, 89, 133, 147, 169, 180], "showmeclassicfwhm": 4, "shown": 15, "showpag": [158, 180], "shrink": [15, 16], "shrink_factor": [15, 16, 141, 143], "siena": 22, "sift": [39, 54, 132], "sigma": [14, 16, 29, 169], "sigma_": 169, "sigma_air": 169, "sigma_b": 169, "sigma_f": 169, "sigma_fg": 169, "sigma_gm": 169, "sigma_wm": 169, "sign": [28, 83], "signa_unit": 16, "signal": [18, 20, 31, 40, 50, 61, 89, 93, 97, 106, 127, 131, 135, 147, 153, 167, 169], "signal_mask": 18, "signals_whole_brain": 95, "similar": [7, 16, 106, 129, 143], "simultan": 25, "sin": 1, "sinc": [17, 28, 44, 46, 48, 87, 88], "sinc_width": 28, "sinc_window": 28, "singl": [27, 28, 31, 36, 37, 46, 50, 51, 79, 83, 102, 106, 166, 169], "single_idx": 1, "singleshel": 36, "singular": 172, "size": [16, 18, 26, 28, 35, 42, 44, 46, 54, 60, 77, 80, 81, 94, 97, 101, 106, 107, 108, 109, 110, 146, 167, 169, 180], "skew": 24, "skin": 169, "skip": [38, 103], "skip_fram": 103, "skull": [0, 9, 20, 22, 140, 151, 164, 165, 169, 176], "skull_fil": 22, "skull_mask_fil": [22, 23], "skullstrip": [22, 23, 130, 139, 160, 161], "slice": [12, 19, 22, 28, 37, 44, 77, 89, 96, 97, 98, 101, 103, 106, 127, 145, 146, 161, 168, 169, 172, 180], "slice_encoding_dir": 10, "slice_ord": 82, "slice_start": 180, "slice_step": 180, "slice_tim": 10, "slicetim": [130, 160, 168], "slm": [37, 148], "slope": 28, "slow": 106, "slower": [77, 81], "slowest": [10, 12], "small": [0, 6, 7, 22, 28, 151, 152], "smaller": [50, 81], "smooth": [12, 15, 16, 35, 46, 77, 79, 80, 81, 130, 144, 145, 146, 150, 160, 165, 168], "smoothed_fil": 83, "smoothed_func": [144, 145, 146, 150, 156], "smoother": [79, 80], "smoothing_sigma": [16, 141, 143], "smp_mat_fil": [104, 105, 107, 108, 109, 110], "snr": [18, 137, 159, 167, 169], "snr_dietrich": [159, 169], "so": [10, 26, 30, 54, 77, 79, 80, 81, 82, 102, 106, 147, 169], "soft": 79, "softawr": 132, "softwar": [93, 130, 133, 134, 160], "solut": [30, 172], "some": [1, 16, 25, 26, 44, 77, 87, 88, 104, 105, 106, 132, 149, 157, 161, 162, 163, 164, 165, 166, 168, 171], "someth": 3, "sometim": 169, "sought": [151, 152], "sourc": [77, 92, 144, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 177, 178, 179, 180], "space": [1, 13, 14, 16, 23, 25, 26, 28, 45, 46, 48, 57, 58, 59, 61, 66, 68, 72, 75, 77, 78, 79, 80, 81, 84, 87, 90, 93, 132, 136, 141, 144, 146, 154, 169, 176, 180], "span": 106, "spatial": [15, 44, 46, 47, 75, 77, 81, 97, 101, 127, 144, 146, 148, 149, 151, 166, 168, 176], "spatial_mask": [130, 131, 155, 156, 158, 173], "spatial_preprocess": [159, 160], "spearman": 7, "special": [151, 152, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172], "specialis": 180, "specif": [18, 20, 54, 104, 105, 107, 108, 109, 110, 156, 164, 167, 171], "specifi": [4, 6, 7, 10, 12, 14, 15, 19, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 60, 77, 82, 83, 90, 91, 92, 97, 101, 104, 105, 106, 107, 108, 109, 110, 126, 166, 172], "spectral": 180, "speed": 81, "spheric": [31, 39, 48, 53, 54, 132, 147, 166], "sphericalharmonicextract": [130, 160, 166], "spike": [67, 88, 89, 91, 96, 98, 130, 154, 159, 161, 169], "spike_fil": 154, "spike_thresh": [103, 169], "spikes_": [96, 98, 103], "spikes_detrend": 154, "spikes_func": [103, 154], "spikes_mask": [103, 169], "spikes_no_zscor": 154, "spikes_reg_func_valid": [88, 89], "spikes_skip_fram": 154, "spikes_skipe_thresh": 154, "spin": 37, "spki": [103, 154], "spline": [15, 28, 77, 80, 81], "spm": [76, 78, 92, 93, 97, 99, 101, 104, 105, 106, 130, 150, 159, 160, 167, 169, 170, 180], "spm12": [77, 79, 80, 81, 82, 83, 106, 156, 172], "spm_hrf": [159, 172], "spm_mat_fil": [104, 105, 106], "spm_stat_2ndlevel": [107, 108, 109, 110], "spmf_0001": [104, 105], "spmf_0002": [104, 105], "spmf_0003": [104, 105], "spmf_0004": [104, 105], "spmf_imag": [104, 105], "spmmat": 105, "spmt": [97, 101, 102, 169, 178], "spmt_0001": [94, 97, 99, 101, 104, 155, 156], "spmt_0002": 104, "spmt_0002_li_front": [93, 99], "spmt_0002_li_tempor": [93, 99], "spmt_0003": 104, "spmt_0004": 104, "spmt_0005": 105, "spmt_0006": 105, "spmt_0007": 105, "spmt_0008": 105, "spmt_cmap": [97, 101], "spmt_gene": 99, "spmt_imag": [97, 101, 104, 105, 155, 156], "spmt_recal": 99, "spmt_reco": 99, "spmt_vmax": [97, 101], "spmt_vmin": [97, 101], "spread": [39, 48], "spuriou": 169, "sqrt": [1, 169], "squar": [16, 28, 40, 44, 48, 104, 106], "squeeze_imag": 59, "ss": 9, "ss_": 9, "ss_n4c_t1w_clip": 140, "ss_n4c_t1w_clippep_pve_0": 87, "ss_n4c_t1w_clippep_pve_1": 87, "ss_n4c_t1w_clippep_pve_2": 87, "ss_n4c_t1w_clippep_seg": [87, 96], "ss_orig_t1w": 139, "ss_orig_t1w_bin": 139, "ss_t1w": [9, 137], "ss_t1w_seg": 137, "st_acquist": 146, "st_corr": 10, "st_corr_": 10, "st_corr_func": 10, "stage": [16, 105, 144, 145, 146, 159, 176], "standard": [17, 18, 23, 29, 48, 75, 79, 80, 98, 107, 108, 109, 110, 129, 131, 167, 169, 178], "start": [1, 2, 47, 52, 149, 162, 180], "start_idx": [1, 2], "starts_with": 123, "stat": [104, 105, 106, 130, 158, 159, 169, 173], "state": [73, 152, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172], "statement": 164, "stationari": 77, "statist": [17, 37, 39, 97, 99, 101, 131, 133, 134, 155, 156, 159, 166, 167, 170, 171, 179], "stats_gen": [93, 99], "stats_recal": 99, "stats_reco": 99, "statu": 180, "std": [47, 74, 94], "std_out_fil": 94, "stddev": 74, "stddev_func": 98, "stdev": 1, "steadi": [73, 152, 167], "step": [0, 1, 5, 15, 35, 40, 44, 51, 54, 57, 105, 132, 139, 142, 147, 148, 149, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 176], "step_siz": 54, "stick": 106, "still": 28, "stimul": 131, "stimulu": 106, "stop": [1, 2, 54, 77], "stop_idx": [1, 2], "store": [3, 40, 77, 180], "str": 169, "str_l": 155, "str_r": 155, "strategi": [16, 20], "streamlin": [38, 39, 132, 149, 166], "strength": [97, 99, 101], "stride": 164, "string": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 169, 172, 180], "strip": [0, 9, 20, 22, 23, 140, 151, 164, 176], "stripmodel": [160, 164], "stroke": 113, "strongli": 105, "struc2mni": 24, "structur": [16, 28, 63, 64, 81, 84, 85, 86, 153, 165, 169, 176, 177], "studi": [147, 169], "sub": [4, 42, 64, 93, 95, 97, 99, 101, 107, 108, 109, 110, 114, 118, 161, 172], "subcort": 149, "subcortoc": [85, 86], "subdivis": 106, "subj": [79, 80], "subject": [20, 28, 77, 87, 90, 99, 100, 107, 108, 109, 110, 120, 133, 147, 168, 169, 176], "subjectname_data": [104, 105, 106], "submodul": [159, 160, 170, 173, 181], "subpackag": 181, "subpixel": 45, "subsect": 172, "subsequ": 77, "subset": [132, 166], "substitut": 54, "subtract": 169, "subvoxel": 45, "success": [54, 77, 157, 158], "suffix": [0, 10, 19, 25, 26, 38, 39, 44, 46, 52, 57, 58, 59, 61, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 136, 138, 141, 143, 180], "suffix_stddev": 74, "suffix_tnsr": 74, "suffix_to_delet": 70, "suggest": [132, 149], "suitabl": [42, 77, 81, 166], "sum": [16, 47, 49, 79, 80, 169], "sum_": 169, "sum_i": 169, "summari": [131, 151, 152, 154, 166], "summary_stat": [159, 169], "superimpos": 180, "superior": [61, 169], "suppli": [17, 28, 44, 46, 49, 113, 129, 132, 148], "support": 79, "supra": 0, "sure": [19, 77, 81, 82], "surfac": [22, 79, 164, 165], "surround": [161, 169], "suscept": [113, 172], "sush": [145, 146], "svd": 172, "swrfunc": [113, 127, 144, 145, 146, 156], "swrfunc_aif": [113, 127], "swrfunc_cbf_deconv": 113, "swrfunc_cbv_deconv": 113, "swrfunc_mtt_deconv": 113, "swrfunc_t0_deconv": 113, "swrfunc_tmax_deconv": 113, "swrfunc_ttp_deconv": 113, "symmetr": 48, "syn": [16, 143], "synchron": [129, 131], "syntax": [76, 77, 78, 79, 80, 81, 82, 83, 106, 107, 108, 109, 110, 150], "synthes": 20, "synthstrip": [130, 151, 160, 164, 176], "synthstripmriqc": [130, 160, 164], "system": [131, 169], "systemat": 169, "t": [14, 22, 26, 79, 80, 97, 99, 101, 104, 105, 131, 132, 149, 155, 156, 169, 171, 172], "t0": [113, 127, 172], "t0_imag": 113, "t0_mask": 172, "t1": [25, 27, 42, 50, 84, 131, 144, 145, 146, 149, 161], "t1w": [9, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 27, 28, 30, 42, 55, 56, 57, 58, 61, 62, 65, 66, 67, 68, 72, 75, 84, 87, 96, 121, 128, 132, 136, 137, 138, 139, 140, 141, 146, 153, 167, 177], "t1w_002": 70, "t1w_003": 70, "t1w_5tt": [26, 41, 42, 54], "t1w_5tt_gmwmseed": 41, "t1w_5tt_transform": 149, "t1w_5tt_transformed_gmwmse": 149, "t1w_anat_qc": [87, 96], "t1w_bia": [15, 56], "t1w_bin": 58, "t1w_binarize_count_fil": 19, "t1w_brain": [22, 23, 25], "t1w_brain_inskull_mask": [22, 23], "t1w_brain_inskull_mesh": [22, 23], "t1w_brain_mask": [22, 136], "t1w_brain_mesh": 22, "t1w_brain_outskin": 136, "t1w_brain_outskin_mask": [22, 23, 96], "t1w_brain_outskin_mesh": [22, 23], "t1w_brain_outskull_mask": [22, 23], "t1w_brain_outskull_mesh": [22, 23], "t1w_brain_overlai": 22, "t1w_brain_skul": 22, "t1w_brain_skull_mask": [22, 23], "t1w_clip": 67, "t1w_composit": 16, "t1w_coreg": [132, 149], "t1w_desc": [16, 19, 20, 21, 141], "t1w_enh": 61, "t1w_grad": 65, "t1w_harmon": 66, "t1w_inu": 56, "t1w_inversecomposit": 16, "t1w_mask": [15, 68], "t1w_masked_composit": 141, "t1w_masked_inversecomposit": [136, 138, 141], "t1w_mixeltyp": 27, "t1w_outskin_mask": 57, "t1w_pve_0": [15, 27], "t1w_pve_1": 27, "t1w_pve_2": 27, "t1w_pveseg": 27, "t1w_ref_anatomical_mriqcreport_2023_03_31_11_42_10_75": [96, 151], "t1w_rotmask": [57, 72, 87], "t1w_seg": [27, 65, 66], "t1w_seg_0": 27, "t1w_seg_1": 27, "t1w_seg_2": 27, "t1w_templat": 13, "t1w_transform": [132, 149], "t1w_wmseg": 25, "t2": [22, 27, 42, 113, 127, 129, 131, 144, 145, 146], "t2_guid": 22, "t2_imag": 42, "t2map": 75, "t2w": [22, 75, 136, 137, 138, 139, 140, 141, 177], "t_": 14, "t_condition_nam": 104, "t_contrast_nam": 104, "t_contrast_weight": 104, "t_min": 26, "t_size": 26, "t_t1w": 14, "t_tpl": [57, 90, 143, 154], "ta": [82, 84], "tab": [131, 172], "tabl": [39, 52], "tabular": 180, "tag": [60, 71, 94, 102, 121, 123, 155, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 180], "tag_to_add": 180, "tag_to_del": 180, "tags2del": 180, "take": [19, 26, 27, 54, 78, 113, 116, 135, 155], "taken": [26, 81], "talk": 133, "tangent": 39, "tap": 172, "target": [46, 48, 77, 164], "task": [99, 104, 133, 169], "tax": 50, "tck": [38, 39, 54, 132], "tck_weight": 38, "tck_weights_in": 38, "tck_weights_out": 38, "tckedit": [38, 166], "tckgen": [54, 166], "tcksift": [39, 166], "te": 172, "team": [81, 157], "techniqu": [113, 135, 167], "tel": 133, "tell": [79, 80], "temp_l": 155, "temp_r": 155, "templat": [16, 46, 48, 57, 70, 71, 80, 87, 90, 136, 143, 154, 167, 168, 176], "template_desc": 16, "template_imag": 48, "template_r": 143, "templateflow": [136, 138, 141, 143, 167], "templatefromtemplateflow": [130, 160, 167], "tempor": [10, 93, 133, 168], "temporarili": 22, "tend": [0, 132], "tensor": [14, 166], "tensor2metr": [53, 166], "tensor_det": 54, "tensor_prob": 54, "tensormetr": [130, 160, 166], "term_mu_valu": 39, "term_ratio_valu": 39, "termin": [39, 54, 132], "territori": [102, 131], "test": [38, 51, 105, 106, 127, 171], "text": [31, 37, 38, 39, 44, 50, 51, 55, 131, 169], "tha_l": 155, "tha_r": 155, "than": [2, 10, 12, 17, 42, 48, 52, 58, 77, 79, 80, 97, 101, 106, 127, 131, 167], "thei": [10, 15, 38, 54, 77, 80, 81, 106, 133, 180], "them": [36, 39, 79, 80, 118, 176, 180], "theorigin": 15, "thera": 15, "therebi": 113, "therefor": [78, 82, 93, 155], "theta": 52, "thi": [0, 1, 4, 10, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 60, 64, 71, 76, 77, 79, 81, 82, 84, 85, 86, 87, 88, 91, 92, 93, 94, 102, 104, 105, 106, 107, 108, 109, 110, 113, 114, 121, 123, 124, 127, 131, 132, 133, 134, 135, 147, 148, 149, 153, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 177, 178, 179], "thing": [161, 162, 163, 164, 165, 166, 168, 171], "thinsp": [77, 78, 79, 80, 81, 115, 116, 117, 123, 124, 125, 126, 131, 144], "third": [1, 44, 100, 130, 133, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172], "thong": 84, "those": [27, 35, 38, 41, 52, 79, 80, 106, 114, 133, 169], "thought": 97, "three": [15, 27, 31, 44, 46, 47, 48, 53, 83, 107, 108, 109, 110, 133, 146, 147], "thresh": 167, "thresh_low": 58, "thresh_valu": 52, "threshold": [0, 15, 16, 19, 20, 21, 22, 39, 50, 52, 67, 88, 89, 93, 106, 107, 108, 109, 110, 127, 130, 137, 150, 154, 160, 164, 166, 167], "threshold_mask": [107, 108, 109, 110], "threshold_mask_valu": [107, 108, 109, 110], "through": [77, 81, 113, 131, 133, 135], "throughout": 131, "thrown": 67, "thu": [47, 76], "ticket": [105, 151, 152], "tidal": [129, 131], "time": [11, 12, 14, 22, 26, 37, 54, 77, 89, 97, 103, 106, 107, 108, 109, 110, 113, 127, 132, 135, 145, 146, 148, 161, 167, 168, 172, 180], "timed_fil": 82, "timepoint": [6, 7, 91, 103], "timeseri": [6, 7], "timeshift": 12, "timevaryingbsplinevelocityfield": [16, 143], "timevaryingvelocityfield": [16, 143], "timing_unit": 106, "tissu": [17, 31, 33, 39, 54, 63, 64, 65, 79, 80, 84, 85, 86, 87, 127, 132, 135, 147, 153, 161, 165, 166, 169, 172, 176], "tissue_class_fil": 27, "tissue_class_map": 27, "tisuu": [50, 51], "titl": 180, "tmax": 113, "tmax_imag": 113, "tmod": 106, "to_keep_filt": 114, "to_remove_fil": 114, "to_remove_filt": 114, "todo": 102, "togeth": [78, 131, 168, 180], "tol": 77, "toleft": [37, 132, 148], "toler": 77, "too": 127, "toobox": [79, 158], "tool": [20, 28, 93, 130, 133, 134, 158, 159, 166, 169, 181], "toolbox": [79, 93, 169, 172], "top": [82, 127, 146], "topup": [132, 148, 166], "topup_opt": 37, "tot_reg_num": 105, "total": [19, 37, 45, 48, 105, 113, 132, 148, 180], "tournier": [50, 166], "tpattern": 10, "tpl": 75, "tpm": [79, 80], "tr": [4, 5, 10, 82, 89], "track": [54, 132, 135, 149, 166], "tracks_10k": 132, "tracks_10mio": 132, "tracks_200k": 132, "tracks_edit": 38, "tracks_out": [38, 39], "tracks_sift": [39, 132], "tracks_sift_10k": 132, "tracks_tck_weight": 38, "tracks_tcksift_mu": 39, "tracks_tcksift_select": 39, "tracks_tcksift_stat": 39, "tracto_get_output_se": 54, "tracto_max_attempts_per_seed_numb": 54, "tracto_seed_cutoff": 54, "tracto_seed_direct": 54, "tracto_seed_unidirect": 54, "tracto_seeds_numb": 54, "tractogram": 132, "tractographi": [42, 130, 149, 160, 166, 175], "tractseg": 132, "trade": 81, "train": 20, "trait": [158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 177, 178, 179], "tran": [14, 16, 169], "transform": [12, 16, 25, 28, 46, 77, 79, 80, 81, 84, 136, 138, 141, 143, 149, 162, 164, 165, 166], "transform_paramet": [16, 141, 143], "transformation_mat": 79, "transformconvert": [55, 166], "transformfslconvert": [130, 160, 166], "transit": [113, 135], "translat": [16, 81, 97, 99, 101, 143, 144, 145, 146, 180], "transvers": 172, "travers": [38, 54], "treat": 14, "treatment": [159, 176], "tree": 162, "trend": 10, "trial": [54, 106, 118], "trial1": 118, "trial2": 118, "trial_typ": 118, "trigger": [129, 131], "trigger_data": [129, 131], "trigger_tim": 131, "trilinear": [28, 77, 80, 81], "true": [3, 4, 5, 6, 7, 8, 14, 15, 16, 22, 27, 28, 32, 35, 36, 53, 63, 66, 67, 76, 79, 81, 83, 85, 86, 91, 102, 103, 104, 105, 107, 108, 109, 110, 123, 140, 141, 142, 147, 149, 152, 153, 154, 167, 169, 180], "truncat": [38, 54, 172], "truth": [87, 88], "try": [28, 52, 79, 80, 180], "tshift": [130, 160, 161], "tslice": 10, "tsnr": [88, 130, 152, 154, 160, 167], "tstat": 11, "tstatmean": [130, 160, 161], "tsv": [100, 118, 172, 180], "tsv_file": 118, "ttp": [113, 135], "ttp_imag": 113, "tumor": 113, "tupl": [12, 14, 15, 16, 35, 38, 44, 52, 54, 79, 143, 180], "turbo": [131, 144, 145, 146], "turn": [52, 132], "tutori": [132, 149], "tv": 45, "two": [10, 12, 24, 27, 28, 37, 40, 79, 102, 115, 116, 119, 123, 155, 157, 169, 171, 172], "twopass": [12, 152], "twosamplettestdesign": [130, 170, 171], "txt": [12, 19, 28, 31, 38, 39, 44, 48, 50, 51, 55, 81, 84, 92, 94, 97, 99, 101, 102, 106, 116, 129, 131, 142, 144, 145, 146, 154, 156, 169], "type": [14, 20, 27, 28, 39, 50, 51, 54, 79, 82, 83, 85, 86, 102, 106, 107, 108, 109, 110, 119, 128, 132, 146, 147, 149, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 177, 178, 179], "typic": [37, 77, 79, 81, 106, 113, 131, 135], "tzero": 10, "u": 172, "ucl": 169, "uint8": [67, 83], "uk": 169, "ultim": 16, "umbrella": 157, "un": [77, 81], "unabl": 54, "unchang": [10, 44], "uncompress": [29, 77, 80, 81, 82, 83, 94, 96, 113, 117, 127, 129, 131, 133, 134, 144, 145, 146], "undefin": [0, 1, 5, 7, 10, 12, 14, 15, 16, 18, 19, 25, 36, 82, 89, 96, 97, 98, 101, 102, 104, 105, 106, 115, 123, 144, 155], "under": [135, 157, 174, 180], "underscor": [94, 123], "unequ": 110, "unequal_vari": 110, "unet": 164, "uniform": [79, 80], "union": 169, "uniqu": [31, 147], "unit": [16, 28, 82, 91, 106, 180], "universit\u00e9": 133, "unless": 46, "unmodel": 106, "unmodul": 79, "unrealist": 127, "unring": [45, 132, 148], "unsign": [19, 83], "unsupervis": 50, "until": 54, "unwarp": 25, "up": [25, 31, 82, 93, 102, 146, 172], "updat": [49, 180], "upon": 41, "upper": [16, 67], "us": [17, 19, 20, 22, 25, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 57, 58, 59, 60, 61, 67, 68, 69, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 98, 100, 102, 103, 104, 106, 107, 108, 109, 110, 113, 114, 118, 119, 120, 122, 123, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 142, 143, 144, 146, 147, 149, 150, 153, 154, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 177, 178, 179, 180], "use_an": 32, "use_deriv": 104, "use_estimate_learning_rate_onc": 16, "use_fsl": 32, "use_histogram_match": [16, 141], "use_implicit_mask": [107, 108, 109, 110], "use_qform": 28, "use_rk4": 54, "user": [15, 82, 106, 107, 108, 109, 110, 155], "user_covariates_cent": 107, "user_covariates_nam": 107, "user_covariates_vector": 107, "usercovariates_cent": 107, "usernam": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], "usual": [16, 76, 113, 135, 151, 152, 160], "util": [79, 158, 181], "v": [84, 104, 172], "v1": 105, "v11i4": 169, "v2": 105, "v22": [96, 98, 138, 140, 176, 177], "va": 169, "val": [106, 120, 122], "valid": [0, 1, 2, 3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 101, 103, 113, 117, 127, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 172, 180], "valid_bool": 180, "valu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 61, 63, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 114, 120, 122, 123, 127, 131, 132, 136, 138, 141, 142, 143, 145, 146, 147, 148, 149, 152, 153, 156, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 178, 180], "valuabl": 113, "value_fil": 53, "var": 47, "vari": [106, 148], "variabl": [106, 107, 108, 109, 110, 131, 151, 152, 158], "variable_nam": 158, "varianc": [105, 110], "variance_tol": 91, "variant": 15, "variat": [45, 79, 80, 129, 131, 151, 152], "variocap": 131, "variou": [37, 113, 131, 135, 158, 159, 166, 173, 176, 178], "vascular": 113, "vasculatur": 135, "vaso_trigger_tim": 129, "vbm": [107, 108, 109, 110], "vector": [14, 52, 77, 107, 108, 109, 110, 132, 171, 172], "vector_fil": 53, "ventricl": 28, "verbos": 180, "veri": [22, 79, 80], "verif": 82, "version": [79, 105, 158], "versu": [50, 81], "vertic": [22, 38], "vertical_gradi": 22, "vessel": [113, 135], "via": [133, 164], "view": 28, "vincent": 84, "vinh": 84, "visibl": 180, "visual": [25, 27], "viz": 180, "vmax": [97, 101], "vmax_1": 180, "vmax_2": 180, "vmin": [97, 101], "vmin_1": 180, "vmin_2": 180, "vol": [79, 80], "vol_4d": 172, "volbrain": [85, 86, 130, 153, 160], "volreg": [130, 160, 161], "volt": 106, "volterra": 106, "volterra_expansion_ord": 106, "volum": [1, 4, 10, 27, 28, 30, 33, 37, 40, 44, 47, 48, 52, 69, 73, 80, 81, 82, 88, 91, 106, 113, 132, 135, 142, 148, 152, 154, 161, 164, 165, 166, 167, 168, 169, 172, 180], "volume_fract": [159, 169], "volumetri": 84, "vox": [16, 39, 44, 80], "vox_siz": 180, "voxel": [0, 6, 7, 10, 11, 12, 15, 19, 22, 26, 27, 28, 29, 35, 39, 41, 44, 50, 51, 54, 58, 61, 77, 80, 81, 83, 89, 91, 97, 99, 101, 105, 106, 107, 108, 109, 110, 113, 127, 132, 146, 147, 156, 161, 166, 169, 172, 180], "voxel_fin": 147, "voxels": 54, "voxels_imag": [50, 51], "voxelwis": 89, "vtk": [22, 23], "w": [16, 80, 169], "w1111": 40, "w1112": 40, "w1113": 40, "w1122": 40, "w1123": 40, "w1133": 40, "w1222": 40, "w1223": 40, "w1233": 40, "w1333": 40, "w2222": 40, "w2223": 40, "w2233": 40, "w2333": 40, "w3333": 40, "w_": 16, "w_inverse_t1w": 16, "w_n4c_mean_reg_func_valid": [98, 143], "w_t1w": 16, "w_t1w_mask": 141, "wa": [45, 77, 81, 123, 124, 133, 158, 172], "wai": 106, "wanat": [80, 97, 99, 101, 144, 145, 146], "want": [16, 17, 86, 151], "warn": 127, "warp": [14, 16, 48, 79, 80, 168], "warp_full_imag": 48, "warp_imag": 48, "warped_imag": [16, 141], "warpfield": [16, 25], "warping_regular": [79, 80], "water": 17, "wc1anat": 79, "wc2anat": 79, "wc3anat": 79, "wc4anat": 79, "wc5anat": 79, "wci": 79, "we": [133, 147], "websit": [157, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 177, 178, 179], "weight": [12, 15, 16, 21, 25, 28, 33, 36, 38, 39, 40, 42, 44, 54, 81, 104, 149, 161, 166], "weight_imag": [15, 25], "weight_img": 81, "weight_spac": 25, "welchwindowedsinc": [14, 16, 143], "well": 15, "were": [50, 51, 105, 106], "westin": 53, "what": [28, 87, 88], "when": [10, 12, 16, 22, 46, 48, 51, 54, 70, 77, 79, 80, 81, 94, 127, 135, 149, 151, 152], "where": [27, 28, 48, 77, 81, 102, 105, 107, 108, 109, 110, 149, 155, 169, 180], "wherea": [28, 81], "whether": [13, 28, 48, 67, 81, 107, 108, 109, 110, 127, 133, 169, 180], "which": [10, 16, 17, 18, 19, 22, 27, 28, 31, 34, 36, 37, 38, 43, 44, 45, 47, 49, 50, 51, 52, 67, 70, 71, 73, 76, 77, 79, 80, 81, 82, 83, 86, 87, 88, 92, 93, 94, 95, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 113, 117, 119, 120, 122, 131, 132, 135, 143, 144, 145, 146, 147, 148, 153, 156, 167, 169, 180], "while": [37, 54, 77, 79, 80, 115, 131, 133, 134], "whisker": 100, "white": [15, 25, 27, 28, 31, 54, 58, 59, 61, 68, 72, 79, 89, 132, 138, 147, 149, 150, 166, 167, 168, 169, 176], "whole": [39, 41, 50, 77, 81, 95, 123, 132, 166, 175], "wholehead": 25, "whose": [77, 102, 133, 155], "wide": 135, "width": [28, 29, 48, 79, 80, 81, 83, 106, 127, 180], "wienernos": 15, "wilk": [93, 169], "wilke2007": 93, "window": [16, 28, 35, 45, 106], "winsorize_lower_quantil": 16, "winsorize_upper_quantil": 16, "wise": [89, 154, 169], "wish": [14, 81], "within": [15, 17, 31, 34, 35, 39, 40, 52, 54, 77, 91, 106, 107, 108, 109, 110, 113, 131, 135, 156, 169], "without": [1, 48, 54, 57, 79, 81, 96, 102, 130, 169, 172, 180], "wl": 40, "wm": [31, 50, 51, 54, 75, 78, 79, 85, 86, 138, 147, 169, 176], "wm2max": [159, 169], "wm_algo": 50, "wm_coor": 28, "wm_file": [50, 51], "wm_fod": 52, "wm_fod_norm": 39, "wm_fod_peak": 52, "wm_mask": 66, "wm_norm": 28, "wm_odf": 31, "wm_odf_norm": 147, "wm_probseg": [87, 138], "wm_seg": 28, "wm_tpl": [87, 138], "wm_txt": 31, "wmcoord": 28, "wmedg": 25, "wmnorm": 28, "wmseg": 25, "wmseg_out": 25, "woption": 80, "word": 133, "work": [15, 60, 71, 94, 102, 132, 149, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172], "workflow": [57, 59, 61, 62, 65, 66, 72, 103, 136, 137, 138, 141, 167, 176, 177], "would": [26, 81, 102, 106], "wrap": [30, 77, 81, 160], "wrfunc": [97, 101, 144, 146], "wrfunc_gen": 99, "wrfunc_recal": 99, "wrfunc_reco": 99, "write": [6, 7, 16, 24, 38, 77, 78, 79, 80, 81, 105, 145, 146], "write_bounding_box": [78, 80, 146], "write_composite_transform": 16, "write_deformation_field": 79, "write_interp": [77, 78, 80, 81, 145, 146], "write_mask": [77, 81], "write_residu": 105, "write_voxel_s": [78, 80, 146], "write_which": 81, "write_wrap": [77, 81], "written": [38, 77, 80, 81, 107, 108, 109, 110, 121, 123, 172], "www": 169, "x": [1, 18, 25, 26, 28, 48, 52, 54, 77, 80, 81, 83, 106, 132, 133, 150, 164, 169, 180], "x10": 91, "x_": 169, "x_grid": 180, "x_j": 169, "x_min": 26, "x_size": 26, "xl": [102, 131, 155], "xlm": 169, "xls_file": [131, 155], "xlsx": [120, 133], "xml": 102, "xtension": 67, "xyz": 54, "y": [25, 26, 28, 48, 52, 54, 77, 80, 81, 83, 132, 150, 169, 180], "y_": [80, 150], "y_anat": [79, 80, 144, 146, 150], "y_min": 26, "y_size": 26, "yaw": 169, "ye": 44, "yet": 105, "ylabel": 180, "you": [10, 14, 16, 17, 20, 21, 25, 26, 77, 81, 84, 93, 105, 107, 108, 109, 110, 114, 151, 169], "your": [20, 21, 107, 108, 109, 110, 114, 151], "z": [10, 22, 25, 26, 28, 48, 52, 54, 77, 80, 81, 83, 103, 132, 150, 167, 169], "z2": 10, "z_min": 26, "z_size": 26, "zero": [10, 15, 17, 19, 39, 54, 77, 81, 91, 107, 108, 109, 110, 169, 172], "zero_edg": 19, "zero_slice_edg": 19, "zeropad": 12, "zpad": 12, "zscore": [103, 167], "\u03b2": 105, "\u03b4r2": 172}, "titles": ["Automask brick", "Calc brick", "CalcDropTRs brick", "Despike brick", "FWHMx brick", "GCOR brick", "OutlierCount brick", "QualityIndex brick", "RefitDeoblique brick", "SkullStrip brick", "TShift brick", "TStatMean brick", "Volreg brick", "AffineInitializer brick", "ApplyTransforms brick", "N4BiasFieldCorrection brick", "Registration brick", "ComputeDKI brick", "Denoise brick", "Binarize brick", "SynthStrip brick", "SynthStripMriqc brick", "Bet brick", "BetSurfacesExtraction brick", "ConvertXFM brick", "EpiReg brick", "ExtractROI brick", "FastSegment brick", "Flirt brick", "Smooth brick", "ComputeBrainVolume brick", "ConstrainedSphericalDeconvolution brick", "DWIBiasCorrect brick", "DWIBrainMask brick", "DWICat brick", "DWIDenoise brick", "DWIExtract brick", "DWIPreproc brick", "EditingTrack brick", "FilteringTrack brick", "FitTensor brick", "Generate5tt2gmwmi brick", "Generate5ttfsl brick", "MRCat brick", "MRConvert brick", "MRDeGibbs brick", "MRGridRegrid brick", "MRMath brick", "MRTransform brick", "MTNormalise brick", "ResponseSDDhollander brick", "ResponseSTrournie brick", "SphericalHarmonicExtraction brick", "TensorMetrics brick", "Tractography brick", "TransformFSLConvert brick", "ApplyBiasCorrection brick", "ArtifactMask brick", "Binarize brick", "ConformImage brick", "ConvROI brick", "Enhance brick", "EstimateSNR brick", "ExtractROIbyLabel brick", "ExtractSignalROI brick", "GradientThreshold brick", "Harmonize brick", "IntensityClip brick", "Mask brick", "NonSteadyDetector brick", "Resample1 brick", "Resample2 brick", "RotationMask brick", "Sanitize brick", "TSNR brick", "TemplateFromTemplateFlow brick", "Threshold brick", "Coregister brick", "GM_WM_Normalize brick", "NewSegment brick", "Normalize12 brick", "Realign brick", "SliceTiming brick", "Smooth brick", "AssemblyNetDocker brick", "GetLabels brick", "LabelsCorrespondence brick", "AnatIQMs brick", "BoldQMs brick", "BoldIQMsPlot brick", "CarpetParcellation brick", "ComputeDVARS brick", "FramewiseDisplacement brick", "LateralizationIndexCurve brick", "Mean_stdDev_calc brick", "PlotSignalROI brick", "ReportAnatMriqc brick", "ReportCO2inhalCvr brick", "ReportFuncMriqc brick", "ReportGE2REC brick", "ReportGroupMriqc brick", "ReportPerfDsc brick", "Result_collector brick", "Spikes brick", "EstimateConstrast brick", "EstimateModel brick", "Level1Design brick", "MultipleRegressionDesign brick", "OneSampleTTestDesign brick", "PairedTTestDesign brick", "TwoSampleTTestDesign brick", "Concat_to_list  brick", "Concat_to_list_of_list brick", "Deconv_from_aif brick", "Delete_data brick", "Files_To_List brick", "Filter_Files_List brick", "Find_In_List brick", "Get_Conditions_From_BIDS_tsv brick", "Get_Conditions_From_csv brick", "Get_Eprime_info_GE2REC brick", "Get_Patient_Name brick", "Get_Regressors_From_csv brick", "Import_Data  brick", "Input_Filter brick", "List_Duplicate brick", "List_To_File brick", "Make_AIF brick", "Make_a_list brick", "Make_CVR_reg_physio brick", "Mia_processes\u2019s documentation", "CO2_inhalation pipeline", "Dwi_whole_brain_tractograpy pipeline", "GE2REC pipeline", "GE2REC_without_behavioural_data pipeline", "Perfdsc pipeline", "Anat_airmask pipeline", "Anat_headmask pipeline", "Anat_mni_tpms pipeline", "Anat_skullstrip pipeline", "Anat_skullstrip_synthstrip pipeline", "Anat_spatial_norm pipeline", "Bold_hmc pipeline", "Bold_mni_align pipeline", "Bold_spatial_preprocessing1 pipeline", "Bold_spatial_preprocessing2 pipeline", "Bold_spatial_preprocessing3 pipeline", "Dwi_fod_msmt_csd pipeline", "Dwi_preprocessing pipeline", "Dwi_tissue_boundaries pipeline", "Spatial_mask pipeline", "Anat_mriqc pipeline", "Bold_mriqc pipeline", "Bold_signals_roi pipeline", "Bold_iqms pipeline", "Extract_roi_param pipeline", "Bold_stat_cvr brick", "Purpose", "mia_processes package", "mia_processes.bricks package", "mia_processes.bricks.preprocess package", "mia_processes.bricks.preprocess.afni package", "mia_processes.bricks.preprocess.ants package", "mia_processes.bricks.preprocess.dipy package", "mia_processes.bricks.preprocess.freesurfer package", "mia_processes.bricks.preprocess.fsl package", "mia_processes.bricks.preprocess.mrtrix package", "mia_processes.bricks.preprocess.others package", "mia_processes.bricks.preprocess.spm package", "mia_processes.bricks.reports package", "mia_processes.bricks.stat package", "mia_processes.bricks.stat.spm package", "mia_processes.bricks.tools package", "mia_processes.pipelines package", "mia_processes.pipelines.CerebVascularReact package", "mia_processes.pipelines.DWITractography package", "mia_processes.pipelines.preprocess package", "mia_processes.pipelines.qualityControl package", "mia_processes.pipelines.reports package", "mia_processes.pipelines.stat package", "mia_processes.utils package", "mia_processes"], "titleterms": {"": [37, 50, 55, 130], "0": 36, "06": [21, 87, 88, 151, 152], "1": [1, 136], "1rst": 117, "2": 128, "3": 115, "3d": [1, 3, 6, 7, 12, 29, 83, 84], "3dautomask": 0, "3dcalc": [1, 2], "3ddespik": 3, "3drefit": 8, "3dskullstrip": 9, "3dtoutcount": 6, "3dtqual": 7, "3dtshift": 10, "3dtstat": 11, "3dvolreg": 12, "4d": 69, "5tt": 42, "To": 124, "accord": 14, "acquir": 81, "activ": 93, "affin": [13, 28], "affineinit": 13, "affineiniti": 13, "afni": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 161], "aif": [113, 127], "air": 136, "algorithm": [18, 50, 51], "align": [77, 80], "all": [6, 79, 115, 128], "along": 47, "an": [13, 14, 19, 26, 56, 68, 70, 80, 111, 112, 144, 145, 146], "analysi": [106, 156], "anat_airmask": [136, 176], "anat_headmask": [137, 176], "anat_mni_tpm": [138, 176], "anat_mriqc": [151, 177], "anat_skullstrip": [139, 176], "anat_skullstrip_synthstrip": [140, 176], "anat_spatial_norm": [141, 176], "anatiqm": 87, "anatom": [87, 96, 151], "ani": 5, "anoth": 124, "ant": [13, 14, 15, 16, 162], "appli": [48, 56, 58, 68, 80], "applybiascorrect": 56, "applytransform": 14, "appropri": 41, "arithmet": 1, "arteri": 127, "artifact": [45, 57, 136], "artifactmask": 57, "assemblynet": [84, 85, 86], "assemblynetdock": 84, "atla": 80, "automask": 0, "averag": 5, "axi": 47, "b": 36, "b0": 148, "b1": 32, "back": 82, "base": [12, 156], "begin": 69, "behaviour": 134, "best": 80, "bet": [22, 23], "beta": 155, "betsurfacesextract": 23, "between": [5, 44, 55], "bia": [15, 56, 79, 139], "binar": [19, 58], "binari": [68, 76], "bold": [2, 10, 11, 69, 73, 82, 142, 152, 154], "bold_hmc": [142, 176], "bold_iqm": [154, 178], "bold_mni_align": [143, 176], "bold_mriqc": [152, 177], "bold_signals_roi": 153, "bold_spatial_preprocessing1": [144, 176], "bold_spatial_preprocessing2": [145, 176], "bold_spatial_preprocessing3": 146, "bold_stat_cvr": [156, 179], "boldiqmsplot": 89, "boldqm": 88, "boundari": 149, "brain": [0, 9, 22, 27, 28, 33, 84, 132, 140], "brainmask": 90, "brick": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "bring": 82, "browser": 124, "calc": 1, "calcdroptr": 2, "calcul": 92, "cardin": 8, "carpetparcel": 90, "cerebrovascular": [129, 131], "cerebvascularreact": 174, "challeng": [97, 131], "chang": 46, "check": 143, "classic": 105, "clip": 67, "co2": 131, "co2_inhal": [131, 174], "comput": [4, 5, 6, 7, 47, 53, 57, 65, 72, 74, 80, 87, 88, 91, 93, 103, 127, 136, 137, 154], "computebrainvolum": 30, "computedki": 17, "computedvar": 91, "concat_to_list": 111, "concat_to_list_of_list": 112, "concaten": [34, 43, 111], "conform": 59, "conformimag": 59, "constrainedsphericaldeconvolut": 31, "contain": [102, 112, 115, 117, 125, 128], "content": 124, "contrast": [104, 135], "convers": [44, 55], "convert_xfm": 24, "convertxfm": 24, "convolut": 60, "convroi": 60, "coregist": 77, "correct": [10, 15, 32, 56, 79, 139, 142], "correl": 5, "correspond": 111, "cours": 74, "creat": [0, 107, 108, 109, 110, 140, 149], "crown": 90, "current": 123, "curv": 113, "cvr": [97, 131, 156], "data": [35, 36, 39, 93, 96, 98, 102, 114, 123, 124, 127, 134, 136, 144, 145, 146, 151, 152], "databas": 114, "dataset": [1, 2, 3, 6, 7, 8, 12], "deconv_from_aif": 113, "deconvolut": [50, 51, 113], "defin": [87, 88], "deform": 80, "delet": 114, "delete_data": 114, "denois": [18, 35, 137], "deobliqu": 8, "deriv": 91, "design": [107, 108, 109, 110], "despik": 3, "detect": 69, "develop": 157, "deviat": [94, 155], "dholland": 50, "differ": [44, 77], "diffus": [17, 37, 40], "dilat": 90, "dipi": [137, 163], "displac": 92, "distribut": [31, 147], "document": 130, "domain": 49, "done": 21, "drop": 2, "dsc": 101, "dvar": 91, "dwi": [32, 33, 34, 35, 36, 147, 148, 149], "dwi_fod_msmt_csd": [147, 176], "dwi_preprocess": 148, "dwi_tissue_boundari": 149, "dwi_whole_brain_tractographi": 175, "dwi_whole_brain_tractograpi": 132, "dwibiascorrect": 32, "dwibrainmask": 33, "dwicat": 34, "dwidenois": 35, "dwiextract": 36, "dwipreproc": 37, "dwipreprocess": 176, "dwitractographi": 175, "dynam": [127, 135], "e": 120, "each": [6, 7, 12, 52, 102, 112], "eddi": 37, "edit": 38, "editingtrack": 38, "element": [112, 116, 117], "encod": [19, 148], "enhanc": 61, "epi": [25, 90, 143], "epireg": 25, "estim": [31, 40, 50, 51, 62, 104, 105, 147], "estimateconstrast": 104, "estimatemodel": 105, "estimatesnr": 62, "evalu": [97, 129, 131, 156], "everi": [5, 82], "exampl": [144, 145, 146], "extract": [9, 22, 23, 26, 36, 44, 52, 63, 64, 140], "extract_roi_param": [155, 178], "extractroi": 26, "extractroibylabel": 63, "extractsignalroi": 64, "factori": [107, 108, 109, 110], "fast": 27, "fastseg": 27, "fd": 92, "fiber": 147, "fibr": 31, "field": [15, 32, 56], "file": [19, 38, 44, 56, 62, 63, 64, 95, 102, 115, 117, 120, 125, 126], "files_to_list": 115, "filter": [39, 124], "filter_files_list": 116, "filteringtrack": 39, "find_in_list": 117, "first": 156, "fittensor": 40, "five": 42, "flirt": 28, "fmri": [104, 105, 106, 107, 108, 109, 110, 144, 145, 146], "fod": [31, 147], "follow": 136, "format": 55, "framewis": 92, "framewisedisplac": 92, "freesurf": [21, 140, 164], "from": [3, 8, 9, 12, 26, 33, 36, 53, 63, 64, 65, 75, 78, 81, 86, 90, 95, 114, 115, 116, 117, 120, 125, 126, 127, 128, 136, 137, 150, 151, 152, 154], "fsl": [22, 23, 24, 26, 27, 28, 37, 42, 55, 165], "fslroi": 26, "function": [50, 51, 52, 88, 93, 98, 127, 143, 152, 154], "fwhm": 4, "fwhmx": 4, "gaussian": [29, 83], "gcor": 5, "ge2rec": [99, 120, 133, 134], "ge2rec_without_behavioural_data": 134, "gener": [33, 41, 42, 90, 96, 97, 98, 99, 100, 101, 102, 115, 125, 126, 128, 129], "generate5tt2gmwmi": 41, "generate5ttfsl": 42, "get": [75, 85, 86, 138, 151, 152], "get_conditions_from_bids_tsv": 118, "get_conditions_from_csv": 119, "get_eprime_info_ge2rec": 120, "get_patient_nam": 121, "get_regressors_from_csv": 122, "getlabel": 85, "gibb": 45, "given": [5, 58, 76], "glm": [106, 156], "gm_wm_normal": 78, "gradient": 65, "gradientthreshold": 65, "grai": 155, "grei": [41, 78, 150], "grid": 46, "group": 100, "harmon": [52, 66], "hat": 136, "head": [137, 142], "histogram": 65, "hypercapnia": 97, "ie": 8, "imag": [0, 9, 10, 11, 14, 16, 18, 25, 26, 28, 29, 32, 33, 37, 41, 42, 43, 44, 46, 47, 48, 56, 58, 59, 60, 61, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 78, 80, 81, 82, 83, 87, 88, 137, 139, 142, 143, 150, 151, 152, 154], "import": 123, "import_data": 123, "index": 7, "indic": [155, 157], "info": 158, "inform": [49, 120], "inhomogen": 32, "initi": 13, "input": [3, 6, 12, 14, 19, 44, 56, 58, 65, 66, 73, 112, 127], "input_filt": 124, "inskul": 23, "intens": [47, 49, 67], "intensityclip": 67, "inter": 28, "interact": [133, 134], "interest": [26, 102, 104], "interfac": 41, "interpol": 46, "intra": 28, "iqm": [87, 88, 151, 152, 154], "iter": [93, 112], "itself": [90, 125], "kurtosi": 17, "label": [63, 64, 85, 86, 95], "labelscorrespond": 86, "languag": [99, 133, 134], "later": [93, 155], "lateralizationindexcurv": 93, "level": 156, "level1design": 106, "likelihood": 105, "linear": 28, "list": [111, 112, 115, 116, 117, 125, 126, 128, 150], "list1": [111, 112], "list2": [111, 112], "list_dupl": 125, "list_to_fil": 126, "local": 18, "log": 49, "lower": 58, "magnitud": 65, "make": [76, 94, 111, 112], "make_a_list": 128, "make_aif": 127, "make_cvr_reg_physio": 129, "manag": 104, "map": [94, 133, 134, 138], "mask": [0, 5, 33, 41, 57, 66, 68, 72, 76, 90, 136, 137, 150, 155], "matrix": [24, 55], "matter": [41, 66, 78, 150, 155], "maximum": 105, "mean": [10, 11, 18, 94, 143, 155], "mean_stddev_calc": 94, "memori": [99, 133, 134], "metric": [53, 87, 88, 151, 152, 154], "mia_process": [130, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "mni": [141, 143], "mni152nlin2009casym": 141, "modal": [28, 77], "model": [17, 79, 80, 105, 106, 171], "modifi": 24, "modul": [158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 177, 178, 179, 180], "more": 116, "mortamet2009": 136, "motion": 142, "mrcat": 43, "mrconvert": 44, "mrdegibb": 45, "mrgridregrid": 46, "mri": [9, 84, 93, 101, 127, 135], "mri_synthstrip": 21, "mriqc": [21, 87, 88, 96, 98, 100, 151, 152], "mrmath": 47, "mrtransform": 48, "mrtrix": [132, 166], "mrtrix3": 55, "mtnormalis": 49, "multi": 49, "multipl": [34, 107], "multipleregressiondesign": 107, "n4": 15, "n4biasfieldcorrect": 15, "name": [86, 115, 125], "necessari": 80, "newseg": 79, "nilearn": [70, 71], "nlmean": 18, "non": [18, 69], "nonsteadydetector": 69, "normal": [80, 141], "normalis": [49, 78, 79], "normalize12": 80, "number": 103, "object": 128, "obliqu": 8, "obtain": [90, 120], "one": [43, 60, 108, 116], "onesamplettestdesign": 108, "onli": [0, 78], "oper": 38, "option": [10, 11, 44], "orient": [31, 147], "other": [5, 167], "out": 143, "outlier": 6, "outliercount": 6, "output": [111, 112, 124], "outskin": 23, "outskul": 23, "over": 5, "packag": [158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180], "pair": 109, "pairedttestdesign": 109, "parametr": 94, "parcel": 90, "pattern": 117, "peak": 52, "percentil": 67, "perfdsc": 135, "perform": [32, 37, 38, 44, 46, 54, 55], "perfus": [101, 127, 135], "phase": 148, "physiolog": 129, "pipelin": [96, 97, 98, 99, 100, 120, 123, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 173, 174, 175, 176, 177, 178, 179], "plot": 95, "plotsignalroi": 95, "power2012": 92, "pre": [37, 144, 145, 146], "preprocess": [148, 160, 161, 162, 163, 164, 165, 166, 167, 168, 176], "prescrib": 67, "previou": 150, "prime": 120, "probabl": 138, "procedur": 105, "process": [37, 144, 145, 146, 161, 162, 163, 164, 165, 166, 167, 169], "process_matlab": 158, "produc": [150, 155], "protocol": [133, 134], "purpos": 157, "qualiti": [7, 87, 88, 151, 152, 154], "qualitycontrol": 177, "qualityindex": 7, "rang": 67, "reactiv": [129, 131], "realign": 81, "reconstruct": 17, "refer": [14, 70, 71, 82, 123, 151, 152, 154, 169], "refitdeobliqu": 8, "region": [26, 102], "regist": [12, 25, 138, 143], "registr": [16, 28, 143], "registratiojn": 149, "regress": 107, "regressor": 129, "reml": 105, "remov": [3, 45], "report": [96, 97, 98, 99, 100, 101, 169, 178, 180], "reportanatmriqc": 96, "reportco2inhalcvr": 97, "reportfuncmriqc": 98, "reportge2rec": 99, "reportgroupmriqc": 100, "reportperfdsc": 101, "requir": 46, "resampl": 70, "resample1": 70, "resample2": 71, "resample_to_img": [70, 71], "reslic": 48, "resolut": [70, 71], "respons": [50, 51, 113], "responsesddholland": 50, "responsestrourni": 51, "restrict": 105, "result": 150, "result_collector": 102, "revers": 148, "ring": 45, "roi": [26, 63, 64, 95, 155], "rotat": [72, 136], "rotationmask": 72, "same": [79, 81], "sampl": [108, 110], "sanit": 73, "scan": 77, "seed": 41, "segment": [27, 42, 62, 63, 64, 65, 79, 84, 85, 95, 150], "select": [116, 117], "seri": [34, 74, 81], "set": [14, 71, 78], "sever": 43, "shell": 36, "signal": [17, 64, 95], "singl": [47, 126], "skull": [21, 23, 137, 139], "skullstrip": 9, "slice": [10, 82, 116], "slicetim": 82, "smooth": [29, 83], "snr": [62, 74], "space": [138, 143, 149], "spatial": [48, 79, 80, 141], "spatial_mask": [150, 176], "spatial_preprocess": 168, "specif": [63, 106], "specifi": 47, "spheric": [50, 51, 52], "sphericalharmonicextract": 52, "spike": [3, 103], "spm": [107, 108, 109, 110, 156, 168, 171], "spm12": [104, 105, 107, 108, 109, 110], "spmt": 155, "standard": [94, 155], "stat": [170, 171, 179], "state": 69, "statist": 47, "steadi": 69, "step": 136, "streamlin": [41, 54], "strip": [21, 137, 139], "structur": [25, 136, 137, 139, 151], "studi": 101, "sub": [6, 7], "subject": [81, 138], "submodul": [158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 177, 178, 179, 180], "subpackag": [158, 159, 160, 170, 173], "subset": 44, "subtract": 90, "summari": [47, 102], "surfac": [19, 23], "surround": 9, "suscept": 135, "synthstrip": [20, 21, 140], "synthstripmriqc": 21, "t": [108, 109, 110], "t1": 9, "t1w": [59, 149, 151], "t2w": 151, "tab": 124, "tabl": 157, "templat": [75, 138, 141], "templateflow": 75, "templatefromtemplateflow": 75, "tensor": [17, 40, 53], "tensormetr": 53, "test": [108, 109, 110], "them": 138, "thi": [80, 125], "threshold": [58, 65, 76], "time": [3, 7, 10, 74, 81, 82], "tissu": [9, 27, 42, 49, 113, 138, 149], "togeth": 77, "tool": [21, 37, 172, 180], "topup": 37, "tournier": 51, "tr": [6, 7], "track": [38, 39], "tractographi": [54, 132], "transform": [8, 13, 14, 24, 48, 55], "transformfslconvert": 55, "tshift": 10, "tsnr": 74, "tstatmean": 11, "two": 110, "twosamplettestdesign": 110, "type": [42, 44], "under": 131, "union": 90, "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 23, 24, 26, 27, 28, 37, 50, 51, 56, 62, 63, 64, 65, 66, 70, 71, 84, 95, 97, 101, 105, 137, 140, 141, 148, 151, 152, 156], "usu": 120, "util": 180, "v22": [21, 87, 88, 151, 152], "valu": 155, "varianc": 91, "variou": [38, 155], "volbrain": 84, "volreg": 12, "volum": [2, 6, 7, 12, 19, 29, 36, 83], "voxel": [1, 5, 46, 52], "weight": 9, "white": [41, 66, 78], "whole": [33, 84], "without": 134, "workflow": [140, 151, 152]}})