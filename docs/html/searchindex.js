Search.setIndex({"docnames": ["documentation/bricks/preprocess/afni/Automask", "documentation/bricks/preprocess/afni/Calc", "documentation/bricks/preprocess/afni/CalcDropTRs", "documentation/bricks/preprocess/afni/Despike", "documentation/bricks/preprocess/afni/FWHMx", "documentation/bricks/preprocess/afni/GCOR", "documentation/bricks/preprocess/afni/OutlierCount", "documentation/bricks/preprocess/afni/QualityIndex", "documentation/bricks/preprocess/afni/RefitDeoblique", "documentation/bricks/preprocess/afni/SkullStrip", "documentation/bricks/preprocess/afni/TShift", "documentation/bricks/preprocess/afni/TStatMean", "documentation/bricks/preprocess/afni/Volreg", "documentation/bricks/preprocess/ants/AffineInitializer", "documentation/bricks/preprocess/ants/ApplyTransform", "documentation/bricks/preprocess/ants/N4BiasFieldCorrection", "documentation/bricks/preprocess/ants/Registration", "documentation/bricks/preprocess/dipy/ComputeDKI", "documentation/bricks/preprocess/dipy/Denoise", "documentation/bricks/preprocess/freesurfer/Binarize", "documentation/bricks/preprocess/freesurfer/SynthStrip", "documentation/bricks/preprocess/freesurfer/SynthStripMriqc", "documentation/bricks/preprocess/fsl/Bet", "documentation/bricks/preprocess/fsl/BetSurfacesExtraction", "documentation/bricks/preprocess/fsl/ConvertXFM", "documentation/bricks/preprocess/fsl/EpiReg", "documentation/bricks/preprocess/fsl/ExtractROI", "documentation/bricks/preprocess/fsl/FastSegment", "documentation/bricks/preprocess/fsl/Flirt", "documentation/bricks/preprocess/fsl/Smooth", "documentation/bricks/preprocess/matlab_wrap/ComputeBrainVolume", "documentation/bricks/preprocess/mrtrix/ConstrainedSphericalDeconvolution", "documentation/bricks/preprocess/mrtrix/DWIBiasCorrect", "documentation/bricks/preprocess/mrtrix/DWIBrainMask", "documentation/bricks/preprocess/mrtrix/DWICat", "documentation/bricks/preprocess/mrtrix/DWIDenoise", "documentation/bricks/preprocess/mrtrix/DWIExtract", "documentation/bricks/preprocess/mrtrix/DWIPreproc", "documentation/bricks/preprocess/mrtrix/EditingTrack", "documentation/bricks/preprocess/mrtrix/FilteringTrack", "documentation/bricks/preprocess/mrtrix/FitTensor", "documentation/bricks/preprocess/mrtrix/Generate5tt2gmwmi", "documentation/bricks/preprocess/mrtrix/Generate5ttfsl", "documentation/bricks/preprocess/mrtrix/MRCat", "documentation/bricks/preprocess/mrtrix/MRConvert", "documentation/bricks/preprocess/mrtrix/MRDeGibbs", "documentation/bricks/preprocess/mrtrix/MRMath", "documentation/bricks/preprocess/mrtrix/MRTransform", "documentation/bricks/preprocess/mrtrix/MTNormalise", "documentation/bricks/preprocess/mrtrix/ResponseSDDhollander", "documentation/bricks/preprocess/mrtrix/SphericalHarmonicExtraction", "documentation/bricks/preprocess/mrtrix/TensorMetrics", "documentation/bricks/preprocess/mrtrix/Tractography", "documentation/bricks/preprocess/mrtrix/TransformFSLConvert", "documentation/bricks/preprocess/others/ApplyBiasCorrection", "documentation/bricks/preprocess/others/ArtifactMask", "documentation/bricks/preprocess/others/Binarize", "documentation/bricks/preprocess/others/ConformImage", "documentation/bricks/preprocess/others/ConvROI", "documentation/bricks/preprocess/others/Enhance", "documentation/bricks/preprocess/others/EstimateSNR", "documentation/bricks/preprocess/others/ExtractROIbyLabel", "documentation/bricks/preprocess/others/ExtractSignalROI", "documentation/bricks/preprocess/others/GradientThreshold", "documentation/bricks/preprocess/others/Harmonize", "documentation/bricks/preprocess/others/IntensityClip", "documentation/bricks/preprocess/others/Mask", "documentation/bricks/preprocess/others/NonSteadyDetector", "documentation/bricks/preprocess/others/Resample1", "documentation/bricks/preprocess/others/Resample2", "documentation/bricks/preprocess/others/RotationMask", "documentation/bricks/preprocess/others/Sanitize", "documentation/bricks/preprocess/others/TSNR", "documentation/bricks/preprocess/others/TemplateFromTemplateFlow", "documentation/bricks/preprocess/others/Threshold", "documentation/bricks/preprocess/spm/Coregister", "documentation/bricks/preprocess/spm/GM_WM_Normalize", "documentation/bricks/preprocess/spm/NewSegment", "documentation/bricks/preprocess/spm/Normalize12", "documentation/bricks/preprocess/spm/Realign", "documentation/bricks/preprocess/spm/SliceTiming", "documentation/bricks/preprocess/spm/Smooth", "documentation/bricks/preprocess/volbrain/AssemblyNetDocker", "documentation/bricks/preprocess/volbrain/GetLabels", "documentation/bricks/preprocess/volbrain/LabelsCorrespondence", "documentation/bricks/reports/AnatIQMs", "documentation/bricks/reports/BoldIQMs", "documentation/bricks/reports/BoldIQMsPlot", "documentation/bricks/reports/CarpetParcellation", "documentation/bricks/reports/ComputeDVARS", "documentation/bricks/reports/FramewiseDisplacement", "documentation/bricks/reports/LateralizationIndexCurve", "documentation/bricks/reports/Mean_stdDev_calc", "documentation/bricks/reports/PlotSignalROI", "documentation/bricks/reports/ReportAnatMriqc", "documentation/bricks/reports/ReportCO2inhalCvr", "documentation/bricks/reports/ReportFuncMriqc", "documentation/bricks/reports/ReportGE2REC", "documentation/bricks/reports/ReportGroupMriqc", "documentation/bricks/reports/Result_collector", "documentation/bricks/reports/Spikes", "documentation/bricks/stats/spm/EstimateContrast", "documentation/bricks/stats/spm/EstimateModel", "documentation/bricks/stats/spm/Level1Design", "documentation/bricks/stats/spm/MultipleRegressionDesign", "documentation/bricks/stats/spm/OneSampleTTestDesign", "documentation/bricks/stats/spm/PairedTTestDesign", "documentation/bricks/stats/spm/TwoSampleTTestDesign", "documentation/bricks/tools/Concat_to_list", "documentation/bricks/tools/Concat_to_list_of_list", "documentation/bricks/tools/Delete_data", "documentation/bricks/tools/Files_To_List", "documentation/bricks/tools/Filter_Files_List", "documentation/bricks/tools/Find_In_List", "documentation/bricks/tools/Get_Conditions_From_csv", "documentation/bricks/tools/Get_Eprime_info_GE2REC", "documentation/bricks/tools/Get_Patient_Name", "documentation/bricks/tools/Import_Data", "documentation/bricks/tools/Input_Filter", "documentation/bricks/tools/List_Duplicate", "documentation/bricks/tools/List_To_File", "documentation/bricks/tools/Make_AIF", "documentation/bricks/tools/Make_A_List", "documentation/bricks/tools/Make_CVR_reg_physio", "documentation/documentation", "documentation/pipelines/CerebVascularReact/CO2_inhalation", "documentation/pipelines/DWITractography/Dwi_whole_brain_tractograpy", "documentation/pipelines/FunctionalLangageMemory/GE2REC", "documentation/pipelines/FunctionalLangageMemory/GE2REC_without_behavioural_data", "documentation/pipelines/Perfusion/Perfdsc", "documentation/pipelines/preprocess/Anat_airmask", "documentation/pipelines/preprocess/Anat_headmask", "documentation/pipelines/preprocess/Anat_mni_tpms", "documentation/pipelines/preprocess/Anat_skullstrip", "documentation/pipelines/preprocess/Anat_skullstrip_synthstrip", "documentation/pipelines/preprocess/Anat_spatial_norm", "documentation/pipelines/preprocess/Bold_hmc", "documentation/pipelines/preprocess/Bold_mni_align", "documentation/pipelines/preprocess/Bold_spatial_preprocessing1", "documentation/pipelines/preprocess/Bold_spatial_preprocessing2", "documentation/pipelines/preprocess/Bold_spatial_preprocessing3", "documentation/pipelines/preprocess/Dwi_fod_msmt_csd", "documentation/pipelines/preprocess/Dwi_preprocessing", "documentation/pipelines/preprocess/Dwi_tissue_boundaries", "documentation/pipelines/preprocess/Spatial_mask", "documentation/pipelines/qualityControl/Anat_mriqc", "documentation/pipelines/qualityControl/Bold_mriqc", "documentation/pipelines/qualityControl/Bold_signals_roi", "documentation/pipelines/reports/Bold_iqms", "documentation/pipelines/reports/Extract_roi_param", "documentation/pipelines/stat/Bold_stat_cvr", "index", "mia_processes", "mia_processes.bricks", "mia_processes.bricks.preprocess", "mia_processes.bricks.preprocess.afni", "mia_processes.bricks.preprocess.ants", "mia_processes.bricks.preprocess.dipy", "mia_processes.bricks.preprocess.freesurfer", "mia_processes.bricks.preprocess.fsl", "mia_processes.bricks.preprocess.mrtrix", "mia_processes.bricks.preprocess.others", "mia_processes.bricks.preprocess.spm", "mia_processes.bricks.reports", "mia_processes.bricks.stat", "mia_processes.bricks.stat.spm", "mia_processes.bricks.tools", "mia_processes.pipelines", "mia_processes.pipelines.CerebVascularReact", "mia_processes.pipelines.DWITractography", "mia_processes.pipelines.preprocess", "mia_processes.pipelines.qualityControl", "mia_processes.pipelines.reports", "mia_processes.pipelines.stat", "mia_processes.utils", "modules"], "filenames": ["documentation/bricks/preprocess/afni/Automask.rst", "documentation/bricks/preprocess/afni/Calc.rst", "documentation/bricks/preprocess/afni/CalcDropTRs.rst", "documentation/bricks/preprocess/afni/Despike.rst", "documentation/bricks/preprocess/afni/FWHMx.rst", "documentation/bricks/preprocess/afni/GCOR.rst", "documentation/bricks/preprocess/afni/OutlierCount.rst", "documentation/bricks/preprocess/afni/QualityIndex.rst", "documentation/bricks/preprocess/afni/RefitDeoblique.rst", "documentation/bricks/preprocess/afni/SkullStrip.rst", "documentation/bricks/preprocess/afni/TShift.rst", "documentation/bricks/preprocess/afni/TStatMean.rst", "documentation/bricks/preprocess/afni/Volreg.rst", "documentation/bricks/preprocess/ants/AffineInitializer.rst", "documentation/bricks/preprocess/ants/ApplyTransform.rst", "documentation/bricks/preprocess/ants/N4BiasFieldCorrection.rst", "documentation/bricks/preprocess/ants/Registration.rst", "documentation/bricks/preprocess/dipy/ComputeDKI.rst", "documentation/bricks/preprocess/dipy/Denoise.rst", "documentation/bricks/preprocess/freesurfer/Binarize.rst", "documentation/bricks/preprocess/freesurfer/SynthStrip.rst", "documentation/bricks/preprocess/freesurfer/SynthStripMriqc.rst", "documentation/bricks/preprocess/fsl/Bet.rst", "documentation/bricks/preprocess/fsl/BetSurfacesExtraction.rst", "documentation/bricks/preprocess/fsl/ConvertXFM.rst", "documentation/bricks/preprocess/fsl/EpiReg.rst", "documentation/bricks/preprocess/fsl/ExtractROI.rst", "documentation/bricks/preprocess/fsl/FastSegment.rst", "documentation/bricks/preprocess/fsl/Flirt.rst", "documentation/bricks/preprocess/fsl/Smooth.rst", "documentation/bricks/preprocess/matlab_wrap/ComputeBrainVolume.rst", "documentation/bricks/preprocess/mrtrix/ConstrainedSphericalDeconvolution.rst", "documentation/bricks/preprocess/mrtrix/DWIBiasCorrect.rst", "documentation/bricks/preprocess/mrtrix/DWIBrainMask.rst", "documentation/bricks/preprocess/mrtrix/DWICat.rst", "documentation/bricks/preprocess/mrtrix/DWIDenoise.rst", "documentation/bricks/preprocess/mrtrix/DWIExtract.rst", "documentation/bricks/preprocess/mrtrix/DWIPreproc.rst", "documentation/bricks/preprocess/mrtrix/EditingTrack.rst", "documentation/bricks/preprocess/mrtrix/FilteringTrack.rst", "documentation/bricks/preprocess/mrtrix/FitTensor.rst", "documentation/bricks/preprocess/mrtrix/Generate5tt2gmwmi.rst", "documentation/bricks/preprocess/mrtrix/Generate5ttfsl.rst", "documentation/bricks/preprocess/mrtrix/MRCat.rst", "documentation/bricks/preprocess/mrtrix/MRConvert.rst", "documentation/bricks/preprocess/mrtrix/MRDeGibbs.rst", "documentation/bricks/preprocess/mrtrix/MRMath.rst", "documentation/bricks/preprocess/mrtrix/MRTransform.rst", "documentation/bricks/preprocess/mrtrix/MTNormalise.rst", "documentation/bricks/preprocess/mrtrix/ResponseSDDhollander.rst", "documentation/bricks/preprocess/mrtrix/SphericalHarmonicExtraction.rst", "documentation/bricks/preprocess/mrtrix/TensorMetrics.rst", "documentation/bricks/preprocess/mrtrix/Tractography.rst", "documentation/bricks/preprocess/mrtrix/TransformFSLConvert.rst", "documentation/bricks/preprocess/others/ApplyBiasCorrection.rst", "documentation/bricks/preprocess/others/ArtifactMask.rst", "documentation/bricks/preprocess/others/Binarize.rst", "documentation/bricks/preprocess/others/ConformImage.rst", "documentation/bricks/preprocess/others/ConvROI.rst", "documentation/bricks/preprocess/others/Enhance.rst", "documentation/bricks/preprocess/others/EstimateSNR.rst", "documentation/bricks/preprocess/others/ExtractROIbyLabel.rst", "documentation/bricks/preprocess/others/ExtractSignalROI.rst", "documentation/bricks/preprocess/others/GradientThreshold.rst", "documentation/bricks/preprocess/others/Harmonize.rst", "documentation/bricks/preprocess/others/IntensityClip.rst", "documentation/bricks/preprocess/others/Mask.rst", "documentation/bricks/preprocess/others/NonSteadyDetector.rst", "documentation/bricks/preprocess/others/Resample1.rst", "documentation/bricks/preprocess/others/Resample2.rst", "documentation/bricks/preprocess/others/RotationMask.rst", "documentation/bricks/preprocess/others/Sanitize.rst", "documentation/bricks/preprocess/others/TSNR.rst", "documentation/bricks/preprocess/others/TemplateFromTemplateFlow.rst", "documentation/bricks/preprocess/others/Threshold.rst", "documentation/bricks/preprocess/spm/Coregister.rst", "documentation/bricks/preprocess/spm/GM_WM_Normalize.rst", "documentation/bricks/preprocess/spm/NewSegment.rst", "documentation/bricks/preprocess/spm/Normalize12.rst", "documentation/bricks/preprocess/spm/Realign.rst", "documentation/bricks/preprocess/spm/SliceTiming.rst", "documentation/bricks/preprocess/spm/Smooth.rst", "documentation/bricks/preprocess/volbrain/AssemblyNetDocker.rst", "documentation/bricks/preprocess/volbrain/GetLabels.rst", "documentation/bricks/preprocess/volbrain/LabelsCorrespondence.rst", "documentation/bricks/reports/AnatIQMs.rst", "documentation/bricks/reports/BoldIQMs.rst", "documentation/bricks/reports/BoldIQMsPlot.rst", "documentation/bricks/reports/CarpetParcellation.rst", "documentation/bricks/reports/ComputeDVARS.rst", "documentation/bricks/reports/FramewiseDisplacement.rst", "documentation/bricks/reports/LateralizationIndexCurve.rst", "documentation/bricks/reports/Mean_stdDev_calc.rst", "documentation/bricks/reports/PlotSignalROI.rst", "documentation/bricks/reports/ReportAnatMriqc.rst", "documentation/bricks/reports/ReportCO2inhalCvr.rst", "documentation/bricks/reports/ReportFuncMriqc.rst", "documentation/bricks/reports/ReportGE2REC.rst", "documentation/bricks/reports/ReportGroupMriqc.rst", "documentation/bricks/reports/Result_collector.rst", "documentation/bricks/reports/Spikes.rst", "documentation/bricks/stats/spm/EstimateContrast.rst", "documentation/bricks/stats/spm/EstimateModel.rst", "documentation/bricks/stats/spm/Level1Design.rst", "documentation/bricks/stats/spm/MultipleRegressionDesign.rst", "documentation/bricks/stats/spm/OneSampleTTestDesign.rst", "documentation/bricks/stats/spm/PairedTTestDesign.rst", "documentation/bricks/stats/spm/TwoSampleTTestDesign.rst", "documentation/bricks/tools/Concat_to_list.rst", "documentation/bricks/tools/Concat_to_list_of_list.rst", "documentation/bricks/tools/Delete_data.rst", "documentation/bricks/tools/Files_To_List.rst", "documentation/bricks/tools/Filter_Files_List.rst", "documentation/bricks/tools/Find_In_List.rst", "documentation/bricks/tools/Get_Conditions_From_csv.rst", "documentation/bricks/tools/Get_Eprime_info_GE2REC.rst", "documentation/bricks/tools/Get_Patient_Name.rst", "documentation/bricks/tools/Import_Data.rst", "documentation/bricks/tools/Input_Filter.rst", "documentation/bricks/tools/List_Duplicate.rst", "documentation/bricks/tools/List_To_File.rst", "documentation/bricks/tools/Make_AIF.rst", "documentation/bricks/tools/Make_A_List.rst", "documentation/bricks/tools/Make_CVR_reg_physio.rst", "documentation/documentation.rst", "documentation/pipelines/CerebVascularReact/CO2_inhalation.rst", "documentation/pipelines/DWITractography/Dwi_whole_brain_tractograpy.rst", "documentation/pipelines/FunctionalLangageMemory/GE2REC.rst", "documentation/pipelines/FunctionalLangageMemory/GE2REC_without_behavioural_data.rst", "documentation/pipelines/Perfusion/Perfdsc.rst", "documentation/pipelines/preprocess/Anat_airmask.rst", "documentation/pipelines/preprocess/Anat_headmask.rst", "documentation/pipelines/preprocess/Anat_mni_tpms.rst", "documentation/pipelines/preprocess/Anat_skullstrip.rst", "documentation/pipelines/preprocess/Anat_skullstrip_synthstrip.rst", "documentation/pipelines/preprocess/Anat_spatial_norm.rst", "documentation/pipelines/preprocess/Bold_hmc.rst", "documentation/pipelines/preprocess/Bold_mni_align.rst", "documentation/pipelines/preprocess/Bold_spatial_preprocessing1.rst", "documentation/pipelines/preprocess/Bold_spatial_preprocessing2.rst", "documentation/pipelines/preprocess/Bold_spatial_preprocessing3.rst", "documentation/pipelines/preprocess/Dwi_fod_msmt_csd.rst", "documentation/pipelines/preprocess/Dwi_preprocessing.rst", "documentation/pipelines/preprocess/Dwi_tissue_boundaries.rst", "documentation/pipelines/preprocess/Spatial_mask.rst", "documentation/pipelines/qualityControl/Anat_mriqc.rst", "documentation/pipelines/qualityControl/Bold_mriqc.rst", "documentation/pipelines/qualityControl/Bold_signals_roi.rst", "documentation/pipelines/reports/Bold_iqms.rst", "documentation/pipelines/reports/Extract_roi_param.rst", "documentation/pipelines/stat/Bold_stat_cvr.rst", "index.rst", "mia_processes.rst", "mia_processes.bricks.rst", "mia_processes.bricks.preprocess.rst", "mia_processes.bricks.preprocess.afni.rst", "mia_processes.bricks.preprocess.ants.rst", "mia_processes.bricks.preprocess.dipy.rst", "mia_processes.bricks.preprocess.freesurfer.rst", "mia_processes.bricks.preprocess.fsl.rst", "mia_processes.bricks.preprocess.mrtrix.rst", "mia_processes.bricks.preprocess.others.rst", "mia_processes.bricks.preprocess.spm.rst", "mia_processes.bricks.reports.rst", "mia_processes.bricks.stat.rst", "mia_processes.bricks.stat.spm.rst", "mia_processes.bricks.tools.rst", "mia_processes.pipelines.rst", "mia_processes.pipelines.CerebVascularReact.rst", "mia_processes.pipelines.DWITractography.rst", "mia_processes.pipelines.preprocess.rst", "mia_processes.pipelines.qualityControl.rst", "mia_processes.pipelines.reports.rst", "mia_processes.pipelines.stat.rst", "mia_processes.utils.rst", "modules.rst"], "titles": ["Automask brick", "Calc brick", "CalcDropTRs brick", "Despike brick", "FWHMx brick", "GCOR brick", "OutlierCount brick", "QualityIndex brick", "RefitDeoblique brick", "SkullStrip brick", "TShift brick", "TStatMean brick", "Volreg brick", "AffineInitializer brick", "ApplyTransforms brick", "N4BiasFieldCorrection brick", "Registration brick", "ComputeDKI brick", "Denoise brick", "Binarize brick", "SynthStrip brick", "SynthStripMriqc brick", "Bet brick", "BetSurfacesExtraction brick", "ConvertXFM brick", "EpiReg brick", "ExtractROI brick", "FastSegment brick", "Flirt brick", "Smooth brick", "ComputeBrainVolume brick", "ConstrainedSphericalDeconvolution brick", "DWIBiasCorrect brick", "DWIBrainMask brick", "DWICat brick", "DWIDenoise brick", "DWIExtract brick", "DWIPreproc brick", "EditingTrack brick", "FilteringTrack brick", "FitTensor brick", "Generate5tt2gmwmi brick", "Generate5ttfsl brick", "MRCat brick", "MRConvert brick", "MRDeGibbs brick", "MRMath brick", "MRTransform brick", "MTNormalise brick", "ResponseSDDhollander brick", "SphericalHarmonicExtraction brick", "TensorMetrics brick", "Tractography brick", "TransformFSLConvert brick", "ApplyBiasCorrection brick", "ArtifactMask brick", "Binarize brick", "ConformImage brick", "ConvROI brick", "Enhance brick", "EstimateSNR brick", "ExtractROIbyLabel brick", "ExtractSignalROI brick", "GradientThreshold brick", "Harmonize brick", "IntensityClip brick", "Mask brick", "NonSteadyDetector brick", "Resample1 brick", "Resample2 brick", "RotationMask brick", "Sanitize brick", "TSNR brick", "TemplateFromTemplateFlow brick", "Threshold brick", "Coregister brick", "GM_WM_Normalize brick", "NewSegment brick", "Normalize12 brick", "Realign brick", "SliceTiming brick", "Smooth brick", "AssemblyNetDocker brick", "GetLabels brick", "LabelsCorrespondence brick", "AnatIQMs brick", "BoldQMs brick", "BoldIQMsPlot brick", "CarpetParcellation brick", "ComputeDVARS brick", "FramewiseDisplacement brick", "LateralizationIndexCurve brick", "Mean_stdDev_calc brick", "PlotSignalROI brick", "ReportAnatMriqc brick", "ReportCO2inhalCvr brick", "ReportFuncMriqc brick", "ReportGE2REC brick", "ReportGroupMriqc brick", "Result_collector brick", "Spikes brick", "EstimateConstrast brick", "EstimateModel brick", "Level1Design brick", "MultipleRegressionDesign brick", "OneSampleTTestDesign brick", "PairedTTestDesign brick", "TwoSampleTTestDesign brick", "Concat_to_list  brick", "Concat_to_list_of_list brick", "Delete_data brick", "Files_To_List brick", "Filter_Files_List brick", "Find_In_List brick", "Get_Conditions_From_csv brick", "Get_Eprime_info_GE2REC brick", "Get_Patient_Name brick", "Import_Data  brick", "Input_Filter brick", "List_Duplicate brick", "List_To_File brick", "Make_AIF brick", "Make_a_list brick", "Make_CVR_reg_physio brick", "Mia_processes\u2019s documentation", "CO2_inhalation pipeline", "Dwi_whole_brain_tractograpy pipeline", "GE2REC pipeline", "GE2REC_without_behavioural_data pipeline", "Perfdsc pipeline", "Anat_airmask pipeline", "Anat_headmask pipeline", "Anat_mni_tpms pipeline", "Anat_skullstrip pipeline", "Anat_skullstrip_synthstrip pipeline", "Anat_spatial_norm pipeline", "Bold_hmc pipeline", "Bold_mni_align pipeline", "Bold_spatial_preprocessing1 pipeline", "Bold_spatial_preprocessing2 pipeline", "Bold_spatial_preprocessing3 pipeline", "Dwi_fod_msmt_csd pipeline", "Dwi_preprocessing pipeline", "Dwi_tissue_boundaries pipeline", "Spatial_mask pipeline", "Anat_mriqc pipeline", "Bold_mriqc pipeline", "Bold_signals_roi pipeline", "Bold_iqms pipeline", "Extract_roi_param pipeline", "Bold_stat_cvr brick", "Purpose", "mia_processes package", "mia_processes.bricks package", "mia_processes.bricks.preprocess package", "mia_processes.bricks.preprocess.afni package", "mia_processes.bricks.preprocess.ants package", "mia_processes.bricks.preprocess.dipy package", "mia_processes.bricks.preprocess.freesurfer package", "mia_processes.bricks.preprocess.fsl package", "mia_processes.bricks.preprocess.mrtrix package", "mia_processes.bricks.preprocess.others package", "mia_processes.bricks.preprocess.spm package", "mia_processes.bricks.reports package", "mia_processes.bricks.stat package", "mia_processes.bricks.stat.spm package", "mia_processes.bricks.tools package", "mia_processes.pipelines package", "mia_processes.pipelines.CerebVascularReact package", "mia_processes.pipelines.DWITractography package", "mia_processes.pipelines.preprocess package", "mia_processes.pipelines.qualityControl package", "mia_processes.pipelines.reports package", "mia_processes.pipelines.stat package", "mia_processes.utils package", "mia_processes"], "terms": {"home": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], "document": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 172, 173, 174], "github": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 156, 158, 161, 162, 174], "3dcliplevel": 0, "algorithm": [0, 12, 15, 31, 40, 52, 77, 78, 121, 126, 141, 160, 161, 163], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 61, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 115, 117, 120, 121, 123, 125, 126, 127, 128, 129, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 170, 172, 174], "find": [0, 23, 50, 52, 75], "clip": [0, 6, 7, 16, 71, 95, 134, 161], "level": [0, 101, 102, 103, 104, 105, 106, 107, 118, 123, 125, 127, 160, 166], "after": [0, 19, 47, 52, 56, 68, 74, 76, 80, 89, 92, 127, 128, 160, 161, 163], "an": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 70, 71, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 113, 115, 116, 119, 121, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 174], "eros": [0, 19, 49], "dilat": [0, 19, 39, 163], "step": [0, 1, 5, 15, 35, 40, 44, 52, 55, 102, 126, 133, 136, 141, 142, 143, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 170], "largest": [0, 10, 27], "connect": [0, 163], "compon": [0, 48, 50, 126], "supra": 0, "threshold": [0, 15, 16, 19, 20, 21, 22, 39, 49, 50, 65, 86, 87, 91, 103, 104, 105, 106, 107, 121, 124, 131, 144, 148, 154, 158, 160, 161], "voxel": [0, 6, 7, 10, 11, 12, 15, 19, 22, 26, 27, 28, 29, 35, 39, 41, 44, 49, 52, 56, 59, 75, 78, 79, 81, 87, 89, 95, 97, 102, 103, 104, 105, 106, 107, 121, 126, 140, 141, 150, 155, 160, 163, 166, 174], "ar": [0, 1, 10, 15, 16, 17, 18, 19, 22, 23, 26, 27, 28, 31, 33, 34, 36, 37, 38, 40, 43, 44, 45, 46, 47, 48, 49, 52, 56, 57, 59, 64, 65, 66, 68, 69, 70, 74, 75, 77, 78, 79, 80, 81, 85, 86, 87, 91, 92, 95, 98, 99, 101, 102, 103, 104, 105, 106, 107, 110, 111, 113, 114, 115, 121, 123, 125, 126, 127, 128, 129, 137, 138, 139, 140, 141, 142, 143, 145, 146, 150, 151, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 174], "kept": [0, 74, 110], "Be": [0, 56, 57, 59, 64, 66, 70, 110], "carr": 0, "thi": [0, 1, 4, 10, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 58, 62, 69, 74, 75, 77, 79, 80, 82, 83, 84, 85, 86, 89, 90, 91, 92, 99, 101, 102, 103, 104, 105, 106, 107, 110, 116, 117, 118, 125, 126, 127, 128, 129, 141, 142, 143, 147, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 172, 173], "program": [0, 23, 50, 75, 79], "itself": [0, 15, 52, 163, 166], "doe": [0, 28, 49], "NOT": [0, 39, 42, 52], "do": [0, 5, 12, 25, 28, 37, 39, 42, 52, 100, 103, 104, 105, 106, 107, 128, 155, 156, 157, 158, 159, 160, 161, 162, 165], "skull": [0, 9, 20, 22, 134, 145, 158, 159, 163, 170], "strip": [0, 9, 20, 22, 23, 134, 145, 158, 170], "mandatori": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 98, 100, 101, 102, 104, 105, 106, 107, 110, 111, 126, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 145, 146, 147, 148, 174], "input": [0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 172, 173], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 172, 173, 174], "in_fil": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 74, 79, 80, 81, 82, 89, 90, 91, 93, 100, 104, 105, 110, 116, 130, 131, 133, 134, 136, 163, 174], "string": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 115, 116, 117, 119, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 163, 166, 174], "repres": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 77, 78, 79, 80, 82, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 163, 174], "exist": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 77, 78, 79, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 113, 114, 115, 116, 119, 121, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 161, 163, 174], "file": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 110, 114, 116, 117, 121, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 158, 160, 161, 163, 165, 166, 174], "valid": [0, 1, 2, 3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 91, 93, 94, 95, 96, 97, 100, 113, 121, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 166, 174], "extens": [0, 1, 2, 3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 100, 113, 121, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 174], "nii": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 35, 37, 40, 41, 42, 43, 44, 46, 47, 48, 49, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 174], "gz": [0, 1, 2, 3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 35, 37, 40, 41, 42, 43, 44, 46, 47, 48, 49, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 82, 85, 86, 87, 88, 89, 91, 93, 94, 95, 96, 97, 100, 126, 130, 131, 132, 133, 134, 135, 136, 137, 142, 143, 144, 145, 146, 147, 148, 174], "dataset": [0, 4, 11, 36, 155, 160, 163], "can": [0, 10, 15, 16, 17, 19, 22, 27, 28, 47, 75, 76, 77, 78, 81, 99, 102, 103, 104, 105, 106, 107, 110, 123, 125, 151, 152, 156, 158, 163, 174], "4depi": 0, "anatom": [0, 39, 41, 42, 52, 55, 57, 59, 60, 63, 64, 70, 95, 97, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 138, 139, 140, 143, 161, 163, 170, 171], "ex": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 163, 166, 174], "usernam": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], "data": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 92, 93, 95, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 111, 112, 113, 114, 115, 116, 119, 120, 122, 123, 124, 125, 126, 127, 129, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 147, 148, 149, 150, 156, 160, 163, 165, 166, 170, 171, 172, 174], "raw_data": [0, 1, 2, 3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 99, 100, 103, 111, 112, 117, 121, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 166], "func": [0, 2, 3, 8, 10, 11, 12, 18, 29, 67, 71, 72, 75, 79, 80, 81, 86, 96, 98, 100, 111, 112, 118, 119, 120, 123, 125, 136, 138, 139, 140, 144, 146, 147], "option": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 59, 61, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 75, 79, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 118, 126, 136, 137, 141, 142, 147, 148, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 174], "default": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 59, 61, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 85, 86, 87, 88, 89, 90, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 117, 126, 130, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 146, 147, 151, 166, 174], "valu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 59, 61, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 115, 117, 125, 126, 130, 132, 135, 136, 137, 139, 140, 141, 142, 143, 146, 147, 150, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 172, 174], "clfrac": 0, "float": [0, 3, 5, 6, 10, 13, 14, 15, 16, 18, 19, 22, 25, 28, 29, 31, 36, 37, 38, 44, 48, 49, 50, 52, 56, 60, 65, 74, 75, 77, 78, 79, 80, 81, 86, 87, 89, 90, 95, 100, 101, 102, 103, 104, 105, 106, 107, 114, 115, 126, 137, 142, 145, 146, 148, 161, 163, 174], "0": [0, 1, 2, 5, 6, 10, 12, 13, 14, 15, 16, 18, 19, 22, 25, 26, 27, 28, 29, 31, 33, 37, 38, 40, 44, 45, 46, 47, 48, 49, 52, 56, 65, 71, 74, 75, 77, 78, 79, 80, 81, 86, 87, 89, 90, 94, 96, 100, 101, 103, 104, 105, 106, 107, 112, 114, 115, 120, 122, 126, 127, 128, 135, 137, 139, 140, 142, 148, 158, 160, 161, 163, 166, 174], "5": [0, 1, 6, 7, 10, 14, 15, 16, 18, 19, 22, 28, 35, 40, 44, 52, 77, 78, 79, 80, 83, 84, 94, 95, 96, 103, 104, 105, 106, 107, 126, 135, 143, 161, 163], "set": [0, 2, 10, 13, 15, 18, 19, 26, 27, 28, 31, 35, 37, 39, 40, 44, 47, 49, 50, 52, 56, 59, 75, 79, 80, 81, 89, 103, 115, 117, 129, 145, 146, 156, 160, 166], "fraction": [0, 6, 17, 22, 27, 51, 163], "must": [0, 10, 16, 28, 37, 38, 52, 58, 65, 69, 74, 75, 79, 80, 92, 99, 103, 124, 127, 143, 150, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166], "1": [0, 2, 6, 7, 12, 13, 14, 16, 18, 19, 20, 21, 22, 26, 27, 28, 37, 44, 45, 46, 47, 52, 55, 56, 57, 61, 67, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 95, 98, 101, 102, 103, 104, 105, 106, 107, 109, 115, 117, 120, 126, 132, 135, 137, 140, 145, 146, 150, 158, 161, 163, 166, 170, 174], "9": [0, 28, 40, 52, 65, 79, 80, 103], "A": [0, 9, 15, 16, 22, 23, 27, 31, 34, 37, 39, 52, 56, 58, 68, 74, 75, 76, 77, 78, 79, 81, 82, 85, 86, 87, 91, 92, 94, 95, 96, 97, 98, 99, 103, 108, 109, 110, 111, 112, 113, 117, 118, 119, 120, 123, 125, 126, 127, 128, 138, 139, 140, 142, 143, 144, 145, 146, 147, 149, 150, 152, 156, 161, 163, 166], "small": [0, 6, 7, 22, 28, 145, 146], "tend": [0, 126], "make": [0, 19, 80, 141, 161, 163, 166, 170, 174], "larger": 0, "out_brain_suffix": 0, "_mask": [0, 55, 66], "suffix": [0, 10, 19, 25, 26, 38, 39, 44, 50, 55, 56, 57, 59, 63, 64, 66, 68, 69, 70, 71, 72, 73, 74, 130, 132, 135, 137, 174], "output_typ": [0, 1, 2, 3, 9, 10, 11, 12, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "nifti": [0, 1, 2, 3, 9, 10, 11, 12, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 61, 78, 126, 142, 143, 166, 174], "nifti_gz": [0, 1, 2, 3, 9, 10, 11, 12, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 44, 174], "format": [0, 1, 2, 3, 9, 10, 11, 12, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 82, 121, 123, 125, 142, 143, 160, 163], "output": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 172, 173, 174], "one": [0, 1, 2, 3, 4, 9, 10, 11, 12, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 36, 37, 38, 42, 51, 52, 56, 57, 59, 64, 65, 66, 70, 75, 77, 81, 93, 100, 102, 103, 104, 106, 107, 111, 114, 118, 119, 151, 155, 160, 161, 163, 165, 166, 174], "out_prefix": [0, 1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 29, 75, 78, 79, 80, 81, 88, 89, 90, 94, 96, 100], "prefix": [0, 1, 2, 3, 9, 10, 11, 12, 13, 14, 15, 16, 18, 56, 57, 58, 59, 63, 64, 66, 68, 70, 71, 72, 74, 75, 78, 79, 80, 81, 94, 96, 100], "automask_": 0, "integ": [0, 1, 2, 4, 5, 6, 7, 10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 26, 28, 30, 31, 35, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 52, 61, 62, 75, 78, 79, 80, 81, 83, 84, 86, 93, 94, 95, 96, 100, 102, 103, 112, 120, 137, 140, 147, 148, 174], "outward": 0, "undefin": [0, 1, 5, 7, 10, 12, 14, 15, 16, 18, 19, 25, 36, 80, 87, 94, 95, 96, 99, 101, 102, 103, 111, 117, 138, 149], "ie": [0, 1, 5, 10, 12, 14, 15, 16, 18, 19, 36, 49, 52, 94, 95, 96], "erod": [0, 19, 49, 64, 163], "inward": 0, "out_brain": [0, 134], "derived_data": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 116, 117, 123, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], "func_mask": 0, "out_fil": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 52, 54, 56, 57, 59, 61, 63, 64, 65, 66, 68, 70, 71, 74, 85, 86, 87, 88, 89, 90, 99, 100, 113, 119, 131, 133, 136, 163, 174], "automask_func": [0, 110], "useful": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 96, 98, 100, 101, 102, 103, 104, 105, 106, 107, 126, 130, 131, 132, 134, 135, 136, 137, 145, 146, 147, 148, 150], "link": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 96, 98, 100, 101, 102, 103, 104, 105, 106, 107, 126, 130, 131, 132, 134, 135, 136, 137, 145, 146, 147, 148, 150, 151, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166], "nipyp": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 35, 36, 37, 40, 42, 43, 45, 46, 47, 49, 51, 52, 55, 67, 72, 75, 77, 78, 79, 80, 81, 89, 90, 101, 102, 103, 104, 105, 106, 107, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165], "assum": [1, 37, 80, 103, 104, 105, 106, 107, 140], "comput": [1, 11, 14, 16, 17, 18, 19, 30, 31, 40, 45, 48, 50, 52, 60, 64, 87, 127, 128, 145, 146, 151, 155, 157, 160, 161, 162, 163, 166, 170], "being": [1, 52, 75, 78, 79], "perform": [1, 15, 25, 28, 31, 35, 40, 43, 46, 47, 50, 75, 95, 97, 103, 104, 105, 106, 107, 115, 127, 141, 143, 160, 163], "occupi": 1, "same": [1, 8, 10, 17, 19, 26, 28, 37, 42, 44, 75, 80, 81, 99, 103, 114, 145, 146, 162, 163, 166], "space": [1, 13, 14, 16, 23, 25, 26, 28, 45, 47, 55, 56, 57, 59, 64, 66, 70, 73, 75, 76, 77, 78, 79, 82, 85, 88, 91, 126, 130, 135, 138, 140, 148, 163, 170, 174], "have": [1, 15, 16, 27, 28, 31, 37, 39, 52, 58, 69, 75, 76, 77, 78, 79, 91, 92, 93, 99, 103, 104, 105, 106, 107, 121, 127, 161, 163], "orient": [1, 39, 47, 49, 52, 103, 104, 105, 106, 107, 126, 160, 170, 174], "in_file_a": [1, 2], "first": [1, 5, 10, 14, 16, 19, 27, 28, 35, 37, 40, 44, 48, 52, 74, 79, 92, 94, 95, 96, 98, 99, 104, 105, 106, 107, 112, 113, 114, 120, 127, 134, 141, 163], "img_1": 1, "expr": [1, 133], "b": [1, 15, 17, 22, 31, 33, 37, 44, 75, 78, 79, 101, 108, 109, 126, 133, 141, 142, 143, 160, 163, 166], "express": [1, 89], "appli": [1, 14, 16, 18, 22, 28, 31, 42, 48, 49, 52, 65, 74, 75, 76, 79, 80, 92, 103, 104, 105, 106, 107, 117, 118, 121, 130, 132, 137, 143, 160, 161, 166], "between": [1, 6, 10, 13, 15, 16, 25, 37, 39, 52, 74, 75, 77, 78, 80, 83, 84, 89, 94, 95, 96, 98, 103, 104, 105, 106, 107, 112, 123, 127, 141, 145, 146, 149, 155, 160, 161, 174], "c": [1, 22, 101, 108, 109, 166], "allow": [1, 17, 19, 23, 28, 52, 75, 82, 91, 103, 104, 105, 106, 107, 118, 143, 147, 149], "parenthes": 1, "It": [1, 16, 17, 20, 25, 26, 27, 28, 30, 47, 80, 91, 99, 101, 102, 121, 123, 129, 143, 163], "also": [1, 10, 17, 22, 25, 27, 28, 52, 75, 78, 79, 98, 99, 103, 110, 125, 126, 127, 142, 149, 166], "possibl": [1, 16, 25, 26, 27, 28, 37, 75, 79, 145, 146, 160], "built": [1, 31, 49, 92, 151, 170], "function": [1, 16, 17, 22, 28, 31, 39, 47, 57, 60, 75, 89, 95, 97, 100, 102, 103, 123, 125, 126, 127, 128, 136, 138, 139, 140, 141, 144, 147, 150, 160, 161, 163, 166, 170, 171, 172, 174], "sin": 1, "co": [1, 123, 125, 126, 143], "sqrt": [1, 163], "mean": [1, 12, 16, 17, 46, 51, 77, 78, 79, 86, 89, 96, 99, 101, 104, 105, 106, 107, 125, 129, 146, 148, 155, 157, 163, 170, 172, 174], "stdev": 1, "some": [1, 16, 25, 26, 44, 75, 85, 86, 101, 102, 103, 126, 143, 151, 155, 156, 157, 158, 159, 160, 162, 165], "design": [1, 37, 101, 102, 103, 114, 127, 128, 150, 165, 168], "help": [1, 141, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 172, 173], "implement": [1, 90, 91, 102, 163], "logic": 1, "x": [1, 18, 25, 26, 28, 47, 50, 52, 75, 78, 79, 81, 103, 126, 127, 144, 158, 163, 166, 174], "For": [1, 10, 14, 16, 19, 25, 28, 44, 59, 61, 62, 63, 75, 76, 79, 99, 104, 105, 106, 107, 114, 166, 170, 174], "more": [1, 3, 12, 16, 17, 31, 36, 37, 52, 56, 57, 59, 64, 65, 66, 70, 75, 79, 89, 103, 166], "exampl": [1, 10, 14, 16, 19, 25, 31, 41, 61, 62, 63, 73, 75, 76, 79, 91, 93, 99, 101, 102, 166, 174], "refer": [1, 13, 28, 48, 53, 75, 79, 85, 86, 103, 127, 129, 130, 156, 161, 166, 171], "imag": [1, 2, 3, 4, 5, 6, 7, 12, 13, 15, 17, 19, 20, 21, 22, 23, 24, 27, 30, 31, 34, 35, 36, 39, 40, 45, 48, 49, 50, 51, 52, 53, 55, 60, 61, 62, 65, 72, 75, 77, 82, 87, 89, 91, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 121, 123, 125, 126, 127, 128, 129, 130, 132, 134, 135, 138, 139, 140, 141, 142, 143, 147, 149, 150, 151, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 170, 171, 174], "c_": 1, "in_file_b": 1, "second": [1, 10, 24, 28, 37, 40, 42, 44, 48, 52, 79, 80, 103, 104, 105, 106, 107, 112, 126, 127, 134, 142], "img_2": 1, "in_file_c": 1, "third": [1, 44, 98, 124, 127, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166], "img_3": 1, "single_idx": 1, "volum": [1, 4, 10, 27, 28, 30, 33, 37, 40, 44, 46, 47, 50, 67, 71, 78, 79, 80, 86, 89, 103, 126, 129, 136, 142, 146, 148, 155, 158, 159, 160, 161, 162, 163, 174], "index": [1, 2, 10, 26, 77, 80, 86, 91, 94, 95, 96, 97, 99, 102, 112, 120, 127, 128, 148, 149, 151, 155, 172], "The": [1, 3, 7, 10, 12, 13, 16, 17, 18, 23, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 58, 59, 68, 69, 74, 75, 76, 77, 78, 79, 80, 87, 89, 91, 92, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 110, 112, 113, 114, 115, 117, 120, 121, 123, 125, 126, 127, 128, 129, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "onli": [1, 6, 7, 17, 18, 19, 22, 27, 28, 31, 35, 37, 38, 39, 40, 41, 44, 48, 50, 52, 56, 57, 59, 64, 66, 70, 74, 77, 79, 81, 101, 102, 103, 104, 105, 106, 107, 117, 123, 155, 163, 166, 174], "start_idx": [1, 2], "start": [1, 2, 46, 50, 143, 156, 166, 174], "requir": [1, 15, 16, 30, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 75, 77, 82, 99, 104, 105, 106, 107, 123, 126, 127, 128, 147, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166], "stop_idx": [1, 2], "stop": [1, 2, 52, 75], "35": [1, 80, 114], "out": [1, 2, 4, 5, 6, 7, 9, 10, 11, 13, 14, 15, 18, 19, 31, 34, 43, 44, 46, 52, 55, 85, 86, 87, 89, 90, 91, 93, 100, 101, 102, 103, 140, 147, 148, 163, 170, 174], "c_img_1": 1, "current": [1, 18, 77, 79, 80, 99, 102, 104, 105, 106, 107, 142, 166], "initi": [1, 5, 16, 28, 40, 49, 52, 151, 152], "mai": [1, 12, 28, 75, 76, 79, 103, 163], "crash": [1, 102], "execut": [1, 37, 39], "produc": [1, 77, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 172], "ani": [1, 19, 20, 21, 38, 39, 45, 52, 75, 78, 95, 99, 103, 104, 105, 106, 107, 122, 155], "result": [1, 15, 27, 28, 42, 52, 58, 68, 69, 75, 77, 78, 79, 92, 99, 111, 112, 117, 118, 120, 121, 125, 127, 128, 145, 146, 149, 163, 166], "without": [1, 47, 52, 55, 77, 79, 94, 99, 124, 163, 174], "error": [1, 36, 102, 145, 146, 163], "messag": [1, 174], "If": [2, 10, 15, 16, 17, 20, 21, 25, 28, 31, 34, 35, 37, 38, 40, 41, 44, 46, 47, 48, 52, 58, 69, 75, 77, 78, 79, 80, 81, 82, 91, 92, 93, 99, 102, 103, 104, 105, 106, 107, 110, 111, 112, 117, 120, 126, 142, 145, 149, 161, 163, 166, 174], "none": [2, 16, 37, 51, 77, 78, 80, 103, 104, 105, 106, 107, 137, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 172, 173, 174], "automat": [2, 17, 44, 80, 95, 102, 103, 117, 126, 142, 163], "length": [2, 38, 52, 57, 101, 102, 103, 161], "3d": [2, 4, 9, 11, 15, 19, 26, 52, 68, 79, 121, 125, 138, 139, 140, 155, 157, 159, 162, 163, 166], "crop": [2, 42, 52], "cropped_": 2, "cannot": [2, 19, 85, 86], "lower": [2, 16, 65, 79, 95, 163, 166], "than": [2, 10, 12, 17, 42, 47, 50, 56, 75, 77, 78, 95, 103, 125, 161], "equal": [2, 14, 19, 31, 40, 47, 79, 91, 101, 107], "10": [2, 13, 26, 38, 60, 65, 77, 78, 80, 81, 95, 103, 114, 126, 127, 137, 161, 163], "cropped_func": 2, "calc": [2, 124, 133, 154, 155], "replac": [3, 18, 28, 47], "someth": 3, "pleas": [3, 20, 21, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 76, 79, 91, 102, 103, 143, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 172, 173], "ey": [3, 22, 73], "alwai": 3, "store": [3, 40, 75, 174], "boolean": [3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 19, 20, 21, 22, 24, 25, 27, 28, 31, 32, 35, 36, 37, 38, 39, 40, 42, 44, 47, 48, 49, 50, 51, 52, 61, 64, 65, 71, 74, 75, 77, 79, 81, 83, 84, 89, 90, 99, 100, 101, 102, 104, 105, 106, 107, 117, 136, 148, 161, 166, 174], "true": [3, 4, 5, 6, 7, 8, 14, 15, 16, 22, 27, 28, 32, 35, 36, 51, 61, 64, 65, 74, 77, 79, 81, 83, 84, 89, 99, 100, 101, 102, 104, 105, 106, 107, 117, 134, 135, 136, 141, 143, 146, 147, 148, 161, 163, 166, 174], "d": [3, 22, 108, 161, 166], "d_": 3, "d_func": 3, "all": [4, 17, 19, 27, 28, 33, 34, 36, 37, 38, 39, 40, 44, 52, 56, 61, 75, 79, 80, 81, 85, 86, 89, 93, 98, 100, 103, 104, 105, 106, 107, 110, 126, 141, 148, 150, 151, 155, 163, 166, 174], "sub": [4, 42, 62, 91, 93, 95, 97, 104, 105, 106, 107, 110, 155, 166], "each": [4, 5, 10, 13, 16, 26, 27, 28, 31, 38, 39, 49, 52, 58, 59, 61, 62, 73, 75, 77, 79, 83, 84, 89, 92, 93, 95, 97, 98, 101, 102, 103, 104, 105, 106, 107, 114, 117, 121, 126, 141, 147, 150, 154, 155, 160, 161, 163, 166, 174], "tr": [4, 5, 10, 80, 87], "separ": [4, 10, 27, 49, 75, 79, 87, 155], "mean_reg_func_valid": [4, 5, 86, 96, 137, 148], "combin": [4, 5, 6, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], "final": [4, 5, 6, 10, 15, 24, 28, 39, 49, 65, 92, 118, 121, 138, 139, 140, 141, 150, 163], "measur": [4, 5, 6, 17, 40, 77, 78, 85, 86, 103, 107, 123, 125, 129, 163, 168, 171], "along": [4, 5, 6, 28, 43, 44, 160, 163], "axi": [4, 5, 6, 13, 28, 37, 43, 44, 52, 160, 163, 174], "detrend": [4, 6, 7, 10, 100], "specifi": [4, 6, 7, 10, 12, 14, 15, 19, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 43, 44, 45, 47, 48, 49, 50, 51, 52, 58, 75, 80, 81, 88, 89, 90, 95, 101, 102, 103, 104, 105, 106, 107, 120, 160, 166], "order": [4, 10, 12, 14, 15, 16, 23, 25, 31, 38, 48, 52, 77, 80, 102, 103, 114, 126, 127, 140, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166], "prepend": [4, 6, 7, 29, 58, 75, 81, 88, 89, 90], "filenam": [4, 6, 7, 29, 75, 79, 81, 88, 89, 90, 103, 117, 166], "fwhm_": 4, "arg": [4, 174], "add": [4, 10, 25, 39, 84, 101, 110, 152, 174], "showmeclassicfwhm": 4, "old": [4, 99, 127, 163], "classic": [4, 16, 103, 156, 165], "method": [4, 10, 12, 25, 28, 45, 47, 52, 55, 64, 68, 70, 75, 78, 79, 102, 104, 105, 106, 107, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 174], "mask_fil": [4, 5, 6, 7, 22, 66], "mask": [4, 6, 7, 12, 15, 16, 17, 18, 20, 21, 22, 23, 28, 31, 32, 34, 35, 37, 38, 39, 40, 42, 48, 49, 50, 52, 58, 61, 62, 73, 75, 79, 81, 82, 85, 86, 89, 94, 95, 96, 99, 100, 102, 103, 104, 105, 106, 107, 121, 124, 125, 126, 132, 133, 134, 135, 137, 141, 142, 143, 145, 146, 148, 150, 154, 155, 160, 161, 163, 170, 172], "automask_mean_reg_func_valid": [4, 5, 6, 7, 88, 89, 137, 148], "fwhm_mean_reg_func_valid": [4, 86], "no_demean": 5, "fals": [5, 6, 7, 10, 12, 13, 14, 15, 16, 19, 20, 21, 22, 24, 25, 28, 31, 32, 36, 37, 38, 39, 40, 42, 44, 47, 48, 49, 50, 51, 52, 61, 65, 71, 75, 77, 79, 81, 83, 84, 90, 99, 100, 101, 102, 135, 136, 148, 158, 161, 166, 174], "need": [5, 12, 23, 28, 57, 75, 77, 78, 79, 93, 102, 103, 118, 127, 163, 166], "demean": [5, 163], "nfirst": 5, "number": [5, 12, 13, 15, 16, 19, 27, 28, 31, 38, 40, 44, 47, 48, 49, 50, 52, 67, 71, 77, 79, 80, 85, 86, 87, 94, 95, 96, 101, 102, 103, 126, 163, 166, 174], "ignor": [5, 10, 28, 103], "3": [5, 6, 7, 13, 14, 15, 16, 22, 25, 26, 27, 28, 31, 40, 43, 44, 45, 46, 47, 48, 49, 50, 52, 74, 75, 77, 78, 79, 80, 81, 83, 84, 103, 104, 105, 106, 107, 114, 122, 126, 127, 128, 133, 134, 135, 137, 140, 144, 148, 161, 163, 166, 174], "global": [5, 16, 86, 103, 104, 105, 106, 107, 141, 152], "06123": 5, "reg_func_valid": [6, 7, 86, 89, 148], "autoclip": [6, 7], "off": [6, 7, 52, 79], "mutual": [6, 7, 10, 16, 22, 28, 29, 75, 78, 101, 110], "exclus": [6, 7, 10, 16, 22, 24, 28, 29, 30, 37, 38, 52, 78, 101, 123, 125, 126, 142], "automask": [6, 7, 124, 147, 154, 155], "interv": [6, 7], "write": [6, 7, 16, 24, 38, 75, 76, 77, 78, 79, 102, 139, 140], "median": [6, 7, 46, 59, 65, 89, 98, 161, 163], "mad": [6, 7, 163], "count": [6, 7, 44, 148], "timepoint": [6, 7, 89, 100], "legendr": [6, 50, 52], "polynomi": [6, 7, 10, 12, 48, 50, 52, 103, 163], "outliers_": 6, "qthr": 6, "001": [6, 61, 75, 77, 78, 116], "indic": [6, 37, 42, 45, 46, 74, 79, 81, 89, 91, 95, 97, 99, 102, 112, 125, 127, 129, 163], "q": 6, "alpha": 6, "correl": [6, 7, 16, 28, 75, 86, 102, 103, 104, 105, 106, 107, 155, 163], "across": [6, 7, 20, 44, 46, 47, 73, 89, 163, 174], "polort": [6, 7], "timeseri": [6, 7], "outliers_reg_func_valid": [6, 7, 86, 87, 148], "1d": [7, 10, 12], "seri": [7, 10, 14, 37, 47, 52, 75, 87, 89, 95, 100, 103, 160, 161, 162], "outlier": [7, 65, 86, 87, 96, 148, 155, 161, 163], "qi": [7, 163], "qi_": 7, "quadrant": 7, "similar": [7, 16, 103, 123, 137], "spearman": 7, "minu": [7, 103], "coeffici": [7, 31, 39, 40, 47, 50, 51, 75, 95, 101, 102, 125, 149], "rank": 7, "e": [7, 15, 17, 22, 31, 37, 38, 44, 45, 47, 52, 77, 78, 89, 95, 99, 102, 104, 105, 106, 107, 108, 112, 117, 120, 125, 127, 128, 143, 145, 146, 163, 166], "name": [8, 17, 25, 27, 34, 43, 44, 46, 73, 74, 75, 81, 83, 92, 95, 97, 99, 101, 102, 103, 104, 105, 106, 107, 113, 114, 115, 116, 117, 125, 127, 128, 137, 138, 139, 140, 149, 152, 163, 165, 166, 174], "refit": 8, "t1w": [9, 13, 14, 15, 16, 19, 20, 21, 22, 23, 25, 27, 28, 30, 42, 53, 54, 55, 56, 59, 60, 63, 64, 65, 66, 70, 73, 82, 85, 94, 116, 122, 126, 130, 131, 132, 133, 134, 135, 140, 147, 161, 171], "ss": 9, "ss_": 9, "ss_t1w": [9, 131], "shift": [10, 12, 45, 163], "from": [10, 16, 17, 20, 21, 27, 28, 31, 40, 41, 44, 45, 46, 47, 49, 50, 52, 55, 56, 57, 58, 59, 60, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 77, 78, 80, 82, 85, 86, 89, 90, 91, 92, 95, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 116, 117, 118, 123, 125, 127, 128, 132, 134, 135, 136, 137, 140, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 170, 171, 174], "so": [10, 26, 30, 52, 75, 77, 78, 79, 80, 99, 103, 141, 163], "align": [10, 12, 13, 16, 28, 37, 77, 137, 146, 162], "tempor": [10, 91, 127, 162], "origin": [10, 12, 15, 16, 28, 47, 65, 75, 77, 79, 81, 117, 151, 158, 163, 166, 174], "you": [10, 14, 16, 17, 20, 21, 25, 26, 75, 79, 82, 91, 102, 104, 105, 106, 107, 110, 145, 163], "either": [10, 25, 27, 28, 47, 75, 80, 93, 102, 127, 140], "slice_tim": 10, "tpattern": 10, "neither": 10, "two": [10, 12, 24, 27, 28, 37, 40, 77, 99, 111, 112, 114, 117, 149, 151, 163, 165, 166], "defin": [10, 16, 38, 39, 47, 48, 52, 56, 57, 59, 64, 66, 70, 74, 78, 83, 84, 92, 101, 102, 103, 104, 105, 106, 107, 111, 117, 143, 147, 149, 150, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166], "process": [10, 15, 30, 31, 35, 36, 39, 52, 74, 77, 80, 95, 118, 121, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 145, 146, 147, 148, 151, 152, 153, 154, 162, 165, 166, 168, 169, 170, 171, 172, 173], "return": [10, 120, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 174], "interpol": [10, 12, 14, 16, 28, 35, 45, 47, 75, 79, 104, 105, 106, 107, 130, 132, 135, 137, 147], "fourier": [10, 12, 102, 103, 146], "linear": [10, 12, 14, 16, 37, 47, 51, 68, 95, 97, 103, 123, 132, 137, 142, 159], "cubic": [10, 12, 47], "quintic": [10, 12], "heptic": [10, 12], "differ": [10, 12, 27, 28, 77, 78, 79, 80, 103, 126, 141, 143, 160, 162, 163, 166], "most": [10, 12, 22, 50, 79], "accur": [10, 12, 79], "slowest": [10, 12], "1st": [10, 12, 95, 103], "least": [10, 12, 28, 31, 38, 40, 52, 78, 104, 105, 107, 141], "3rd": [10, 12, 75, 79, 103], "lagrang": [10, 12], "5th": [10, 12, 103], "7th": [10, 12, 75, 79], "st_corr": 10, "st_corr_": 10, "rlt": 10, "befor": [10, 16, 35, 38, 45, 47, 76, 78, 79, 92, 95, 142], "remov": [10, 39, 57, 65, 89, 92, 103, 110, 142, 155, 160, 163], "trend": 10, "rltplu": 10, "later": [10, 97, 99, 125, 127, 128, 163, 172], "put": [10, 16, 40, 174], "back": [10, 75, 79, 162], "slice_encoding_dir": 10, "k": [10, 91, 102, 149, 163], "direct": [10, 25, 28, 31, 37, 39, 47, 50, 52, 75, 79, 81, 126, 142, 163], "which": [10, 16, 17, 18, 19, 22, 27, 28, 31, 34, 36, 37, 38, 43, 44, 45, 46, 48, 49, 50, 65, 68, 69, 71, 74, 75, 77, 78, 79, 80, 81, 84, 85, 86, 90, 91, 92, 93, 95, 97, 98, 101, 102, 103, 104, 105, 106, 107, 113, 114, 115, 125, 126, 129, 137, 138, 139, 140, 141, 142, 147, 150, 161, 163, 174], "neg": [10, 15, 31, 39, 91], "revers": [10, 14, 37, 47, 170], "entri": [10, 48, 58, 69, 92, 99, 111, 161, 163], "correspond": [10, 31, 44, 50, 56, 75, 83, 84, 85, 86, 87, 92, 99, 111, 112, 118, 119, 120, 126, 138, 149, 154, 163, 165, 166, 174], "zero": [10, 15, 17, 19, 39, 52, 75, 79, 89, 104, 105, 106, 107, 163], "point": [10, 13, 26, 28, 47, 52, 75, 77, 78, 79, 102, 145, 146, 161, 174], "ii": 10, "unchang": [10, 44], "thei": [10, 15, 38, 52, 75, 78, 79, 103, 127, 174], "2": [10, 12, 13, 14, 15, 16, 18, 27, 28, 29, 37, 38, 40, 44, 45, 46, 47, 49, 50, 52, 73, 75, 77, 78, 79, 80, 81, 83, 84, 86, 87, 102, 103, 104, 105, 106, 107, 109, 112, 114, 115, 117, 123, 125, 126, 135, 137, 142, 148, 158, 163, 166], "list": [10, 14, 15, 16, 19, 22, 27, 28, 31, 34, 36, 38, 43, 44, 45, 47, 48, 49, 56, 58, 59, 61, 62, 68, 69, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 91, 92, 93, 97, 99, 101, 102, 103, 104, 105, 106, 107, 110, 114, 115, 117, 118, 125, 132, 137, 138, 139, 140, 147, 149, 150, 163, 165, 166, 174], "offset": [10, 12], "acquisit": [10, 20, 37, 44, 80, 103, 140, 162, 163], "onset": [10, 103, 114, 166], "alt": 10, "z": [10, 22, 25, 26, 28, 47, 50, 52, 75, 78, 79, 81, 100, 126, 144, 161, 163, 166], "altplu": 10, "z2": 10, "altminu": 10, "seq": 10, "seqplu": 10, "seqminu": 10, "pattern": [10, 75, 79, 166], "rather": [10, 42, 47], "header": [10, 15, 37, 44, 47, 75, 79, 161, 166], "One": [10, 75, 78, 79, 103, 114, 150, 151], "manual": [10, 18, 42, 150], "": [10, 16, 22, 25, 27, 28, 29, 38, 51, 59, 75, 79, 81, 82, 90, 97, 103, 125, 126, 127, 128, 129, 142, 143, 150, 158, 160, 162, 166], "m": [10, 22, 80, 91, 95, 99, 126, 143, 163, 166], "millisecond": 10, "tslice": 10, "given": [10, 16, 25, 39, 52, 65, 103, 104, 105, 106, 107, 112, 115, 129, 147, 152, 155, 161], "tzero": 10, "minimum": [10, 19, 26, 28, 38, 52, 95, 121], "maximum": [10, 19, 26, 29, 31, 38, 48, 49, 52, 74, 77, 78, 81, 89, 95, 129, 163, 165], "note": [10, 15, 26, 28, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 77, 91, 101, 102, 104, 105, 106, 107, 118, 120, 126, 143, 144, 166, 174], "when": [10, 12, 16, 22, 47, 52, 68, 75, 77, 78, 79, 92, 129, 143, 145, 146, 166], "averag": [10, 11, 18, 75, 89, 93, 121, 123, 129, 142, 143, 147, 155], "st_corr_func": 10, "time": [11, 12, 14, 22, 26, 37, 52, 75, 87, 95, 100, 103, 104, 105, 106, 107, 121, 126, 129, 139, 140, 142, 155, 161, 162, 166, 174], "mean_": 11, "mean_func": [11, 96], "tstat": 11, "copyorigin": 12, "copi": [12, 15, 79], "coord": [12, 44], "reg": [12, 77, 78], "reg_": 12, "save_oned_matrix": 12, "save": [12, 15, 19, 28, 61, 77, 85, 86, 121, 152, 163, 174], "transform": [12, 16, 25, 28, 75, 77, 78, 79, 82, 130, 132, 135, 137, 156, 158, 159, 160], "matrix": [12, 28, 47, 82, 103, 104, 105, 106, 107, 150, 160, 165, 166], "oned": 12, "save_md1d_fil": 12, "max": [12, 15, 19, 28, 46, 52, 163], "displac": [12, 148, 163], "outputfil": 12, "md1d": 12, "timeshift": 12, "slice": [12, 19, 22, 28, 37, 44, 75, 87, 94, 95, 96, 100, 103, 139, 140, 155, 162, 163, 166, 174], "twopass": [12, 146], "pass": [12, 49, 103, 129, 174], "registr": [12, 22, 25, 37, 55, 75, 77, 78, 124, 126, 135, 136, 143, 146, 154, 156, 159, 170], "smooth": [12, 15, 16, 35, 75, 77, 78, 79, 124, 138, 139, 140, 144, 154, 159, 162], "get": [12, 16, 22, 23, 25, 31, 35, 38, 40, 49, 52, 114, 116, 127, 130, 135, 137, 147, 161, 162, 166, 170, 171, 174], "crude": [12, 49], "fine": [12, 28, 75], "high": [12, 52, 103, 174], "resolut": [12, 20, 73, 102, 130, 132, 135, 137, 144, 149, 150, 161, 166, 170], "move": [12, 13, 16, 47, 75, 135, 156], "few": 12, "zpad": 12, "4": [12, 14, 15, 16, 19, 28, 52, 75, 77, 79, 80, 81, 83, 84, 103, 104, 105, 106, 107, 112, 126, 134, 135, 137, 139, 140, 143, 163, 174], "zeropad": 12, "around": [12, 13, 28, 75, 79, 87, 125, 163], "edg": [12, 19, 25, 87], "n": [12, 22, 79, 103, 126, 143, 163], "dure": [12, 15, 31, 36, 37, 47, 52, 95, 97, 102, 103, 115, 117, 121, 123, 125, 127, 138, 139, 140, 166], "rotat": [12, 13, 28, 55, 79, 85, 95, 97, 138, 139, 140, 161, 163, 170, 174], "in_weight_volum": 12, "tupl": [12, 14, 15, 16, 35, 38, 44, 50, 52, 77, 137, 174], "weight": [12, 15, 16, 21, 25, 28, 33, 36, 38, 39, 40, 42, 44, 52, 79, 101, 143, 155, 160], "md1d_file": 12, "aff12": 12, "reg_func_md": 12, "oned_fil": [12, 136], "movement": [12, 75, 90, 136, 142, 148], "txt": [12, 19, 28, 31, 38, 39, 44, 47, 49, 53, 79, 82, 90, 92, 95, 97, 99, 103, 112, 123, 125, 136, 138, 139, 140, 148, 150, 163], "reg_func_on": 12, "oned_matrix": 12, "reg_func_oned_matrix": 12, "reg_func": 12, "moving_imag": [13, 16, 135], "map": [13, 15, 20, 22, 27, 28, 32, 35, 39, 47, 51, 63, 73, 76, 77, 85, 95, 129, 138, 140, 142, 150, 162, 163, 170, 174], "fix": [13, 16, 24, 52, 76, 156], "fixed_imag": [13, 16], "t1w_templat": 13, "dimens": [13, 14, 15, 16, 19, 28, 42, 44, 47, 77, 78, 103, 121, 133, 134, 137, 144, 163, 166, 174], "local_search": 13, "determin": [13, 28, 40, 47, 52, 65, 79, 95, 115, 121, 127], "local": [13, 45, 129, 157], "optim": [13, 20, 156, 160], "run": [13, 22, 25, 37, 45, 82, 98, 115, 118, 127, 128, 145, 146, 147, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 174, 175], "search": [13, 28, 75, 79, 149, 151], "iter": [13, 15, 16, 22, 39, 40, 48, 75, 127, 128, 163, 166], "affinetransform": 13, "affinetransform_": 13, "principal_ax": 13, "whether": [13, 28, 47, 65, 79, 104, 105, 106, 107, 127, 163, 174], "princip": 13, "radian_fract": 13, "arc": 13, "ax": [13, 44, 45, 46, 47, 57, 163, 174], "search_factor": 13, "15": [13, 16, 47, 48, 49, 52, 80, 114, 127, 135], "increment": 13, "degre": [13, 17, 28, 31, 49, 75, 78, 79, 163], "mat": [13, 14, 16, 24, 25, 28, 53, 77, 95, 101, 102, 103, 104, 105, 106, 107, 123, 150], "affinetransform_t1w": 13, "input_imag": 14, "reference_imag": [14, 68, 69, 161], "wish": [14, 79], "warp": [14, 16, 47, 77, 78, 162], "ref_t1w": 14, "multipl": [14, 16, 50, 103, 145, 146, 150, 160, 165, 174], "last": [14, 19, 152], "post_n4c_t1w_clipped_masked_inversecomposit": 14, "h5": [14, 16, 130, 132, 135, 137], "default_valu": [14, 174], "forc": [14, 28, 36, 149], "treat": [14, 166], "dimension": [14, 102, 143], "instead": [14, 16, 19, 40], "doubl": [14, 16, 28, 81], "input_image_typ": 14, "type": [14, 20, 27, 28, 39, 49, 52, 77, 80, 81, 83, 84, 99, 103, 104, 105, 106, 107, 114, 122, 126, 140, 141, 143, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 172, 173], "scalar": [14, 38], "vector": [14, 50, 75, 104, 105, 106, 107, 126, 165, 166], "tensor": [14, 160], "nearestneighbor": [14, 16, 137], "cosinewindowedsinc": [14, 16, 137], "welchwindowedsinc": [14, 16, 137], "hammingwindowedsinc": [14, 16, 137], "lanczoswindowedsinc": [14, 16, 135, 137], "multilabel": [14, 16, 130, 137], "gaussian": [14, 15, 16, 17, 18, 75, 77, 78, 79, 137, 159, 162, 166], "bspline": [14, 15, 16, 137], "model": [14, 15, 16, 18, 20, 21, 28, 39, 52, 95, 97, 101, 104, 105, 106, 107, 123, 125, 150, 153, 158, 164], "t": [14, 22, 26, 77, 78, 95, 97, 101, 102, 125, 126, 143, 149, 150, 163, 165, 166], "t_": 14, "print_out_composite_warp_fil": 14, "composit": [14, 16, 130, 132, 135, 137], "interpolation_paramet": [14, 16], "form": [14, 15, 16, 35, 37, 38, 44, 50, 52, 77, 78, 137, 174], "sigma": [14, 16, 29, 163], "alphaparamet": [14, 16], "invert_transform_flag": 14, "invert": [14, 19, 24, 47, 65], "flag": 14, "ants_warp": 14, "tran": [14, 16, 163], "follinw": 14, "trnasform": 14, "t_t1w": 14, "variant": 15, "popular": 15, "n3": 15, "nonparameter": 15, "nonuniform": 15, "normal": [15, 28, 52, 82, 89, 90, 125, 126, 138, 140, 141, 163, 170], "retrospect": 15, "base": [15, 19, 25, 28, 31, 37, 38, 39, 40, 45, 52, 74, 77, 82, 102, 103, 121, 126, 127, 129, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 172, 173, 174], "assumpt": 15, "corrupt": [15, 123, 163], "low": [15, 28, 163, 166, 174], "frequenc": 15, "convolut": [15, 82, 149, 158, 161, 166], "intens": [15, 16, 22, 25, 27, 28, 34, 40, 44, 47, 71, 77, 78, 87, 89, 95, 103, 121, 126, 141, 160, 161, 163], "histogram": [15, 16, 28, 75, 161], "basic": [15, 91, 102, 103, 126, 152, 161, 166], "protocol": [15, 37, 82, 83, 84, 163, 166], "deconvolv": [15, 49], "remap": 15, "spatial": [15, 44, 46, 73, 75, 79, 95, 121, 138, 140, 142, 143, 145, 160, 162, 170], "spline": [15, 28, 75, 78, 79], "2d": [15, 19, 28], "4d": [15, 22, 26, 34, 47, 52, 68, 77, 79, 121, 125, 138, 139, 140, 161, 174], "thera": 15, "close": [15, 18, 50, 87, 89, 163], "prior": 15, "copy_head": 15, "optionn": [15, 29, 89, 90], "n4c": [15, 110], "n4c_": 15, "rescale_intens": [15, 134], "rescal": [15, 28, 44], "min": [15, 19, 28, 46, 52, 146], "rang": [15, 16, 19, 20, 27, 28, 95, 98, 161, 163, 174], "theorigin": 15, "within": [15, 17, 31, 34, 35, 39, 40, 50, 52, 75, 89, 103, 104, 105, 106, 107, 125, 129, 150, 163], "user": [15, 80, 103, 104, 105, 106, 107, 149], "save_bia": 15, "estim": [15, 16, 17, 22, 32, 35, 37, 39, 50, 75, 77, 78, 79, 95, 97, 103, 104, 105, 106, 107, 126, 131, 138, 139, 140, 142, 149, 160, 161, 163, 165], "bspline_fitting_dist": 15, "fit": [15, 17, 40, 48, 65, 79, 102, 163], "distanc": [15, 20, 21, 75, 77, 78, 79, 161], "300": [15, 31, 47], "bspline_ord": 15, "convergence_threshold": [15, 16, 135, 137], "converg": [15, 16], "n_iter": [15, 134], "1e": [15, 16, 135, 137], "6": [15, 28, 29, 47, 52, 77, 80, 81, 83, 84, 100, 103, 104, 105, 106, 107, 114, 127, 143, 148, 158, 161, 163, 166], "histogram_sharpen": 15, "three": [15, 27, 31, 44, 46, 47, 51, 81, 104, 105, 106, 107, 127, 140, 141], "sharpen": 15, "fwhm": [15, 29, 75, 77, 78, 79, 81, 85, 86, 155], "wienernos": 15, "numberofhistogrambin": 15, "These": [15, 17, 75, 79, 102, 145, 146], "describ": [15, 55, 64, 70, 73, 75, 77, 78, 163, 174], "deconvolut": [15, 31, 52, 126, 141, 160], "been": [15, 37, 42, 52, 75, 76, 79, 91, 93, 103, 118, 121, 127, 145, 146, 163], "shown": 15, "work": [15, 58, 69, 92, 99, 126, 143, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166], "fairli": 15, "well": 15, "12": [15, 26, 28, 40, 75, 80, 103, 163], "02": [15, 75], "200": [15, 52], "mask_imag": [15, 102, 103], "region": [15, 16, 38, 52, 55, 61, 62, 79, 87, 92, 123, 125, 159, 161, 163, 166], "t1w_mask": [15, 66], "50": [15, 78, 80, 90, 134, 148], "30": [15, 16, 50, 78, 80, 137, 139], "20": [15, 16, 45, 77, 80, 91, 103, 114, 135, 137], "shrink_factor": [15, 16, 135, 137], "shrink": [15, 16], "factor": [15, 16, 48, 103, 104, 105, 106, 107, 163, 166], "weight_imag": [15, 25], "rel": [15, 78, 104, 105, 106, 107, 163], "g": [15, 22, 47, 77, 78, 89, 95, 99, 117, 125, 145, 146, 166], "probabl": [15, 75, 76, 77, 78, 79, 138, 140, 170], "white": [15, 25, 27, 28, 31, 52, 56, 57, 59, 66, 70, 77, 87, 126, 132, 141, 143, 144, 160, 161, 162, 163, 170], "matter": [15, 25, 27, 28, 31, 42, 52, 74, 77, 87, 91, 126, 132, 141, 143, 150, 160, 161, 162, 163, 170, 172], "t1w_pve_0": [15, 27], "bias_imag": [15, 54, 133, 134, 137], "t1w_bia": [15, 54], "negative_valu": 15, "present": [15, 27, 36, 99, 111, 127, 163], "otherwis": [15, 80, 117, 123, 161], "n4c_t1w": [15, 133], "regist": [16, 23, 28, 78, 85, 88, 126, 135, 136, 138, 140, 143, 155, 156, 159, 170], "predefin": 16, "sequenc": [16, 125, 127, 129, 138, 139, 140, 163], "cost": [16, 28, 39], "oper": [16, 46, 117, 152, 160, 166], "metric": [16, 87, 121, 135, 137, 160, 163, 171], "both": [16, 23, 28, 33, 65, 111], "non": [16, 17, 22, 27, 31, 36, 47, 71, 77, 78, 121, 146, 157, 161, 163], "usual": [16, 74, 129, 145, 146, 154], "done": [16, 19, 22, 40, 79, 104, 105, 106, 107, 126, 136, 141, 142, 143, 158, 163], "stage": [16, 102, 138, 139, 140, 153, 170], "affin": [16, 77, 78, 135, 137, 156, 159], "rigid": [16, 25, 28, 135, 137], "ultim": 16, "syn": [16, 137], "see": [16, 25, 28, 52, 76, 79, 102, 103, 128, 137, 148, 150, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 172, 173], "transform_paramet": [16, 135, 137], "initil": [16, 135, 137], "initial_moving_transform": 16, "alreadi": [16, 28, 42, 75, 79, 101, 102], "warpfield": [16, 25], "correct": [16, 25, 36, 37, 45, 80, 86, 89, 103, 115, 126, 134, 137, 138, 140, 141, 142, 148, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 170], "geometr": 16, "distort": [16, 25, 37, 126, 142, 160], "epi": [16, 28, 37, 126, 129, 142, 159, 163, 170], "want": [16, 17, 84, 145], "structur": [16, 28, 61, 62, 79, 82, 83, 84, 147, 159, 163, 170, 171], "could": [16, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 75, 77, 93, 99, 126, 138, 140], "intial_moving_transform": 16, "here": [16, 52, 91, 110, 151, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166], "found": [16, 113, 126, 142, 151, 152, 156, 158, 161, 163], "fmriprep": [16, 137, 156], "mriqc": [16, 55, 57, 59, 60, 63, 64, 70, 88, 89, 90, 100, 130, 131, 132, 134, 135, 136, 137, 148, 156, 158, 161, 163, 170, 171, 174], "niworkflow": [16, 56, 65, 66, 71, 87, 88, 156, 161, 163], "should": [16, 17, 24, 25, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 61, 62, 75, 77, 78, 79, 85, 86, 91, 101, 102, 104, 105, 106, 107, 110, 114, 116, 126, 141, 142, 145, 146, 163], "templat": [16, 47, 55, 68, 69, 78, 85, 88, 130, 137, 148, 161, 162, 170], "collapse_output_transform": 16, "collaps": 16, "initialize_transforms_per_stag": 16, "previou": [16, 40, 76], "genericlabel": [16, 137], "item": [16, 19, 22, 27, 29, 31, 34, 36, 38, 43, 44, 45, 48, 49, 56, 68, 69, 74, 75, 77, 78, 79, 80, 81, 85, 101, 102, 103, 104, 105, 106, 107, 113, 115, 125, 127, 137, 138, 139, 140, 150], "cc": [16, 137], "meansquar": [16, 137], "demon": [16, 137], "gc": [16, 137], "mi": [16, 75, 137], "matt": [16, 135, 137], "avail": [16, 25, 37, 103, 115, 117, 129, 145, 146, 167], "cross": [16, 52, 75, 127, 141], "squar": [16, 28, 40, 44, 47, 101, 103], "inform": [16, 27, 28, 75, 85, 86, 89, 95, 99, 102, 103, 114, 126, 127, 149, 152, 160, 166, 174], "metric_weight": [16, 135, 137], "sum": [16, 46, 48, 77, 78, 163], "per": [16, 27, 39, 48, 52, 77, 80, 95, 97, 102, 103, 104, 105, 106, 107], "output_inverse_warped_imag": 16, "inverse_warped_imag": 16, "w": [16, 78, 163], "w_": 16, "radius_bins_item_trait": 16, "radiu": [16, 22, 52, 90, 163], "bin": [16, 28, 103], "signa_unit": 16, "vox": [16, 39, 44, 78], "mm": [16, 20, 21, 22, 29, 38, 44, 52, 75, 77, 78, 79, 81, 90, 132, 163, 170], "len": 16, "unit": [16, 28, 80, 89, 103, 174], "smoothing_sigma": [16, 135, 137], "compositeaffin": [16, 137], "translat": [16, 79, 95, 97, 137, 138, 139, 140, 174], "gaussiandisplacementfield": [16, 137], "timevaryingvelocityfield": [16, 137], "timevaryingbsplinevelocityfield": [16, 137], "bsplinesyn": [16, 137], "exponenti": [16, 137], "bsplineexponenti": [16, 137], "01": [16, 75], "08": [16, 135, 137], "use_estimate_learning_rate_onc": 16, "learn": [16, 20], "rate": [16, 74, 125, 129], "use_histogram_match": [16, 135], "match": [16, 19, 34, 39, 47, 50, 75, 103, 110, 126, 158, 160, 166], "winsorize_lower_quantil": 16, "005": 16, "quantil": 16, "winsorize_upper_quantil": 16, "995": 16, "upper": [16, 65], "write_composite_transform": 16, "number_of_iter": [16, 40, 135, 137], "07": [16, 135], "8": [16, 31, 40, 59, 77, 80, 81, 102, 103, 104, 105, 106, 107, 114, 125, 137], "convergence_window_s": [16, 135, 137], "window": [16, 28, 35, 45, 103], "size": [16, 18, 26, 28, 35, 42, 44, 52, 58, 75, 78, 79, 92, 95, 103, 104, 105, 106, 107, 140, 161, 163, 174], "fixed_image_mask": 16, "null": [16, 52], "limit": [16, 26], "sampl": [16, 28, 47, 52, 75, 77, 78, 79, 145, 146, 165], "omit": [16, 31, 38, 104, 105, 106, 107], "template_desc": 16, "brain_mask": [16, 20, 21, 50, 88, 94, 96, 135, 141, 142], "initial_moving_transform_com": 16, "center": [16, 18, 22, 104, 105, 106, 107, 163, 165], "invert_initial_moving_transform": 16, "indicatewheth": 16, "invers": [16, 38, 47, 76, 77, 130, 132, 135, 137, 143], "moving_image_mask": 16, "t1w_desc": [16, 19, 20, 21, 135], "10000": [16, 137], "1000": [16, 31, 52, 89, 137, 148, 163], "100": [16, 19, 52, 78, 137], "500": [16, 38, 137], "250": [16, 137], "radius_or_number_of_bin": [16, 135, 137], "other": [16, 18, 52, 56, 75, 77, 78, 80, 103, 104, 105, 106, 107, 110, 118, 124, 125, 126, 151, 153, 154, 155, 163, 166, 170], "56": [16, 95, 114, 135, 137], "random_se": 16, "seed": [16, 50, 52, 126, 143, 160], "random": [16, 52, 59, 127, 135, 137, 145, 146], "gener": [16, 22, 23, 31, 37, 51, 52, 75, 78, 79, 102, 103, 125, 127, 128, 129, 143, 152, 153, 160, 161, 163, 165, 166, 172, 174], "sampling_percentag": [16, 135, 137], "percentag": [16, 115], "strategi": [16, 20], "sampling_strategi": [16, 135, 137], "regular": [16, 137], "composite_transform": [16, 135, 137], "t1w_composit": 16, "inverse_composite_transform": [16, 130, 132, 135, 137], "t1w_inversecomposit": 16, "w_inverse_t1w": 16, "warped_imag": [16, 135], "w_t1w": 16, "dki": [17, 40, 157], "expans": [17, 103], "dti": [17, 40], "quantif": 17, "water": 17, "biolog": [17, 126, 143], "tissu": [17, 31, 33, 39, 52, 61, 62, 63, 77, 78, 82, 83, 84, 85, 121, 126, 129, 141, 147, 155, 159, 160, 163, 170], "us": [17, 19, 20, 22, 25, 29, 30, 31, 32, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 55, 58, 75, 76, 77, 78, 79, 80, 83, 84, 87, 89, 91, 92, 94, 96, 99, 101, 103, 104, 105, 106, 107, 110, 114, 115, 117, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 137, 138, 140, 141, 143, 144, 148, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 172, 173, 174], "propos": [17, 45, 170], "dipi": [17, 18, 124, 153, 154, 170], "sinc": [17, 28, 44, 47, 85, 86], "standard": [17, 18, 23, 29, 47, 73, 77, 78, 96, 104, 105, 106, 107, 123, 125, 161, 163, 172], "statist": [17, 37, 39, 95, 97, 125, 127, 128, 149, 150, 153, 160, 161, 164, 165, 173], "anisotropi": [17, 51], "fa": [17, 49, 51, 52], "md": 17, "axial": [17, 45, 51, 100], "ad": [17, 44, 51, 76, 91, 101, 102, 174], "radial": [17, 51], "rd": [17, 51], "In": [17, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 79, 83, 84, 102, 103, 126, 127, 128, 141, 142, 151, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166], "addit": [17, 22, 37, 39, 42, 76, 79, 103, 104, 105, 106, 107], "mk": 17, "ak": 17, "rk": 17, "mkt": 17, "kfa": 17, "depend": [17, 28, 83, 84, 107, 125], "in_dwi": [17, 44, 126, 141, 142, 143], "multi": [17, 31, 49, 103, 126, 156, 160], "shell": [17, 31, 49, 126, 160], "acquir": [17, 37, 45, 103, 125, 129, 162], "dwi": [17, 31, 37, 40, 44, 45, 46, 47, 49, 52, 53, 126, 160, 169, 170], "dwi_bvec": 17, "bvec": [17, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 126, 142], "suppli": [17, 28, 44, 48, 123, 126, 142], "wil": [17, 44], "dwi_bval": 17, "bval": [17, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 126, 142], "in_mask": [17, 18, 31, 32, 34, 35, 40, 41, 42, 49, 86, 89, 130, 163], "brain": [17, 18, 19, 20, 21, 25, 30, 31, 39, 40, 41, 42, 49, 50, 61, 62, 73, 79, 86, 87, 88, 89, 93, 94, 95, 97, 104, 105, 106, 107, 121, 125, 127, 129, 135, 137, 141, 142, 148, 155, 159, 160, 163, 169, 170], "dwi_brainmask": [17, 31, 32, 33, 35, 38, 40, 48, 49], "out_fa": 17, "dwi_dki_fa": 17, "out_md": 17, "dwi_dki_md": 17, "out_rd": 17, "dwi_dki_rd": 17, "out_ad": 17, "dwi_dki_ad": 17, "out_mk": 17, "dwi_dki_mk": 17, "out_rk": 17, "dwi_dki_rk": 17, "out_ak": 17, "dwi_dki_ak": 17, "out_mkt": 17, "dwi_dki_mkt": 17, "out_kfa": 17, "dwi_dki_kfa": 17, "jensen": 17, "jh": 17, "2005": 17, "pixel": [18, 163], "specif": [18, 20, 52, 101, 102, 104, 105, 106, 107, 150, 158, 161, 165], "patch": 18, "contrast": [18, 20, 25, 65, 92, 99, 102, 103, 104, 105, 107, 150, 163, 165, 166], "interest": [18, 28, 38, 52, 92, 95, 97, 123, 125, 159, 163, 165, 166], "block_radiu": 18, "block": [18, 103, 127, 128, 158], "noise_model": 18, "rician": 18, "nois": [18, 35, 142, 160, 163, 174], "distribut": [18, 39, 47, 49, 52, 65, 102, 126, 160, 163, 170], "denoise_": 18, "patch_radiu": 18, "func_brain_mask": 18, "noise_mask": 18, "signal": [18, 20, 31, 40, 49, 59, 87, 91, 95, 103, 121, 125, 129, 141, 147, 161, 163], "signal_mask": 18, "deviat": [18, 29, 96, 125, 161, 163, 172], "snr": [18, 131, 153, 161, 163], "ratio": [18, 28, 39], "260": [18, 114], "denoise_func": 18, "articl": 18, "rmin": 19, "rmax": 19, "binval": 19, "binvalnot": 19, "By": [19, 22, 27, 40, 44, 49, 89, 151], "ab": 19, "take": [19, 26, 27, 52, 76, 112, 129, 149, 166], "absolut": [19, 104, 105, 106, 107, 161, 174], "unsign": [19, 81], "bin_col_nul": 19, "its": [19, 31, 42, 79, 80, 103, 113, 121, 129, 149, 151, 163], "column": [19, 94, 95, 96, 103, 114, 150, 166, 174], "get_count_fil": 19, "hit": 19, "ascii": [19, 47], "ntotvox": 19, "pct": 19, "four": 19, "nhit": 19, "total": [19, 37, 45, 47, 102, 126, 142, 174], "nvoxtot": 19, "percent": 19, "out_suffix": 19, "_thresh": 19, "mgz": [19, 20, 21], "zero_edg": 19, "plane": [19, 45, 94, 95, 96, 103, 174], "sure": [19, 75, 79, 80], "zero_slice_edg": 19, "erode2d": 19, "frame_no": 19, "frame": [19, 77, 100, 148], "extract": [19, 20, 21, 25, 91, 93, 123, 126, 142, 143, 147, 155, 159, 160, 161, 170, 172], "label": [19, 73, 82, 132, 147, 161, 163, 174], "globalmean": 19, "count_fil": 19, "pathlik": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 68, 69, 77, 78, 79, 80, 82, 91, 93, 94, 101, 102, 103, 104, 105, 106, 107, 138, 139, 140, 141, 144, 150], "object": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 68, 69, 75, 77, 78, 79, 80, 82, 91, 93, 94, 101, 102, 103, 104, 105, 106, 107, 127, 138, 139, 140, 141, 144, 150, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 170, 174], "contain": [19, 25, 27, 31, 37, 38, 39, 52, 74, 75, 78, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 114, 125, 141, 144, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 172, 173, 174], "t1w_binarize_count_fil": 19, "freesurf": [19, 20, 124, 145, 153, 154, 170], "tool": [20, 28, 91, 124, 127, 128, 152, 153, 160, 163, 175], "mri_synthstrip": [20, 158], "landscap": 20, "modal": [20, 98, 127, 159, 162, 174], "subject": [20, 28, 75, 85, 88, 97, 98, 104, 105, 106, 107, 115, 127, 141, 162, 163, 170], "popul": 20, "leverag": 20, "deep": [20, 87], "synthes": 20, "arbitrari": 20, "train": [20, 158], "segment": [20, 22, 25, 28, 39, 41, 55, 76, 78, 84, 85, 87, 88, 94, 121, 131, 145, 146, 148, 159, 161, 162, 163, 174], "robust": [20, 22], "agnost": 20, "your": [20, 21, 104, 105, 106, 107, 110, 145], "analysi": [20, 21, 95, 97, 102, 104, 105, 106, 107, 121, 123, 125, 127, 128, 165, 169, 170], "cite": [20, 21, 82, 91, 163], "border_mm": [20, 21], "border": [20, 21, 45], "control": [20, 21, 26, 77, 78, 101, 102, 115, 125, 127, 161, 171], "boundari": [20, 21, 25, 28, 41, 126], "no_csf": 20, "exclud": [20, 21, 28, 36, 38, 52, 104, 105, 106, 107, 121], "csf": [20, 21, 25, 27, 31, 33, 49, 53, 73, 77, 83, 84, 132, 141, 143, 170], "out_mask": [20, 21, 133, 134], "binari": [20, 21, 22, 27, 31, 34, 39, 40, 50, 61, 62, 88, 127, 142, 161, 163], "adapt": [21, 55, 56, 57, 59, 60, 63, 64, 65, 66, 67, 70, 71, 72, 85, 86, 88, 89, 90, 91, 100, 130, 131, 132, 134, 135, 136, 137, 161, 163, 166, 170, 174], "mriqc_1": 21, "mriqc_2": 21, "freeesurfer_path": 21, "pt": 21, "altern": 21, "gpu": 21, "cli": [21, 158], "sever": [22, 73, 103, 126, 141, 147, 160, 166, 174], "surfac": [22, 77, 158, 159], "creat": [22, 23, 26, 31, 58, 68, 69, 78, 79, 92, 99, 101, 102, 103, 121, 123, 126, 129, 150, 155, 161, 163, 165, 166, 170, 174], "command": [22, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 155, 160], "line": [22, 37, 94, 95, 96, 98, 174], "argument": [22, 26, 28, 52, 166, 174], "mesh": [22, 23, 52], "vtk": [22, 23], "no_output": 22, "don": 22, "outlin": 22, "o": 22, "frac": [22, 163], "f": [22, 97, 101, 102, 125, 128, 161, 163], "vertical_gradi": 22, "vertic": [22, 38], "gradient": [22, 36, 44, 131, 161], "fmri": [22, 75, 78, 79, 89, 95, 97, 121, 123, 125, 127, 128, 150, 163, 165], "reduce_bia": 22, "pad": 22, "remove_ey": 22, "t2_guid": 22, "improv": [22, 52, 79, 126], "fov": [22, 28], "veri": [22, 77, 78], "temporarili": 22, "end": [22, 38, 57, 65, 123, 125, 126, 127, 128, 143, 163], "reduce_biai": 22, "bia": [22, 32, 36, 78, 85, 126, 134, 137, 138, 140, 142, 156, 161, 162, 170], "field": [22, 28, 37, 47, 48, 73, 76, 77, 78, 125, 126, 129, 133, 134, 137, 138, 139, 140, 142, 144, 156, 160, 161, 174], "neck": 22, "cleanup": [22, 77], "optic": 22, "nerv": 22, "siena": 22, "centr": 22, "r": [22, 52, 75, 79, 97, 99, 108, 109, 117, 128, 150, 163], "bet2": [22, 23], "betsurf": [22, 23], "scalp": [22, 23], "includ": [22, 33, 36, 37, 38, 52, 73, 79, 95, 101, 102, 103, 104, 105, 106, 107, 121, 123, 125, 127, 151, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166], "head": [22, 55, 75, 79, 80, 85, 89, 130, 133, 134, 140, 145, 148, 163, 170], "65": [22, 103, 114], "graviti": 22, "As": [22, 64, 70, 104, 105, 106, 107, 129], "feed": 22, "t2": [22, 27, 42, 121, 123, 125, 138, 139, 140], "a2": 22, "t2w": [22, 73, 130, 131, 132, 133, 134, 135, 171], "skullstrip": [22, 23, 124, 133, 154, 155], "t1w_brain": [22, 23, 25], "t1w_brain_mask": [22, 130], "mesh_vtk_fil": 22, "t1w_brain_mesh": 22, "outline_fil": 22, "t1w_brain_overlai": 22, "skull_fil": 22, "t1w_brain_skul": 22, "inskull_mask_fil": [22, 23], "inskul": [22, 159], "t1w_brain_inskull_mask": [22, 23], "inskull_mesh_vtk_fil": [22, 23], "t1w_brain_inskull_mesh": [22, 23], "outskin_mask_fil": [22, 23], "outskin": [22, 94, 159], "t1w_brain_outskin_mask": [22, 23, 94], "outskin_mesh_fil": [22, 23], "t1w_brain_outskin_mesh": [22, 23], "outskin_mesh_vtk_fil": [22, 23], "outskull_mask_fil": [22, 23], "outskul": [22, 159], "t1w_brain_outskull_mask": [22, 23], "outskull_mesh_vtk_fil": [22, 23], "t1w_brain_outskull_mesh": [22, 23], "outskull_mesh_fil": [22, 23], "skull_mask_fil": [22, 23], "t1w_brain_skull_mask": [22, 23], "involv": [23, 75, 77, 78, 125, 129], "in_transfo": 24, "epi2struct": [24, 25], "invert_xfm": 24, "fix_scale_skew": 24, "concat_xfm": 24, "joint": [24, 75], "matric": [24, 159], "in_trasfo_2": 24, "secondari": 24, "scale": [24, 34, 37, 44, 48, 103, 104, 105, 106, 107, 160, 166], "skew": 24, "in_transfo_2": 24, "struc2mni": 24, "epi2struct_concate_struc2mni": 24, "epi_reg": [25, 159], "script": [25, 30, 37, 42, 152, 154, 159], "fsl": [25, 29, 32, 44, 63, 90, 124, 126, 143, 145, 153, 154, 160, 161], "To": [25, 58, 65, 69, 77, 92, 99, 101, 103, 124, 141, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166], "good": [25, 78, 115, 163], "grei": [25, 27, 31, 42, 52, 74, 77, 132, 149, 150, 160, 162, 170], "fiedmap": 25, "simultan": 25, "provid": [25, 28, 30, 34, 38, 39, 41, 42, 44, 46, 49, 50, 52, 75, 79, 126, 142, 145, 146, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 170], "fmap": 25, "fmapmag": 25, "fmapmagbrain": 25, "informatio": 25, "about": [25, 75, 85, 86, 95, 99, 128, 149], "echospac": [25, 28], "pedir": [25, 28], "in_epi": [25, 86], "bold": [25, 86, 87, 89, 92, 99, 100, 125, 137, 147, 155, 161, 163, 170, 174], "in_t1": 25, "obtain": [25, 28, 33, 76, 83, 84, 91, 93, 125, 127, 128, 145, 149, 163, 174], "betsurfacesextract": [25, 124, 147, 154, 159], "no_clean": 25, "clean": 25, "up": [25, 31, 80, 91, 99, 140], "intermedi": [25, 37], "no_fmapreg": 25, "t1": [25, 27, 42, 49, 82, 125, 138, 139, 140, 143, 155], "wmseg": 25, "fast": [25, 32, 42, 50, 103, 145, 159], "t1w_wmseg": 25, "weight_spac": 25, "fieldmap": [25, 28], "rad": [25, 28, 163], "magnitud": [25, 51, 161], "wholehead": 25, "fmap_mag": 25, "y": [25, 26, 28, 47, 50, 52, 75, 78, 79, 81, 126, 144, 163, 166, 174], "phase": [25, 28, 37, 75, 79, 126, 163], "encod": [25, 28, 37, 75, 79, 115, 126, 127, 158, 163], "effect": [25, 77, 78, 91, 95, 97, 99, 101, 102, 103, 104, 105, 106, 107, 125, 163], "echo": [25, 28, 37, 125, 129, 138, 139, 140, 163], "unwarp": 25, "coregist": [25, 124, 126, 138, 139, 140, 143, 154, 162], "epi2str_ma": 25, "epi2str_inv": 25, "epi2struct_inv": 25, "out_1vol": 25, "epi2struct_1vol": 25, "fmap2epi_mat": 25, "epi2struct_fieldmaprads2epi": 25, "fmap2str_mat": 25, "epi2struct_fieldmap2str": 25, "fmap_epi": 25, "fmap_str": 25, "epi2struct_fieldmaprads2str": 25, "fmapmag_str": 25, "fullwarp": 25, "epi2struct_warp": 25, "shiftmap": 25, "epi2struct_fieldmaprads2epi_shift": 25, "seg": [25, 137, 163], "grai": [25, 87, 91, 126, 141, 143, 163, 172], "epi2struct_fast_seg": 25, "wmedg": 25, "visual": [25, 27], "epi2struct_fast_wmedg": 25, "wmseg_out": 25, "flirt": [25, 53, 124, 126, 143, 147, 154, 159], "bbr": [25, 28], "epi2struct_fast_wmseg": 25, "taken": [26, 79], "new": [26, 91, 99, 101, 127, 163], "just": 26, "inclus": [26, 38, 52, 163], "would": [26, 79, 99, 103], "t1w_5tt": [26, 41, 42, 52], "t_min": 26, "mininum": 26, "t_size": 26, "x_min": 26, "x_size": 26, "y_min": 26, "y_size": 26, "z_min": 26, "z_size": 26, "roi_fil": 26, "5tt_roi": 26, "class": [27, 63, 77, 78, 79, 100, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 172, 173, 174], "pd": 27, "chang": [27, 28, 44, 89, 102, 103, 121, 125, 129, 152, 158], "img_typ": 27, "int": [27, 28, 47, 67, 71, 73, 79, 81, 87, 103, 104, 105, 106, 107, 163], "aid": 27, "identifi": [27, 121], "mixeltyp": 27, "classif": 27, "mixtur": [27, 125], "That": 27, "again": 27, "those": [27, 35, 38, 41, 50, 77, 78, 103, 110, 127, 163], "t1w_mixeltyp": 27, "partial_volume_fil": 27, "partial": [27, 163], "where": [27, 28, 47, 75, 79, 99, 102, 104, 105, 106, 107, 143, 149, 163, 174], "proport": [27, 103, 104, 105, 106, 107, 163], "t1w_pve_1": 27, "t1w_pve_2": 27, "partial_volume_map": 27, "pveseg": 27, "best": [27, 75, 162, 174], "hard": 27, "follow": [27, 40, 75, 76, 77, 99, 103, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 158, 163, 165, 166, 170], "quick": 27, "assess": [27, 91, 123, 125, 127, 163], "t1w_pveseg": 27, "tissue_class_fil": 27, "t1w_seg_0": 27, "t1w_seg_1": 27, "t1w_seg_2": 27, "tissue_class_map": 27, "classifi": [27, 161], "singl": [27, 28, 31, 36, 37, 49, 77, 81, 99, 103, 160, 163], "necessari": [27, 75, 92, 102, 103, 141, 143, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166], "etc": [27, 28, 47, 52, 77, 99, 103, 121, 125, 144, 161, 163, 166], "t1w_seg": [27, 63, 64], "fmrib": 28, "calcul": [28, 41, 65, 75, 80, 89, 92, 99, 104, 105, 106, 107, 121, 127, 149, 152, 153, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 171, 173], "get_registered_fil": 28, "apply_xfm": [28, 147], "apply_isoxfm": 28, "still": 28, "view": 28, "b0mean": 28, "in_refer": 28, "in_matrix_fil": 28, "isotrop": [28, 75, 79], "resampl": [28, 58, 59, 69, 78, 103, 158, 161], "4x4": [28, 47], "matrix_struct_to_diff": 28, "angle_rep": 28, "euler": 28, "quaternion": 28, "represent": [28, 104, 105, 106, 107], "angl": [28, 52], "bbrslope": 28, "slope": 28, "bbrtype": 28, "sign": [28, 81], "global_ab": 28, "local_abl": 28, "bgvalu": 28, "background": [28, 55, 77, 163, 174], "outsid": [28, 38, 75, 79, 163], "256": [28, 75, 114], "coarse_search": 28, "60": [28, 50, 52, 77, 78, 114], "coars": [28, 75], "delta": 28, "mutualinfo": 28, "corratio": 28, "normcor": 28, "normi": 28, "leastsq": 28, "labeldiff": 28, "There": [28, 104, 105, 106, 107], "main": [28, 48, 102, 103, 125, 127, 128, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166], "normalis": [28, 75, 78, 94, 95, 96, 97, 103, 104, 105, 106, 107, 138, 139, 140, 145, 160, 162], "recommend": [28, 75, 79, 102], "try": [28, 50, 77, 78, 174], "cost_func": 28, "searchcost": 28, "data_typ": [28, 81], "char": [28, 81], "short": [28, 81], "dof": [28, 143], "7": [28, 48, 49, 75, 77, 78, 79, 80, 83, 84, 103, 104, 105, 106, 107, 158], "freedom": 28, "larg": [28, 82], "appropri": [28, 52, 160], "scanner": [28, 125, 163], "rigid2d": 28, "fine_search": 28, "18": [28, 80], "field_map_regist": 28, "fieldmapmask": 28, "field_map_registered_mask": 28, "force_sc": 28, "even": 28, "re": [28, 73, 75], "interp": [28, 68, 75, 78, 79, 143], "trilinear": [28, 75, 78, 79], "nearestneighbour": [28, 143, 147], "reslic": [28, 75, 79, 160], "applyxfm": 28, "in_weight": 28, "ref_weight": 28, "area": [28, 121], "increas": [28, 77, 78, 125, 143], "import": [28, 77, 101, 102, 166], "ventricl": 28, "introduc": [28, 103], "artifici": 28, "wherea": [28, 79], "min_sampl": 28, "no_clamp": 28, "clampinp": 28, "no_resampl": 28, "no_resample_blur": 28, "blur": [28, 163], "downsampl": [28, 52], "no_search": 28, "angular": [28, 39, 90], "padding_s": 28, "mode": 28, "bodi": 28, "save_log": 28, "log": [28, 40, 123, 125, 160, 163], "schedul": 28, "what": [28, 85, 86], "how": [28, 30, 51, 161], "optimis": [28, 50], "fsldir": 28, "flirtsch": 28, "sch2d_6dof": 28, "searchr_x": 28, "90": [28, 78], "searchr_i": 28, "searchr_z": 28, "sinc_width": 28, "full": [28, 29, 77, 78, 81, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 172, 173], "width": [28, 29, 47, 77, 78, 79, 81, 103, 121, 174], "sinc_window": 28, "rectangular": 28, "han": [28, 103], "blackman": 28, "use_qform": 28, "sform": 28, "qform": 28, "wm_seg": 28, "wmcoord": 28, "coordin": [28, 44, 52, 166], "wm_coor": 28, "wmnorm": 28, "wm_norm": 28, "b0mean_registered_with_t1w": 28, "out_log": 28, "b0mean_flirt_log": 28, "out_matrix": 28, "b0mean_t1w_flirt": 28, "faq": 28, "nput": [29, 33], "uncompress": [29, 75, 78, 79, 80, 81, 92, 94, 113, 121, 123, 125, 127, 128, 138, 139, 140], "img": [29, 69, 75, 77, 78, 79, 81, 113, 121, 123, 125, 138, 144, 163], "hdr": [29, 69, 75, 77, 78, 79, 81, 113, 121, 123, 125, 138, 144], "half": [29, 37, 47, 77, 78, 81], "kernel": [29, 75, 79, 81, 141], "Will": 29, "convert": [29, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 143, 160, 166], "intern": [29, 117, 127, 166], "approxim": [29, 50, 77, 78], "355": 29, "s_": 29, "filter": [29, 35, 41, 65, 74, 76, 82, 103, 110, 112, 117, 120, 121, 126, 160, 163, 165, 166], "55": [29, 52], "s_func": 29, "matlab": [30, 91, 152, 154, 163, 166], "licens": [30, 82], "disclaim": [30, 145, 146], "proof": 30, "concept": 30, "develop": [30, 79, 99], "show": [30, 49, 87, 127, 141, 163, 174], "wrap": [30, 75, 79, 154], "mia": [30, 91, 102, 145, 146], "absenc": 30, "better": [30, 75, 79, 163], "solut": 30, "mcr": 30, "4929083": 30, "fiber": [31, 49, 52, 126, 170], "densiti": [31, 39, 47, 52, 126, 160], "basi": [31, 48, 103], "responsesddholland": [31, 124, 154, 160], "aim": [31, 49, 59, 104, 105, 106, 107, 126, 141, 142, 143], "amount": [31, 47, 103, 129], "diffus": [31, 32, 33, 34, 35, 36, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 126, 141, 142, 143, 160, 169], "orthogon": 31, "spheric": [31, 39, 47, 51, 52, 126, 141, 160], "mrtrix": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 124, 143, 153, 154], "dwi2fod": [31, 160], "mia_process": [31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 75, 76, 77, 78, 79, 80, 81, 103, 104, 105, 106, 107, 145, 146, 151], "mif": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 126, 141, 142, 143], "mrconvert": [31, 32, 33, 34, 35, 36, 37, 40, 43, 45, 46, 47, 48, 49, 50, 51, 52, 124, 154, 160], "case": [31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 99, 102, 163], "wm_txt": 31, "wm": [31, 49, 52, 73, 76, 77, 83, 84, 132, 141, 163, 170], "respons": [31, 53, 102, 103, 115, 123, 126, 127, 141, 160, 166], "text": [31, 37, 38, 39, 44, 49, 53, 125, 163], "csd": [31, 126, 141], "row": [31, 87, 114, 163, 166, 174], "msmt_csd": [31, 141], "dwi_response_wm": [31, 49], "uniqu": [31, 141], "comparti": 31, "get_predicted_sign": [31, 40, 141], "predict": [31, 40, 141], "csf_txt": 31, "cerebrospin": [31, 87, 132, 141, 170], "fluid": [31, 87, 141], "dwi_response_csf": [31, 49], "gm_txt": 31, "gm": [31, 39, 49, 52, 73, 76, 77, 83, 84, 104, 105, 106, 107, 132, 141, 163, 170], "dwi_response_gm": [31, 49], "in_direct": 31, "az": 31, "el": 31, "pair": [31, 37, 89, 142], "over": [31, 47, 52, 103, 121, 149, 155], "constraint": 31, "max_sh": [31, 49], "harmon": [31, 39, 47, 49, 70, 85, 124, 126, 145, 154, 160, 161], "lmax": 31, "3000": [31, 36, 87], "wm_odf": 31, "odf": 31, "dwi_wm_odf": 31, "gm_odf": 31, "dwi_gm_odf": 31, "csf_odf": 31, "dwi_csf_odf": 31, "predicted_signal_fil": [31, 40, 141], "dwi_odf_predicted_sign": 31, "use_fsl": 32, "configur": [32, 37], "populs": [32, 37, 151, 156, 158, 161, 162], "use_an": 32, "ant": [32, 124, 133, 134, 137, 153, 154, 161], "n4": [32, 156], "dwi_unbia": 32, "bias_field_map": 32, "dwi_bias_field_map": 32, "dwi2mask": [33, 37, 160], "dwi1": [34, 43], "dwi2": [34, 43], "brainmask": [34, 41, 42, 148], "out_nam": [34, 174], "concat_filename1_filenam": 34, "new_concate_imag": 34, "concat_dwi1_dwi2": 34, "marchenko": 35, "pastur": 35, "pca": [35, 160], "pipelin": [35, 75, 110, 118, 124, 150, 151, 152, 163, 166, 175], "extend": [35, 98], "dwi_denois": 35, "noise_map": 35, "dwi_noise_map": 35, "certain": [36, 124, 160], "bzero": 36, "nobzero": 36, "singleshel": 36, "enforc": 36, "presenc": [36, 39], "no_bzero": 36, "them": [36, 39, 77, 78, 170, 174], "dwi_bzero": 36, "inhomogen": [37, 126, 129, 142, 160, 163], "dwifslpreproc": [37, 160], "rpe_opt": [37, 142], "rpe_non": 37, "rpe_al": 37, "oppos": [37, 126, 142], "parametr": [37, 77, 103, 174], "fill": [37, 58, 69, 92, 99, 104, 105, 106, 107, 116, 161, 163], "concaten": [37, 46, 61, 117, 142, 160, 166], "rpe_pair": 37, "typic": [37, 75, 77, 79, 103, 125, 129], "ha": [37, 42, 52, 75, 103, 118, 145, 146], "se_epi_corr": 37, "consist": [37, 56, 57, 59, 64, 66, 70, 77, 127], "spin": 37, "part": [37, 74, 91, 123, 163], "rpe_air": 37, "se": 37, "possess": 37, "while": [37, 52, 75, 77, 78, 111, 125, 127, 128], "opposit": [37, 126, 142], "ident": [37, 47, 75, 79, 102, 145, 146, 158], "readout": [37, 126, 142, 163], "dwi_b0_inverse_phas": 37, "pe_dir": 37, "ap": [37, 126, 142], "pa": [37, 126, 142], "lr": [37, 126, 142], "rl": [37, 126, 142], "anterior": [37, 78, 126, 142, 163], "posterior": [37, 126, 142, 163], "left": [37, 45, 91, 99, 126, 142, 147, 163, 166], "right": [37, 45, 91, 99, 118, 126, 142, 147, 163], "toleft": [37, 126, 142], "align_seepi": 37, "achiev": [37, 125], "eddyqc_al": 37, "keep": [37, 42, 52], "eddy_qc": 37, "instal": [37, 124, 145], "eddyqc_text": 37, "variou": [37, 125, 129, 152, 153, 160, 167, 170, 172], "nocleanup": 37, "delet": [37, 68, 69, 92, 161, 166, 174], "scratch": 37, "directori": [37, 58, 69, 92, 99, 101, 102, 103, 104, 105, 106, 107, 117, 152, 161, 163, 166, 174], "complet": [37, 129, 151, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 172, 173], "ro_tim": 37, "eddy_mask": 37, "automaticcali": 37, "dwi_brain_mask": 37, "eddy_opt": [37, 142], "slm": [37, 142], "repol": 37, "data_is_shel": [37, 142], "eddy_slspec": 37, "group": [37, 107, 141, 163, 174], "topup_opt": 37, "preprocess": [37, 124, 126, 127, 128, 141, 143, 150, 152, 153, 163, 167], "dwi_fslpreproc": 37, "tckedit": [38, 160], "in_track": [38, 39], "tck": [38, 39, 52, 126], "select": [38, 39, 44, 49, 51, 52, 75, 76, 77, 79, 103, 117, 118, 121, 141, 144, 160, 166], "streamlin": [38, 39, 126, 143, 160], "criteria": [38, 52], "fail": 38, "criterion": [38, 163], "written": [38, 75, 78, 79, 104, 105, 106, 107, 116, 117, 166], "ends_onli": 38, "test": [38, 102, 103, 165], "against": 38, "roi": [38, 52, 83, 84, 91, 92, 99, 117, 147, 159, 161, 163, 166, 172], "get_tck_weights_out_desc": 38, "roi_excl": [38, 52], "enter": [38, 52, 81, 97, 104, 105, 106, 107, 125, 128], "discard": [38, 52, 67, 148], "roi_incl": [38, 52], "travers": [38, 52], "accept": [38, 52, 75, 123, 174], "roi_incl_ord": [38, 52], "inclusion_ord": [38, 52], "roi_mask": [38, 52], "exit": [38, 52, 104, 105, 106, 107, 152], "truncat": [38, 52], "maxlength": 38, "26": [38, 80, 103, 114, 163], "minlength": 38, "desir": [38, 52, 99], "propag": [38, 52], "20000": 38, "skip": [38, 100], "commenc": 38, "maxweight": 38, "minweight": 38, "tck_weights_in": 38, "tck_weight": 38, "tracks_out": [38, 39], "tracks_edit": 38, "tck_weights_out": 38, "tracks_tck_weight": 38, "whole": [39, 41, 49, 75, 79, 93, 117, 126, 160, 169], "fibr": [39, 47, 49, 126, 141, 160], "fod": [39, 47, 52, 126, 160], "lobe": [39, 82, 83, 84, 126, 127, 147, 160], "integr": [39, 52, 91, 126, 160], "tcksift": [39, 160], "in_fod": 39, "wm_fod_norm": 39, "sift": [39, 52, 126], "fd_scale_gm": 39, "conjunct": 39, "act": [39, 42, 52, 126, 143, 160], "heurist": 39, "downsiz": 39, "no_dilate_lut": 39, "lookup": [39, 50], "tabl": [39, 50], "precis": [39, 52, 71, 79, 145, 146], "tangent": 39, "li": [39, 91, 163], "spread": [39, 47], "make_null_lob": 39, "cover": [39, 174], "amplitud": [39, 50, 52], "remove_untrack": 39, "attribut": [39, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166], "get_csv_fil": 39, "csv": [39, 62, 82, 93, 97, 114, 123, 125, 166], "get_mu_fil": 39, "get_out_selection_fil": 39, "proc_mask": 39, "act_imag": [39, 52], "five": [39, 52], "deriv": [39, 42, 51, 95, 97, 101, 102, 103, 125, 158], "5tt_coreg": [39, 143], "fd_thresh_valu": 39, "term_ratio_valu": 39, "termin": [39, 52, 126], "reduct": 39, "term_mu_valu": 39, "onc": [39, 52, 65], "proportion": 39, "reach": [39, 52, 129], "tracks_sift": [39, 126], "csv_file_out": 39, "tracks_tcksift_stat": 39, "mu_file_out": 39, "mu": 39, "tracks_tcksift_mu": 39, "selection_file_out": 39, "tracks_tcksift_select": 39, "defaul": [40, 147], "kurtosi": [40, 163], "wl": 40, "empir": 40, "ordinari": 40, "ol": 40, "ols_opt": 40, "iwl": 40, "numbr": 40, "choos": [40, 44, 52, 75, 83, 84, 98, 104, 105, 106, 107, 126], "dwi2tensor": [40, 160], "estimate_dkt": 40, "get_output_b0": 40, "b0": [40, 143, 170], "contribut": [40, 95], "number_of_it": 40, "reweight": 40, "ma": 40, "d11": 40, "d22": 40, "d33": 40, "d12": 40, "d13": 40, "d23": 40, "dwi_dti": [40, 51], "out_dkt": 40, "w1111": 40, "w2222": 40, "w3333": 40, "w1112": 40, "w1113": 40, "w1222": 40, "w1333": 40, "w2223": 40, "w2333": 40, "11": [40, 80, 114, 163], "w1122": 40, "w1133": 40, "w2233": 40, "14": [40, 80, 103], "w1123": 40, "w1223": 40, "w1233": 40, "dwi_dki": 40, "out_b0": 40, "dwi_b0": 40, "dwi_dti_predicted_sign": 40, "5tt2gmwmi": [41, 160], "5tt": [41, 52, 143, 160], "generate5ttfsl": [41, 124, 154, 160], "accord": [41, 74, 80, 82, 156], "lie": 41, "upon": 41, "t1w_5tt_gmwmseed": 41, "suitabl": [42, 75, 79, 160], "constrain": [42, 52, 126, 141, 143], "tractographi": [42, 124, 143, 154, 160, 169], "5ttgen": [42, 160], "no_crop": 42, "reduc": [42, 52, 126], "sgm_amyg_hipp": 42, "amygdala": 42, "hippocampi": 42, "cortic": [42, 83, 84, 87, 143], "premask": 42, "fasl": 42, "t2_imag": 42, "out_file_nam": [43, 46], "out_file_format": 44, "export_bvec_bv": 44, "export": [44, 118], "retain": [44, 74], "fourth": [44, 102], "begin": [44, 92, 100, 117, 121, 161], "24": [44, 80, 103], "report": [44, 82, 124, 125, 127, 128, 145, 146, 152, 153, 167, 175], "25": [44, 52, 80, 137], "0mm": 44, "5mm": 44, "respect": [44, 174], "leav": 44, "bval_scal": 44, "ye": 44, "enabl": [44, 75, 79], "disabl": [44, 89], "dw": 44, "norm": [44, 46, 135, 161], "grad_fil": 44, "scheme": 44, "diff_mrtrix_format": 44, "in_bvec": 44, "in_bval": 44, "bavl": 44, "out_bvec": 44, "out_bval": 44, "artefact": [45, 142], "mri": [45, 75, 77, 78, 79, 125, 127, 128, 155, 163, 166, 171], "subvoxel": 45, "kellner": 45, "et": [45, 89, 163], "al": [45, 89, 127, 163], "motion": [45, 75, 79, 86, 87, 89, 90, 125, 126, 142, 148, 163, 170], "dwipreproc": [45, 124, 154, 160], "wa": [45, 75, 79, 117, 118, 127, 152, 166], "coron": 45, "sagitt": 45, "maxw": 45, "variat": [45, 77, 78, 123, 125, 145, 146], "tv": 45, "minw": 45, "nshift": 45, "discret": 45, "subpixel": 45, "unring": [45, 126, 142], "dwi_unring": 45, "product": [46, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166], "rm": 46, "var": 46, "std": [46, 72, 92], "absmax": 46, "magmax": 46, "sdt": 46, "absmin": 46, "thu": [46, 74], "oerat": 46, "mean_along_axis3": 46, "dwi_mean": 46, "modifi": [47, 103, 159, 161], "reorient": 47, "apodis": 47, "4th": [47, 52, 77, 103], "antipod": 47, "symmetr": 47, "28": [47, 80, 103], "fod_reori": 47, "nearest": [47, 68, 75, 78, 79, 104, 105, 106, 107], "root": 47, "midway_spac": 47, "midwai": 47, "template_imag": 47, "warp_imag": 47, "linear_transform": 47, "3x4": 47, "convent": [47, 166], "flix_ax": 47, "flip": 47, "replace_fil": 47, "oversample_factor": 47, "target": [47, 75, 158], "deform": [47, 76, 77, 138, 140, 144], "deformation_field": [47, 78], "warp_full_imag": 47, "5d": 47, "mrregist": 47, "deformation_field_5d": 47, "fod_modul": 47, "jac": 47, "modul": [47, 51, 77, 103, 151, 153, 154, 164, 167, 175], "preserv": [47, 81], "appar": [47, 51], "bundl": 47, "jacobian": 47, "fod_direction_fil": 47, "dwi_transform": 47, "dwi_wmfod": 48, "dwi_gmfod": 48, "dwi_csffod": 48, "order_numb": 48, "niter_numb": 48, "potenti": [48, 125], "loop": 48, "inner": 48, "updat": [48, 174], "balanc": 48, "reference_numb": 48, "282095": 48, "posit": [48, 52, 65, 79, 91, 112, 120], "compart": [48, 141], "balanced_numb": 48, "incorpor": 48, "nomalis": 48, "dwi_wmfod_norm": 48, "dwi_gmfod_norm": 48, "dwi_csffod_norm": 48, "unsupervis": 49, "decompos": 49, "smaller": [49, 79], "individu": [49, 102, 123, 127, 174], "dwi2respons": [49, 160], "fa_thresh": 49, "versu": [49, 79], "get_final_voxel": 49, "were": [49, 102, 103], "construct": [49, 99, 129], "basu": 49, "tisuu": 49, "40": [49, 78, 80, 114, 127], "wm_algo": 49, "tax": 49, "tournier": 49, "extern": 49, "2019": 49, "csf_file": 49, "wm_file": 49, "gm_file": 49, "voxels_imag": 49, "dwi_response_voxel": 49, "sh2peak": [50, 160], "in_sh_coeff": 50, "sh": 50, "wm_fod": 50, "num": 50, "associ": [50, 61, 62, 95, 102, 103, 117, 121, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166], "faster": [50, 77, 78, 79], "phi": 50, "theta": 50, "peaks_imag": 50, "thresh_valu": 50, "greater": [50, 161], "consid": [50, 89], "seeds_fil": 50, "restart": 50, "output_imag": 50, "turn": [50, 126], "wm_fod_peak": 50, "adc": 51, "planar": [51, 125, 129, 138, 139, 140], "eigenvalu": 51, "eigenvector": 51, "tensor2metr": [51, 160], "eigval": 51, "get_ad": 51, "get_adc": 51, "get_cl": 51, "westin": 51, "shape": [51, 57, 163, 166], "get_cp": 51, "get_c": 51, "get_fa": 51, "get_rd": 51, "get_valu": 51, "get_vector": 51, "computeth": 51, "ad_fil": 51, "dwi_dti_ad": 51, "adc_fil": 51, "dwi_dti_adc": 51, "cl_file": 51, "dwi_dti_cl": 51, "cp_file": 51, "dwi_dti_cp": 51, "cs_file": 51, "dwi_dti_c": 51, "fa_fil": 51, "dwi_dti_fa": 51, "rd_file": 51, "dwi_dti_rd": 51, "value_fil": 51, "dwi_dti_valu": 51, "vector_fil": 51, "dwi_dti_vector": 51, "tckgen": [52, 160], "At": 52, "mechan": 52, "ifod2": 52, "fact": [52, 103, 126], "ifod1": 52, "nulldist": 52, "sd_stream": 52, "tensor_det": 52, "tensor_prob": 52, "assign": [52, 152], "continu": [52, 68, 125], "track": [52, 126, 129, 143, 160], "sd": 52, "determinist": 52, "probabilist": 52, "cutoff": [52, 77, 78], "nopreselectcompt": 52, "pre": [52, 121, 123, 127, 128, 153, 160, 161, 170], "use_rk4": 52, "rung": 52, "kutta": 52, "tracto_seed_unidirect": 52, "tracto_get_output_se": 52, "locat": [52, 87], "success": [52, 75, 151, 152], "backtrack": 52, "crop_at_gmwmi": 52, "endpoint": 52, "interfac": [52, 77, 151, 160, 161], "nulldist1": 52, "45": [52, 80], "nulldist2": 52, "downsample_factor": 52, "max_lenght": 52, "voxels": 52, "min_lenght": 52, "step_siz": 52, "rk4": 52, "32": [52, 80, 103, 114, 166], "trial": [52, 103], "5000": 52, "seed_dynam": 52, "dynam": [52, 102, 123, 166], "reconstruct": [52, 163], "substitut": 52, "seed_gmwmi": 52, "framework": 52, "gmwmseed_coreg": [52, 143], "seed_grid_voxel": 52, "place": 52, "grid": [52, 158], "grid_siz": 52, "27": [52, 80, 103], "mesh_grid": 52, "seed_imag": 52, "entir": 52, "seed_reject": 52, "reject": [52, 126], "seed_rnd_voxel": 52, "placement": 52, "seed_spher": 52, "xyz": 52, "95": [52, 163], "tracto_seeds_numb": 52, "attempt": 52, "until": 52, "OR": 52, "request": [52, 115], "2000": 52, "tracto_max_attempts_per_seed_numb": 52, "enough": 52, "ensur": [52, 121, 123, 125], "actual": [52, 74, 85, 86, 112, 120], "plausibl": [52, 126, 143], "prematur": 52, "unabl": 52, "tracto_seed_cutoff": 52, "cut": 52, "tracto_seed_direct": 52, "Of": 52, "ifod_pow": 52, "ifod": 52, "rais": 52, "power": [52, 89, 163], "nsampl": 52, "ifod2_n_sampl": 52, "2nd": [52, 75, 78, 79, 103], "dwi_tracto": 52, "dwi__tracto_out_se": 52, "transformconvert": [53, 160], "in_transform": 53, "diff2struct_fsl": 53, "out_transform": 53, "t1w_inu": 54, "paper": [55, 64, 70], "mortamet": [55, 64, 70], "colleagu": [55, 64, 70], "workflow": [55, 57, 59, 60, 63, 64, 70, 100, 130, 131, 132, 135, 161, 170, 171], "head_mask": [55, 94, 130], "t1w_outskin_mask": 55, "nasion_post_mask": 55, "t_tpl": [55, 88, 137, 148], "mni152nlin2009casym_r": [55, 73, 85, 87, 88, 132, 137, 146, 148], "01_desc": [55, 87, 88, 137, 146, 148], "rot_mask": 55, "t1w_rotmask": [55, 70, 85], "out_art_mask": [55, 130], "art_t1w_mask": [55, 85, 94, 130], "out_hat_mask": [55, 130], "hat": [55, 85, 94, 163, 170], "hat_t1w_mask": [55, 85, 130], "out_air_mask": [55, 130], "air": [55, 77, 85, 94, 132, 145, 161, 163, 170], "air_t1w_mask": [55, 85, 94, 130], "carreful": [56, 57, 59, 64, 66, 70, 110], "overwritten": [56, 57, 58, 59, 64, 66, 70, 92, 101, 102, 104, 105, 106, 107, 163], "element": [56, 77, 78, 92, 99, 102, 103, 117, 119, 120, 161, 163, 165, 166], "path": [56, 58, 63, 64, 65, 66, 70, 71, 72, 73, 74, 77, 80, 111, 117, 119, 152, 163, 166, 174], "_bin": 56, "thresh_low": 56, "applic": [56, 74], "t1w_bin": 56, "nibabel": [57, 161, 166, 174], "squeeze_imag": 57, "reorder": 57, "closest": 57, "canon": [57, 103, 123], "as_closest_canon": 57, "images_to_convolv": [58, 161], "convolve_with": [58, 161], "Then": [58, 161], "convolv": [58, 92, 103, 123, 161, 163], "resiz": [58, 92, 161, 163], "patientname_data": [58, 92, 99, 117, 161, 163, 166], "roi_data": [58, 69, 92, 117, 149, 161, 163, 166], "convroi_bold": [58, 149, 161], "receiv": [58, 69, 92, 99, 161, 163], "runtim": [58, 69, 92, 99, 161, 163], "correctli": [58, 69, 92, 99, 161, 163], "databas": [58, 69, 80, 87, 92, 99, 101, 102, 103, 116, 117, 149, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 174], "patientnam": [58, 69, 92, 97, 99, 116, 117, 128, 149, 161, 163, 166], "tag": [58, 69, 92, 99, 116, 117, 149, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 174], "aca_l": [58, 117], "aca_r": [58, 117], "acm_l": [58, 117], "acm_r": [58, 117], "out_imag": [58, 69], "conv": [58, 92], "patient": [58, 69, 91, 92, 95, 97, 99, 116, 117, 125, 127, 128, 149, 163, 166], "name_data": [58, 69, 92, 99, 117, 149], "convaca_l": [58, 69, 92, 149], "convaca_r": [58, 69, 92, 149], "convacm_l": [58, 69, 92, 149], "convacm_r": [58, 69, 92, 149], "excess": 59, "superior": [59, 163], "99": [59, 65, 163], "among": [59, 91, 104, 105, 106, 107], "_enh": 59, "t1w_enh": 59, "seg_fil": [60, 63, 131], "out_snr": 60, "96": [60, 103, 114], "_estimate_snr": 60, "native_structures_sub": [61, 62, 93], "47": [61, 62, 80, 93, 114, 147], "48": [61, 62, 80, 93, 147], "save_each_roi": 61, "save_concate_roi": 61, "extrat": 61, "001_47": 61, "001_48": 61, "out_conc": 61, "001_concate_47_48": 61, "001_bold": [62, 91, 93], "in_seg": 62, "001_bold_spac": 62, "001_bold_extracted_signals_47_48": [62, 93], "nilearn": [62, 161], "niftilabelsmask": 62, "fastseg": [63, 124, 154, 159], "_grad": 63, "scan": [63, 74, 77, 79, 80, 86, 87, 103, 104, 105, 107, 123, 125, 162, 166], "t1w_grad": 63, "decrib": [64, 70], "arfifact": [64, 70], "wm_mask": 64, "whith": 64, "erodemask": 64, "_harmon": 64, "t1w_harmon": 64, "dtype": [65, 81], "robustli": 65, "spike": [65, 86, 87, 89, 94, 96, 124, 148, 153, 155, 163], "denois": [65, 124, 126, 142, 154, 157, 160, 170], "thrown": 65, "awai": 65, "int16": [65, 81], "float32": [65, 71, 81], "uint8": [65, 81], "datatyp": 65, "nonneg": 65, "p_max": 65, "bound": [65, 78], "p_min": 65, "xtension": 65, "t1w_clip": 65, "niworflow": [65, 66, 71], "confound": [67, 72, 125, 161], "n_volumes_to_discard": [67, 71], "confund": [67, 72], "nonsteadystatedetector": [67, 154, 161], "files_to_resampl": [68, 69], "t1w_002": 68, "_003": 68, "suffix_to_delet": 68, "_002": [68, 74], "reprsent": 68, "t1w_003": 68, "_data": 69, "convroi_bold2": [69, 161], "_2": [69, 163], "convaca_l_2": 69, "convaca_r_2": 69, "convacm_l_2": 69, "convacm_r_2": 69, "_rotmask": 70, "max_32bit": 71, "cast": 71, "higher": [71, 75, 79, 89, 95, 101, 103, 125, 163, 166], "encount": 71, "steadi": [71, 146, 161], "state": [71, 146, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166], "_valid": 71, "func_valid": [71, 87, 148], "sanitizeimag": 71, "prefix_stddev": 72, "stddev": 72, "prefix_tsnr": 72, "suffix_stddev": 72, "_stddev": 72, "dev": 72, "suffix_tnsr": 72, "_tsnr": 72, "out_tsnr_fil": 72, "func_tsnr": 72, "out_stddev_fil": 72, "func_stddev": 72, "repositori": 73, "neuroimag": [73, 82, 123, 125, 163], "tempalt": 73, "mni152nlin2009casym": [73, 130, 132, 137, 170], "mnicolin27": 73, "mnipediatricasym": 73, "entiti": 73, "atla": [73, 162], "particular": [73, 79, 81, 166], "difumo": 73, "scahefer2018": 73, "desc": [73, 110, 130, 135, 137], "descript": [73, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 172, 173, 174], "256dimens": 73, "in_templ": [73, 130, 132, 135, 137], "probseg": [73, 132], "t2map": 73, "cach": 73, "tpl": 73, "02_t1w": 73, "c1anat": [74, 77, 138, 140, 144], "c2anat": [74, 77, 138, 140, 144], "c3anat": [74, 77, 138, 140, 144], "c4anat": [74, 77, 138, 140, 144], "c5anat": [74, 77, 138, 140, 144], "gm_filter": 74, "c1": [74, 76, 144], "spm": [74, 76, 90, 91, 95, 97, 101, 102, 103, 124, 144, 153, 154, 161, 163, 164, 174], "syntax": [74, 75, 76, 77, 78, 79, 80, 81, 103, 104, 105, 106, 107, 144], "everyth": 74, "abov": 74, "becom": 74, "below": [74, 80], "multipli": [74, 89], "c1anat_002": 74, "thinsp": [75, 76, 77, 78, 79, 111, 112, 113, 117, 118, 119, 120, 125, 138], "emsp": [75, 76, 77, 78, 79, 111, 112, 113, 117, 118, 119, 120, 125, 138], "ensp": [75, 76, 77, 78, 79, 111, 112, 113, 117, 118, 119, 120, 125, 138], "nbsp": [75, 76, 77, 78, 79, 111, 112, 113, 117, 118, 119, 120, 125, 138], "ref": 75, "remain": [75, 79, 163], "stationari": 75, "sourc": [75, 90, 138, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 172, 173, 174], "downloaded_data": [75, 78, 114, 115, 123, 125], "meanfunc": [75, 79, 112, 138], "jiggl": 75, "anat": [75, 77, 78, 85, 94, 98, 111, 112, 117, 118, 120, 125, 127, 128, 138, 139, 140, 145, 147, 174], "apply_to_fil": [75, 76, 78], "jobtyp": [75, 76, 78, 79, 139, 140], "estwrit": [75, 78, 79, 139], "except": [75, 103, 110], "procedur": [75, 163], "coregistered_sourc": [75, 138], "coregistered_fil": 75, "whose": [75, 99, 127, 149], "rewritten": [75, 79], "subsequ": 75, "filter_files_list": [75, 124, 153, 166], "librari": [75, 76, 117, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170], "cost_funct": 75, "eoption": [75, 78, 79], "cost_fun": 75, "nmi": 75, "ecc": 75, "ncc": 75, "maximis": 75, "minimis": 75, "inter": [75, 98, 159], "entropi": [75, 163], "sep": [75, 79], "increasingli": 75, "ones": 75, "toler": 75, "tol": 75, "param": [75, 99, 103, 159, 160, 163, 166, 174], "less": 75, "write_interp": [75, 76, 78, 79, 139, 140], "roption": [75, 79], "long": [75, 78, 79, 81], "neighbour": [75, 78, 79, 104, 105, 106, 107], "fastest": [75, 79], "realign": [75, 78, 121, 124, 138, 139, 140, 154, 162, 174], "ok": [75, 78, 79, 174], "pet": [75, 78, 79, 104, 105, 106, 107], "becaus": [75, 77, 78, 79], "give": [75, 77, 78, 79, 108, 109, 117, 145, 146, 166], "although": [75, 79], "slower": [75, 79], "write_wrap": [75, 79], "check": [75, 79, 82, 110, 143, 170, 174], "nose": [75, 79], "poke": [75, 79], "No": [75, 77, 78, 79, 103, 104, 105, 106, 107], "realli": [75, 79], "un": [75, 79], "write_mask": [75, 79], "like": [75, 79, 92, 99, 121, 158, 163], "With": [75, 79, 104, 105, 106, 107, 127], "through": [75, 79, 125, 127, 129], "look": [75, 79, 80, 113], "occur": [75, 77, 78, 79, 103], "coregisterd": 75, "capsul": 75, "spm12": [75, 77, 78, 79, 80, 81, 103, 150, 166], "equival": [76, 166], "normalize12": [76, 124, 138, 139, 140, 154, 162], "in_filt": 76, "nativ": [76, 77, 82, 138, 140, 145, 146, 166, 170], "deformation_fil": [76, 78, 144], "therefor": [76, 80, 91, 149], "togeth": [76, 125, 162, 174], "write_bounding_box": [76, 78, 140], "write_voxel_s": [76, 78, 140], "normalized_fil": [76, 78], "made": [76, 99, 103, 118, 144, 145, 146], "c2": [76, 144], "channel_fil": 77, "channel": 77, "vol": [77, 78], "channel_info": 77, "biasreg": [77, 78], "biasfwhm": [77, 78], "reguralis": 77, "goal": [77, 78], "aris": [77, 78, 163], "due": [77, 78, 89, 103], "artifact": [77, 78, 79, 85, 94, 121, 160, 161, 163, 170], "physic": [77, 78], "littl": [77, 78], "uniform": [77, 78], "tell": [77, 78], "doesn": [77, 78], "regularis": [77, 78], "00001": [77, 78], "extrem": [77, 78, 87, 163], "light": [77, 78], "heavi": [77, 78], "infin": 77, "smoother": [77, 78], "fewer": [77, 78], "150": [77, 78, 114], "version": [77, 102, 152], "noth": [77, 152], "0001": [77, 78, 139], "tpm": [77, 78], "ngau": 77, "bone": 77, "soft": 77, "dartel": 77, "unmodul": 77, "inf": [77, 78], "ci": 77, "toobox": [77, 152], "rci": 77, "mcwi": 77, "wci": 77, "warping_regular": [77, 78], "rough": [77, 78], "latter": [77, 111], "05": [77, 78, 114, 137], "affine_regular": 77, "affreg": [77, 78], "mni": [77, 78, 82, 130, 132, 138, 140, 170], "eastern": 77, "subj": [77, 78], "sampling_dist": [77, 78], "samp": [77, 78], "write_deformation_field": 77, "disk": 77, "util": [77, 152, 175], "forward": [77, 138, 140, 158], "bias_corrected_imag": [77, 138, 140], "manat": [77, 138, 140], "bias_field_imag": [77, 138, 140], "biasfield_anat": 77, "native_class_imag": [77, 138, 140, 144], "dartel_input_imag": 77, "toolbox": [77, 91, 163, 166], "rc1anat": 77, "rc2anat": 77, "rc3anat": 77, "rc4anat": 77, "rc5anat": 77, "modulated_class_imag": 77, "mwc1anat": 77, "mwc2anat": 77, "mwc3anat": 77, "mwc4anat": 77, "homeusernam": 77, "mwc5anat": 77, "normalized_class_imag": 77, "wc1anat": 77, "wc2anat": 77, "wc3anat": 77, "wc4anat": 77, "wc5anat": 77, "inverse_deformation_field": 77, "gifti": 77, "iy_anat": 77, "forward_deformation_field": [77, 138, 140], "y_anat": [77, 78, 138, 140, 144], "transformation_mat": 77, "anat_seg8": 77, "support": 77, "mrf": 77, "image_to_align": 78, "def": 78, "y_": [78, 144], "est": 78, "come": [78, 161], "normalized_imag": 78, "bias_regular": [78, 139], "bias_fwhm": [78, 139], "70": [78, 140], "80": 78, "110": 78, "120": 78, "130": [78, 114], "140": [78, 163], "affine_regularization_typ": 78, "woption": 78, "bb": 78, "box": [78, 98], "commissur": 78, "78": [78, 114, 140], "112": [78, 114, 140], "76": [78, 114, 140], "85": [78, 114, 140], "7nd": 78, "wanat": [78, 95, 97, 138, 139, 140], "code": [79, 97, 121, 125, 128, 166], "contact": 79, "team": [79, 151], "realignment_paramet": [79, 95, 138, 139, 140, 174], "modified_in_fil": 79, "write_which": 79, "realigned_fil": 79, "mean_imag": 79, "qualiti": [79, 155, 161, 163, 171], "speed": 79, "trade": 79, "highest": 79, "register_to_mean": 79, "rtm": 79, "weight_img": 79, "lot": 79, "extra": 79, "seriou": 79, "account": [79, 103, 123, 125], "rfunc": 79, "rp_func": [79, 95, 112, 138, 139, 140, 150], "compat": [80, 89, 102], "verif": 80, "sequenti": [80, 140, 151], "ascend": [80, 140], "descend": [80, 140], "interleav": [80, 140], "middl": [80, 140], "top": [80, 121, 140, 166], "bottom": [80, 140], "down": [80, 140], "foot": [80, 140], "num_slic": 80, "nslice": 80, "initialis": [80, 103, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166], "53": [80, 103], "repetit": [80, 123], "retriev": [80, 103, 117, 166, 174], "000002": 80, "ta": [80, 82], "slice_ord": 80, "ref_slic": 80, "9433981886792453": 80, "13": [80, 95, 114], "16": [80, 103, 158, 161, 163, 166], "17": [80, 103, 114], "19": [80, 103, 163], "21": [80, 103], "22": [80, 114, 135, 136, 137, 145, 146, 148, 158, 161, 170], "23": [80, 103], "29": [80, 114], "31": [80, 103, 114], "33": [80, 114], "34": [80, 103], "36": [80, 103], "37": 80, "38": 80, "39": [80, 103], "41": [80, 103], "42": [80, 103, 114, 163], "43": [80, 103], "44": [80, 114], "46": 80, "49": [80, 103, 114], "51": [80, 114], "52": [80, 103, 114], "refslic": 80, "chosen": [80, 98, 102, 104, 105, 106, 107], "_undefin": 80, "timed_fil": 80, "afunc": 80, "int32": 81, "prec": 81, "float64": 81, "implicit_mask": 81, "im": 81, "impli": [81, 104, 105, 106, 107], "implicit": [81, 104, 105, 106, 107, 127], "smoothed_fil": 81, "sfunc": 81, "docker": [82, 147], "ensembl": 82, "neural": 82, "network": [82, 127, 163], "133": 82, "braincolor": [82, 83, 84], "pierrick": 82, "coup\u00e9": 82, "bori": [82, 161], "mansenc": 82, "micha\u00ebl": 82, "cl\u00e9ment": 82, "r\u00e9mi": 82, "giraud": 82, "baudouin": 82, "deni": 82, "de": 82, "sennevil": 82, "vinh": 82, "thong": 82, "vincent": 82, "lepetit": 82, "jos\u00e9": 82, "v": [82, 101], "manjon": 82, "cnn": 82, "elsevi": 82, "2020": [82, 127], "219": 82, "pp": 82, "117026": 82, "native_t1": 82, "native_t1_t1w": 82, "mni_t1": 82, "mni_t1_t1w": 82, "native_mask": 82, "intracrani": 82, "caviti": 82, "native_mask_t1w": 82, "mni_mask": 82, "mni_masks_t1w": 82, "native_structur": 82, "native_structures_t1w": 82, "mni_structur": 82, "mni_structures_t1w": 82, "native_macrostructur": 82, "macrostructur": [82, 83, 84, 147], "native_macrostructures_t1w": 82, "mni_macrostructur": 82, "mni_macrostructures_t1w": 82, "native_lob": 82, "native_lobes_t1w": 82, "mni_lob": 82, "mni_lobes_t1w": 82, "native_tissu": 82, "native_tissues_t1w": 82, "mni_tissu": 82, "mni_tissues_t1w": 82, "matrix_affin": 82, "itk": 82, "matrix_affine_native_to_mni_t1w": 82, "report_pdf": [82, 98], "volumetri": 82, "pdf": [82, 94, 95, 96, 97, 98, 110, 125, 127, 128, 145, 146, 174], "report_t1w": 82, "report_csv": 82, "cerebrum": [83, 84], "subcortoc": [83, 84], "cerebellum": [83, 84, 87], "brainstem": [83, 84], "volbrain": [83, 84, 124, 147, 154], "labl": 84, "labels_nam": 84, "ex2": 84, "aspect": [85, 86], "compar": [85, 86, 126, 141, 163], "ground": [85, 86], "truth": [85, 86], "json": [85, 86, 94, 96, 110, 121, 148, 166, 174], "in_ra": [85, 132], "airmask": [85, 163], "artmask": [85, 163], "hatmask": 85, "headmask": [85, 163], "n4c_t1w_clipped_brain_outskin_mask": 85, "in_fwhm": 85, "fwhm_t1w": 85, "in_inu": 85, "n4c_t1w_clipped_bia": [85, 134], "in_noinu": 85, "n4c_t1w_clipped_harmon": 85, "mni_tpm": [85, 132], "csf_tpl": [85, 132], "01_label": [85, 132], "csf_probseg": [85, 132], "gm_tpl": [85, 132], "gm_probseg": [85, 132], "wm_tpl": [85, 132], "wm_probseg": [85, 132], "pvm": [85, 163], "probal": 85, "ss_n4c_t1w_clippep_pve_0": 85, "ss_n4c_t1w_clippep_pve_1": 85, "ss_n4c_t1w_clippep_pve_2": 85, "rotmask": [85, 163], "ss_n4c_t1w_clippep_seg": [85, 94], "t1w_anat_qc": [85, 94], "qc": [85, 86], "in_fd_thresh": 86, "fd": [86, 87, 96, 163], "in_dummy_tr": 86, "dummi": [86, 87], "in_dvars_fil": [86, 87], "dvar": [86, 87, 96, 148, 163], "dvars_reg_func_valid": [86, 87, 89, 148], "in_fd_fil": [86, 87], "fd_reg_func_valid_on": [86, 87, 90, 148], "in_fwhm_fil": 86, "in_gcor": 86, "0612": 86, "in_hmc": 86, "automask_reg_func_valid": 86, "in_outliers_fil": [86, 87], "in_qi_fil": 86, "qi_reg_func_valid": 86, "in_spikes_fil": [86, 87], "spikes_reg_func_valid": [86, 87], "in_tsnr": 86, "tsnr": [86, 124, 146, 148, 154, 161], "reg_func_valid_tsnr": [86, 148], "mean_reg_func_valid_functional_qc": 86, "plot": [87, 94, 95, 96, 125, 146, 147, 163, 174], "figur": [87, 96, 163, 174], "wise": [87, 148, 163], "identif": [87, 163], "carpetplot": [87, 163], "carpet": [87, 88, 96, 110, 137, 146, 148], "voxelwis": 87, "crown": [87, 163], "band": 87, "fmriplot": 87, "in_func": 87, "drop_tr": 87, "drop": 87, "fd_thresh": [87, 148], "carpet_seg": [87, 146, 148], "cseg_t_tpl": [87, 88, 146, 148], "carpet_dseg": [87, 88, 137, 146, 148], "repet": 87, "func_valid_fmriplot": [87, 96], "png": [87, 91, 93, 96, 97, 147, 174], "subtract": [88, 163], "cseg": 88, "cseg_": 88, "parcelatt": 88, "dramat": 89, "cofund": [89, 90], "intensity_norm": 89, "divid": 89, "x10": 89, "2012": 89, "altogeth": 89, "dvars_": 89, "remove_zero_vari": 89, "variance_tol": 89, "0000001000": 89, "purpos": [89, 126, 127, 128, 142, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 172], "iqm": [89, 90, 94, 96, 98, 163, 171, 172, 174], "reproduc": [90, 163], "fsl_motion_outli": [90, 163], "reg_func_valid_on": 90, "fd_": 90, "parameter_sourc": 90, "afni": [90, 124, 133, 148, 153, 154, 170, 171], "fsfast": 90, "nipi": [90, 151, 161], "reli": 91, "hemispher": [91, 99, 149, 163], "domin": [91, 97, 128], "approach": [91, 125, 127, 128, 163], "python": [91, 112, 120, 163, 166], "curv": [91, 97, 163], "softwar": [91, 124, 127, 128, 154], "packag": [91, 175], "investig": 91, "wilk": [91, 163], "lidzba": [91, 163], "mr": [91, 95, 99, 125, 129, 149, 163], "j": [91, 163], "neurosci": [91, 127, 163], "meth": [91, 163], "2007": [91, 163], "163": [91, 163], "128": [91, 103, 163], "136": [91, 163], "miaresourc": [91, 117, 166], "prefer": [91, 102], "frontal": 91, "pariet": 91, "occipit": 91, "cingul": 91, "central": 91, "cerebellar": 91, "out_png": [91, 93, 163], "derived_dat": [91, 97], "stats_gen": [91, 97], "spmt_0002_li_front": [91, 97], "spmt_0002_li_tempor": [91, 97], "wilke2007": 91, "rois_fil": [92, 93, 117, 163], "parametric_map": [92, 163], "next": [92, 103, 163], "roi_analysi": [92, 163], "_": [92, 99, 158, 161, 163], "deduct": 92, "prefix_to_delet": 92, "underscor": [92, 117], "contrast_typ": 92, "spmt_0001": [92, 95, 97, 101, 149, 150], "beta_0001": [92, 95, 101, 102, 149, 150], "deduc": 92, "mean_out_fil": 92, "std_out_fil": 92, "aca_l_mean_spmt_bold": [92, 99], "aca_r_mean_spmt_bold": [92, 99], "acm_l_mean_spmt_bold": [92, 99], "acm_r_mean_spmt_bold": [92, 99], "aca_l_mean_beta_bold": 92, "aca_r_mean_beta_bold": 92, "acm_l_mean_beta_bold": 92, "acm_r_mean_beta_bold": 92, "aca_l_std_spmt_bold": 92, "aca_r_std_spmt_bold": 92, "acm_l_std_spmt_bold": 92, "acm_r_std_spmt_bold": 92, "aca_l_std_beta_bold": 92, "aca_r_std_beta_bold": 92, "acm_l_std_beta_bold": 92, "acm_r_std_beta_bold": 92, "001_bold_space_concate_47_48": 93, "001_bold_space_47": 93, "001_bold_space_48": 93, "001_bold_space_1": 93, "signals_whole_brain": 93, "001_bold_space_47_48": 93, "iqms_fil": [94, 96, 174], "art_mask": 94, "air_mask": 94, "pre_n4c_t1w_clipped_desc": 94, "anat_fig_col": 94, "anat_fig_row": 94, "spikes_": [94, 96, 100], "norm_anat": [94, 95, 97], "norm_anat_fig_col": [94, 95], "norm_anat_fig_row": [94, 95], "anat_inf_slice_start": 94, "displai": [94, 95, 96, 127, 152, 174], "anat_slices_gap": 94, "gap": [94, 95, 96, 174], "norm_anat_inf_slice_start": [94, 95], "norm_anat_slices_gap": [94, 95], "t1w_ref_anatomical_mriqcreport_2023_03_31_11_42_10_75": [94, 145], "v22": [94, 96, 132, 134, 170, 171], "06": [94, 96, 103, 132, 134, 135, 136, 137, 148, 158, 170, 171], "norm_anat_cmap": 95, "color": [95, 174], "greys_r": [95, 174], "norm_anat_vmin": 95, "colormap": 95, "vmin": 95, "norm_anat_vmax": 95, "vmax": 95, "norm_func": [95, 96], "wrfunc": [95, 138, 140], "norm_func_fig_row": [95, 96], "norm_func_fig_col": [95, 96], "norm_func_inf_slice_start": [95, 96], "norm_func_slices_gap": [95, 96], "norm_func_cmap": 95, "norm_func_vmin": 95, "norm_func_vmax": 95, "record": [95, 97, 99, 121, 123], "regressor_physio": 95, "physiolog": [95, 125, 166], "etco2": [95, 123, 125], "thought": 95, "patient_ref_data": 95, "cvr_physio_reg": [95, 123], "beta_imag": [95, 101, 102, 149, 150], "regress": [95, 101, 102, 103, 149, 163, 165], "predictor": [95, 150], "condit": [95, 101, 102, 103, 114, 166], "regressor": [95, 103, 104, 105, 106, 107, 125, 127, 150, 166], "glm": [95, 97, 123, 125, 127, 128, 165, 173], "activ": [95, 103, 104, 105, 106, 107, 125, 127, 158, 163], "deactiv": 95, "beta_cmap": 95, "beta": [95, 125, 150, 172], "rainbow": [95, 174], "beta_vmin": 95, "beta_vmax": 95, "spmt_imag": [95, 101, 102, 149, 150], "strength": [95, 97], "spmt_cmap": 95, "spmt": [95, 99, 163, 172], "spmt_vmin": 95, "spmt_vmax": 95, "patient_info": [95, 97, 99, 125, 128, 149], "dictionari": [95, 97, 99, 102, 103, 115, 125, 128, 149, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 174], "kei": [95, 99, 102, 103, 115, 121, 149, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 174], "patientref": [95, 125], "pathologi": [95, 97, 99, 125, 128, 149], "ag": [95, 97, 99, 125, 128, 149], "sex": [95, 97, 99, 125, 128, 149], "ga": [95, 99, 125, 149], "gasadmin": [95, 99, 125, 149], "acmd": [95, 99, 125], "3t": [95, 99, 125], "bactal": [95, 99, 125], "1_co2_inhal_cvr_report_2024_01_24_09_34_58_08": 95, "func_func_qc": 96, "func_fig_col": 96, "func_fig_row": 96, "automask_mean_func_valid": 96, "func_inf_slice_start": 96, "func_slices_gap": 96, "iqms_plot": 96, "w_n4c_mean_reg_func_valid": [96, 137], "stddev_func": 96, "reg_func_valid_stddev": 96, "func_ref_functional_mriqcreport_2023_03_31_11_42_10_75": [96, 146], "norm_func_gen": 97, "task": [97, 101, 127, 163], "wrfunc_gen": 97, "norm_func_reco": 97, "recognit": [97, 127, 128], "wrfunc_reco": 97, "norm_func_recal": 97, "recal": [97, 127, 128], "wrfunc_recal": 97, "realignment_parameters_gen": 97, "rp_func_gen": 97, "realignment_parameters_reco": 97, "rp_func_reco": 97, "realignment_parameters_recal": 97, "rp_func_recal": 97, "spmt_gene": 97, "spmt_reco": 97, "stats_reco": 97, "spmt_recal": 97, "stats_recal": 97, "li_curv": 97, "correct_answ": 97, "behaviour": [97, 124, 127], "correct_respons": 97, "lateralizationpathologi": [97, 128], "dominanthand": [97, 128], "hand": [97, 118, 128, 151, 166], "002": [97, 113, 128], "epilepsi": [97, 127, 128], "57": [97, 125, 128], "l": [97, 99, 108, 109, 117, 128, 163], "1_ge2rec_report_2024_01_24_09_34_58_08": 97, "gerer": 98, "boxplot": [98, 174], "quartil": 98, "q1": 98, "q3": 98, "whisker": 98, "5x": 98, "iqr": 98, "tsv": [98, 174], "out_tsv": [98, 174], "matplotlib": 98, "parameter_fil": [99, 163], "results_aggreg": [99, 125, 149, 163], "overwrit": [99, 163], "doublet": 99, "letter": 99, "apath": 99, "apat": 99, "collect": [99, 163], "territori": [99, 125], "notion": 99, "cours": [99, 161], "todo": 99, "asap": 99, "exactli": [99, 163], "hemi": [99, 163], "aca": [99, 108, 109, 117, 163], "laterality_index": 99, "ablair": 99, "64": [99, 103, 114, 158], "xml": 99, "bold_std_beta": [99, 125, 149], "xl": [99, 125, 149], "bold_il_mean_spmt": [99, 125, 149], "bold_mean_spmt": [99, 125, 149], "spikes_mask": [100, 163], "no_zscor": 100, "zscore": [100, 161], "skip_fram": 100, "spike_thresh": [100, 163], "score": [100, 121, 161], "call": 100, "spki": [100, 148], "detect": [100, 146, 148, 161, 163], "spikes_func": [100, 148], "t_contrast_nam": 101, "t_condition_nam": 101, "t_contrast_weight": 101, "session": [101, 103, 114, 166, 174], "f_contrast_nam": 101, "f_contrast_t_nam": 101, "spm_mat_fil": [101, 102, 103], "out_dir_nam": [101, 102, 103, 104, 105, 106, 107], "stat": [101, 102, 103, 124, 152, 153, 163, 167], "project": [101, 102, 103, 104, 105, 106, 107, 163, 174], "subjectname_data": [101, 102, 103], "download": [101, 102], "button": [101, 102, 118, 127], "folder": [101, 102, 103, 104, 105, 106, 107], "beta_0002": [101, 102, 149, 150], "beta_0003": [101, 102, 149, 150], "beta_0004": [101, 102, 149, 150], "beta_0005": [101, 102, 149, 150], "beta_0006": [101, 102, 149, 150], "beta_0007": [101, 102, 149, 150], "beta_0008": [101, 102, 149, 150], "residual_imag": [101, 102], "residu": [101, 102], "resm": [101, 102], "baselin": [101, 121], "r1_1": 101, "use_deriv": 101, "group_contrast": 101, "elsewher": 101, "positif": 101, "out_spm_mat_fil": [101, 102, 104, 105, 106, 107, 150], "smp_mat_fil": [101, 102, 104, 105, 106, 107], "con_imag": [101, 102], "con_0001": 101, "con_0002": 101, "con_0003": 101, "con_0004": 101, "spmt_0002": 101, "spmt_0003": 101, "spmt_0004": 101, "ess_imag": [101, 102], "ess_0001": [101, 102], "ess_0002": [101, 102], "ess_0003": [101, 102], "ess_0004": [101, 102], "spmf_imag": [101, 102], "spmf_0001": [101, 102], "spmf_0002": [101, 102], "spmf_0003": [101, 102], "spmf_0004": [101, 102], "estimatecontrast": [101, 124, 127, 128, 149, 150, 164, 165], "\u03b2": 102, "bayesian": 102, "open": [102, 118, 151], "ticket": [102, 145, 146], "v2": 102, "risk": 102, "strongli": 102, "v1": 102, "spmmat": 102, "estimation_method": 102, "independ": [102, 103, 107], "iid": 102, "yet": 102, "write_residu": 102, "dynamiqu": 102, "tot_reg_num": 102, "factor_info": [102, 103], "level1design": [102, 114, 115, 124, 127, 128, 150, 164, 165, 166], "factori": [102, 103], "interact": [102, 103, 104, 105, 106, 107, 165], "factor1": [102, 103], "factor2": [102, 103], "hrf": [102, 103, 123, 166], "fourier_han": [102, 103], "gamma": [102, 103, 166], "fir": [102, 103, 166], "hemodynam": [102, 103, 123, 166], "beta_000k": [102, 149], "kth": [102, 149], "varianc": [102, 107], "res_000k": 102, "fuction": 102, "res_0001": 102, "res_0002": 102, "res_0003": 102, "res_0238": 102, "res_0239": 102, "res_0240": 102, "rpvimag": 102, "rpv": 102, "con_0005": 102, "con_0006": 102, "con_0007": 102, "con_0008": 102, "spmt_0005": 102, "spmt_0006": 102, "spmt_0007": 102, "spmt_0008": 102, "timing_unit": 103, "event": [103, 114, 127, 128], "sec": 103, "interscan_interv": 103, "rt": [103, 166], "microtime_resolut": 103, "fmri_t": 103, "build": [103, 166, 168, 169, 170, 171, 172, 173], "previous": [103, 118, 127, 149, 150], "microtime_onset": 103, "fmri_t0": 103, "coincid": [103, 104, 105, 106, 107], "sess_scan": 103, "sess": 103, "wai": 103, "sess_1_scanpath_1": 103, "sess_2_scanpath_2": 103, "sess_n_scanpath_n": 103, "func_1": 103, "func_2": 103, "sess_cond_nam": 103, "cond": 103, "sess_1_condname_1": 103, "sess_1_condname_2": 103, "sess_1_condname_n": 103, "sess_2_condname_1": 103, "sess_2_condname_2": 103, "sess_2_condname_n": 103, "sess_n_condname_1": 103, "sess_n_condname_2": 103, "sess_n_condname_n": 103, "cond1": 103, "cond2": 103, "sess_cond_onset": 103, "epoch": 103, "sess_1_cond_1_onset_1": 103, "sess_1_cond_1_onset_2": 103, "sess_1_cond_1_onset_n": 103, "sess_1_cond_2_onset_1": 103, "sess_1_cond_2_onset_2": 103, "sess_1_cond_2_onset_n": 103, "sess_1_cond_n_onset_1": 103, "sess_1_cond_n_onset_2": 103, "sess_1_cond_n_onset_n": 103, "sess_2_cond_1_onset_1": 103, "sess_2_cond_1_onset_2": 103, "sess_2_cond_1_onset_n": 103, "sess_2_cond_2_onset_1": 103, "sess_2_cond_2_onset_2": 103, "sess_2_cond_2_onset_n": 103, "sess_2_cond_n_onset_1": 103, "sess_2_cond_n_onset_2": 103, "sess_2_cond_n_onset_n": 103, "sess_n_cond_1_onset_1": 103, "sess_n_cond_1_onset_2": 103, "sess_n_cond_1_onset_n": 103, "sess_n_cond_2_onset_1": 103, "sess_n_cond_2_onset_2": 103, "sess_n_cond_2_onset_n": 103, "sess_n_cond_n_onset_1": 103, "sess_n_cond_n_onset_2": 103, "sess_n_cond_n_onset_n": 103, "72": 103, "117": 103, "152": [103, 114], "59": [103, 163], "225": 103, "98": [103, 114, 163], "206": 103, "282": 103, "sess_cond_dur": 103, "durat": [103, 114, 166], "compli": 103, "sess_1_cond_1_duration_1": 103, "sess_1_cond_1_duration_2": 103, "sess_1_cond_1_duration_n": 103, "sess_1_cond_2_duration_1": 103, "sess_1_cond_2_duration_2": 103, "sess_1_cond_2_duration_n": 103, "sess_1_cond_n_duration_1": 103, "sess_1_cond_n_duration_2": 103, "sess_1_cond_n_duration_n": 103, "sess_2_cond_1_duration_1": 103, "sess_2_cond_1_duration_2": 103, "sess_2_cond_1_duration_n": 103, "sess_2_cond_2_duration_1": 103, "sess_2_cond_2_duration_2": 103, "sess_2_cond_2_duration_n": 103, "sess_2_cond_n_duration_1": 103, "sess_2_cond_n_duration_2": 103, "sess_2_cond_n_duration_n": 103, "sess_n_cond_1_duration_1": 103, "sess_n_cond_1_duration_2": 103, "sess_n_cond_1_duration_n": 103, "sess_n_cond_2_duration_1": 103, "sess_n_cond_2_duration_2": 103, "sess_n_cond_2_duration_n": 103, "sess_n_cond_n_duration_1": 103, "sess_n_cond_n_duration_2": 103, "sess_n_cond_n_duration_n": 103, "54": 103, "81": 103, "sess_cond_tmod": 103, "tmod": 103, "characteris": 103, "nonlinear": 103, "6th": 103, "sess_1_cond_1_tmod": 103, "sess_1_cond_2_tmod": 103, "sess_1_cond_n_tmod": 103, "sess_2_cond_1_tmod": 103, "sess_2_cond_2_tmod": 103, "sess2_cond_n_tmod": 103, "sess_n_cond_1_tmod": 103, "sess_n_cond_2_tmod": 103, "sess_n_cond_n_tmod": 103, "sess_cond_pmod_nam": 103, "pmod": 103, "relat": [103, 114, 127, 128, 163, 165], "sess_1_cond_1_pmodname_1": 103, "sess_1_cond_1_pmodname_2": 103, "sess_1_cond_1_pmodname_n": 103, "sess_1_cond_2_pmodname_1": 103, "sess_1_cond_2_pmodname_2": 103, "sess_1_cond_2_pmodname_n": 103, "sess_1_cond_n_pmodname_1": 103, "sess_1_cond_n_pmodname_2": 103, "sess_1_cond_n_pmodname_n": 103, "sess_2_cond_1_pmodname_1": 103, "sess_2_cond_1_pmodname_2": 103, "sess_2_cond_1_pmodname_n": 103, "sess_2_cond_2_pmodname_1": 103, "sess_2_cond_2_pmodname_2": 103, "sess_2_cond_2_pmodname_n": 103, "sess_2_cond_n_pmodname_1": 103, "sess_2_cond_n_pmodname_2": 103, "sess_2_cond_n_pmodname_n": 103, "sess_n_cond_1_pmodname_1": 103, "sess_n_cond_1_pmodname_2": 103, "sess_n_cond_1_pmodname_n": 103, "sess_n_cond_2_pmodname_1": 103, "sess_n_cond_2_pmodname_2": 103, "sess_n_cond_2_pmodname_n": 103, "sess_n_cond_n_pmodname_1": 103, "sess_n_cond_n_pmodname_2": 103, "sess_n_cond_n_pmodname_n": 103, "pmod1": 103, "pmod2": 103, "sess_cond_pmod_valu": 103, "sess_1_cond_1_pmod_1_val_1": 103, "sess_1_cond_1_pmod_1_val_2": 103, "sess_1_cond_1_pmod_1_val_n": 103, "sess_1_cond_1_pmod_2_val_1": 103, "sess_1_cond_1_pmod_2_val_2": 103, "sess_1_cond_1_pmod_2_val_n": 103, "sess_1_cond_1_pmod_n_val_1": 103, "sess_1_cond_1_pmod_n_val_2": 103, "sess_1_cond_1_pmod_n_val_n": 103, "sess_1_cond_2_pmod_1_val_1": 103, "sess_1_cond_2_pmod_1_val_2": 103, "sess_1_cond_2_pmod_1_val_n": 103, "sess_1_cond_2_pmod_2_val_1": 103, "sess_1_cond_2_pmod_2_val_2": 103, "sess_1_cond_2_pmod_2_val_n": 103, "sess_1_cond_2_pmod_n_val_1": 103, "sess_1_cond_2_pmod_n_val_2": 103, "sess_1_cond_2_pmod_n_val_n": 103, "sess_1_cond_n_pmod_1_val_1": 103, "sess_1_cond_n_pmod_1_val_2": 103, "sess_1_cond_n_pmod_1_val_n": 103, "sess_1_cond_n_pmod_2_val_1": 103, "sess_1_cond_n_pmod_2_val_2": 103, "sess_1_cond_n_pmod_2_val_n": 103, "sess_1_cond_n_pmod_n_val_1": 103, "sess_1_cond_n_pmod_n_val_2": 103, "sess_1_cond_n_pmod_n_val_n": 103, "sess_2_cond_1_pmod_1_val_1": 103, "sess_2_cond_1_pmod_1_val_2": 103, "sess_2_cond_1_pmod_1_val_n": 103, "sess_2_cond_1_pmod_2_val_1": 103, "sess_2_cond_1_pmod_2_val_2": 103, "sess_2_cond_1_pmod_2_val_n": 103, "sess_2_cond_1_pmod_n_val_1": 103, "sess_2_cond_1_pmod_n_val_2": 103, "sess_2_cond_1_pmod_n_val_n": 103, "sess_2_cond_2_pmod_1_val_1": 103, "sess_2_cond_2_pmod_1_val_2": 103, "sess_2_cond_2_pmod_1_val_n": 103, "sess_2_cond_2_pmod_2_val_1": 103, "sess_2_cond_2_pmod_2_val_2": 103, "sess_2_cond_2_pmod_2_val_n": 103, "sess_2_cond_2_pmod_n_val_1": 103, "sess_2_cond_2_pmod_n_val_2": 103, "sess_2_cond_2_pmod_n_val_n": 103, "sess_2_cond_n_pmod_1_val_1": 103, "sess_2_cond_n_pmod_1_val_2": 103, "sess_2_cond_n_pmod_1_val_n": 103, "sess_2_cond_n_pmod_2_val_1": 103, "sess_2_cond_n_pmod_2_val_2": 103, "sess_2_cond_n_pmod_2_val_n": 103, "sess_2_cond_n_pmod_n_val_1": 103, "sess_2_cond_n_pmod_n_val_2": 103, "sess_2_cond_n_pmod_n_val_n": 103, "sess_n_cond_1_pmod_1_val_1": 103, "sess_n_cond_1_pmod_1_val_2": 103, "sess_n_cond_1_pmod_1_val_n": 103, "sess_n_cond_1_pmod_2_val_1": 103, "sess_n_cond_1_pmod_2_val_2": 103, "sess_n_cond_1_pmod_2_val_n": 103, "sess_n_cond_1_pmod_n_val_1": 103, "sess_n_cond_1_pmod_n_val_2": 103, "sess_n_cond_1_pmod_n_val_n": 103, "sess_n_cond_2_pmod_1_val_1": 103, "sess_n_cond_2_pmod_1_val_2": 103, "sess_n_cond_2_pmod_1_val_n": 103, "sess_n_cond_2_pmod_2_val_1": 103, "sess_n_cond_2_pmod_2_val_2": 103, "sess_n_cond_2_pmod_2_val_n": 103, "sess_n_cond_2_pmod_n_val_1": 103, "sess_n_cond_2_pmod_n_val_2": 103, "sess_n_cond_2_pmod_n_val_n": 103, "sess_n_cond_n_pmod_1_val_1": 103, "sess_n_cond_n_pmod_1_val_2": 103, "sess_n_cond_n_pmod_1_val_n": 103, "sess_n_cond_n_pmod_2_val_1": 103, "sess_n_cond_n_pmod_2_val_2": 103, "sess_n_cond_n_pmod_2_val_n": 103, "sess_n_cond_n_pmod_n_val_1": 103, "sess_n_cond_n_pmod_n_val_2": 103, "sess_n_cond_n_pmod_n_val_n": 103, "61": 103, "105": [103, 114], "178": 103, "221": 103, "sess_cond_pmod_poli": 103, "poli": 103, "stick": 103, "height": [103, 174], "further": [103, 121, 145, 146, 150], "cube": 103, "sess_1_cond_1_pmod_1_poli": 103, "sess_1_cond_1_pmod_2_poli": 103, "sess_1_cond_1_pmod_n_poli": 103, "sess_1_cond_2_pmod_1_poli": 103, "sess_1_cond_2_pmod_2_poli": 103, "sess_1_cond_2_pmod_n_poli": 103, "sess_1_cond_n_pmod_1_poli": 103, "sess_1_cond_n_pmod_2_poli": 103, "sess_1_cond_n_pmod_n_poli": 103, "sess_2_cond_1_pmod_1_poli": 103, "sess_2_cond_1_pmod_2_poli": 103, "sess_2_cond_1_pmod_n_poli": 103, "sess_2_cond_2_pmod_1_poli": 103, "sess_2_cond_2_pmod_2_poli": 103, "sess_2_cond_2_pmod_n_poli": 103, "sess_2_cond_n_pmod_1_poli": 103, "sess_2_cond_n_pmod_2_poli": 103, "sess_2_cond_n_pmod_n_poli": 103, "sess_n_cond_1_pmod_1_poli": 103, "sess_n_cond_1_pmod_2_poli": 103, "sess_n_cond_1_pmod_n_poli": 103, "sess_n_cond_2_pmod_1_poli": 103, "sess_n_cond_2_pmod_2_poli": 103, "sess_n_cond_2_pmod_n_poli": 103, "sess_n_cond_n_pmod_1_poli": 103, "sess_n_cond_n_pmod_2_poli": 103, "sess_n_cond_n_pmod_n_poli": 103, "sess_cond_orth": 103, "orth": 103, "orthogonalis": 103, "othogonalis": 103, "sess_1_cond_1_orth": 103, "sess_1_cond_2_orth": 103, "sess_1_cond_n_orth": 103, "sess_2_cond_1_orth": 103, "sess_2_cond_2_orth": 103, "sess2_cond_n_orth": 103, "sess_n_cond_1_orth": 103, "sess_n_cond_2_orth": 103, "sess_n_cond_n_orth": 103, "sess_multi": 103, "detail": [103, 121, 150], "experiment": [103, 104, 105, 106, 107, 115], "cell": 103, "arrai": [103, 161, 163, 166], "load": [103, 117, 121], "go": 103, "sess_1_multi": 103, "sess_2_multi": 103, "sess_n_multi": 103, "sess_regress": [103, 115], "haemodynam": 103, "val": [103, 115], "sess_1_dict_1": 103, "sess_1_dict_2": 103, "sess_1_dict_n": 103, "sess_2_dict_1": 103, "sess_2_dict_2": 103, "sess_2_dict_n": 103, "sess_n_dict_1": 103, "sess_n_dict_2": 103, "sess_n_dict_n": 103, "reg1": 103, "79": 103, "585": 103, "805": 103, "155": [103, 114], "66": 103, "195": 103, "045": 103, "82": 103, "765": 103, "67": [103, 114], "955": 103, "935": 103, "865": 103, "reg2": 103, "58": 103, "09": 103, "91": [103, 163], "87": 103, "73": 103, "sess_multi_reg": 103, "multi_reg": 103, "sess_1_file_1": 103, "sess_1_file_2": 103, "sess_1_file_n": 103, "sess_2_file_1": 103, "sess_2_file_2": 103, "sess_2_file_n": 103, "sess_n_file_1": 103, "sess_n_file_2": 103, "sess_n_file_n": 103, "file1": [103, 111], "file2": [103, 111], "sess_hpf": 103, "hpf": 103, "slow": 103, "drift": 103, "period": [103, 127], "longer": [103, 126], "427": 103, "major": 103, "variabl": [103, 104, 105, 106, 107, 125, 145, 146, 152], "subdivis": 103, "peak": [103, 121, 126, 129, 160], "vari": [103, 142], "plu": 103, "dispers": 103, "finit": 103, "impuls": 103, "post": 103, "stimulu": 103, "span": 103, "volterra_expansion_ord": 103, "volt": 103, "volterra": 103, "formul": 103, "global_intensity_norm": 103, "mask_threshold": 103, "mthresh": 103, "explicitli": 103, "analys": [103, 127, 128, 142, 170], "mask_swc1anat": 103, "model_serial_correl": 103, "cvi": 103, "serial": [103, 166], "alias": 103, "biorhythm": 103, "unmodel": 103, "neuron": 103, "autoregress": 103, "reml": [103, 165], "001_data": [104, 105, 106, 107], "con_001": [104, 105, 107], "002_data": [104, 105, 106, 107], "spm_stat_2ndlevel": [104, 105, 106, 107], "directoti": [104, 105, 106, 107], "include_intercept": 104, "intercept": 104, "threshold_mask": [104, 105, 106, 107], "exce": [104, 105, 106, 107], "absoult": [104, 105, 106, 107], "threshold_mask_valu": [104, 105, 106, 107], "use_implicit_mask": [104, 105, 106, 107], "nan": [104, 105, 106, 107], "global_calc": [104, 105, 106, 107], "vbm": [104, 105, 106, 107], "own": [104, 105, 106, 107], "global_calc_valu": [104, 105, 106, 107], "fullmean": [104, 105, 106, 107], "no_grand_mean_sc": [104, 105, 106, 107], "overal": [104, 105, 106, 107], "grand": [104, 105, 106, 107], "scall": [104, 105, 106, 107], "ancova": [104, 105, 106, 107], "user_covariates_nam": 104, "covari": [104, 105, 106, 107, 165], "user_covariates_vector": 104, "user_covariates_cent": 104, "aslo": [104, 105, 106, 107], "reaction": [104, 105, 106, 107], "usercovariates_cent": 104, "covariates_nam": [104, 105, 106, 107], "nuissanc": [104, 105, 106, 107], "examin": [104, 105, 106, 107], "additionl": [104, 105, 106, 107], "covariates_vector": [104, 105, 106, 107], "covariates_interact": [104, 105, 106, 107], "covariates_cent": [104, 105, 106, 107], "interc": [104, 105, 106, 107], "opportun": [104, 105, 106, 107], "facto": [104, 105, 106, 107], "explicit_mask_fil": [104, 105, 106, 107], "explicit": [104, 105, 106, 107], "calculaion": [104, 105, 106, 107], "cacul": [104, 105, 106, 107, 163], "paired_fil": 106, "beta_001": 106, "beta_002": 106, "onesamplettestdesign": [106, 107, 124, 164, 165], "group1_fil": 107, "grouop": 107, "group2_fil": 107, "con_002": 107, "unequal_vari": 107, "unequ": 107, "acm": [108, 109, 117], "out_list": [108, 119], "acp": 109, "pica": 109, "roi_c": 109, "roi_fron": 109, "roi_insula": 109, "roi_occ": 109, "roi_par": 109, "roi_str": 109, "roi_temp": 109, "roi_tha": 109, "sca": 109, "listoflist": 109, "histori": 110, "to_keep_filt": 110, "regex": 110, "to_remove_filt": 110, "to_remove_fil": 110, "01_anatomical_mriqcreport_2023_05_12_16_26_12_58": 110, "_qc": 110, "exclusif": 110, "files_remov": 110, "file3": 111, "file_list": [111, 120], "in_list": [112, 113], "index_filt": [112, 120], "filtered_list": 112, "pars": 113, "anat1_001": 113, "anat1_002": 113, "anat1_003": 113, "anat2_002": 113, "bloc": 114, "csv_file": 114, "conten": 114, "mia_project": [114, 115, 116], "sess01_bloc_onset": 114, "sess02_event_onset": 114, "design_typ": 114, "cond_nam": 114, "inc": 114, "con": 114, "n1": 114, "n2": 114, "f1": 114, "f2": 114, "cond_onset": 114, "88": 114, "144": 114, "174": 114, "236": 114, "248": 114, "274": 114, "102": 114, "116": 114, "154": 114, "164": 114, "184": 114, "196": 114, "208": 114, "222": 114, "74996667": 114, "99996667": 114, "24996667": 114, "49996667": 114, "74": 114, "92": 114, "119": 114, "123": 114, "125": 114, "137": 114, "141": 114, "143": 114, "146": 114, "159": 114, "161": 114, "204": 114, "238": 114, "89": 114, "94": 114, "134": 114, "148": 114, "191": 114, "202": 114, "215": 114, "233": 114, "242": 114, "245": 114, "281": 114, "290": 114, "303": 114, "310": 114, "319": 114, "339": 114, "341": 114, "33333333e": 114, "2499667": 114, "4999667": 114, "9999667": 114, "7499667": 114, "62": 114, "101": 114, "249967": 114, "103": 114, "499967": 114, "999967": 114, "749967": 114, "170": 114, "188": 114, "227": 114, "265": 114, "283": 114, "285": 114, "287": 114, "344": 114, "157": 114, "168": 114, "177": 114, "179": 114, "182": 114, "197": 114, "240": 114, "254": 114, "267": 114, "269": 114, "294": 114, "299": 114, "301": 114, "314": 114, "317": 114, "326": 114, "332": 114, "335": 114, "337": 114, "346": 114, "cond_dur": 114, "eprime_fil": [115, 127], "xlsx": [115, 127], "experi": [115, 121, 123, 125, 127, 128], "001_eprim": 115, "csv_correct_respons": 115, "reco": [115, 127, 128, 166], "001_eprime_correct_respons": 115, "csv_encodage_reco": 115, "ge": [115, 127, 128], "indirectli": [115, 127], "bad": 115, "question": 115, "rest": [115, 127], "001_eprime_encodage_reco": 115, "sess_regress_level1design": 115, "encodag": 115, "tha": 116, "patient_nam": 116, "rois_list": [117, 166], "lib_dir": [117, 166], "roi_list": [117, 166], "caract": 117, "foo": [117, 166], "faa": [117, 166], "foo_1": [117, 166], "faa_2": [117, 166], "file_in_db": [117, 166], "output_directori": [117, 161, 166, 174], "resourc": [117, 163], "catch": 117, "starts_with": 117, "properli": [118, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166], "node": 118, "databrows": 118, "send": 118, "manag": [118, 151], "click": 118, "database_scan": 118, "file_nam": [119, 161, 174], "relev": 121, "noisi": 121, "candid": 121, "characterist": 121, "unrealist": 121, "behavior": [121, 127], "accuraci": 121, "properti": 121, "func_fil": [121, 123, 125, 138, 139, 140, 146], "magnet": [121, 123, 125, 129, 163, 166], "reson": [121, 123, 125, 163, 166], "gadolinium": [121, 129], "bolu": [121, 166], "ideal": 121, "swrfunc": [121, 138, 139, 140, 150], "aif_fil": 121, "dsc": [121, 129, 166], "swrfunc_aif": 121, "obj1": 122, "obj2": 122, "obj_list": 122, "tidal": [123, 125], "carbon": 123, "dioxid": 123, "relationship": 123, "cerebr": [123, 125, 129], "blood": [123, 125, 129], "flow": [123, 125, 129], "magdata": 123, "coolterm": 123, "trigger": [123, 125], "hypercapn": 123, "challeng": [123, 168, 174], "metadata": 123, "trigger_data": [123, 125], "synchron": [123, 125], "vaso_trigger_tim": 123, "physio_data": [123, 125], "cvr_reg": 123, "brick": [124, 125, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 151, 152, 170, 171, 172, 174, 175], "atom": [124, 151, 152, 155, 156, 157, 158, 159, 161, 162, 170, 171], "parti": [124, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166], "calcdroptr": [124, 154, 155], "despik": [124, 136, 154, 155], "fwhmx": [124, 145, 148, 154, 155], "gcor": [124, 148, 154, 155], "outlierscount": 124, "qualityindex": [124, 154, 155], "refitdeobliqu": [124, 154, 155], "tshift": [124, 154, 155], "tstatmean": [124, 154, 155], "volreg": [124, 154, 155], "affineiniti": [124, 154, 156], "applytransform": [124, 130, 132, 154, 156], "n4biasfieldcorrect": [124, 133, 134, 137, 154, 156], "computedki": [124, 154, 157], "binar": [124, 133, 154, 158, 161], "synthstrip": [124, 145, 154, 158, 170], "synthstripmriqc": [124, 154, 158], "bet": [124, 145, 154, 159], "convertxfm": [124, 147, 154, 159], "epireg": [124, 147, 154, 159], "extractroi": [124, 154, 159], "matlab_wrap": [124, 154], "computebrainvolum": 124, "constrainedsphericaldeconvolut": [124, 154, 160], "dwibiascorrect": [124, 154, 160], "dwibrainmask": [124, 154, 160], "dwicat": [124, 154, 160], "dwidenois": [124, 154, 160], "dwiextract": [124, 154, 160], "editingtrack": [124, 154, 160], "filteringtrack": [124, 154, 160], "fittensor": [124, 154, 160], "generate5tt2gmwmi": [124, 154, 160], "mrcat": [124, 154, 160], "mrdegibb": [124, 154, 160], "mrmath": [124, 154, 160], "mrtransform": [124, 154, 160], "mtnormalis": [124, 154, 160], "sphericalharmonicextract": [124, 154, 160], "tensormetr": [124, 154, 160], "transformfslconvert": [124, 154, 160], "applybiascorrect": [124, 154, 161], "artifactmask": [124, 154, 161], "conformimag": [124, 145, 154, 161], "convroi": [124, 149, 154, 161], "enhanc": [124, 131, 154, 161], "estimatesnr": [124, 154, 161], "extractroibylabel": [124, 147, 154, 161], "extractsignalroi": [124, 147, 154, 161], "gradientthreshold": [124, 154, 161], "intensityclip": [124, 154, 161], "nonsteadydetector": 124, "resample1": [124, 144, 154, 161], "resample2": [124, 154, 161], "rotationmask": [124, 154, 161], "sanit": [124, 146, 154, 161], "templatefromtemplateflow": [124, 154, 161], "gm_wm_normal": [124, 144, 154, 162], "newseg": [124, 138, 140, 154, 162], "slicetim": [124, 154, 162], "assemblynetdock": [124, 147], "getlabel": [124, 147], "labelscorrespond": [124, 147], "anatiqm": [124, 153, 163], "boldiqm": [124, 153, 163], "boldiqmsplot": [124, 153, 163], "carpetparcel": [124, 153, 163], "computedvar": [124, 153, 163], "framewisedisplac": [124, 153, 163], "lateralizationindexcurv": [124, 153, 163], "mean_stddev_calc": [124, 149, 153, 163], "plotsignalroi": [124, 147, 153, 163], "reportanatmriqc": [124, 153, 163], "reportco2inhalcvr": [124, 125, 153, 163], "reportfuncmriqc": [124, 153, 163], "reportge2rec": [124, 153, 163], "reportgroupmriqc": [124, 153, 163], "result_collector": [124, 149, 153, 163], "estimatemodel": [124, 127, 128, 149, 150, 164, 165], "multipleregressiondesign": [124, 164, 165], "pairedttestdesign": [124, 164, 165], "twosamplettestdesign": [124, 164, 165], "concat_to_list": [124, 149, 153, 166], "concat_to_list_of_list": [124, 149, 153, 166], "delete_data": [124, 153, 166], "files_to_list": [124, 125, 149, 153, 166], "find_in_list": [124, 149, 153, 166], "get_conditions_from_csv": [124, 153, 166], "get_eprime_info_ge2rec": [124, 153, 166], "get_patient_nam": [124, 153, 166], "import_data": [124, 149, 153, 166], "input_filt": [124, 153, 166], "list_dupl": [124, 138, 153, 166], "list_to_fil": [124, 125, 145, 153, 166], "make_aif": [124, 153, 166], "make_a_list": [124, 150, 153, 166], "make_cvr_reg_physio": [124, 125, 153, 166], "cerebvascularreact": [124, 152, 167], "co2_inhal": [124, 152, 167], "dwitractographi": [124, 152, 167], "dwi_whole_brain_tractograpi": 124, "functionallangagememori": 124, "ge2rec": [124, 163, 166, 174], "perfus": 124, "perfdsc": 124, "anat_airmask": [124, 152, 167], "anat_headmask": [124, 152, 167], "anat_mni_tpm": [124, 145, 152, 167], "anat_skullstrip": [124, 152, 167], "anat_skullstrip_synthstrip": [124, 152, 167], "anat_spatial_norm": [124, 152, 167], "bold_hmc": [124, 152, 167], "bold_mni_align": [124, 152, 167], "bold_spatial_preprocessing1": [124, 125, 152, 167], "bold_spatial_preprocessing2": [124, 140, 152, 167], "bold_spatial_preprocessing3": 124, "dwi_fod_msmt_csd": [124, 152, 167], "dwi_preprocess": [124, 167, 170], "dwi_tissue_boundari": 124, "spatial_mask": [124, 125, 149, 150, 152, 167], "qualitycontrol": [124, 152, 167], "anat_mriqc": [124, 152, 167], "bold_mri_qc": 124, "bold_signals_roi": 124, "bold_iqm": [124, 152, 167], "extract_roi_param": [124, 125, 152, 167], "bold_stat_cvr": [124, 125, 152, 167], "hypercapnia": [125, 168], "induc": [125, 163], "administ": 125, "deliveri": 125, "system": [125, 163, 166], "particip": [125, 127], "breath": 125, "respiratori": 125, "apparatu": 125, "captur": 125, "oxygen": 125, "reflect": 125, "throughout": 125, "heart": 125, "monitor": 125, "induct": 125, "analyz": [125, 127, 128], "insight": [125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], "anat_fil": [125, 127, 128, 138, 139, 140, 145, 174], "turbo": [125, 138, 139, 140], "trigger_tim": 125, "stimul": 125, "carbogen": 125, "variocap": 125, "administr": 125, "cannula": 125, "bob_01": 125, "xls_file": [125, 149], "tab": [125, 166], "delimit": 125, "summari": [125, 145, 146, 148, 160], "patientref_data": 125, "bold_il_std_beta": [125, 149], "bold_mean_beta": [125, 149], "bold_il_mean_beta": [125, 149], "bold_std_spmt": [125, 149], "bold_il_std_spmt": [125, 149], "patientref_co2_inhal_cvr_report_2024_03_19_11_01_15_04": 125, "tractogram": 126, "multishel": [126, 142], "implaus": 126, "overestim": 126, "msmtt": 126, "exploit": 126, "sensit": 126, "prepar": [126, 141, 143], "atc": 126, "coregistr": [126, 143], "million": 126, "randomli": 126, "subset": [126, 160], "200k": 126, "10k": 126, "shorter": 126, "softawr": 126, "tractseg": 126, "tutori": [126, 143], "andi": 126, "book": 126, "suggest": [126, 143], "howev": [126, 143], "seem": [126, 143], "perfectli": [126, 143], "edit": [126, 160], "in_dwi_pe_dir": [126, 142], "in_diw": [126, 142], "in_dwi_ro_tim": [126, 142], "in_b0_revers": [126, 142], "topup": [126, 142, 160], "b0_revers": [126, 142], "in_t1w": [126, 143], "sh_peak": 126, "dwi_denoised_unringed_dwifslpreproc_unbias_wm_odf_norm_peak": 126, "tracks_10mio": 126, "dwi_denoised_unringed_dwifslpreproc_unbias_wm_odf_norm_tracto": 126, "tracks_200k": 126, "dwi_denoised_unringed_dwifslpreproc_unbias_wm_odf_norm_tracto_200k": 126, "tracks_10k": 126, "dwi_denoised_unringed_dwifslpreproc_unbias_wm_odf_norm_tracto_10k": 126, "dwi_denoised_unringed_dwifslpreproc_unbias_wm_odf_norm_tracto_sift": 126, "tracks_sift_10k": 126, "t1w_coreg": [126, 143], "t1w_transform": [126, 143], "advanc": 126, "neurophil": 126, "prime": [127, 128, 166], "psychologi": [127, 128], "lmn": 127, "interdepend": 127, "sentenc": 127, "heard": 127, "word": 127, "headphon": 127, "pseudoword": 127, "broadcast": 127, "listen": 127, "talk": 127, "covertli": 127, "fixat": 127, "paradigm": 127, "pseudo": 127, "modeand": 127, "recognis": 127, "had": 127, "choic": 127, "press": 127, "motor": 127, "ra": [127, 128], "auditori": 127, "hear": 127, "rememb": 127, "repeat": [127, 166], "we": [127, 141], "via": [127, 158], "banjac": 127, "cartographi": 127, "focal": 127, "pharmaco": 127, "resist": 127, "pilepsi": 127, "multimod": 127, "universit\u00e9": 127, "grenobl": 127, "alp": 127, "2021": 127, "english": 127, "nnt": 127, "2021grals037": 127, "tel": 127, "03641888": 127, "front": [127, 163], "hum": 127, "2022": 127, "jan": 127, "752138": 127, "doi": [127, 163], "3389": [127, 163], "fnhum": 127, "pmid": 127, "35069148": 127, "pmcid": 127, "pmc8772037": 127, "behav": 127, "1562": 127, "1579": 127, "1007": [127, 163], "s11682": 127, "020": 127, "00355": 127, "func_gene_fil": [127, 128], "func_gen": [127, 128], "func_reco_fil": [127, 128], "func_reco": [127, 128], "func_recall_fil": [127, 128], "func_recal": [127, 128], "eprim": 127, "patientname_ge2rec_report_2024_03_19_11_01_15_04": [127, 128], "behavouri": 128, "pilelin": 128, "explan": [128, 150], "wide": 129, "techniqu": [129, 161], "clinic": [129, 163], "research": 129, "vasculatur": 129, "inject": 129, "agent": 129, "rapid": 129, "passag": 129, "vessel": 129, "lead": 129, "cbv": 129, "cbf": 129, "deliv": 129, "transit": 129, "mtt": 129, "ttp": 129, "concentr": [129, 163], "under": [129, 151, 168, 174], "templateflow": [130, 132, 135, 137, 161], "t1w_brain_outskin": 130, "t1w_masked_inversecomposit": [130, 132, 135], "out_rot_mask": 130, "rot_t1w_mask": 130, "ss_t1w_seg": 131, "denoise_ss_t1w_enh_grad": 131, "bias_correct": 133, "n4c_t1w_bia": 133, "ss_orig_t1w": 133, "ss_orig_t1w_bin": 133, "intes": 134, "out_correct": 134, "n4c_t1w_clip": 134, "ss_n4c_t1w_clip": 134, "pre_n4c_t1w_clipped_desc_brain_mask": 134, "moving_mask": 135, "t1w_masked_composit": 135, "w_t1w_mask": 135, "mric": 135, "hcm": 136, "bold_hcm": 136, "deobliqu": [136, 155], "deobliq": 136, "reg_d_func_on": [136, 148], "reg_d_func": 136, "mriq": [136, 137], "hmc": 136, "boldref": 137, "dseg": 137, "epi_mask": 137, "epi_mean": [137, 148], "reg_convergence_threshold": 137, "reg_convergence_window_s": 137, "reg_interpol": 137, "reg_metr": 137, "reg_metric_weight": 137, "reg_number_of_iter": 137, "reg_radius_or_number_of_bin": 137, "reg_sampling_percentag": 137, "reg_sampling_strategi": 137, "reg_shrink_factor": 137, "reg_smoothing_sigma": 137, "reg_transform_paramet": 137, "reg_transform": 137, "seg_template_r": 137, "template_r": 137, "n4c_mean_reg_func_valid_composit": 137, "n4c_mean_reg_func_valid_bia": 137, "epi_mni": 137, "epi_parc": [137, 148], "n4c_mean_reg_func_valid_inversecomposit": 137, "normalized_anat": [138, 139, 140], "smoothed_func": [138, 139, 140, 144, 150], "normalized_func": [138, 140], "sush": [139, 140], "st_acquist": 140, "func_out_voxel_s": 140, "anat_out_voxel_s": 140, "rf": 141, "everi": [141, 155, 162], "studi": [141, 163], "dwi_denoised_unringed_dwifslpreproc_unbia": [141, 142, 143], "dwi_denoised_unringed_dwifslpreproc_unbias_brain_mask": [141, 142], "voxel_fin": 141, "dwi_denoised_unringed_dwifslpreproc_unbias_response_voxel": 141, "dwi_denoised_unringed_dwifslpreproc_unbias_odf_predicted_sign": 141, "wm_odf_norm": 141, "dwi_denoised_unringed_dwifslpreproc_unbias_wm_odf_norm": 141, "gm_odf_norm": 141, "dwi_denoised_unringed_dwifslpreproc_unbias_gm_odf_norm": 141, "csf_odf_norm": 141, "dwi_denoised_unringed_dwifslpreproc_unbias_csf_odf_norm": 141, "gibb": [142, 160], "ring": [142, 160], "distrort": 142, "eddi": [142, 160], "convers": [142, 143, 160], "distorst": 142, "preproc_dwi": 142, "creation": 143, "subcort": 143, "patholog": 143, "transfom": 143, "t1w_5tt_transform": 143, "t1w_5tt_transformed_gmwmse": 143, "c6anat": 144, "mask_003": [144, 149, 150], "mask_swc1anat_003": 144, "special": [145, 146, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166], "effort": [145, 146], "much": [145, 146], "sought": [145, 146], "environ": [145, 146, 151], "ants_random_se": [145, 146], "bare": 145, "metal": 145, "itk_global_default_number_of_thread": 145, "omp_num_thread": 145, "discuss": [145, 146], "anat_report": 145, "nterpol": 146, "func_report": 146, "assemblynet": 147, "labels_structur": 147, "correpond": 147, "le": 147, "hippocampu": 147, "out_png_tissu": 147, "func_extracted_signals_tissu": 147, "out_png_lob": 147, "func_extracted_signals_lob": 147, "out_png_macrostructur": 147, "func_extracted_signals_macrostructur": 147, "out_png_structur": 147, "func_extracted_signals_47_48": 147, "bold_mriqc": [148, 152, 167], "parcel": [148, 163], "hmc_motion": 148, "ras_epi": 148, "dummy_tr": 148, "interg": 148, "dvars_intensity_norm": 148, "dvars_remove_zero_vari": 148, "epi_tsnr": 148, "fd_normal": 148, "fd_parameter_sourc": 148, "fd_radiu": 148, "fwhm_combin": 148, "fwhm_detrend": 148, "hmc_epi": 148, "quality_index_automask": 148, "outlier_fract": 148, "spikes_detrend": 148, "spikes_no_zscor": 148, "spikes_skip_fram": 148, "spikes_skipe_thresh": 148, "boldqc_out_fil": 148, "mean_reg_func_valid_bold_qc": 148, "dvars_fil": 148, "fd_file": 148, "framewis": [148, 163], "outliercount_fil": 148, "spike_fil": 148, "mask_anat_002": [149, 150], "preced": 149, "il": 149, "conv_roi_mak": 149, "roi_dat": 149, "convacp_l": 149, "convacp_r": 149, "convpica_l": 149, "convpica_r": 149, "cing_l": 149, "cing_r": 149, "fron_l": 149, "fron_r": 149, "insula_l": 149, "insula_r": 149, "occ_l": 149, "occ_r": 149, "par_l": 149, "par_r": 149, "str_l": 149, "str_r": 149, "temp_l": 149, "temp_r": 149, "tha_l": 149, "tha_r": 149, "convsca_l": 149, "convsca_r": 149, "directli": [150, 151, 155, 156, 157, 158, 159, 160, 162, 165], "regressor_physio_etco2_ctl": 150, "populse_mia": [151, 152, 155, 156, 157, 158, 159, 160, 162, 165], "ergonom": 151, "easili": 151, "offer": 151, "known": [151, 163, 166, 174], "commun": 151, "umbrella": 151, "websit": [151, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 172, 173], "On": [151, 174], "inherit": 151, "page": [151, 174], "offici": 152, "dwi_whole_brain_tractographi": [152, 167], "dwipreprocess": [152, 167], "__init__": [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 174, 175], "co2_inhal_cvr_make_report": [152, 174], "ge2rec_make_report": [152, 174], "get_iqms_data": [152, 174], "mriqc_anat_make_report": [152, 174], "mriqc_func_make_report": [152, 174], "mriqc_group_make_report": [152, 174], "pagenumcanva": [152, 174], "draw_page_numb": [152, 174], "showpag": [152, 174], "reportlin": [152, 174], "draw": [152, 174], "checkfileext": [152, 174], "check_orient": [152, 174], "del_dbfieldvalu": [152, 174], "dict4runtime_upd": [152, 174], "get_dbfieldvalu": [152, 174], "mriqc_get_all_run": [152, 174], "mriqc_group_iqms_tsv": [152, 174], "plot_boxplot_point": [152, 174], "plot_qi2": [152, 174], "plot_realignment_paramet": [152, 174], "plot_segment": [152, 174], "plot_slice_plan": [152, 174], "set_dbfieldvalu": [152, 174], "dedic": [152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 171, 172, 174], "py": [152, 158, 161, 174], "mainli": 152, "setup": 152, "get_gitvers": [152, 175], "commit": 152, "git": 152, "launch": [152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166], "processmatlab": [152, 175], "processmia": [152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166], "overrid": 152, "get_input_spec": [152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 172, 173], "trait": [152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 172, 173], "get_output_spec": [152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 172, 173], "add_exit": [152, 175], "add_path": [152, 175], "change_directori": [152, 175], "display_paramet": [152, 175], "parameter_nam": 152, "set_global_vari": [152, 175], "variable_nam": 152, "set_vari": [152, 175], "treatment": [153, 170], "submodul": [153, 154, 164, 167, 175], "spatial_preprocess": [153, 154], "list_output": [153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 174], "run_process_mia": [153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 174], "art_qi1": [153, 163], "art_qi2": [153, 163], "cjv": [153, 163], "cnr": [153, 163], "efc": [153, 163], "fber": [153, 163], "find_peak": [153, 163], "find_spik": [153, 163], "fuzzy_jaccard": [153, 163], "gsr": [153, 163], "image_binary_dil": [153, 163], "lateralization_index_iter_curv": [153, 163], "normalize_mc_param": [153, 163], "regress_poli": [153, 163], "rpve": [153, 163], "snr_dietrich": [153, 163], "summary_stat": [153, 163], "volume_fract": [153, 163], "wm2max": [153, 163], "get_regressors_from_csv": [153, 166], "bol_ar_tim": [153, 166], "convert_to_native_typ": [153, 166], "load_nii": [153, 166], "gaussfir": [153, 166], "gfb_conv": [153, 166], "spm_hrf": [153, 166], "encapsul": 154, "mrtrix3": [154, 160], "homemad": 154, "outliercount": [154, 155], "convblock": [154, 158], "stripmodel": [154, 158], "conform": [154, 158, 161], "resample_lik": [154, 158], "artifact_mask": [154, 161], "is_outli": [154, 161], "customis": [155, 156, 157, 158, 159, 160, 162, 165], "thing": [155, 156, 157, 158, 159, 160, 162, 165], "3dautomask": 155, "instanti": [155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166], "plug": [155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166], "self": [155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 174], "is_plug": [155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166], "inheritance_d": [155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166], "notindb": [155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166], "make_initresult": [155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166], "inheritance_dict": [155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166], "arithmet": 155, "droptr": 155, "3dcalc": 155, "surround": [155, 163], "3dtstat": 155, "3dvolreg": [155, 170], "http": [156, 158, 161, 162, 163, 174], "io": [156, 158, 161, 162], "html": [156, 158, 161, 162], "com": [156, 158, 161, 174], "niprep": [156, 158, 161, 174], "tree": 156, "master": 156, "mri_binar": 158, "statement": 158, "OF": 158, "blob": [158, 161, 174], "2995ded957961a7f3704de57eee88eb6cc30d52d": 158, "ndim": 158, "in_channel": 158, "out_channel": 158, "stride": 158, "leaki": 158, "leakyrelu": 158, "unet": 158, "blabla": [158, 163, 172], "bool": [158, 163], "nb_featur": 158, "nb_level": 158, "feat_mult": 158, "max_featur": 158, "nb_conv_per_level": 158, "max_pool": 158, "return_mask": 158, "input_nii": 158, "output_dtyp": 158, "cval": 158, "convert_xfm": 159, "fslroi": 159, "intra": 159, "b1": 160, "domain": 160, "dholland": 160, "applymask": 161, "e021008da0a2ef1c48e882baf932139a673349f9": 161, "l301": 161, "45ab13e1bf6fdbf5e29c90cef44055b0b9cf391b": 161, "l92": 161, "common": 161, "conform_imag": 161, "l75": 161, "l974": 161, "l970": 161, "l1039": 161, "l405": 161, "prescrib": 161, "percentil": [161, 163], "l474": 161, "f662acfce8def4717e0c3414618f3a5de5913b31": 161, "resample_to_img": 161, "l448": 161, "l394": 161, "l899": 161, "imdata": 161, "airdata": 161, "thresh": 161, "nparrai": 161, "numobserv": 161, "numdimens": 161, "numpi": [161, 163, 166], "observ": 161, "bolean": 161, "iglewicz": 161, "david": 161, "hoaglin": 161, "1993": 161, "handl": [161, 166], "asqc": 161, "edward": 161, "mykytka": 161, "ph": 161, "editor": 161, "_ar_est_yw": 163, "_flatten_dict": 163, "_prepare_mask": 163, "_robust_zscor": 163, "atkinson1997": 163, "atkinson": 163, "focu": 163, "ieee": 163, "med": 163, "903": 163, "910": 163, "1997": 163, "1109": 163, "650886": 163, "dietrich2007": 163, "dietrich": 163, "influenc": 163, "multichannel": 163, "coil": 163, "parallel": 163, "jmri": 163, "375": 163, "385": 163, "1002": 163, "20969": 163, "ganzetti2016": 163, "ganzetti": 163, "driven": 163, "neuroinform": 163, "2016": 163, "fninf": 163, "00010": 163, "giannelli2010": 163, "giannelli": 163, "character": 163, "nyquist": 163, "ghost": 163, "bandwidth": [163, 166], "app": 163, "clin": 163, "phy": 163, "2010": 163, "1120": 163, "jacmp": 163, "v11i4": 163, "3237": 163, "magnota2006": 163, "magnotta": 163, "va": 163, "friedman": 163, "fbirn": 163, "multicent": 163, "dig": 163, "147": 163, "2006": 163, "s10278": 163, "006": 163, "0264": 163, "shehzad2015": 163, "shehzad": 163, "connectom": 163, "confer": 163, "abstract": 163, "neuroinformat": 163, "2015": 163, "conf": 163, "fnin": 163, "00047": 163, "union": 163, "power2012": 163, "spuriou": 163, "systemat": 163, "xlm": 163, "mortamet2009": [163, 170], "_1": 163, "limits_": 163, "x_": 163, "art": 163, "ndarrai": [163, 166], "min_voxel": 163, "max_voxel": 163, "300000": 163, "chi": 163, "onto": 163, "artifactu": 163, "2_n": 163, "2n": 163, "mu_wm": 163, "mu_gm": 163, "sigma_wm": 163, "sigma_gm": 163, "proxi": 163, "inu": 163, "sigma_": 163, "mu_": 163, "sigma_air": 163, "sigma_b": 163, "framemask": 163, "shannon": 163, "energi": 163, "sum_": 163, "x_j": 163, "ln": 163, "2_j": 163, "equat": 163, "empti": [163, 174], "insert": 163, "skin": 163, "in_tpm": 163, "in_mni_tpm": 163, "epi_data": 163, "ref_fil": 163, "circl": 163, "intersect": 163, "str": 163, "ball": 163, "footprint": 163, "mask_right": 163, "mask_left": 163, "roi_nam": 163, "www": 163, "fil": 163, "ion": 163, "ucl": 163, "ac": 163, "uk": 163, "ext": [163, 174], "li_it": 163, "filepath": 163, "inferior": 163, "rx": 163, "pitch": 163, "ry": 163, "roll": 163, "rz": 163, "yaw": 163, "remove_mean": 163, "failure_mod": 163, "p": [163, 166], "k_i": 163, "p_": 163, "mu_fg": 163, "sigma_fg": 163, "foreground": 163, "mu_f": 163, "sigma_f": 163, "mad_air": 163, "eq": 163, "rayleigh": 163, "pi": 163, "sometim": 163, "bg": 163, "icv": 163, "sum_i": 163, "cvr": [163, 166, 168, 170, 173, 174], "co2": [163, 174], "inhal": 163, "get_covari": [164, 165], "restrict": 165, "likelihood": 165, "manipul": 166, "list1": 166, "list2": 166, "1rst": 166, "info": [166, 175], "browser": 166, "anoth": 166, "arteri": 166, "aif": 166, "suscept": 166, "arriv": 166, "file_path": 166, "matlab_lik": 166, "fortran": 166, "corner": 166, "tradit": 166, "mathemat": 166, "rearrang": 166, "raw": [166, 174], "unscal": 166, "loadnifti": 166, "fnii": 166, "bt": 166, "nt": 166, "tap": 166, "oversampl": 166, "subsect": 166, "section": 166, "microtim": 166, "pipeline_definit": [167, 168, 169, 170, 171, 172, 173], "cerebrovascular": [168, 170], "reactiv": 168, "evalu": [168, 173], "autoexport_nodes_paramet": [168, 169, 170, 171, 172, 173], "kwarg": [168, 169, 170, 171, 172, 173, 174], "reserv": 170, "anat_mriqc_pipelin": 171, "irm": 172, "bold_stat": 173, "report_fil": 174, "dict4runtim": 174, "mriqc_group": 174, "canva": 174, "footer": 174, "constructor": 174, "page_count": 174, "break": 174, "flowabl": 174, "ext_dic": 174, "valid_bool": 174, "in_ext": 174, "verbos": 174, "statu": 174, "tags2del": 174, "db": 174, "tag_to_del": 174, "db_filenam": 174, "dict": 174, "recov": 174, "files_nam": 174, "sting": 174, "datafram": 174, "panda": 174, "titl": 174, "ylabel": 174, "tabular": 174, "x_grid": 174, "ref_pdf": 174, "fit_pdf": 174, "ref_data": 174, "cutoff_idx": 174, "bla": 174, "vox_siz": 174, "out_file_tra": 174, "out_file_rot": 174, "out_dir": 174, "5a0f0408bd0c176dbc46088c6ffe279269180f3f": 174, "viz": 174, "l550": 174, "data_1": 174, "data_2": 174, "fig_row": 174, "fig_col": 174, "slice_start": 174, "slice_step": 174, "dyn": 174, "cmap_1": 174, "vmin_1": 174, "vmax_1": 174, "cmap_2": 174, "vmin_2": 174, "vmax_2": 174, "only_nois": 174, "mosaic": 174, "overlaid": 174, "superimpos": 174, "sag": 174, "cor": 174, "panel": 174, "rgb": 174, "255": 174, "cmap": 174, "gist_rainbow": 174, "rdylbu": 174, "spectral": 174, "rainbow_r": 174, "jet_r": 174, "seismic_r": 174, "bwr_r": 174, "tag_to_add": 174, "field_typ": 174, "visibl": 174, "subpackag": 175, "process_matlab": 175}, "objects": {"": [[152, 0, 0, "-", "mia_processes"]], "mia_processes": [[153, 0, 0, "-", "bricks"], [152, 0, 0, "-", "info"], [167, 0, 0, "-", "pipelines"], [152, 0, 0, "-", "process_matlab"], [174, 0, 0, "-", "utils"]], "mia_processes.bricks": [[154, 0, 0, "-", "preprocess"], [163, 0, 0, "-", "reports"], [164, 0, 0, "-", "stat"], [166, 0, 0, "-", "tools"]], "mia_processes.bricks.preprocess": [[155, 0, 0, "-", "afni"], [156, 0, 0, "-", "ants"], [157, 0, 0, "-", "dipy"], [158, 0, 0, "-", "freesurfer"], [159, 0, 0, "-", "fsl"], [160, 0, 0, "-", "mrtrix"], [161, 0, 0, "-", "others"], [162, 0, 0, "-", "spm"]], "mia_processes.bricks.preprocess.afni": [[155, 0, 0, "-", "processes"]], "mia_processes.bricks.preprocess.afni.processes": [[155, 1, 1, "", "Automask"], [155, 1, 1, "", "Calc"], [155, 1, 1, "", "CalcDropTRs"], [155, 1, 1, "", "Despike"], [155, 1, 1, "", "FWHMx"], [155, 1, 1, "", "GCOR"], [155, 1, 1, "", "OutlierCount"], [155, 1, 1, "", "QualityIndex"], [155, 1, 1, "", "RefitDeoblique"], [155, 1, 1, "", "SkullStrip"], [155, 1, 1, "", "TShift"], [155, 1, 1, "", "TStatMean"], [155, 1, 1, "", "Volreg"]], "mia_processes.bricks.preprocess.afni.processes.Automask": [[155, 2, 1, "", "__init__"], [155, 2, 1, "", "list_outputs"], [155, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.Calc": [[155, 2, 1, "", "__init__"], [155, 2, 1, "", "list_outputs"], [155, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.CalcDropTRs": [[155, 2, 1, "", "__init__"], [155, 2, 1, "", "list_outputs"], [155, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.Despike": [[155, 2, 1, "", "__init__"], [155, 2, 1, "", "list_outputs"], [155, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.FWHMx": [[155, 2, 1, "", "__init__"], [155, 2, 1, "", "list_outputs"], [155, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.GCOR": [[155, 2, 1, "", "__init__"], [155, 2, 1, "", "list_outputs"], [155, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.OutlierCount": [[155, 2, 1, "", "__init__"], [155, 2, 1, "", "list_outputs"], [155, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.QualityIndex": [[155, 2, 1, "", "__init__"], [155, 2, 1, "", "list_outputs"], [155, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.RefitDeoblique": [[155, 2, 1, "", "__init__"], [155, 2, 1, "", "list_outputs"], [155, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.SkullStrip": [[155, 2, 1, "", "__init__"], [155, 2, 1, "", "list_outputs"], [155, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.TShift": [[155, 2, 1, "", "__init__"], [155, 2, 1, "", "list_outputs"], [155, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.TStatMean": [[155, 2, 1, "", "__init__"], [155, 2, 1, "", "list_outputs"], [155, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.Volreg": [[155, 2, 1, "", "__init__"], [155, 2, 1, "", "list_outputs"], [155, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.ants": [[156, 0, 0, "-", "processes"]], "mia_processes.bricks.preprocess.ants.processes": [[156, 1, 1, "", "AffineInitializer"], [156, 1, 1, "", "ApplyTransforms"], [156, 1, 1, "", "N4BiasFieldCorrection"], [156, 1, 1, "", "Registration"]], "mia_processes.bricks.preprocess.ants.processes.AffineInitializer": [[156, 2, 1, "", "__init__"], [156, 2, 1, "", "list_outputs"], [156, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.ants.processes.ApplyTransforms": [[156, 2, 1, "", "__init__"], [156, 2, 1, "", "list_outputs"], [156, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.ants.processes.N4BiasFieldCorrection": [[156, 2, 1, "", "__init__"], [156, 2, 1, "", "list_outputs"], [156, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.ants.processes.Registration": [[156, 2, 1, "", "__init__"], [156, 2, 1, "", "list_outputs"], [156, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.dipy": [[157, 0, 0, "-", "processes"]], "mia_processes.bricks.preprocess.dipy.processes": [[157, 1, 1, "", "ComputeDKI"], [157, 1, 1, "", "Denoise"]], "mia_processes.bricks.preprocess.dipy.processes.ComputeDKI": [[157, 2, 1, "", "__init__"], [157, 2, 1, "", "list_outputs"], [157, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.dipy.processes.Denoise": [[157, 2, 1, "", "__init__"], [157, 2, 1, "", "list_outputs"], [157, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.freesurfer": [[158, 0, 0, "-", "processes"]], "mia_processes.bricks.preprocess.freesurfer.processes": [[158, 1, 1, "", "Binarize"], [158, 1, 1, "", "SynthStrip"], [158, 1, 1, "", "SynthStripMriqc"]], "mia_processes.bricks.preprocess.freesurfer.processes.Binarize": [[158, 2, 1, "", "__init__"], [158, 2, 1, "", "list_outputs"], [158, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.freesurfer.processes.SynthStrip": [[158, 2, 1, "", "__init__"], [158, 2, 1, "", "list_outputs"], [158, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc": [[158, 1, 1, "", "ConvBlock"], [158, 1, 1, "", "StripModel"], [158, 2, 1, "", "__init__"], [158, 2, 1, "", "conform"], [158, 2, 1, "", "list_outputs"], [158, 2, 1, "", "resample_like"], [158, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.ConvBlock": [[158, 2, 1, "", "__init__"], [158, 2, 1, "", "forward"], [158, 3, 1, "", "training"]], "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.StripModel": [[158, 2, 1, "", "__init__"], [158, 2, 1, "", "forward"], [158, 3, 1, "", "training"]], "mia_processes.bricks.preprocess.fsl": [[159, 0, 0, "-", "processes"]], "mia_processes.bricks.preprocess.fsl.processes": [[159, 1, 1, "", "Bet"], [159, 1, 1, "", "BetSurfacesExtraction"], [159, 1, 1, "", "ConvertXFM"], [159, 1, 1, "", "EpiReg"], [159, 1, 1, "", "ExtractROI"], [159, 1, 1, "", "FastSegment"], [159, 1, 1, "", "Flirt"], [159, 1, 1, "", "Smooth"]], "mia_processes.bricks.preprocess.fsl.processes.Bet": [[159, 2, 1, "", "__init__"], [159, 2, 1, "", "list_outputs"], [159, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.fsl.processes.BetSurfacesExtraction": [[159, 2, 1, "", "__init__"], [159, 2, 1, "", "list_outputs"], [159, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.fsl.processes.ConvertXFM": [[159, 2, 1, "", "__init__"], [159, 2, 1, "", "list_outputs"], [159, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.fsl.processes.EpiReg": [[159, 2, 1, "", "__init__"], [159, 2, 1, "", "list_outputs"], [159, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.fsl.processes.ExtractROI": [[159, 2, 1, "", "__init__"], [159, 2, 1, "", "list_outputs"], [159, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.fsl.processes.FastSegment": [[159, 2, 1, "", "__init__"], [159, 2, 1, "", "list_outputs"], [159, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.fsl.processes.Flirt": [[159, 2, 1, "", "__init__"], [159, 2, 1, "", "list_outputs"], [159, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.fsl.processes.Smooth": [[159, 2, 1, "", "__init__"], [159, 2, 1, "", "list_outputs"], [159, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix": [[160, 0, 0, "-", "processes"]], "mia_processes.bricks.preprocess.mrtrix.processes": [[160, 1, 1, "", "ConstrainedSphericalDeconvolution"], [160, 1, 1, "", "DWIBiasCorrect"], [160, 1, 1, "", "DWIBrainMask"], [160, 1, 1, "", "DWICat"], [160, 1, 1, "", "DWIDenoise"], [160, 1, 1, "", "DWIExtract"], [160, 1, 1, "", "DWIPreproc"], [160, 1, 1, "", "EditingTrack"], [160, 1, 1, "", "FilteringTrack"], [160, 1, 1, "", "FitTensor"], [160, 1, 1, "", "Generate5tt2gmwmi"], [160, 1, 1, "", "Generate5ttfsl"], [160, 1, 1, "", "MRCat"], [160, 1, 1, "", "MRConvert"], [160, 1, 1, "", "MRDeGibbs"], [160, 1, 1, "", "MRMath"], [160, 1, 1, "", "MRTransform"], [160, 1, 1, "", "MTNormalise"], [160, 1, 1, "", "ResponseSDDhollander"], [160, 1, 1, "", "SphericalHarmonicExtraction"], [160, 1, 1, "", "TensorMetrics"], [160, 1, 1, "", "Tractography"], [160, 1, 1, "", "TransformFSLConvert"]], "mia_processes.bricks.preprocess.mrtrix.processes.ConstrainedSphericalDeconvolution": [[160, 2, 1, "", "__init__"], [160, 2, 1, "", "list_outputs"], [160, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.DWIBiasCorrect": [[160, 2, 1, "", "__init__"], [160, 2, 1, "", "list_outputs"], [160, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.DWIBrainMask": [[160, 2, 1, "", "__init__"], [160, 2, 1, "", "list_outputs"], [160, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.DWICat": [[160, 2, 1, "", "__init__"], [160, 2, 1, "", "list_outputs"], [160, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.DWIDenoise": [[160, 2, 1, "", "__init__"], [160, 2, 1, "", "list_outputs"], [160, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.DWIExtract": [[160, 2, 1, "", "__init__"], [160, 2, 1, "", "list_outputs"], [160, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.DWIPreproc": [[160, 2, 1, "", "__init__"], [160, 2, 1, "", "list_outputs"], [160, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.EditingTrack": [[160, 2, 1, "", "__init__"], [160, 2, 1, "", "list_outputs"], [160, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.FilteringTrack": [[160, 2, 1, "", "__init__"], [160, 2, 1, "", "list_outputs"], [160, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.FitTensor": [[160, 2, 1, "", "__init__"], [160, 2, 1, "", "list_outputs"], [160, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.Generate5tt2gmwmi": [[160, 2, 1, "", "__init__"], [160, 2, 1, "", "list_outputs"], [160, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.Generate5ttfsl": [[160, 2, 1, "", "__init__"], [160, 2, 1, "", "list_outputs"], [160, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.MRCat": [[160, 2, 1, "", "__init__"], [160, 2, 1, "", "list_outputs"], [160, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.MRConvert": [[160, 2, 1, "", "__init__"], [160, 2, 1, "", "list_outputs"], [160, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.MRDeGibbs": [[160, 2, 1, "", "__init__"], [160, 2, 1, "", "list_outputs"], [160, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.MRMath": [[160, 2, 1, "", "__init__"], [160, 2, 1, "", "list_outputs"], [160, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.MRTransform": [[160, 2, 1, "", "__init__"], [160, 2, 1, "", "list_outputs"], [160, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.MTNormalise": [[160, 2, 1, "", "__init__"], [160, 2, 1, "", "list_outputs"], [160, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.ResponseSDDhollander": [[160, 2, 1, "", "__init__"], [160, 2, 1, "", "list_outputs"], [160, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.SphericalHarmonicExtraction": [[160, 2, 1, "", "__init__"], [160, 2, 1, "", "list_outputs"], [160, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.TensorMetrics": [[160, 2, 1, "", "__init__"], [160, 2, 1, "", "list_outputs"], [160, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.Tractography": [[160, 2, 1, "", "__init__"], [160, 2, 1, "", "list_outputs"], [160, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.TransformFSLConvert": [[160, 2, 1, "", "__init__"], [160, 2, 1, "", "list_outputs"], [160, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others": [[161, 0, 0, "-", "processing"]], "mia_processes.bricks.preprocess.others.processing": [[161, 1, 1, "", "ApplyBiasCorrection"], [161, 1, 1, "", "ArtifactMask"], [161, 1, 1, "", "Binarize"], [161, 1, 1, "", "ConformImage"], [161, 1, 1, "", "ConvROI"], [161, 1, 1, "", "Enhance"], [161, 1, 1, "", "EstimateSNR"], [161, 1, 1, "", "ExtractROIbyLabel"], [161, 1, 1, "", "ExtractSignalROI"], [161, 1, 1, "", "GradientThreshold"], [161, 1, 1, "", "Harmonize"], [161, 1, 1, "", "IntensityClip"], [161, 1, 1, "", "Mask"], [161, 1, 1, "", "NonSteadyStateDetector"], [161, 1, 1, "", "Resample1"], [161, 1, 1, "", "Resample2"], [161, 1, 1, "", "RotationMask"], [161, 1, 1, "", "Sanitize"], [161, 1, 1, "", "TSNR"], [161, 1, 1, "", "TemplateFromTemplateFlow"], [161, 1, 1, "", "Threshold"], [161, 4, 1, "", "artifact_mask"], [161, 4, 1, "", "is_outlier"], [161, 4, 1, "", "threshold"]], "mia_processes.bricks.preprocess.others.processing.ApplyBiasCorrection": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "list_outputs"], [161, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.ArtifactMask": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "list_outputs"], [161, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.Binarize": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "list_outputs"], [161, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.ConformImage": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "list_outputs"], [161, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.ConvROI": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "list_outputs"], [161, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.Enhance": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "list_outputs"], [161, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.EstimateSNR": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "list_outputs"], [161, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.ExtractROIbyLabel": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "list_outputs"], [161, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.ExtractSignalROI": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "list_outputs"], [161, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.GradientThreshold": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "list_outputs"], [161, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.Harmonize": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "list_outputs"], [161, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.IntensityClip": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "list_outputs"], [161, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.Mask": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "list_outputs"], [161, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.NonSteadyStateDetector": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "list_outputs"], [161, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.Resample1": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "list_outputs"], [161, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.Resample2": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "list_outputs"], [161, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.RotationMask": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "list_outputs"], [161, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.Sanitize": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "list_outputs"], [161, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.TSNR": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "list_outputs"], [161, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.TemplateFromTemplateFlow": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "list_outputs"], [161, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.Threshold": [[161, 2, 1, "", "__init__"], [161, 2, 1, "", "list_outputs"], [161, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.spm": [[162, 0, 0, "-", "spatial_preprocessing"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing": [[162, 1, 1, "", "Coregister"], [162, 1, 1, "", "GM_WM_Normalize"], [162, 1, 1, "", "NewSegment"], [162, 1, 1, "", "Normalize12"], [162, 1, 1, "", "Realign"], [162, 1, 1, "", "SliceTiming"], [162, 1, 1, "", "Smooth"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Coregister": [[162, 2, 1, "", "__init__"], [162, 2, 1, "", "list_outputs"], [162, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing.GM_WM_Normalize": [[162, 2, 1, "", "__init__"], [162, 2, 1, "", "list_outputs"], [162, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing.NewSegment": [[162, 2, 1, "", "__init__"], [162, 2, 1, "", "list_outputs"], [162, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Normalize12": [[162, 2, 1, "", "__init__"], [162, 2, 1, "", "list_outputs"], [162, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Realign": [[162, 2, 1, "", "__init__"], [162, 2, 1, "", "list_outputs"], [162, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing.SliceTiming": [[162, 2, 1, "", "__init__"], [162, 2, 1, "", "list_outputs"], [162, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Smooth": [[162, 2, 1, "", "__init__"], [162, 2, 1, "", "list_outputs"], [162, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports": [[163, 0, 0, "-", "processes"], [163, 0, 0, "-", "reporting"]], "mia_processes.bricks.reports.processes": [[163, 1, 1, "", "AnatIQMs"], [163, 1, 1, "", "BoldIQMs"], [163, 1, 1, "", "BoldIQMsPlot"], [163, 1, 1, "", "CarpetParcellation"], [163, 1, 1, "", "ComputeDVARS"], [163, 1, 1, "", "FramewiseDisplacement"], [163, 1, 1, "", "LateralizationIndexCurve"], [163, 1, 1, "", "Mean_stdDev_calc"], [163, 1, 1, "", "PlotSignalROI"], [163, 1, 1, "", "Result_collector"], [163, 1, 1, "", "Spikes"], [163, 4, 1, "", "art_qi1"], [163, 4, 1, "", "art_qi2"], [163, 4, 1, "", "cjv"], [163, 4, 1, "", "cnr"], [163, 4, 1, "", "efc"], [163, 4, 1, "", "fber"], [163, 4, 1, "", "find_peaks"], [163, 4, 1, "", "find_spikes"], [163, 4, 1, "", "fuzzy_jaccard"], [163, 4, 1, "", "gsr"], [163, 4, 1, "", "image_binary_dilation"], [163, 4, 1, "", "lateralization_index_iter_curves"], [163, 4, 1, "", "normalize_mc_params"], [163, 4, 1, "", "regress_poly"], [163, 4, 1, "", "rpve"], [163, 4, 1, "", "snr"], [163, 4, 1, "", "snr_dietrich"], [163, 4, 1, "", "summary_stats"], [163, 4, 1, "", "volume_fraction"], [163, 4, 1, "", "wm2max"]], "mia_processes.bricks.reports.processes.AnatIQMs": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "list_outputs"], [163, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.processes.BoldIQMs": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "list_outputs"], [163, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.processes.BoldIQMsPlot": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "list_outputs"], [163, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.processes.CarpetParcellation": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "list_outputs"], [163, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.processes.ComputeDVARS": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "list_outputs"], [163, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.processes.FramewiseDisplacement": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "list_outputs"], [163, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.processes.LateralizationIndexCurve": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "list_outputs"], [163, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.processes.Mean_stdDev_calc": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "list_outputs"], [163, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.processes.PlotSignalROI": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "list_outputs"], [163, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.processes.Result_collector": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "list_outputs"], [163, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.processes.Spikes": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "list_outputs"], [163, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.reporting": [[163, 1, 1, "", "ReportAnatMriqc"], [163, 1, 1, "", "ReportCO2inhalCvr"], [163, 1, 1, "", "ReportFuncMriqc"], [163, 1, 1, "", "ReportGE2REC"], [163, 1, 1, "", "ReportGroupMriqc"]], "mia_processes.bricks.reports.reporting.ReportAnatMriqc": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "list_outputs"], [163, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.reporting.ReportCO2inhalCvr": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "list_outputs"], [163, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.reporting.ReportFuncMriqc": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "list_outputs"], [163, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.reporting.ReportGE2REC": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "list_outputs"], [163, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.reporting.ReportGroupMriqc": [[163, 2, 1, "", "__init__"], [163, 2, 1, "", "list_outputs"], [163, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.stat": [[165, 0, 0, "-", "spm"]], "mia_processes.bricks.stat.spm": [[165, 0, 0, "-", "model"]], "mia_processes.bricks.stat.spm.model": [[165, 1, 1, "", "EstimateContrast"], [165, 1, 1, "", "EstimateModel"], [165, 1, 1, "", "Level1Design"], [165, 1, 1, "", "MultipleRegressionDesign"], [165, 1, 1, "", "OneSampleTTestDesign"], [165, 1, 1, "", "PairedTTestDesign"], [165, 1, 1, "", "TwoSampleTTestDesign"], [165, 4, 1, "", "get_covariates"]], "mia_processes.bricks.stat.spm.model.EstimateContrast": [[165, 2, 1, "", "__init__"], [165, 2, 1, "", "list_outputs"], [165, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.stat.spm.model.EstimateModel": [[165, 2, 1, "", "__init__"], [165, 2, 1, "", "list_outputs"], [165, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.stat.spm.model.Level1Design": [[165, 2, 1, "", "__init__"], [165, 2, 1, "", "list_outputs"], [165, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.stat.spm.model.MultipleRegressionDesign": [[165, 2, 1, "", "__init__"], [165, 2, 1, "", "list_outputs"], [165, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.stat.spm.model.OneSampleTTestDesign": [[165, 2, 1, "", "__init__"], [165, 2, 1, "", "list_outputs"], [165, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.stat.spm.model.PairedTTestDesign": [[165, 2, 1, "", "__init__"], [165, 2, 1, "", "list_outputs"], [165, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.stat.spm.model.TwoSampleTTestDesign": [[165, 2, 1, "", "__init__"], [165, 2, 1, "", "list_outputs"], [165, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools": [[166, 0, 0, "-", "tools"]], "mia_processes.bricks.tools.tools": [[166, 1, 1, "", "Concat_to_list"], [166, 1, 1, "", "Concat_to_list_of_list"], [166, 1, 1, "", "Delete_data"], [166, 1, 1, "", "Files_To_List"], [166, 1, 1, "", "Filter_Files_List"], [166, 1, 1, "", "Find_In_List"], [166, 1, 1, "", "Get_Conditions_From_csv"], [166, 1, 1, "", "Get_Eprime_Info_GE2REC"], [166, 1, 1, "", "Get_Patient_Name"], [166, 1, 1, "", "Get_Regressors_From_csv"], [166, 1, 1, "", "Import_Data"], [166, 1, 1, "", "Input_Filter"], [166, 1, 1, "", "List_Duplicate"], [166, 1, 1, "", "List_To_File"], [166, 1, 1, "", "Make_AIF"], [166, 1, 1, "", "Make_A_List"], [166, 1, 1, "", "Make_CVR_reg_physio"]], "mia_processes.bricks.tools.tools.Concat_to_list": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "list_outputs"], [166, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Concat_to_list_of_list": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "list_outputs"], [166, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Delete_data": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "list_outputs"], [166, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Files_To_List": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "list_outputs"], [166, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Filter_Files_List": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "list_outputs"], [166, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Find_In_List": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "list_outputs"], [166, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Get_Conditions_From_csv": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "list_outputs"], [166, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Get_Eprime_Info_GE2REC": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "list_outputs"], [166, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Get_Patient_Name": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "list_outputs"], [166, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Get_Regressors_From_csv": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "list_outputs"], [166, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Import_Data": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "list_outputs"], [166, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Input_Filter": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "list_outputs"], [166, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.List_Duplicate": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "list_outputs"], [166, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.List_To_File": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "list_outputs"], [166, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Make_AIF": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "bol_ar_time"], [166, 2, 1, "", "convert_to_native_types"], [166, 2, 1, "", "list_outputs"], [166, 2, 1, "", "load_nii"], [166, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Make_A_List": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "list_outputs"], [166, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Make_CVR_reg_physio": [[166, 2, 1, "", "__init__"], [166, 2, 1, "", "gaussfir"], [166, 2, 1, "", "gfb_conv"], [166, 2, 1, "", "list_outputs"], [166, 2, 1, "", "run_process_mia"], [166, 2, 1, "", "spm_hrf"]], "mia_processes.info": [[152, 4, 1, "", "get_gitversion"]], "mia_processes.pipelines": [[168, 0, 0, "-", "CerebVascularReact"], [169, 0, 0, "-", "DWITractography"], [170, 0, 0, "-", "preprocess"], [171, 0, 0, "-", "qualityControl"], [172, 0, 0, "-", "reports"], [173, 0, 0, "-", "stat"]], "mia_processes.pipelines.CerebVascularReact": [[168, 0, 0, "-", "co2_inhalation"]], "mia_processes.pipelines.CerebVascularReact.co2_inhalation": [[168, 1, 1, "", "CO2_inhalation"]], "mia_processes.pipelines.CerebVascularReact.co2_inhalation.CO2_inhalation": [[168, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.DWITractography": [[169, 0, 0, "-", "dwi_whole_brain_tractography"]], "mia_processes.pipelines.DWITractography.dwi_whole_brain_tractography": [[169, 1, 1, "", "Dwi_whole_brain_tractography"]], "mia_processes.pipelines.DWITractography.dwi_whole_brain_tractography.Dwi_whole_brain_tractography": [[169, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess": [[170, 0, 0, "-", "anat_airmask"], [170, 0, 0, "-", "anat_headmask"], [170, 0, 0, "-", "anat_mni_tpms"], [170, 0, 0, "-", "anat_skullstrip"], [170, 0, 0, "-", "anat_skullstrip_synthstrip"], [170, 0, 0, "-", "anat_spatial_norm"], [170, 0, 0, "-", "bold_hmc"], [170, 0, 0, "-", "bold_mni_align"], [170, 0, 0, "-", "bold_spatial_preprocessing1"], [170, 0, 0, "-", "bold_spatial_preprocessing2"], [170, 0, 0, "-", "dwi_fod_msmt_csd"], [170, 0, 0, "-", "dwi_preprocessing"], [170, 0, 0, "-", "spatial_mask"]], "mia_processes.pipelines.preprocess.anat_airmask": [[170, 1, 1, "", "Anat_airmask"]], "mia_processes.pipelines.preprocess.anat_airmask.Anat_airmask": [[170, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.anat_headmask": [[170, 1, 1, "", "Anat_headmask"]], "mia_processes.pipelines.preprocess.anat_headmask.Anat_headmask": [[170, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.anat_mni_tpms": [[170, 1, 1, "", "Anat_mni_tpms"]], "mia_processes.pipelines.preprocess.anat_mni_tpms.Anat_mni_tpms": [[170, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.anat_skullstrip": [[170, 1, 1, "", "Anat_skullstrip"]], "mia_processes.pipelines.preprocess.anat_skullstrip.Anat_skullstrip": [[170, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip": [[170, 1, 1, "", "Anat_skullstrip_synthstrip"]], "mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip.Anat_skullstrip_synthstrip": [[170, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.anat_spatial_norm": [[170, 1, 1, "", "Anat_spatial_norm"]], "mia_processes.pipelines.preprocess.anat_spatial_norm.Anat_spatial_norm": [[170, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.bold_hmc": [[170, 1, 1, "", "Bold_hmc"]], "mia_processes.pipelines.preprocess.bold_hmc.Bold_hmc": [[170, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.bold_mni_align": [[170, 1, 1, "", "Bold_mni_align"]], "mia_processes.pipelines.preprocess.bold_mni_align.Bold_mni_align": [[170, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.bold_spatial_preprocessing1": [[170, 1, 1, "", "Bold_spatial_preprocessing1"]], "mia_processes.pipelines.preprocess.bold_spatial_preprocessing1.Bold_spatial_preprocessing1": [[170, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.bold_spatial_preprocessing2": [[170, 1, 1, "", "Bold_spatial_preprocessing2"]], "mia_processes.pipelines.preprocess.bold_spatial_preprocessing2.Bold_spatial_preprocessing2": [[170, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.dwi_fod_msmt_csd": [[170, 1, 1, "", "Dwi_fod_msmt_csd"]], "mia_processes.pipelines.preprocess.dwi_fod_msmt_csd.Dwi_fod_msmt_csd": [[170, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.dwi_preprocessing": [[170, 1, 1, "", "Dwi_preprocessing"]], "mia_processes.pipelines.preprocess.dwi_preprocessing.Dwi_preprocessing": [[170, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.spatial_mask": [[170, 1, 1, "", "Spatial_mask"]], "mia_processes.pipelines.preprocess.spatial_mask.Spatial_mask": [[170, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.qualityControl": [[171, 0, 0, "-", "anat_mriqc"], [171, 0, 0, "-", "bold_mriqc"]], "mia_processes.pipelines.qualityControl.anat_mriqc": [[171, 1, 1, "", "Anat_mriqc"]], "mia_processes.pipelines.qualityControl.anat_mriqc.Anat_mriqc": [[171, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.qualityControl.bold_mriqc": [[171, 1, 1, "", "Bold_mriqc"]], "mia_processes.pipelines.qualityControl.bold_mriqc.Bold_mriqc": [[171, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.reports": [[172, 0, 0, "-", "bold_iqms"], [172, 0, 0, "-", "extract_roi_param"]], "mia_processes.pipelines.reports.bold_iqms": [[172, 1, 1, "", "Bold_iqms"]], "mia_processes.pipelines.reports.bold_iqms.Bold_iqms": [[172, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.reports.extract_roi_param": [[172, 1, 1, "", "Extract_roi_param"]], "mia_processes.pipelines.reports.extract_roi_param.Extract_roi_param": [[172, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.stat": [[173, 0, 0, "-", "bold_stat_cvr"]], "mia_processes.pipelines.stat.bold_stat_cvr": [[173, 1, 1, "", "Bold_stat_cvr"]], "mia_processes.pipelines.stat.bold_stat_cvr.Bold_stat_cvr": [[173, 2, 1, "", "pipeline_definition"]], "mia_processes.process_matlab": [[152, 1, 1, "", "ProcessMatlab"]], "mia_processes.process_matlab.ProcessMatlab": [[152, 2, 1, "", "__init__"], [152, 2, 1, "", "add_exit"], [152, 2, 1, "", "add_path"], [152, 2, 1, "", "change_directory"], [152, 2, 1, "", "display_parameter"], [152, 2, 1, "", "run"], [152, 2, 1, "", "set_global_variable"], [152, 2, 1, "", "set_variable"]], "mia_processes.utils": [[174, 0, 0, "-", "report"], [174, 0, 0, "-", "tools"]], "mia_processes.utils.report": [[174, 1, 1, "", "Report"]], "mia_processes.utils.report.Report": [[174, 2, 1, "", "__init__"], [174, 2, 1, "", "co2_inhal_cvr_make_report"], [174, 2, 1, "", "ge2rec_make_report"], [174, 2, 1, "", "get_iqms_data"], [174, 2, 1, "", "mriqc_anat_make_report"], [174, 2, 1, "", "mriqc_func_make_report"], [174, 2, 1, "", "mriqc_group_make_report"]], "mia_processes.utils.tools": [[174, 1, 1, "", "PageNumCanvas"], [174, 1, 1, "", "ReportLine"], [174, 4, 1, "", "checkFileExt"], [174, 4, 1, "", "check_orientations"], [174, 4, 1, "", "del_dbFieldValue"], [174, 4, 1, "", "dict4runtime_update"], [174, 4, 1, "", "get_dbFieldValue"], [174, 4, 1, "", "mriqc_get_all_run"], [174, 4, 1, "", "mriqc_group_iqms_tsv"], [174, 4, 1, "", "plot_boxplot_points"], [174, 4, 1, "", "plot_qi2"], [174, 4, 1, "", "plot_realignment_parameters"], [174, 4, 1, "", "plot_segmentation"], [174, 4, 1, "", "plot_slice_planes"], [174, 4, 1, "", "set_dbFieldValue"]], "mia_processes.utils.tools.PageNumCanvas": [[174, 2, 1, "", "__init__"], [174, 2, 1, "", "draw_page_number"], [174, 2, 1, "", "save"], [174, 2, 1, "", "showPage"]], "mia_processes.utils.tools.ReportLine": [[174, 2, 1, "", "__init__"], [174, 2, 1, "", "draw"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"]}, "titleterms": {"automask": 0, "brick": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166], "creat": [0, 104, 105, 106, 107, 134, 143], "brain": [0, 9, 22, 27, 28, 33, 82, 126, 134], "onli": [0, 76], "mask": [0, 5, 33, 41, 55, 64, 66, 70, 74, 88, 130, 131, 144, 149], "imag": [0, 9, 10, 11, 14, 16, 18, 25, 26, 28, 29, 32, 33, 37, 41, 42, 43, 44, 46, 47, 54, 56, 57, 58, 59, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 76, 78, 79, 80, 81, 85, 86, 131, 133, 136, 137, 144, 145, 146, 148], "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 23, 24, 26, 27, 28, 37, 49, 54, 60, 61, 62, 63, 64, 68, 69, 82, 93, 95, 102, 131, 134, 135, 142, 145, 146, 150], "afni": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 155], "3dautomask": 0, "calc": 1, "voxel": [1, 5, 50], "arithmet": 1, "3d": [1, 3, 6, 7, 12, 29, 81, 82], "dataset": [1, 2, 3, 6, 7, 8, 12], "1": [1, 130], "3dcalc": [1, 2], "calcdroptr": 2, "drop": 2, "volum": [2, 6, 7, 12, 19, 29, 36, 81], "bold": [2, 10, 11, 67, 71, 80, 136, 146, 148], "despik": 3, "remov": [3, 45], "spike": [3, 100], "from": [3, 8, 9, 12, 26, 33, 36, 51, 61, 62, 63, 73, 76, 79, 84, 88, 93, 110, 111, 112, 113, 115, 119, 120, 121, 122, 130, 131, 144, 145, 146, 148], "time": [3, 7, 10, 72, 79, 80], "input": [3, 6, 12, 14, 19, 44, 54, 56, 63, 64, 71, 109, 121], "3ddespik": 3, "fwhmx": 4, "comput": [4, 5, 6, 7, 46, 51, 55, 63, 70, 72, 78, 85, 86, 89, 91, 100, 121, 130, 131, 148], "fwhm": 4, "gcor": 5, "averag": 5, "correl": 5, "between": [5, 44, 53], "everi": [5, 80], "other": [5, 161], "over": 5, "ani": 5, "given": [5, 56, 74], "outliercount": 6, "3dtoutcount": 6, "outlier": 6, "all": [6, 77, 111, 122], "sub": [6, 7], "each": [6, 7, 12, 50, 99, 109], "tr": [6, 7], "qualityindex": 7, "qualiti": [7, 85, 86, 145, 146, 148], "index": 7, "3dtqual": 7, "refitdeobliqu": 8, "deobliqu": 8, "ie": 8, "transform": [8, 13, 14, 24, 47, 53], "obliqu": 8, "cardin": 8, "3drefit": 8, "skullstrip": 9, "3dskullstrip": 9, "t1": 9, "weight": 9, "mri": [9, 82, 91, 121, 129], "extract": [9, 22, 23, 26, 36, 44, 50, 61, 62, 134], "surround": 9, "tissu": [9, 27, 42, 48, 132, 143], "tshift": 10, "slice": [10, 80, 112], "correct": [10, 15, 32, 54, 77, 133, 136], "mean": [10, 11, 18, 92, 137, 149], "option": [10, 11, 44], "3dtshift": 10, "tstatmean": 11, "3dtstat": 11, "volreg": 12, "regist": [12, 25, 132, 137], "base": [12, 150], "3dvolreg": 12, "affineiniti": 13, "initi": 13, "an": [13, 14, 19, 26, 54, 66, 68, 78, 108, 109, 138, 139, 140], "affin": [13, 28], "ant": [13, 14, 15, 16, 156], "affineinit": 13, "applytransform": 14, "accord": 14, "refer": [14, 68, 69, 80, 117, 145, 146, 148, 163], "set": [14, 69, 76], "n4biasfieldcorrect": 15, "n4": 15, "bia": [15, 54, 77, 133], "field": [15, 32, 54], "registr": [16, 28, 137], "computedki": 17, "reconstruct": 17, "diffus": [17, 37, 40], "signal": [17, 62, 93], "kurtosi": 17, "tensor": [17, 40, 51], "model": [17, 77, 78, 102, 103, 165], "denois": [18, 35, 131], "non": [18, 67], "local": 18, "algorithm": [18, 49], "nlmean": 18, "binar": [19, 56], "encod": [19, 142], "surfac": [19, 23], "file": [19, 38, 44, 54, 60, 61, 62, 93, 99, 111, 113, 115, 119, 120], "synthstrip": [20, 21, 134], "synthstripmriqc": 21, "skull": [21, 23, 131, 133], "strip": [21, 131, 133], "tool": [21, 37, 166, 174], "mri_synthstrip": 21, "freesurf": [21, 134, 158], "done": 21, "mriqc": [21, 85, 86, 94, 96, 98, 145, 146], "v22": [21, 85, 86, 145, 146], "06": [21, 85, 86, 145, 146], "bet": [22, 23], "fsl": [22, 23, 24, 26, 27, 28, 37, 42, 53, 159], "betsurfacesextract": 23, "inskul": 23, "outskul": 23, "outskin": 23, "convertxfm": 24, "modifi": 24, "matrix": [24, 53], "convert_xfm": 24, "epireg": 25, "epi": [25, 88, 137], "structur": [25, 130, 131, 133, 145], "extractroi": 26, "region": [26, 99], "interest": [26, 99, 101], "roi": [26, 61, 62, 93, 149], "fslroi": 26, "fastseg": 27, "segment": [27, 42, 60, 61, 62, 63, 77, 82, 83, 93, 144], "fast": 27, "flirt": 28, "linear": 28, "intra": 28, "inter": 28, "modal": [28, 75], "smooth": [29, 81], "gaussian": [29, 81], "computebrainvolum": 30, "constrainedsphericaldeconvolut": 31, "estim": [31, 40, 49, 60, 101, 102, 141], "fibr": 31, "orient": [31, 141], "distribut": [31, 141], "fod": [31, 141], "dwibiascorrect": 32, "perform": [32, 37, 38, 44, 52, 53], "b1": 32, "inhomogen": 32, "dwi": [32, 33, 34, 35, 36, 141, 142, 143], "dwibrainmask": 33, "gener": [33, 41, 42, 88, 94, 95, 96, 97, 98, 99, 111, 119, 120, 122, 123], "whole": [33, 82], "dwicat": 34, "concaten": [34, 43, 108], "multipl": [34, 104], "seri": [34, 72, 79], "dwidenois": 35, "data": [35, 36, 39, 91, 94, 96, 99, 110, 117, 118, 121, 128, 130, 138, 139, 140, 145, 146], "dwiextract": 36, "shell": 36, "b": 36, "0": 36, "dwipreproc": 37, "pre": [37, 138, 139, 140], "process": [37, 138, 139, 140, 155, 156, 157, 158, 159, 160, 161, 163], "": [37, 49, 53, 124], "topup": 37, "eddi": 37, "editingtrack": 38, "variou": [38, 149], "edit": 38, "oper": 38, "track": [38, 39], "filteringtrack": 39, "filter": [39, 118], "fittensor": 40, "generate5tt2gmwmi": 41, "appropri": 41, "seed": 41, "streamlin": [41, 52], "grei": [41, 76, 144], "matter": [41, 64, 76, 144, 149], "white": [41, 64, 76], "interfac": 41, "generate5ttfsl": 42, "five": 42, "type": [42, 44], "5tt": 42, "mrcat": 43, "sever": 43, "one": [43, 58, 105, 112], "mrconvert": 44, "convers": [44, 53], "differ": [44, 75], "subset": 44, "mrdegibb": 45, "gibb": 45, "ring": 45, "artifact": [45, 55, 130], "mrmath": 46, "summari": [46, 99], "statist": 46, "intens": [46, 48, 65], "along": 46, "specifi": 46, "axi": 46, "singl": [46, 120], "mrtransform": 47, "appli": [47, 54, 56, 66, 78], "spatial": [47, 77, 78, 135], "reslic": 47, "mtnormalis": 48, "multi": 48, "inform": [48, 115], "log": 48, "domain": 48, "normalis": [48, 76, 77], "responsesddholland": 49, "respons": 49, "function": [49, 50, 86, 91, 96, 121, 137, 146, 148], "spheric": [49, 50], "deconvolut": 49, "dholland": 49, "sphericalharmonicextract": 50, "peak": 50, "harmon": [50, 64], "tensormetr": 51, "metric": [51, 85, 86, 145, 146, 148], "tractographi": [52, 126], "transformfslconvert": 53, "format": 53, "mrtrix3": 53, "applybiascorrect": 54, "artifactmask": 55, "lower": 56, "threshold": [56, 63, 74], "conformimag": 57, "conform": 57, "t1w": [57, 143, 145], "convroi": 58, "convolut": 58, "enhanc": 59, "estimatesnr": 60, "snr": [60, 72], "extractroibylabel": 61, "specif": [61, 103], "label": [61, 62, 83, 84, 93], "extractsignalroi": 62, "gradientthreshold": 63, "histogram": 63, "magnitud": 63, "gradient": 63, "intensityclip": 65, "clip": 65, "rang": 65, "prescrib": 65, "percentil": 65, "binari": [66, 74], "nonsteadydetector": 67, "detect": 67, "steadi": 67, "state": 67, "begin": 67, "4d": 67, "resample1": 68, "resampl": 68, "resolut": [68, 69], "nilearn": [68, 69], "resample_to_img": [68, 69], "resample2": 69, "rotationmask": 70, "rotat": [70, 130], "sanit": 71, "tsnr": 72, "cours": 72, "templatefromtemplateflow": 73, "get": [73, 83, 84, 132, 145, 146], "templat": [73, 132, 135], "templateflow": 73, "make": [74, 92, 108, 109], "coregist": 75, "align": [75, 78], "togeth": 75, "scan": 75, "gm_wm_normal": 76, "newseg": 77, "same": [77, 79], "normalize12": 78, "deform": 78, "best": 78, "atla": 78, "necessari": 78, "thi": [78, 119], "normal": [78, 135], "realign": 79, "acquir": 79, "subject": [79, 132], "slicetim": 80, "bring": 80, "back": 80, "assemblynetdock": 82, "assemblynet": [82, 83, 84], "volbrain": 82, "getlabel": 83, "labelscorrespond": 84, "name": [84, 111, 119], "anatiqm": 85, "anatom": [85, 94, 145], "iqm": [85, 86, 145, 146, 148], "defin": [85, 86], "boldqm": 86, "boldiqmsplot": 87, "carpetparcel": 88, "dilat": 88, "brainmask": 88, "substract": 88, "itself": [88, 119], "union": 88, "obtain": [88, 115], "crown": 88, "parcel": 88, "computedvar": 89, "dvar": 89, "deriv": 89, "varianc": 89, "framewisedisplac": 90, "calcul": 90, "fd": 90, "framewis": 90, "displac": 90, "power2012": 90, "lateralizationindexcurv": 91, "iter": [91, 109], "later": [91, 149], "activ": 91, "mean_stddev_calc": 92, "standard": [92, 149], "deviat": [92, 149], "parametr": 92, "map": [92, 127, 128, 132], "plotsignalroi": 93, "plot": 93, "reportanatmriqc": 94, "report": [94, 95, 96, 97, 98, 163, 172, 174], "pipelin": [94, 95, 96, 97, 98, 115, 117, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 167, 168, 169, 170, 171, 172, 173], "reportco2inhalcvr": 95, "cvr": [95, 125, 150], "evalu": [95, 123, 125, 150], "hypercapnia": 95, "challeng": [95, 125], "reportfuncmriqc": 96, "reportge2rec": 97, "ge2rec": [97, 115, 127, 128], "langag": 97, "memori": [97, 127, 128], "reportgroupmriqc": 98, "group": 98, "result_collector": 99, "contain": [99, 109, 111, 113, 119, 122], "number": 100, "estimateconstrast": 101, "contrast": [101, 129], "spm12": [101, 102, 104, 105, 106, 107], "fmri": [101, 102, 103, 104, 105, 106, 107, 138, 139, 140], "manag": 101, "estimatemodel": 102, "classic": 102, "reml": 102, "restrict": 102, "maximum": 102, "likelihood": 102, "procedur": 102, "level1design": 103, "glm": [103, 150], "analysi": [103, 150], "multipleregressiondesign": 104, "spm": [104, 105, 106, 107, 150, 162, 165], "design": [104, 105, 106, 107], "regress": 104, "factori": [104, 105, 106, 107], "onesamplettestdesign": 105, "sampl": [105, 107], "t": [105, 106, 107], "test": [105, 106, 107], "pairedttestdesign": 106, "pair": 106, "twosamplettestdesign": 107, "two": 107, "concat_to_list": 108, "output": [108, 109, 118], "list": [108, 109, 111, 112, 113, 119, 120, 122, 144], "correspond": 108, "list1": [108, 109], "list2": [108, 109], "concat_to_list_of_list": 109, "element": [109, 112, 113], "delete_data": 110, "delet": 110, "databas": 110, "files_to_list": 111, "3": 111, "theses": 111, "filter_files_list": 112, "select": [112, 113], "more": 112, "find_in_list": 113, "1rst": 113, "pattern": 113, "get_conditions_from_csv": 114, "get_eprime_info_ge2rec": 115, "usu": 115, "e": 115, "prime": 115, "get_patient_nam": 116, "import_data": 117, "import": 117, "current": 117, "input_filt": 118, "To": 118, "content": 118, "browser": 118, "tab": 118, "anoth": 118, "list_dupl": 119, "list_to_fil": 120, "make_aif": 121, "arteri": 121, "aif": 121, "dynam": [121, 129], "perfus": [121, 129], "make_a_list": 122, "2": 122, "object": 122, "make_cvr_reg_physio": 123, "physiolog": 123, "regressor": 123, "cerebrovascular": [123, 125], "reactiv": [123, 125], "mia_process": [124, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175], "document": 124, "co2_inhal": [125, 168], "under": 125, "co2": 125, "dwi_whole_brain_tractograpi": 126, "mrtrix": [126, 160], "interact": [127, 128], "languag": [127, 128], "protocol": [127, 128], "ge2rec_without_behavioural_data": 128, "without": 128, "behaviour": 128, "perfdsc": 129, "suscept": 129, "anat_airmask": [130, 170], "air": 130, "hat": 130, "follow": 130, "step": 130, "mortamet2009": 130, "anat_headmask": [131, 170], "head": [131, 136], "dipi": [131, 157], "anat_mni_tpm": [132, 170], "probabl": 132, "them": 132, "space": [132, 137, 143], "anat_skullstrip": [133, 170], "anat_skullstrip_synthstrip": [134, 170], "workflow": [134, 145, 146], "anat_spatial_norm": [135, 170], "mni": [135, 137], "mni152nlin2009casym": 135, "bold_hmc": [136, 170], "motion": 136, "bold_mni_align": [137, 170], "check": 137, "out": 137, "bold_spatial_preprocessing1": [138, 170], "exampl": [138, 139, 140], "bold_spatial_preprocessing2": [139, 170], "bold_spatial_preprocessing3": 140, "dwi_fod_msmt_csd": [141, 170], "fiber": 141, "dwi_preprocess": 142, "preprocess": [142, 154, 155, 156, 157, 158, 159, 160, 161, 162, 170], "revers": 142, "phase": 142, "b0": 142, "dwi_tissue_boundari": 143, "boundari": 143, "registratiojn": 143, "spatial_mask": [144, 170], "result": 144, "previou": 144, "produc": [144, 149], "anat_mriqc": [145, 171], "t2w": 145, "bold_mriqc": [146, 171], "bold_signals_roi": 147, "bold_iqm": [148, 172], "extract_roi_param": [149, 172], "grai": 149, "indic": [149, 151], "beta": 149, "spmt": 149, "valu": 149, "bold_stat_cvr": [150, 173], "first": 150, "level": 150, "purpos": 151, "tabl": 151, "develop": 151, "packag": [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "subpackag": [152, 153, 154, 164, 167], "submodul": [152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 172, 173, 174], "info": 152, "modul": [152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 172, 173, 174], "process_matlab": 152, "spatial_preprocess": 162, "stat": [164, 165, 173], "cerebvascularreact": 168, "dwitractographi": 169, "dwi_whole_brain_tractographi": 169, "dwipreprocess": 170, "qualitycontrol": 171, "util": 174}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Automask brick": [[0, "automask-brick"]], "Create a brain-only mask of the image using AFNI 3dAutomask": [[0, "create-a-brain-only-mask-of-the-image-using-afni-3dautomask"]], "Calc brick": [[1, "calc-brick"]], "Voxel-by-voxel arithmetic on 3D datasets 1, using AFNI 3dcalc": [[1, "voxel-by-voxel-arithmetic-on-3d-datasets-using-afni-3dcalc"]], "CalcDropTRs brick": [[2, "calcdroptrs-brick"]], "Drop volumes of bold datasets, using AFNI 3dcalc": [[2, "drop-volumes-of-bold-datasets-using-afni-3dcalc"]], "Despike brick": [[3, "despike-brick"]], "Removes spikes from the 3D+time input dataset using AFNI 3dDespike": [[3, "removes-spikes-from-the-3d-time-input-dataset-using-afni-3ddespike"]], "FWHMx brick": [[4, "fwhmx-brick"]], "Computes FWHMs using AFNI FWHMx": [[4, "computes-fwhms-using-afni-fwhmx"]], "GCOR brick": [[5, "gcor-brick"]], "Using AFNI GCOR, computes the average correlation between every voxel and every other voxel, over any given mask": [[5, "using-afni-gcor-computes-the-average-correlation-between-every-voxel-and-every-other-voxel-over-any-given-mask"]], "OutlierCount brick": [[6, "outliercount-brick"]], "Using AFNI 3dToutcount, computes outliers for all sub-bricks (3D volumes for each TR) in the input dataset": [[6, "using-afni-3dtoutcount-computes-outliers-for-all-sub-bricks-3d-volumes-for-each-tr-in-the-input-dataset"]], "QualityIndex brick": [[7, "qualityindex-brick"]], "Computes a quality index for each sub-brick (3D volumes for each TR) in a 3D+time dataset using AFNI 3dTqual": [[7, "computes-a-quality-index-for-each-sub-brick-3d-volumes-for-each-tr-in-a-3d-time-dataset-using-afni-3dtqual"]], "RefitDeoblique brick": [[8, "refitdeoblique-brick"]], "Deoblique dataset (ie transform dataset from oblique to cardinal) using AFNI 3drefit": [[8, "deoblique-dataset-ie-transform-dataset-from-oblique-to-cardinal-using-afni-3drefit"]], "SkullStrip brick": [[9, "skullstrip-brick"]], "Using AFNI 3dSkullStrip, from T1-weighted MRI images, extract the brain from surrounding tissue": [[9, "using-afni-3dskullstrip-from-t1-weighted-mri-images-extract-the-brain-from-surrounding-tissue"]], "TShift brick": [[10, "tshift-brick"]], "Slice-time correction of bold images (using mean option of the AFNI 3dTshift)": [[10, "slice-time-correction-of-bold-images-using-mean-option-of-the-afni-3dtshift"]], "TStatMean brick": [[11, "tstatmean-brick"]], "Mean of bold images (using mean option of the AFNI 3dTstat)": [[11, "mean-of-bold-images-using-mean-option-of-the-afni-3dtstat"]], "Volreg brick": [[12, "volreg-brick"]], "Registers each 3D volume from the input dataset to the base volume using AFNI 3dvolreg": [[12, "registers-each-3d-volume-from-the-input-dataset-to-the-base-volume-using-afni-3dvolreg"]], "AffineInitializer brick": [[13, "affineinitializer-brick"]], "Initialize an affine transform using ANTs AffineInitizer": [[13, "initialize-an-affine-transform-using-ants-affineinitizer"]], "ApplyTransforms brick": [[14, "applytransforms-brick"]], "Using ANTs ApplyTransforms, transforms an input image according to a reference image and a transform (or a set of transforms)": [[14, "using-ants-applytransforms-transforms-an-input-image-according-to-a-reference-image-and-a-transform-or-a-set-of-transforms"]], "N4BiasFieldCorrection brick": [[15, "n4biasfieldcorrection-brick"]], "N4 Bias field correction using ANTs N4BiasFieldCorrection": [[15, "n4-bias-field-correction-using-ants-n4biasfieldcorrection"]], "Registration brick": [[16, "registration-brick"]], "Image registration using ANTs Registration": [[16, "image-registration-using-ants-registration"]], "ComputeDKI brick": [[17, "computedki-brick"]], "Reconstruction of the diffusion signal with the kurtosis tensor model": [[17, "reconstruction-of-the-diffusion-signal-with-the-kurtosis-tensor-model"]], "Denoise brick": [[18, "denoise-brick"]], "Denoise image using Non-Local Means algorithm (NLMEANS)": [[18, "denoise-image-using-non-local-means-algorithm-nlmeans"]], "Binarize brick": [[19, "binarize-brick"], [56, "binarize-brick"]], "Binarize an input volume (or volume-encoded surface file)": [[19, "binarize-an-input-volume-or-volume-encoded-surface-file"]], "SynthStrip brick": [[20, "synthstrip-brick"]], "SynthStripMriqc brick": [[21, "synthstripmriqc-brick"]], "Skull-stripping using SynthStrip tool (mri_synthstrip in FreeSurfer) as done in mriqc v22.06": [[21, "skull-stripping-using-synthstrip-tool-mri-synthstrip-in-freesurfer-as-done-in-mriqc-v22-06"]], "Bet brick": [[22, "bet-brick"]], "Brain Extraction with BET (FSL)": [[22, "brain-extraction-with-bet-fsl"]], "BetSurfacesExtraction brick": [[23, "betsurfacesextraction-brick"]], "Surfaces (skull, inskull, outskull, outskin) extraction using BET (FSL)": [[23, "surfaces-skull-inskull-outskull-outskin-extraction-using-bet-fsl"]], "ConvertXFM brick": [[24, "convertxfm-brick"]], "Modify transformation matrix using convert_xfm (FSL)": [[24, "modify-transformation-matrix-using-convert-xfm-fsl"]], "EpiReg brick": [[25, "epireg-brick"]], "Register EPI images to structural images": [[25, "register-epi-images-to-structural-images"]], "ExtractROI brick": [[26, "extractroi-brick"]], "Extract region of interest (ROI) from an image using fslroi (FSL)": [[26, "extract-region-of-interest-roi-from-an-image-using-fslroi-fsl"]], "FastSegment brick": [[27, "fastsegment-brick"]], "Brain tissue segmentation using FAST (FSL)": [[27, "brain-tissue-segmentation-using-fast-fsl"]], "Flirt brick": [[28, "flirt-brick"]], "Linear (affine) intra- and inter-modal brain image registration using FLIRT (FSL)": [[28, "linear-affine-intra-and-inter-modal-brain-image-registration-using-flirt-fsl"]], "Smooth brick": [[29, "smooth-brick"], [81, "smooth-brick"]], "3D Gaussian smoothing of image volumes": [[29, "d-gaussian-smoothing-of-image-volumes"], [81, "d-gaussian-smoothing-of-image-volumes"]], "ComputeBrainVolume brick": [[30, "computebrainvolume-brick"]], "ConstrainedSphericalDeconvolution brick": [[31, "constrainedsphericaldeconvolution-brick"]], "Estimate fibre orientation distributions (FOD)": [[31, "estimate-fibre-orientation-distributions-fod"]], "DWIBiasCorrect brick": [[32, "dwibiascorrect-brick"]], "Perform B1 field inhomogeneity correction for a DWI image": [[32, "perform-b1-field-inhomogeneity-correction-for-a-dwi-image"]], "DWIBrainMask brick": [[33, "dwibrainmask-brick"]], "Generates a whole brain mask from a DWI image.": [[33, "generates-a-whole-brain-mask-from-a-dwi-image"]], "DWICat brick": [[34, "dwicat-brick"]], "Concatenating multiple DWI series": [[34, "concatenating-multiple-dwi-series"]], "DWIDenoise brick": [[35, "dwidenoise-brick"]], "Denoise DWI data": [[35, "denoise-dwi-data"]], "DWIExtract brick": [[36, "dwiextract-brick"]], "Extract shell or b=0 volumes from DWI data": [[36, "extract-shell-or-b-0-volumes-from-dwi-data"]], "DWIPreproc brick": [[37, "dwipreproc-brick"]], "Perform diffusion image pre-processing using FSL\u2019s topup and eddy tool": [[37, "perform-diffusion-image-pre-processing-using-fsls-topup-and-eddy-tool"]], "EditingTrack brick": [[38, "editingtrack-brick"]], "Perform various editing operations on track files": [[38, "perform-various-editing-operations-on-track-files"]], "FilteringTrack brick": [[39, "filteringtrack-brick"]], "Filter tracking data": [[39, "filter-tracking-data"]], "FitTensor brick": [[40, "fittensor-brick"]], "Diffusion tensor estimation": [[40, "diffusion-tensor-estimation"]], "Generate5tt2gmwmi brick": [[41, "generate5tt2gmwmi-brick"]], "Generate a mask image appropriate for seeding streamlines on the grey matter-white matter interface": [[41, "generate-a-mask-image-appropriate-for-seeding-streamlines-on-the-grey-matter-white-matter-interface"]], "Generate5ttfsl brick": [[42, "generate5ttfsl-brick"]], "Generate a five-tissues-type (5TT) segmented tissue image with FSL": [[42, "generate-a-five-tissues-type-5tt-segmented-tissue-image-with-fsl"]], "MRCat brick": [[43, "mrcat-brick"]], "Concatenate several images into one": [[43, "concatenate-several-images-into-one"]], "MRConvert brick": [[44, "mrconvert-brick"]], "Perform conversion between different file types and optionally extract a subset of the input image": [[44, "perform-conversion-between-different-file-types-and-optionally-extract-a-subset-of-the-input-image"]], "MRDeGibbs brick": [[45, "mrdegibbs-brick"]], "Remove Gibbs ringing artifacts": [[45, "remove-gibbs-ringing-artifacts"]], "MRMath brick": [[46, "mrmath-brick"]], "Compute summary statistic on image intensities along a specified axis of a single image": [[46, "compute-summary-statistic-on-image-intensities-along-a-specified-axis-of-a-single-image"]], "MRTransform brick": [[47, "mrtransform-brick"]], "Apply spatial transformations or reslice images": [[47, "apply-spatial-transformations-or-reslice-images"]], "MTNormalise brick": [[48, "mtnormalise-brick"]], "Multi-tissue informed log-domain intensity normalisation": [[48, "multi-tissue-informed-log-domain-intensity-normalisation"]], "ResponseSDDhollander brick": [[49, "responsesddhollander-brick"]], "Estimate response function(s) for spherical deconvolution using the Dhollander algorithm": [[49, "estimate-response-function-s-for-spherical-deconvolution-using-the-dhollander-algorithm"]], "SphericalHarmonicExtraction brick": [[50, "sphericalharmonicextraction-brick"]], "Extract the peaks of a spherical harmonic function in each voxel": [[50, "extract-the-peaks-of-a-spherical-harmonic-function-in-each-voxel"]], "TensorMetrics brick": [[51, "tensormetrics-brick"]], "Compute metrics from tensors": [[51, "compute-metrics-from-tensors"]], "Tractography brick": [[52, "tractography-brick"]], "Performs streamlines tractography": [[52, "performs-streamlines-tractography"]], "TransformFSLConvert brick": [[53, "transformfslconvert-brick"]], "Perform conversion between FSL\u2019s transformation matrix format to mrtrix3\u2019s": [[53, "perform-conversion-between-fsls-transformation-matrix-format-to-mrtrix3s"]], "ApplyBiasCorrection brick": [[54, "applybiascorrection-brick"]], "Apply bias field correction to an input file using the bias image": [[54, "apply-bias-field-correction-to-an-input-file-using-the-bias-image"]], "ArtifactMask brick": [[55, "artifactmask-brick"]], "Computes artifact mask": [[55, "computes-artifact-mask"]], "Binarizes the input image applying the given lower threshold": [[56, "binarizes-the-input-image-applying-the-given-lower-threshold"]], "ConformImage brick": [[57, "conformimage-brick"]], "Conform T1w image": [[57, "conform-t1w-image"]], "ConvROI brick": [[58, "convroi-brick"]], "Image convolution with one image": [[58, "image-convolution-with-one-image"]], "Enhance brick": [[59, "enhance-brick"]], "Image enhancing": [[59, "image-enhancing"]], "EstimateSNR brick": [[60, "estimatesnr-brick"]], "Estimate SNR using a segmentation file": [[60, "estimate-snr-using-a-segmentation-file"]], "ExtractROIbyLabel brick": [[61, "extractroibylabel-brick"]], "Extract a specific ROI from a segmentation file using labels": [[61, "extract-a-specific-roi-from-a-segmentation-file-using-labels"]], "ExtractSignalROI brick": [[62, "extractsignalroi-brick"]], "Extract signals from ROI using a segmentation file with label": [[62, "extract-signals-from-roi-using-a-segmentation-file-with-label"]], "GradientThreshold brick": [[63, "gradientthreshold-brick"]], "Computes a threshold from the histogram of the magnitude gradient image using a segmentation of the input image": [[63, "computes-a-threshold-from-the-histogram-of-the-magnitude-gradient-image-using-a-segmentation-of-the-input-image"]], "Harmonize brick": [[64, "harmonize-brick"]], "Harmonize input image using a white matter mask": [[64, "harmonize-input-image-using-a-white-matter-mask"]], "IntensityClip brick": [[65, "intensityclip-brick"]], "Clip the intensity range as prescribed by the percentiles": [[65, "clip-the-intensity-range-as-prescribed-by-the-percentiles"]], "Mask brick": [[66, "mask-brick"]], "Apply a binary mask to an image": [[66, "apply-a-binary-mask-to-an-image"]], "NonSteadyDetector brick": [[67, "nonsteadydetector-brick"]], "Detect non-steady-state at the beginning of a bold 4D image": [[67, "detect-non-steady-state-at-the-beginning-of-a-bold-4d-image"]], "Resample1 brick": [[68, "resample1-brick"]], "Resamples an image to the resolution of a reference image using nilearn.image.resample_to_img()": [[68, "resamples-an-image-to-the-resolution-of-a-reference-image-using-nilearn-image-resample-to-img"]], "Resample2 brick": [[69, "resample2-brick"]], "Sets images to the resolution of a reference image using using nilearn.image.resample_to_img()": [[69, "sets-images-to-the-resolution-of-a-reference-image-using-using-nilearn-image-resample-to-img"]], "RotationMask brick": [[70, "rotationmask-brick"]], "Compute the rotation mask image": [[70, "compute-the-rotation-mask-image"]], "Sanitize brick": [[71, "sanitize-brick"]], "Sanitize input bold image": [[71, "sanitize-input-bold-image"]], "TSNR brick": [[72, "tsnr-brick"]], "Computes the time-course SNR for a time series": [[72, "computes-the-time-course-snr-for-a-time-series"]], "TemplateFromTemplateFlow brick": [[73, "templatefromtemplateflow-brick"]], "Get template image from TemplateFlow": [[73, "get-template-image-from-templateflow"]], "Threshold brick": [[74, "threshold-brick"]], "Makes a binary mask image at a given threshold": [[74, "makes-a-binary-mask-image-at-a-given-threshold"]], "Coregister brick": [[75, "coregister-brick"]], "Align together scans of different modalities": [[75, "align-together-scans-of-different-modalities"]], "GM_WM_Normalize brick": [[76, "gm-wm-normalize-brick"]], "Normalises only the grey or/and white matter from a set of images": [[76, "normalises-only-the-grey-or-and-white-matter-from-a-set-of-images"]], "NewSegment brick": [[77, "newsegment-brick"]], "Segments,  bias  corrects  and  spatially normalises - all in the same model": [[77, "segments-bias-corrects-and-spatially-normalises-all-in-the-same-model"]], "Normalize12 brick": [[78, "normalize12-brick"]], "Computes the deformation that best aligns the model (atlas) with an image, then if necessary, apply this deformation to spatially normalize images": [[78, "computes-the-deformation-that-best-aligns-the-model-atlas-with-an-image-then-if-necessary-apply-this-deformation-to-spatially-normalize-images"]], "Realign brick": [[79, "realign-brick"]], "Realigns a time-series of images acquired from the same subject": [[79, "realigns-a-time-series-of-images-acquired-from-the-same-subject"]], "SliceTiming brick": [[80, "slicetiming-brick"]], "Bring back every slice of a BOLD image to the reference slice time.": [[80, "bring-back-every-slice-of-a-bold-image-to-the-reference-slice-time"]], "AssemblyNetDocker brick": [[82, "assemblynetdocker-brick"]], "3D Whole Brain MRI Segmentation using AssemblyNet (volBrain)": [[82, "d-whole-brain-mri-segmentation-using-assemblynet-volbrain"]], "GetLabels brick": [[83, "getlabels-brick"]], "Get Assemblynet segmentation labels": [[83, "get-assemblynet-segmentation-labels"]], "LabelsCorrespondence brick": [[84, "labelscorrespondence-brick"]], "Get AssemblyNet labels names or get labels from names": [[84, "get-assemblynet-labels-names-or-get-labels-from-names"]], "AnatIQMs brick": [[85, "anatiqms-brick"]], "Computes the anatomical Image Quality Metrics (IQMs) as defined in mriqc v22.06": [[85, "computes-the-anatomical-image-quality-metrics-iqms-as-defined-in-mriqc-v22-06"]], "BoldQMs brick": [[86, "boldqms-brick"]], "Computes the functional Image Quality Metrics (IQMs) as defined in mriqc v22.06": [[86, "computes-the-functional-image-quality-metrics-iqms-as-defined-in-mriqc-v22-06"]], "BoldIQMsPlot brick": [[87, "boldiqmsplot-brick"]], "CarpetParcellation brick": [[88, "carpetparcellation-brick"]], "Dilate brainmask, substract from itself then generate the union of obtained crown mask and epi parcellation": [[88, "dilate-brainmask-substract-from-itself-then-generate-the-union-of-obtained-crown-mask-and-epi-parcellation"]], "ComputeDVARS brick": [[89, "computedvars-brick"]], "Computes DVARS (derivative of variance)": [[89, "computes-dvars-derivative-of-variance"]], "FramewiseDisplacement brick": [[90, "framewisedisplacement-brick"]], "Calculate the FD (framewise displacement) as in [Power2012]": [[90, "calculate-the-fd-framewise-displacement-as-in-power2012"]], "LateralizationIndexCurve brick": [[91, "lateralizationindexcurve-brick"]], "Compute iteratively the lateralization of activation in functional MRI data.": [[91, "compute-iteratively-the-lateralization-of-activation-in-functional-mri-data"]], "Mean_stdDev_calc brick": [[92, "mean-stddev-calc-brick"]], "Makes the mean and standard deviation of parametric maps": [[92, "makes-the-mean-and-standard-deviation-of-parametric-maps"]], "PlotSignalROI brick": [[93, "plotsignalroi-brick"]], "Plot signals from ROI using a segmentation file with label": [[93, "plot-signals-from-roi-using-a-segmentation-file-with-label"]], "ReportAnatMriqc brick": [[94, "reportanatmriqc-brick"]], "Generates the report for anatomical data in mriqc pipeline": [[94, "generates-the-report-for-anatomical-data-in-mriqc-pipeline"]], "ReportCO2inhalCvr brick": [[95, "reportco2inhalcvr-brick"]], "Generates the report for CVR evaluation using hypercapnia challenge pipeline": [[95, "generates-the-report-for-cvr-evaluation-using-hypercapnia-challenge-pipeline"]], "ReportFuncMriqc brick": [[96, "reportfuncmriqc-brick"]], "Generates the report for functional data in mriqc pipeline": [[96, "generates-the-report-for-functional-data-in-mriqc-pipeline"]], "ReportGE2REC brick": [[97, "reportge2rec-brick"]], "Generates the report for GE2REC pipeline (langage and memory)": [[97, "generates-the-report-for-ge2rec-pipeline-langage-and-memory"]], "ReportGroupMriqc brick": [[98, "reportgroupmriqc-brick"]], "Generate a group report for mriqc pipeline": [[98, "generate-a-group-report-for-mriqc-pipeline"]], "Result_collector brick": [[99, "result-collector-brick"]], "Generates files containing summary data for each region of interest": [[99, "generates-files-containing-summary-data-for-each-region-of-interest"]], "Spikes brick": [[100, "spikes-brick"]], "Computes the number of spikes": [[100, "computes-the-number-of-spikes"]], "EstimateConstrast brick": [[101, "estimateconstrast-brick"]], "Estimate contrasts of interest (SPM12 fMRI contrast manager)": [[101, "estimate-contrasts-of-interest-spm12-fmri-contrast-manager"]], "EstimateModel brick": [[102, "estimatemodel-brick"]], "Model Estimation using classical (ReML - Restricted Maximum Likelihood) procedure (SPM12 fMRI model estimation)": [[102, "model-estimation-using-classical-reml-restricted-maximum-likelihood-procedure-spm12-fmri-model-estimation"]], "Level1Design brick": [[103, "level1design-brick"]], "fMRI model specification for GLM analysis.": [[103, "fmri-model-specification-for-glm-analysis"]], "MultipleRegressionDesign brick": [[104, "multipleregressiondesign-brick"]], "Create SPM design for multiple regression (SPM12 fMRI factorial Design)": [[104, "create-spm-design-for-multiple-regression-spm12-fmri-factorial-design"]], "OneSampleTTestDesign brick": [[105, "onesamplettestdesign-brick"]], "Create SPM design for one sample t-test (SPM12 fMRI factorial Design)": [[105, "create-spm-design-for-one-sample-t-test-spm12-fmri-factorial-design"]], "PairedTTestDesign brick": [[106, "pairedttestdesign-brick"]], "Create SPM design for paired t-test (SPM12 fMRI factorial Design)": [[106, "create-spm-design-for-paired-t-test-spm12-fmri-factorial-design"]], "TwoSampleTTestDesign brick": [[107, "twosamplettestdesign-brick"]], "Create SPM design for two sample t-test (SPM12 fMRI factorial Design)": [[107, "create-spm-design-for-two-sample-t-test-spm12-fmri-factorial-design"]], "Concat_to_list  brick": [[108, "concat-to-list-brick"]], "Make an output list corresponding to the concatenation of list1 and list2": [[108, "make-an-output-list-corresponding-to-the-concatenation-of-list1-and-list2"]], "Concat_to_list_of_list brick": [[109, "concat-to-list-of-list-brick"]], "Make an output list of list containing the iteration of the input list1 with each element of the input list2": [[109, "make-an-output-list-of-list-containing-the-iteration-of-the-input-list1-with-each-element-of-the-input-list2"]], "Delete_data brick": [[110, "delete-data-brick"]], "Delete data from database": [[110, "delete-data-from-database"]], "Files_To_List brick": [[111, "files-to-list-brick"]], "From 3 file names, generating a list containing all theses file names": [[111, "from-3-file-names-generating-a-list-containing-all-theses-file-names"]], "Filter_Files_List brick": [[112, "filter-files-list-brick"]], "Selects one or more (slicing) elements from a list": [[112, "selects-one-or-more-slicing-elements-from-a-list"]], "Find_In_List brick": [[113, "find-in-list-brick"]], "From a list of files, select the 1rst element that contains a pattern": [[113, "from-a-list-of-files-select-the-1rst-element-that-contains-a-pattern"]], "Get_Conditions_From_csv brick": [[114, "get-conditions-from-csv-brick"]], "Get_Eprime_info_GE2REC brick": [[115, "get-eprime-info-ge2rec-brick"]], "Obtain usuful information for GE2REC pipeline from E-Prime file": [[115, "obtain-usuful-information-for-ge2rec-pipeline-from-e-prime-file"]], "Get_Patient_Name brick": [[116, "get-patient-name-brick"]], "Import_Data  brick": [[117, "import-data-brick"]], "Import reference data into the current pipeline": [[117, "import-reference-data-into-the-current-pipeline"]], "Input_Filter brick": [[118, "input-filter-brick"]], "To filter the content of the Data Browser tab or the output data of another brick": [[118, "to-filter-the-content-of-the-data-browser-tab-or-the-output-data-of-another-brick"]], "List_Duplicate brick": [[119, "list-duplicate-brick"]], "From a file name, generating a list containing this file name and the file name itself": [[119, "from-a-file-name-generating-a-list-containing-this-file-name-and-the-file-name-itself"]], "List_To_File brick": [[120, "list-to-file-brick"]], "From a list of files, generation of a single file": [[120, "from-a-list-of-files-generation-of-a-single-file"]], "Make_AIF brick": [[121, "make-aif-brick"]], "Compute the Arterial Input Function (AIF) from dynamic MRI perfusion data": [[121, "compute-the-arterial-input-function-aif-from-dynamic-mri-perfusion-data"]], "Make_a_list brick": [[122, "make-a-list-brick"]], "From 2 objects, generating a list containing all these objects": [[122, "from-2-objects-generating-a-list-containing-all-these-objects"]], "Make_CVR_reg_physio brick": [[123, "make-cvr-reg-physio-brick"]], "Generate the physiological regressor for cerebrovascular reactivity evaluation": [[123, "generate-the-physiological-regressor-for-cerebrovascular-reactivity-evaluation"]], "Mia_processes\u2019s documentation": [[124, "mia-processes-s-documentation"]], "CO2_inhalation pipeline": [[125, "co2-inhalation-pipeline"]], "Cerebrovascular reactivity (CVR) evaluation under CO2 challenge": [[125, "cerebrovascular-reactivity-cvr-evaluation-under-co2-challenge"]], "Dwi_whole_brain_tractograpy pipeline": [[126, "dwi-whole-brain-tractograpy-pipeline"]], "Brain Tractography with MRTrix": [[126, "brain-tractography-with-mrtrix"]], "GE2REC pipeline": [[127, "ge2rec-pipeline"]], "Interactive mapping of language and memory with the GE2REC protocol": [[127, "interactive-mapping-of-language-and-memory-with-the-ge2rec-protocol"]], "GE2REC_without_behavioural_data pipeline": [[128, "ge2rec-without-behavioural-data-pipeline"]], "Interactive mapping of language and memory with the GE2REC protocol without behavioural data": [[128, "interactive-mapping-of-language-and-memory-with-the-ge2rec-protocol-without-behavioural-data"]], "Perfdsc pipeline": [[129, "perfdsc-pipeline"]], "Perfusion Dynamic Susceptibility Contrast MRI": [[129, "perfusion-dynamic-susceptibility-contrast-mri"]], "Anat_airmask pipeline": [[130, "anat-airmask-pipeline"]], "Compute rotation mask, air mask, artifact mask and hat mask for structural data following step 1 from [Mortamet2009]": [[130, "compute-rotation-mask-air-mask-artifact-mask-and-hat-mask-for-structural-data-following-step-1-from-mortamet2009"]], "Anat_headmask pipeline": [[131, "anat-headmask-pipeline"]], "Compute head mask from skull stripped structural image using Denoise from Dipy": [[131, "compute-head-mask-from-skull-stripped-structural-image-using-denoise-from-dipy"]], "Anat_mni_tpms pipeline": [[132, "anat-mni-tpms-pipeline"]], "Get templates tissues probability map and register them in subject space": [[132, "get-templates-tissues-probability-map-and-register-them-in-subject-space"]], "Anat_skullstrip pipeline": [[133, "anat-skullstrip-pipeline"]], "Bias correction and skull stripping of a structural image": [[133, "bias-correction-and-skull-stripping-of-a-structural-image"]], "Anat_skullstrip_synthstrip pipeline": [[134, "anat-skullstrip-synthstrip-pipeline"]], "Create a brain-extraction workflow using SynthStrip (Freesurfer)": [[134, "create-a-brain-extraction-workflow-using-synthstrip-freesurfer"]], "Anat_spatial_norm pipeline": [[135, "anat-spatial-norm-pipeline"]], "Spatial normalization to MNI (using MNI152NLin2009cAsym template)": [[135, "spatial-normalization-to-mni-using-mni152nlin2009casym-template"]], "Bold_hmc pipeline": [[136, "bold-hmc-pipeline"]], "Head motion correction of a bold image": [[136, "head-motion-correction-of-a-bold-image"]], "Bold_mni_align pipeline": [[137, "bold-mni-align-pipeline"]], "Register a mean functional image EPI in MNI space (for checking out registration)": [[137, "register-a-mean-functional-image-epi-in-mni-space-for-checking-out-registration"]], "Bold_spatial_preprocessing1 pipeline": [[138, "bold-spatial-preprocessing1-pipeline"]], "An example of fMRI data pre-processing": [[138, "an-example-of-fmri-data-pre-processing"], [139, "an-example-of-fmri-data-pre-processing"], [140, "an-example-of-fmri-data-pre-processing"]], "Bold_spatial_preprocessing2 pipeline": [[139, "bold-spatial-preprocessing2-pipeline"]], "Bold_spatial_preprocessing3 pipeline": [[140, "bold-spatial-preprocessing3-pipeline"]], "Dwi_fod_msmt_csd pipeline": [[141, "dwi-fod-msmt-csd-pipeline"]], "Estimate DWI fiber orientation distribution (FOD)": [[141, "estimate-dwi-fiber-orientation-distribution-fod"]], "Dwi_preprocessing pipeline": [[142, "dwi-preprocessing-pipeline"]], "DWI preprocessing using a reverse-phase encoded b0": [[142, "dwi-preprocessing-using-a-reverse-phase-encoded-b0"]], "Dwi_tissue_boundaries pipeline": [[143, "dwi-tissue-boundaries-pipeline"]], "Create tissue boundaries with a T1w and registratiojn in DWI space": [[143, "create-tissue-boundaries-with-a-t1w-and-registratiojn-in-dwi-space"]], "Spatial_mask pipeline": [[144, "spatial-mask-pipeline"]], "From a list of images resulting from a previous segmentation, produces a grey matter mask": [[144, "from-a-list-of-images-resulting-from-a-previous-segmentation-produces-a-grey-matter-mask"]], "Anat_mriqc pipeline": [[145, "anat-mriqc-pipeline"]], "Get no-reference IQMs (image quality metrics) from structural (T1w and T2w) data using mriqc anatomical workflow (mriqc v22.06)": [[145, "get-no-reference-iqms-image-quality-metrics-from-structural-t1w-and-t2w-data-using-mriqc-anatomical-workflow-mriqc-v22-06"]], "Bold_mriqc pipeline": [[146, "bold-mriqc-pipeline"]], "Get no-reference IQMs (image quality metrics) from functional (BOLD) data using mriqc functional workflow (mriqc v22.06)": [[146, "get-no-reference-iqms-image-quality-metrics-from-functional-bold-data-using-mriqc-functional-workflow-mriqc-v22-06"]], "Bold_signals_roi pipeline": [[147, "bold-signals-roi-pipeline"]], "Bold_iqms pipeline": [[148, "bold-iqms-pipeline"]], "Compute no-reference IQMs (image quality metrics) from functional (BOLD)": [[148, "compute-no-reference-iqms-image-quality-metrics-from-functional-bold"]], "Extract_roi_param pipeline": [[149, "extract-roi-param-pipeline"]], "Produces gray matter masks for various ROIs and means, standard deviations, laterality indices for beta and spmT values in these ROIs": [[149, "produces-gray-matter-masks-for-various-rois-and-means-standard-deviations-laterality-indices-for-beta-and-spmt-values-in-these-rois"]], "Bold_stat_cvr brick": [[150, "bold-stat-cvr-brick"]], "SPM-based first level GLM analysis used in the CVR evaluation": [[150, "spm-based-first-level-glm-analysis-used-in-the-cvr-evaluation"]], "Purpose": [[151, "purpose"]], "Indices and tables for developers": [[151, "indices-and-tables-for-developers"]], "mia_processes package": [[152, "module-mia_processes"]], "Subpackages": [[152, "subpackages"], [153, "subpackages"], [154, "subpackages"], [164, "subpackages"], [167, "subpackages"]], "Submodules": [[152, "submodules"], [155, "submodules"], [156, "submodules"], [157, "submodules"], [158, "submodules"], [159, "submodules"], [160, "submodules"], [161, "submodules"], [162, "submodules"], [163, "submodules"], [165, "submodules"], [166, "submodules"], [168, "submodules"], [169, "submodules"], [170, "submodules"], [171, "submodules"], [172, "submodules"], [173, "submodules"], [174, "submodules"]], "mia_processes.info module": [[152, "module-mia_processes.info"]], "mia_processes.process_matlab module": [[152, "module-mia_processes.process_matlab"]], "mia_processes.bricks package": [[153, "module-mia_processes.bricks"]], "mia_processes.bricks.preprocess package": [[154, "module-mia_processes.bricks.preprocess"]], "mia_processes.bricks.preprocess.afni package": [[155, "module-mia_processes.bricks.preprocess.afni"]], "mia_processes.bricks.preprocess.afni.processes module": [[155, "module-mia_processes.bricks.preprocess.afni.processes"]], "mia_processes.bricks.preprocess.ants package": [[156, "module-mia_processes.bricks.preprocess.ants"]], "mia_processes.bricks.preprocess.ants.processes module": [[156, "module-mia_processes.bricks.preprocess.ants.processes"]], "mia_processes.bricks.preprocess.dipy package": [[157, "module-mia_processes.bricks.preprocess.dipy"]], "mia_processes.bricks.preprocess.dipy.processes module": [[157, "module-mia_processes.bricks.preprocess.dipy.processes"]], "mia_processes.bricks.preprocess.freesurfer package": [[158, "module-mia_processes.bricks.preprocess.freesurfer"]], "mia_processes.bricks.preprocess.freesurfer.processes module": [[158, "module-mia_processes.bricks.preprocess.freesurfer.processes"]], "mia_processes.bricks.preprocess.fsl package": [[159, "module-mia_processes.bricks.preprocess.fsl"]], "mia_processes.bricks.preprocess.fsl.processes module": [[159, "module-mia_processes.bricks.preprocess.fsl.processes"]], "mia_processes.bricks.preprocess.mrtrix package": [[160, "module-mia_processes.bricks.preprocess.mrtrix"]], "mia_processes.bricks.preprocess.mrtrix.processes module": [[160, "module-mia_processes.bricks.preprocess.mrtrix.processes"]], "mia_processes.bricks.preprocess.others package": [[161, "module-mia_processes.bricks.preprocess.others"]], "mia_processes.bricks.preprocess.others.processing module": [[161, "module-mia_processes.bricks.preprocess.others.processing"]], "mia_processes.bricks.preprocess.spm package": [[162, "module-mia_processes.bricks.preprocess.spm"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing module": [[162, "module-mia_processes.bricks.preprocess.spm.spatial_preprocessing"]], "mia_processes.bricks.reports package": [[163, "module-mia_processes.bricks.reports"]], "mia_processes.bricks.reports.processes module": [[163, "module-mia_processes.bricks.reports.processes"]], "References": [[163, null]], "mia_processes.bricks.reports.reporting module": [[163, "module-mia_processes.bricks.reports.reporting"]], "mia_processes.bricks.stat package": [[164, "module-mia_processes.bricks.stat"]], "mia_processes.bricks.stat.spm package": [[165, "module-mia_processes.bricks.stat.spm"]], "mia_processes.bricks.stat.spm.model module": [[165, "module-mia_processes.bricks.stat.spm.model"]], "mia_processes.bricks.tools package": [[166, "module-mia_processes.bricks.tools"]], "mia_processes.bricks.tools.tools module": [[166, "module-mia_processes.bricks.tools.tools"]], "mia_processes.pipelines package": [[167, "module-mia_processes.pipelines"]], "mia_processes.pipelines.CerebVascularReact package": [[168, "module-mia_processes.pipelines.CerebVascularReact"]], "mia_processes.pipelines.CerebVascularReact.co2_inhalation module": [[168, "module-mia_processes.pipelines.CerebVascularReact.co2_inhalation"]], "mia_processes.pipelines.DWITractography package": [[169, "module-mia_processes.pipelines.DWITractography"]], "mia_processes.pipelines.DWITractography.dwi_whole_brain_tractography module": [[169, "module-mia_processes.pipelines.DWITractography.dwi_whole_brain_tractography"]], "mia_processes.pipelines.preprocess package": [[170, "module-mia_processes.pipelines.preprocess"]], "mia_processes.pipelines.preprocess.anat_airmask module": [[170, "module-mia_processes.pipelines.preprocess.anat_airmask"]], "mia_processes.pipelines.preprocess.anat_headmask module": [[170, "module-mia_processes.pipelines.preprocess.anat_headmask"]], "mia_processes.pipelines.preprocess.anat_mni_tpms module": [[170, "module-mia_processes.pipelines.preprocess.anat_mni_tpms"]], "mia_processes.pipelines.preprocess.anat_skullstrip module": [[170, "module-mia_processes.pipelines.preprocess.anat_skullstrip"]], "mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip module": [[170, "module-mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip"]], "mia_processes.pipelines.preprocess.anat_spatial_norm module": [[170, "module-mia_processes.pipelines.preprocess.anat_spatial_norm"]], "mia_processes.pipelines.preprocess.bold_hmc module": [[170, "module-mia_processes.pipelines.preprocess.bold_hmc"]], "mia_processes.pipelines.preprocess.bold_mni_align module": [[170, "module-mia_processes.pipelines.preprocess.bold_mni_align"]], "mia_processes.pipelines.preprocess.bold_spatial_preprocessing1 module": [[170, "module-mia_processes.pipelines.preprocess.bold_spatial_preprocessing1"]], "mia_processes.pipelines.preprocess.bold_spatial_preprocessing2 module": [[170, "module-mia_processes.pipelines.preprocess.bold_spatial_preprocessing2"]], "mia_processes.pipelines.preprocess.dwi_fod_msmt_csd module": [[170, "module-mia_processes.pipelines.preprocess.dwi_fod_msmt_csd"]], "mia_processes.pipelines.preprocess.dwipreprocessing module": [[170, "module-mia_processes.pipelines.preprocess.dwi_preprocessing"]], "mia_processes.pipelines.preprocess.spatial_mask module": [[170, "module-mia_processes.pipelines.preprocess.spatial_mask"]], "mia_processes.pipelines.qualityControl package": [[171, "module-mia_processes.pipelines.qualityControl"]], "mia_processes.pipelines.qualityControl.anat_mriqc module": [[171, "module-mia_processes.pipelines.qualityControl.anat_mriqc"]], "mia_processes.pipelines.qualityControl.bold_mriqc module": [[171, "module-mia_processes.pipelines.qualityControl.bold_mriqc"]], "mia_processes.pipelines.reports package": [[172, "module-mia_processes.pipelines.reports"]], "mia_processes.pipelines.reports.bold_iqms module": [[172, "module-mia_processes.pipelines.reports.bold_iqms"]], "mia_processes.pipelines.reports.extract_roi_param module": [[172, "module-mia_processes.pipelines.reports.extract_roi_param"]], "mia_processes.pipelines.stat package": [[173, "module-mia_processes.pipelines.stat"]], "mia_processes.pipelines.stat.bold_stat_cvr module": [[173, "module-mia_processes.pipelines.stat.bold_stat_cvr"]], "mia_processes.utils package": [[174, "module-mia_processes.utils"]], "mia_processes.utils.report module": [[174, "module-mia_processes.utils.report"]], "mia_processes.utils.tools module": [[174, "module-mia_processes.utils.tools"]], "mia_processes": [[175, "mia-processes"]]}, "indexentries": {"processmatlab (class in mia_processes.process_matlab)": [[152, "mia_processes.process_matlab.ProcessMatlab"]], "__init__() (mia_processes.process_matlab.processmatlab method)": [[152, "mia_processes.process_matlab.ProcessMatlab.__init__"]], "add_exit() (mia_processes.process_matlab.processmatlab method)": [[152, "mia_processes.process_matlab.ProcessMatlab.add_exit"]], "add_path() (mia_processes.process_matlab.processmatlab method)": [[152, "mia_processes.process_matlab.ProcessMatlab.add_path"]], "change_directory() (mia_processes.process_matlab.processmatlab method)": [[152, "mia_processes.process_matlab.ProcessMatlab.change_directory"]], "display_parameter() (mia_processes.process_matlab.processmatlab method)": [[152, "mia_processes.process_matlab.ProcessMatlab.display_parameter"]], "get_gitversion() (in module mia_processes.info)": [[152, "mia_processes.info.get_gitversion"]], "mia_processes": [[152, "module-mia_processes"]], "mia_processes.info": [[152, "module-mia_processes.info"]], "mia_processes.process_matlab": [[152, "module-mia_processes.process_matlab"]], "module": [[152, "module-mia_processes"], [152, "module-mia_processes.info"], [152, "module-mia_processes.process_matlab"], [153, "module-mia_processes.bricks"], [154, "module-mia_processes.bricks.preprocess"], [155, "module-mia_processes.bricks.preprocess.afni"], [155, "module-mia_processes.bricks.preprocess.afni.processes"], [156, "module-mia_processes.bricks.preprocess.ants"], [156, "module-mia_processes.bricks.preprocess.ants.processes"], [157, "module-mia_processes.bricks.preprocess.dipy"], [157, "module-mia_processes.bricks.preprocess.dipy.processes"], [158, "module-mia_processes.bricks.preprocess.freesurfer"], [158, "module-mia_processes.bricks.preprocess.freesurfer.processes"], [159, "module-mia_processes.bricks.preprocess.fsl"], [159, "module-mia_processes.bricks.preprocess.fsl.processes"], [160, "module-mia_processes.bricks.preprocess.mrtrix"], [160, "module-mia_processes.bricks.preprocess.mrtrix.processes"], [161, "module-mia_processes.bricks.preprocess.others"], [161, "module-mia_processes.bricks.preprocess.others.processing"], [162, "module-mia_processes.bricks.preprocess.spm"], [162, "module-mia_processes.bricks.preprocess.spm.spatial_preprocessing"], [163, "module-mia_processes.bricks.reports"], [163, "module-mia_processes.bricks.reports.processes"], [163, "module-mia_processes.bricks.reports.reporting"], [164, "module-mia_processes.bricks.stat"], [165, "module-mia_processes.bricks.stat.spm"], [165, "module-mia_processes.bricks.stat.spm.model"], [166, "module-mia_processes.bricks.tools"], [166, "module-mia_processes.bricks.tools.tools"], [167, "module-mia_processes.pipelines"], [168, "module-mia_processes.pipelines.CerebVascularReact"], [168, "module-mia_processes.pipelines.CerebVascularReact.co2_inhalation"], [169, "module-mia_processes.pipelines.DWITractography"], [169, "module-mia_processes.pipelines.DWITractography.dwi_whole_brain_tractography"], [170, "module-mia_processes.pipelines.preprocess"], [170, "module-mia_processes.pipelines.preprocess.anat_airmask"], [170, "module-mia_processes.pipelines.preprocess.anat_headmask"], [170, "module-mia_processes.pipelines.preprocess.anat_mni_tpms"], [170, "module-mia_processes.pipelines.preprocess.anat_skullstrip"], [170, "module-mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip"], [170, "module-mia_processes.pipelines.preprocess.anat_spatial_norm"], [170, "module-mia_processes.pipelines.preprocess.bold_hmc"], [170, "module-mia_processes.pipelines.preprocess.bold_mni_align"], [170, "module-mia_processes.pipelines.preprocess.bold_spatial_preprocessing1"], [170, "module-mia_processes.pipelines.preprocess.bold_spatial_preprocessing2"], [170, "module-mia_processes.pipelines.preprocess.dwi_fod_msmt_csd"], [170, "module-mia_processes.pipelines.preprocess.dwi_preprocessing"], [170, "module-mia_processes.pipelines.preprocess.spatial_mask"], [171, "module-mia_processes.pipelines.qualityControl"], [171, "module-mia_processes.pipelines.qualityControl.anat_mriqc"], [171, "module-mia_processes.pipelines.qualityControl.bold_mriqc"], [172, "module-mia_processes.pipelines.reports"], [172, "module-mia_processes.pipelines.reports.bold_iqms"], [172, "module-mia_processes.pipelines.reports.extract_roi_param"], [173, "module-mia_processes.pipelines.stat"], [173, "module-mia_processes.pipelines.stat.bold_stat_cvr"], [174, "module-mia_processes.utils"], [174, "module-mia_processes.utils.report"], [174, "module-mia_processes.utils.tools"]], "run() (mia_processes.process_matlab.processmatlab method)": [[152, "mia_processes.process_matlab.ProcessMatlab.run"]], "set_global_variable() (mia_processes.process_matlab.processmatlab method)": [[152, "mia_processes.process_matlab.ProcessMatlab.set_global_variable"]], "set_variable() (mia_processes.process_matlab.processmatlab method)": [[152, "mia_processes.process_matlab.ProcessMatlab.set_variable"]], "mia_processes.bricks": [[153, "module-mia_processes.bricks"]], "mia_processes.bricks.preprocess": [[154, "module-mia_processes.bricks.preprocess"]], "automask (class in mia_processes.bricks.preprocess.afni.processes)": [[155, "mia_processes.bricks.preprocess.afni.processes.Automask"]], "calc (class in mia_processes.bricks.preprocess.afni.processes)": [[155, "mia_processes.bricks.preprocess.afni.processes.Calc"]], "calcdroptrs (class in mia_processes.bricks.preprocess.afni.processes)": [[155, "mia_processes.bricks.preprocess.afni.processes.CalcDropTRs"]], "despike (class in mia_processes.bricks.preprocess.afni.processes)": [[155, "mia_processes.bricks.preprocess.afni.processes.Despike"]], "fwhmx (class in mia_processes.bricks.preprocess.afni.processes)": [[155, "mia_processes.bricks.preprocess.afni.processes.FWHMx"]], "gcor (class in mia_processes.bricks.preprocess.afni.processes)": [[155, "mia_processes.bricks.preprocess.afni.processes.GCOR"]], "outliercount (class in mia_processes.bricks.preprocess.afni.processes)": [[155, "mia_processes.bricks.preprocess.afni.processes.OutlierCount"]], "qualityindex (class in mia_processes.bricks.preprocess.afni.processes)": [[155, "mia_processes.bricks.preprocess.afni.processes.QualityIndex"]], "refitdeoblique (class in mia_processes.bricks.preprocess.afni.processes)": [[155, "mia_processes.bricks.preprocess.afni.processes.RefitDeoblique"]], "skullstrip (class in mia_processes.bricks.preprocess.afni.processes)": [[155, "mia_processes.bricks.preprocess.afni.processes.SkullStrip"]], "tshift (class in mia_processes.bricks.preprocess.afni.processes)": [[155, "mia_processes.bricks.preprocess.afni.processes.TShift"]], "tstatmean (class in mia_processes.bricks.preprocess.afni.processes)": [[155, "mia_processes.bricks.preprocess.afni.processes.TStatMean"]], "volreg (class in mia_processes.bricks.preprocess.afni.processes)": [[155, "mia_processes.bricks.preprocess.afni.processes.Volreg"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.automask method)": [[155, "mia_processes.bricks.preprocess.afni.processes.Automask.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.calc method)": [[155, "mia_processes.bricks.preprocess.afni.processes.Calc.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.calcdroptrs method)": [[155, "mia_processes.bricks.preprocess.afni.processes.CalcDropTRs.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.despike method)": [[155, "mia_processes.bricks.preprocess.afni.processes.Despike.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.fwhmx method)": [[155, "mia_processes.bricks.preprocess.afni.processes.FWHMx.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.gcor method)": [[155, "mia_processes.bricks.preprocess.afni.processes.GCOR.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.outliercount method)": [[155, "mia_processes.bricks.preprocess.afni.processes.OutlierCount.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.qualityindex method)": [[155, "mia_processes.bricks.preprocess.afni.processes.QualityIndex.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.refitdeoblique method)": [[155, "mia_processes.bricks.preprocess.afni.processes.RefitDeoblique.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.skullstrip method)": [[155, "mia_processes.bricks.preprocess.afni.processes.SkullStrip.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.tshift method)": [[155, "mia_processes.bricks.preprocess.afni.processes.TShift.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.tstatmean method)": [[155, "mia_processes.bricks.preprocess.afni.processes.TStatMean.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.volreg method)": [[155, "mia_processes.bricks.preprocess.afni.processes.Volreg.__init__"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.automask method)": [[155, "mia_processes.bricks.preprocess.afni.processes.Automask.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.calc method)": [[155, "mia_processes.bricks.preprocess.afni.processes.Calc.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.calcdroptrs method)": [[155, "mia_processes.bricks.preprocess.afni.processes.CalcDropTRs.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.despike method)": [[155, "mia_processes.bricks.preprocess.afni.processes.Despike.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.fwhmx method)": [[155, "mia_processes.bricks.preprocess.afni.processes.FWHMx.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.gcor method)": [[155, "mia_processes.bricks.preprocess.afni.processes.GCOR.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.outliercount method)": [[155, "mia_processes.bricks.preprocess.afni.processes.OutlierCount.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.qualityindex method)": [[155, "mia_processes.bricks.preprocess.afni.processes.QualityIndex.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.refitdeoblique method)": [[155, "mia_processes.bricks.preprocess.afni.processes.RefitDeoblique.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.skullstrip method)": [[155, "mia_processes.bricks.preprocess.afni.processes.SkullStrip.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.tshift method)": [[155, "mia_processes.bricks.preprocess.afni.processes.TShift.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.tstatmean method)": [[155, "mia_processes.bricks.preprocess.afni.processes.TStatMean.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.volreg method)": [[155, "mia_processes.bricks.preprocess.afni.processes.Volreg.list_outputs"]], "mia_processes.bricks.preprocess.afni": [[155, "module-mia_processes.bricks.preprocess.afni"]], "mia_processes.bricks.preprocess.afni.processes": [[155, "module-mia_processes.bricks.preprocess.afni.processes"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.automask method)": [[155, "mia_processes.bricks.preprocess.afni.processes.Automask.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.calc method)": [[155, "mia_processes.bricks.preprocess.afni.processes.Calc.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.calcdroptrs method)": [[155, "mia_processes.bricks.preprocess.afni.processes.CalcDropTRs.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.despike method)": [[155, "mia_processes.bricks.preprocess.afni.processes.Despike.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.fwhmx method)": [[155, "mia_processes.bricks.preprocess.afni.processes.FWHMx.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.gcor method)": [[155, "mia_processes.bricks.preprocess.afni.processes.GCOR.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.outliercount method)": [[155, "mia_processes.bricks.preprocess.afni.processes.OutlierCount.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.qualityindex method)": [[155, "mia_processes.bricks.preprocess.afni.processes.QualityIndex.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.refitdeoblique method)": [[155, "mia_processes.bricks.preprocess.afni.processes.RefitDeoblique.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.skullstrip method)": [[155, "mia_processes.bricks.preprocess.afni.processes.SkullStrip.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.tshift method)": [[155, "mia_processes.bricks.preprocess.afni.processes.TShift.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.tstatmean method)": [[155, "mia_processes.bricks.preprocess.afni.processes.TStatMean.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.volreg method)": [[155, "mia_processes.bricks.preprocess.afni.processes.Volreg.run_process_mia"]], "affineinitializer (class in mia_processes.bricks.preprocess.ants.processes)": [[156, "mia_processes.bricks.preprocess.ants.processes.AffineInitializer"]], "applytransforms (class in mia_processes.bricks.preprocess.ants.processes)": [[156, "mia_processes.bricks.preprocess.ants.processes.ApplyTransforms"]], "n4biasfieldcorrection (class in mia_processes.bricks.preprocess.ants.processes)": [[156, "mia_processes.bricks.preprocess.ants.processes.N4BiasFieldCorrection"]], "registration (class in mia_processes.bricks.preprocess.ants.processes)": [[156, "mia_processes.bricks.preprocess.ants.processes.Registration"]], "__init__() (mia_processes.bricks.preprocess.ants.processes.affineinitializer method)": [[156, "mia_processes.bricks.preprocess.ants.processes.AffineInitializer.__init__"]], "__init__() (mia_processes.bricks.preprocess.ants.processes.applytransforms method)": [[156, "mia_processes.bricks.preprocess.ants.processes.ApplyTransforms.__init__"]], "__init__() (mia_processes.bricks.preprocess.ants.processes.n4biasfieldcorrection method)": [[156, "mia_processes.bricks.preprocess.ants.processes.N4BiasFieldCorrection.__init__"]], "__init__() (mia_processes.bricks.preprocess.ants.processes.registration method)": [[156, "mia_processes.bricks.preprocess.ants.processes.Registration.__init__"]], "list_outputs() (mia_processes.bricks.preprocess.ants.processes.affineinitializer method)": [[156, "mia_processes.bricks.preprocess.ants.processes.AffineInitializer.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.ants.processes.applytransforms method)": [[156, "mia_processes.bricks.preprocess.ants.processes.ApplyTransforms.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.ants.processes.n4biasfieldcorrection method)": [[156, "mia_processes.bricks.preprocess.ants.processes.N4BiasFieldCorrection.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.ants.processes.registration method)": [[156, "mia_processes.bricks.preprocess.ants.processes.Registration.list_outputs"]], "mia_processes.bricks.preprocess.ants": [[156, "module-mia_processes.bricks.preprocess.ants"]], "mia_processes.bricks.preprocess.ants.processes": [[156, "module-mia_processes.bricks.preprocess.ants.processes"]], "run_process_mia() (mia_processes.bricks.preprocess.ants.processes.affineinitializer method)": [[156, "mia_processes.bricks.preprocess.ants.processes.AffineInitializer.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.ants.processes.applytransforms method)": [[156, "mia_processes.bricks.preprocess.ants.processes.ApplyTransforms.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.ants.processes.n4biasfieldcorrection method)": [[156, "mia_processes.bricks.preprocess.ants.processes.N4BiasFieldCorrection.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.ants.processes.registration method)": [[156, "mia_processes.bricks.preprocess.ants.processes.Registration.run_process_mia"]], "computedki (class in mia_processes.bricks.preprocess.dipy.processes)": [[157, "mia_processes.bricks.preprocess.dipy.processes.ComputeDKI"]], "denoise (class in mia_processes.bricks.preprocess.dipy.processes)": [[157, "mia_processes.bricks.preprocess.dipy.processes.Denoise"]], "__init__() (mia_processes.bricks.preprocess.dipy.processes.computedki method)": [[157, "mia_processes.bricks.preprocess.dipy.processes.ComputeDKI.__init__"]], "__init__() (mia_processes.bricks.preprocess.dipy.processes.denoise method)": [[157, "mia_processes.bricks.preprocess.dipy.processes.Denoise.__init__"]], "list_outputs() (mia_processes.bricks.preprocess.dipy.processes.computedki method)": [[157, "mia_processes.bricks.preprocess.dipy.processes.ComputeDKI.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.dipy.processes.denoise method)": [[157, "mia_processes.bricks.preprocess.dipy.processes.Denoise.list_outputs"]], "mia_processes.bricks.preprocess.dipy": [[157, "module-mia_processes.bricks.preprocess.dipy"]], "mia_processes.bricks.preprocess.dipy.processes": [[157, "module-mia_processes.bricks.preprocess.dipy.processes"]], "run_process_mia() (mia_processes.bricks.preprocess.dipy.processes.computedki method)": [[157, "mia_processes.bricks.preprocess.dipy.processes.ComputeDKI.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.dipy.processes.denoise method)": [[157, "mia_processes.bricks.preprocess.dipy.processes.Denoise.run_process_mia"]], "binarize (class in mia_processes.bricks.preprocess.freesurfer.processes)": [[158, "mia_processes.bricks.preprocess.freesurfer.processes.Binarize"]], "synthstrip (class in mia_processes.bricks.preprocess.freesurfer.processes)": [[158, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStrip"]], "synthstripmriqc (class in mia_processes.bricks.preprocess.freesurfer.processes)": [[158, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc"]], "synthstripmriqc.convblock (class in mia_processes.bricks.preprocess.freesurfer.processes)": [[158, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.ConvBlock"]], "synthstripmriqc.stripmodel (class in mia_processes.bricks.preprocess.freesurfer.processes)": [[158, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.StripModel"]], "__init__() (mia_processes.bricks.preprocess.freesurfer.processes.binarize method)": [[158, "mia_processes.bricks.preprocess.freesurfer.processes.Binarize.__init__"]], "__init__() (mia_processes.bricks.preprocess.freesurfer.processes.synthstrip method)": [[158, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStrip.__init__"]], "__init__() (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc method)": [[158, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.__init__"]], "__init__() (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc.convblock method)": [[158, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.ConvBlock.__init__"]], "__init__() (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc.stripmodel method)": [[158, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.StripModel.__init__"]], "conform() (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc method)": [[158, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.conform"]], "forward() (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc.convblock method)": [[158, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.ConvBlock.forward"]], "forward() (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc.stripmodel method)": [[158, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.StripModel.forward"]], "list_outputs() (mia_processes.bricks.preprocess.freesurfer.processes.binarize method)": [[158, "mia_processes.bricks.preprocess.freesurfer.processes.Binarize.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.freesurfer.processes.synthstrip method)": [[158, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStrip.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc method)": [[158, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.list_outputs"]], "mia_processes.bricks.preprocess.freesurfer": [[158, "module-mia_processes.bricks.preprocess.freesurfer"]], "mia_processes.bricks.preprocess.freesurfer.processes": [[158, "module-mia_processes.bricks.preprocess.freesurfer.processes"]], "resample_like() (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc method)": [[158, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.resample_like"]], "run_process_mia() (mia_processes.bricks.preprocess.freesurfer.processes.binarize method)": [[158, "mia_processes.bricks.preprocess.freesurfer.processes.Binarize.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.freesurfer.processes.synthstrip method)": [[158, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStrip.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc method)": [[158, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.run_process_mia"]], "training (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc.convblock attribute)": [[158, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.ConvBlock.training"]], "training (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc.stripmodel attribute)": [[158, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.StripModel.training"]], "bet (class in mia_processes.bricks.preprocess.fsl.processes)": [[159, "mia_processes.bricks.preprocess.fsl.processes.Bet"]], "betsurfacesextraction (class in mia_processes.bricks.preprocess.fsl.processes)": [[159, "mia_processes.bricks.preprocess.fsl.processes.BetSurfacesExtraction"]], "convertxfm (class in mia_processes.bricks.preprocess.fsl.processes)": [[159, "mia_processes.bricks.preprocess.fsl.processes.ConvertXFM"]], "epireg (class in mia_processes.bricks.preprocess.fsl.processes)": [[159, "mia_processes.bricks.preprocess.fsl.processes.EpiReg"]], "extractroi (class in mia_processes.bricks.preprocess.fsl.processes)": [[159, "mia_processes.bricks.preprocess.fsl.processes.ExtractROI"]], "fastsegment (class in mia_processes.bricks.preprocess.fsl.processes)": [[159, "mia_processes.bricks.preprocess.fsl.processes.FastSegment"]], "flirt (class in mia_processes.bricks.preprocess.fsl.processes)": [[159, "mia_processes.bricks.preprocess.fsl.processes.Flirt"]], "smooth (class in mia_processes.bricks.preprocess.fsl.processes)": [[159, "mia_processes.bricks.preprocess.fsl.processes.Smooth"]], "__init__() (mia_processes.bricks.preprocess.fsl.processes.bet method)": [[159, "mia_processes.bricks.preprocess.fsl.processes.Bet.__init__"]], "__init__() (mia_processes.bricks.preprocess.fsl.processes.betsurfacesextraction method)": [[159, "mia_processes.bricks.preprocess.fsl.processes.BetSurfacesExtraction.__init__"]], "__init__() (mia_processes.bricks.preprocess.fsl.processes.convertxfm method)": [[159, "mia_processes.bricks.preprocess.fsl.processes.ConvertXFM.__init__"]], "__init__() (mia_processes.bricks.preprocess.fsl.processes.epireg method)": [[159, "mia_processes.bricks.preprocess.fsl.processes.EpiReg.__init__"]], "__init__() (mia_processes.bricks.preprocess.fsl.processes.extractroi method)": [[159, "mia_processes.bricks.preprocess.fsl.processes.ExtractROI.__init__"]], "__init__() (mia_processes.bricks.preprocess.fsl.processes.fastsegment method)": [[159, "mia_processes.bricks.preprocess.fsl.processes.FastSegment.__init__"]], "__init__() (mia_processes.bricks.preprocess.fsl.processes.flirt method)": [[159, "mia_processes.bricks.preprocess.fsl.processes.Flirt.__init__"]], "__init__() (mia_processes.bricks.preprocess.fsl.processes.smooth method)": [[159, "mia_processes.bricks.preprocess.fsl.processes.Smooth.__init__"]], "list_outputs() (mia_processes.bricks.preprocess.fsl.processes.bet method)": [[159, "mia_processes.bricks.preprocess.fsl.processes.Bet.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.fsl.processes.betsurfacesextraction method)": [[159, "mia_processes.bricks.preprocess.fsl.processes.BetSurfacesExtraction.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.fsl.processes.convertxfm method)": [[159, "mia_processes.bricks.preprocess.fsl.processes.ConvertXFM.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.fsl.processes.epireg method)": [[159, "mia_processes.bricks.preprocess.fsl.processes.EpiReg.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.fsl.processes.extractroi method)": [[159, "mia_processes.bricks.preprocess.fsl.processes.ExtractROI.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.fsl.processes.fastsegment method)": [[159, "mia_processes.bricks.preprocess.fsl.processes.FastSegment.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.fsl.processes.flirt method)": [[159, "mia_processes.bricks.preprocess.fsl.processes.Flirt.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.fsl.processes.smooth method)": [[159, "mia_processes.bricks.preprocess.fsl.processes.Smooth.list_outputs"]], "mia_processes.bricks.preprocess.fsl": [[159, "module-mia_processes.bricks.preprocess.fsl"]], "mia_processes.bricks.preprocess.fsl.processes": [[159, "module-mia_processes.bricks.preprocess.fsl.processes"]], "run_process_mia() (mia_processes.bricks.preprocess.fsl.processes.bet method)": [[159, "mia_processes.bricks.preprocess.fsl.processes.Bet.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.fsl.processes.betsurfacesextraction method)": [[159, "mia_processes.bricks.preprocess.fsl.processes.BetSurfacesExtraction.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.fsl.processes.convertxfm method)": [[159, "mia_processes.bricks.preprocess.fsl.processes.ConvertXFM.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.fsl.processes.epireg method)": [[159, "mia_processes.bricks.preprocess.fsl.processes.EpiReg.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.fsl.processes.extractroi method)": [[159, "mia_processes.bricks.preprocess.fsl.processes.ExtractROI.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.fsl.processes.fastsegment method)": [[159, "mia_processes.bricks.preprocess.fsl.processes.FastSegment.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.fsl.processes.flirt method)": [[159, "mia_processes.bricks.preprocess.fsl.processes.Flirt.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.fsl.processes.smooth method)": [[159, "mia_processes.bricks.preprocess.fsl.processes.Smooth.run_process_mia"]], "constrainedsphericaldeconvolution (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.ConstrainedSphericalDeconvolution"]], "dwibiascorrect (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.DWIBiasCorrect"]], "dwibrainmask (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.DWIBrainMask"]], "dwicat (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.DWICat"]], "dwidenoise (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.DWIDenoise"]], "dwiextract (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.DWIExtract"]], "dwipreproc (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.DWIPreproc"]], "editingtrack (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.EditingTrack"]], "filteringtrack (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.FilteringTrack"]], "fittensor (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.FitTensor"]], "generate5tt2gmwmi (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.Generate5tt2gmwmi"]], "generate5ttfsl (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.Generate5ttfsl"]], "mrcat (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.MRCat"]], "mrconvert (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.MRConvert"]], "mrdegibbs (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.MRDeGibbs"]], "mrmath (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.MRMath"]], "mrtransform (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.MRTransform"]], "mtnormalise (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.MTNormalise"]], "responsesddhollander (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.ResponseSDDhollander"]], "sphericalharmonicextraction (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.SphericalHarmonicExtraction"]], "tensormetrics (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.TensorMetrics"]], "tractography (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.Tractography"]], "transformfslconvert (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.TransformFSLConvert"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.constrainedsphericaldeconvolution method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.ConstrainedSphericalDeconvolution.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.dwibiascorrect method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.DWIBiasCorrect.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.dwibrainmask method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.DWIBrainMask.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.dwicat method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.DWICat.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.dwidenoise method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.DWIDenoise.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.dwiextract method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.DWIExtract.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.dwipreproc method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.DWIPreproc.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.editingtrack method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.EditingTrack.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.filteringtrack method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.FilteringTrack.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.fittensor method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.FitTensor.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.generate5tt2gmwmi method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.Generate5tt2gmwmi.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.generate5ttfsl method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.Generate5ttfsl.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.mrcat method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.MRCat.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.mrconvert method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.MRConvert.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.mrdegibbs method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.MRDeGibbs.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.mrmath method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.MRMath.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.mrtransform method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.MRTransform.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.mtnormalise method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.MTNormalise.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.responsesddhollander method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.ResponseSDDhollander.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.sphericalharmonicextraction method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.SphericalHarmonicExtraction.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.tensormetrics method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.TensorMetrics.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.tractography method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.Tractography.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.transformfslconvert method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.TransformFSLConvert.__init__"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.constrainedsphericaldeconvolution method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.ConstrainedSphericalDeconvolution.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.dwibiascorrect method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.DWIBiasCorrect.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.dwibrainmask method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.DWIBrainMask.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.dwicat method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.DWICat.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.dwidenoise method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.DWIDenoise.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.dwiextract method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.DWIExtract.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.dwipreproc method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.DWIPreproc.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.editingtrack method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.EditingTrack.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.filteringtrack method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.FilteringTrack.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.fittensor method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.FitTensor.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.generate5tt2gmwmi method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.Generate5tt2gmwmi.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.generate5ttfsl method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.Generate5ttfsl.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.mrcat method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.MRCat.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.mrconvert method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.MRConvert.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.mrdegibbs method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.MRDeGibbs.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.mrmath method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.MRMath.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.mrtransform method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.MRTransform.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.mtnormalise method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.MTNormalise.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.responsesddhollander method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.ResponseSDDhollander.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.sphericalharmonicextraction method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.SphericalHarmonicExtraction.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.tensormetrics method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.TensorMetrics.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.tractography method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.Tractography.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.transformfslconvert method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.TransformFSLConvert.list_outputs"]], "mia_processes.bricks.preprocess.mrtrix": [[160, "module-mia_processes.bricks.preprocess.mrtrix"]], "mia_processes.bricks.preprocess.mrtrix.processes": [[160, "module-mia_processes.bricks.preprocess.mrtrix.processes"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.constrainedsphericaldeconvolution method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.ConstrainedSphericalDeconvolution.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.dwibiascorrect method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.DWIBiasCorrect.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.dwibrainmask method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.DWIBrainMask.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.dwicat method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.DWICat.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.dwidenoise method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.DWIDenoise.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.dwiextract method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.DWIExtract.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.dwipreproc method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.DWIPreproc.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.editingtrack method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.EditingTrack.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.filteringtrack method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.FilteringTrack.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.fittensor method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.FitTensor.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.generate5tt2gmwmi method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.Generate5tt2gmwmi.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.generate5ttfsl method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.Generate5ttfsl.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.mrcat method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.MRCat.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.mrconvert method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.MRConvert.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.mrdegibbs method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.MRDeGibbs.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.mrmath method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.MRMath.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.mrtransform method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.MRTransform.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.mtnormalise method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.MTNormalise.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.responsesddhollander method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.ResponseSDDhollander.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.sphericalharmonicextraction method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.SphericalHarmonicExtraction.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.tensormetrics method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.TensorMetrics.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.tractography method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.Tractography.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.transformfslconvert method)": [[160, "mia_processes.bricks.preprocess.mrtrix.processes.TransformFSLConvert.run_process_mia"]], "applybiascorrection (class in mia_processes.bricks.preprocess.others.processing)": [[161, "mia_processes.bricks.preprocess.others.processing.ApplyBiasCorrection"]], "artifactmask (class in mia_processes.bricks.preprocess.others.processing)": [[161, "mia_processes.bricks.preprocess.others.processing.ArtifactMask"]], "binarize (class in mia_processes.bricks.preprocess.others.processing)": [[161, "mia_processes.bricks.preprocess.others.processing.Binarize"]], "conformimage (class in mia_processes.bricks.preprocess.others.processing)": [[161, "mia_processes.bricks.preprocess.others.processing.ConformImage"]], "convroi (class in mia_processes.bricks.preprocess.others.processing)": [[161, "mia_processes.bricks.preprocess.others.processing.ConvROI"]], "enhance (class in mia_processes.bricks.preprocess.others.processing)": [[161, "mia_processes.bricks.preprocess.others.processing.Enhance"]], "estimatesnr (class in mia_processes.bricks.preprocess.others.processing)": [[161, "mia_processes.bricks.preprocess.others.processing.EstimateSNR"]], "extractroibylabel (class in mia_processes.bricks.preprocess.others.processing)": [[161, "mia_processes.bricks.preprocess.others.processing.ExtractROIbyLabel"]], "extractsignalroi (class in mia_processes.bricks.preprocess.others.processing)": [[161, "mia_processes.bricks.preprocess.others.processing.ExtractSignalROI"]], "gradientthreshold (class in mia_processes.bricks.preprocess.others.processing)": [[161, "mia_processes.bricks.preprocess.others.processing.GradientThreshold"]], "harmonize (class in mia_processes.bricks.preprocess.others.processing)": [[161, "mia_processes.bricks.preprocess.others.processing.Harmonize"]], "intensityclip (class in mia_processes.bricks.preprocess.others.processing)": [[161, "mia_processes.bricks.preprocess.others.processing.IntensityClip"]], "mask (class in mia_processes.bricks.preprocess.others.processing)": [[161, "mia_processes.bricks.preprocess.others.processing.Mask"]], "nonsteadystatedetector (class in mia_processes.bricks.preprocess.others.processing)": [[161, "mia_processes.bricks.preprocess.others.processing.NonSteadyStateDetector"]], "resample1 (class in mia_processes.bricks.preprocess.others.processing)": [[161, "mia_processes.bricks.preprocess.others.processing.Resample1"]], "resample2 (class in mia_processes.bricks.preprocess.others.processing)": [[161, "mia_processes.bricks.preprocess.others.processing.Resample2"]], "rotationmask (class in mia_processes.bricks.preprocess.others.processing)": [[161, "mia_processes.bricks.preprocess.others.processing.RotationMask"]], "sanitize (class in mia_processes.bricks.preprocess.others.processing)": [[161, "mia_processes.bricks.preprocess.others.processing.Sanitize"]], "tsnr (class in mia_processes.bricks.preprocess.others.processing)": [[161, "mia_processes.bricks.preprocess.others.processing.TSNR"]], "templatefromtemplateflow (class in mia_processes.bricks.preprocess.others.processing)": [[161, "mia_processes.bricks.preprocess.others.processing.TemplateFromTemplateFlow"]], "threshold (class in mia_processes.bricks.preprocess.others.processing)": [[161, "mia_processes.bricks.preprocess.others.processing.Threshold"]], "__init__() (mia_processes.bricks.preprocess.others.processing.applybiascorrection method)": [[161, "mia_processes.bricks.preprocess.others.processing.ApplyBiasCorrection.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.artifactmask method)": [[161, "mia_processes.bricks.preprocess.others.processing.ArtifactMask.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.binarize method)": [[161, "mia_processes.bricks.preprocess.others.processing.Binarize.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.conformimage method)": [[161, "mia_processes.bricks.preprocess.others.processing.ConformImage.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.convroi method)": [[161, "mia_processes.bricks.preprocess.others.processing.ConvROI.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.enhance method)": [[161, "mia_processes.bricks.preprocess.others.processing.Enhance.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.estimatesnr method)": [[161, "mia_processes.bricks.preprocess.others.processing.EstimateSNR.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.extractroibylabel method)": [[161, "mia_processes.bricks.preprocess.others.processing.ExtractROIbyLabel.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.extractsignalroi method)": [[161, "mia_processes.bricks.preprocess.others.processing.ExtractSignalROI.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.gradientthreshold method)": [[161, "mia_processes.bricks.preprocess.others.processing.GradientThreshold.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.harmonize method)": [[161, "mia_processes.bricks.preprocess.others.processing.Harmonize.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.intensityclip method)": [[161, "mia_processes.bricks.preprocess.others.processing.IntensityClip.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.mask method)": [[161, "mia_processes.bricks.preprocess.others.processing.Mask.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.nonsteadystatedetector method)": [[161, "mia_processes.bricks.preprocess.others.processing.NonSteadyStateDetector.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.resample1 method)": [[161, "mia_processes.bricks.preprocess.others.processing.Resample1.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.resample2 method)": [[161, "mia_processes.bricks.preprocess.others.processing.Resample2.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.rotationmask method)": [[161, "mia_processes.bricks.preprocess.others.processing.RotationMask.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.sanitize method)": [[161, "mia_processes.bricks.preprocess.others.processing.Sanitize.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.tsnr method)": [[161, "mia_processes.bricks.preprocess.others.processing.TSNR.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.templatefromtemplateflow method)": [[161, "mia_processes.bricks.preprocess.others.processing.TemplateFromTemplateFlow.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.threshold method)": [[161, "mia_processes.bricks.preprocess.others.processing.Threshold.__init__"]], "artifact_mask() (in module mia_processes.bricks.preprocess.others.processing)": [[161, "mia_processes.bricks.preprocess.others.processing.artifact_mask"]], "is_outlier() (in module mia_processes.bricks.preprocess.others.processing)": [[161, "mia_processes.bricks.preprocess.others.processing.is_outlier"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.applybiascorrection method)": [[161, "mia_processes.bricks.preprocess.others.processing.ApplyBiasCorrection.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.artifactmask method)": [[161, "mia_processes.bricks.preprocess.others.processing.ArtifactMask.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.binarize method)": [[161, "mia_processes.bricks.preprocess.others.processing.Binarize.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.conformimage method)": [[161, "mia_processes.bricks.preprocess.others.processing.ConformImage.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.convroi method)": [[161, "mia_processes.bricks.preprocess.others.processing.ConvROI.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.enhance method)": [[161, "mia_processes.bricks.preprocess.others.processing.Enhance.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.estimatesnr method)": [[161, "mia_processes.bricks.preprocess.others.processing.EstimateSNR.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.extractroibylabel method)": [[161, "mia_processes.bricks.preprocess.others.processing.ExtractROIbyLabel.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.extractsignalroi method)": [[161, "mia_processes.bricks.preprocess.others.processing.ExtractSignalROI.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.gradientthreshold method)": [[161, "mia_processes.bricks.preprocess.others.processing.GradientThreshold.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.harmonize method)": [[161, "mia_processes.bricks.preprocess.others.processing.Harmonize.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.intensityclip method)": [[161, "mia_processes.bricks.preprocess.others.processing.IntensityClip.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.mask method)": [[161, "mia_processes.bricks.preprocess.others.processing.Mask.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.nonsteadystatedetector method)": [[161, "mia_processes.bricks.preprocess.others.processing.NonSteadyStateDetector.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.resample1 method)": [[161, "mia_processes.bricks.preprocess.others.processing.Resample1.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.resample2 method)": [[161, "mia_processes.bricks.preprocess.others.processing.Resample2.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.rotationmask method)": [[161, "mia_processes.bricks.preprocess.others.processing.RotationMask.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.sanitize method)": [[161, "mia_processes.bricks.preprocess.others.processing.Sanitize.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.tsnr method)": [[161, "mia_processes.bricks.preprocess.others.processing.TSNR.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.templatefromtemplateflow method)": [[161, "mia_processes.bricks.preprocess.others.processing.TemplateFromTemplateFlow.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.threshold method)": [[161, "mia_processes.bricks.preprocess.others.processing.Threshold.list_outputs"]], "mia_processes.bricks.preprocess.others": [[161, "module-mia_processes.bricks.preprocess.others"]], "mia_processes.bricks.preprocess.others.processing": [[161, "module-mia_processes.bricks.preprocess.others.processing"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.applybiascorrection method)": [[161, "mia_processes.bricks.preprocess.others.processing.ApplyBiasCorrection.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.artifactmask method)": [[161, "mia_processes.bricks.preprocess.others.processing.ArtifactMask.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.binarize method)": [[161, "mia_processes.bricks.preprocess.others.processing.Binarize.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.conformimage method)": [[161, "mia_processes.bricks.preprocess.others.processing.ConformImage.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.convroi method)": [[161, "mia_processes.bricks.preprocess.others.processing.ConvROI.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.enhance method)": [[161, "mia_processes.bricks.preprocess.others.processing.Enhance.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.estimatesnr method)": [[161, "mia_processes.bricks.preprocess.others.processing.EstimateSNR.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.extractroibylabel method)": [[161, "mia_processes.bricks.preprocess.others.processing.ExtractROIbyLabel.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.extractsignalroi method)": [[161, "mia_processes.bricks.preprocess.others.processing.ExtractSignalROI.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.gradientthreshold method)": [[161, "mia_processes.bricks.preprocess.others.processing.GradientThreshold.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.harmonize method)": [[161, "mia_processes.bricks.preprocess.others.processing.Harmonize.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.intensityclip method)": [[161, "mia_processes.bricks.preprocess.others.processing.IntensityClip.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.mask method)": [[161, "mia_processes.bricks.preprocess.others.processing.Mask.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.nonsteadystatedetector method)": [[161, "mia_processes.bricks.preprocess.others.processing.NonSteadyStateDetector.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.resample1 method)": [[161, "mia_processes.bricks.preprocess.others.processing.Resample1.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.resample2 method)": [[161, "mia_processes.bricks.preprocess.others.processing.Resample2.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.rotationmask method)": [[161, "mia_processes.bricks.preprocess.others.processing.RotationMask.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.sanitize method)": [[161, "mia_processes.bricks.preprocess.others.processing.Sanitize.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.tsnr method)": [[161, "mia_processes.bricks.preprocess.others.processing.TSNR.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.templatefromtemplateflow method)": [[161, "mia_processes.bricks.preprocess.others.processing.TemplateFromTemplateFlow.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.threshold method)": [[161, "mia_processes.bricks.preprocess.others.processing.Threshold.run_process_mia"]], "threshold() (in module mia_processes.bricks.preprocess.others.processing)": [[161, "mia_processes.bricks.preprocess.others.processing.threshold"]], "coregister (class in mia_processes.bricks.preprocess.spm.spatial_preprocessing)": [[162, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Coregister"]], "gm_wm_normalize (class in mia_processes.bricks.preprocess.spm.spatial_preprocessing)": [[162, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.GM_WM_Normalize"]], "newsegment (class in mia_processes.bricks.preprocess.spm.spatial_preprocessing)": [[162, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.NewSegment"]], "normalize12 (class in mia_processes.bricks.preprocess.spm.spatial_preprocessing)": [[162, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Normalize12"]], "realign (class in mia_processes.bricks.preprocess.spm.spatial_preprocessing)": [[162, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Realign"]], "slicetiming (class in mia_processes.bricks.preprocess.spm.spatial_preprocessing)": [[162, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.SliceTiming"]], "smooth (class in mia_processes.bricks.preprocess.spm.spatial_preprocessing)": [[162, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Smooth"]], "__init__() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.coregister method)": [[162, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Coregister.__init__"]], "__init__() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.gm_wm_normalize method)": [[162, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.GM_WM_Normalize.__init__"]], "__init__() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.newsegment method)": [[162, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.NewSegment.__init__"]], "__init__() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.normalize12 method)": [[162, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Normalize12.__init__"]], "__init__() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.realign method)": [[162, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Realign.__init__"]], "__init__() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.slicetiming method)": [[162, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.SliceTiming.__init__"]], "__init__() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.smooth method)": [[162, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Smooth.__init__"]], "list_outputs() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.coregister method)": [[162, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Coregister.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.gm_wm_normalize method)": [[162, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.GM_WM_Normalize.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.newsegment method)": [[162, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.NewSegment.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.normalize12 method)": [[162, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Normalize12.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.realign method)": [[162, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Realign.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.slicetiming method)": [[162, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.SliceTiming.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.smooth method)": [[162, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Smooth.list_outputs"]], "mia_processes.bricks.preprocess.spm": [[162, "module-mia_processes.bricks.preprocess.spm"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing": [[162, "module-mia_processes.bricks.preprocess.spm.spatial_preprocessing"]], "run_process_mia() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.coregister method)": [[162, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Coregister.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.gm_wm_normalize method)": [[162, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.GM_WM_Normalize.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.newsegment method)": [[162, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.NewSegment.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.normalize12 method)": [[162, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Normalize12.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.realign method)": [[162, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Realign.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.slicetiming method)": [[162, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.SliceTiming.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.smooth method)": [[162, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Smooth.run_process_mia"]], "anatiqms (class in mia_processes.bricks.reports.processes)": [[163, "mia_processes.bricks.reports.processes.AnatIQMs"]], "boldiqms (class in mia_processes.bricks.reports.processes)": [[163, "mia_processes.bricks.reports.processes.BoldIQMs"]], "boldiqmsplot (class in mia_processes.bricks.reports.processes)": [[163, "mia_processes.bricks.reports.processes.BoldIQMsPlot"]], "carpetparcellation (class in mia_processes.bricks.reports.processes)": [[163, "mia_processes.bricks.reports.processes.CarpetParcellation"]], "computedvars (class in mia_processes.bricks.reports.processes)": [[163, "mia_processes.bricks.reports.processes.ComputeDVARS"]], "framewisedisplacement (class in mia_processes.bricks.reports.processes)": [[163, "mia_processes.bricks.reports.processes.FramewiseDisplacement"]], "lateralizationindexcurve (class in mia_processes.bricks.reports.processes)": [[163, "mia_processes.bricks.reports.processes.LateralizationIndexCurve"]], "mean_stddev_calc (class in mia_processes.bricks.reports.processes)": [[163, "mia_processes.bricks.reports.processes.Mean_stdDev_calc"]], "plotsignalroi (class in mia_processes.bricks.reports.processes)": [[163, "mia_processes.bricks.reports.processes.PlotSignalROI"]], "reportanatmriqc (class in mia_processes.bricks.reports.reporting)": [[163, "mia_processes.bricks.reports.reporting.ReportAnatMriqc"]], "reportco2inhalcvr (class in mia_processes.bricks.reports.reporting)": [[163, "mia_processes.bricks.reports.reporting.ReportCO2inhalCvr"]], "reportfuncmriqc (class in mia_processes.bricks.reports.reporting)": [[163, "mia_processes.bricks.reports.reporting.ReportFuncMriqc"]], "reportge2rec (class in mia_processes.bricks.reports.reporting)": [[163, "mia_processes.bricks.reports.reporting.ReportGE2REC"]], "reportgroupmriqc (class in mia_processes.bricks.reports.reporting)": [[163, "mia_processes.bricks.reports.reporting.ReportGroupMriqc"]], "result_collector (class in mia_processes.bricks.reports.processes)": [[163, "mia_processes.bricks.reports.processes.Result_collector"]], "spikes (class in mia_processes.bricks.reports.processes)": [[163, "mia_processes.bricks.reports.processes.Spikes"]], "__init__() (mia_processes.bricks.reports.processes.anatiqms method)": [[163, "mia_processes.bricks.reports.processes.AnatIQMs.__init__"]], "__init__() (mia_processes.bricks.reports.processes.boldiqms method)": [[163, "mia_processes.bricks.reports.processes.BoldIQMs.__init__"]], "__init__() (mia_processes.bricks.reports.processes.boldiqmsplot method)": [[163, "mia_processes.bricks.reports.processes.BoldIQMsPlot.__init__"]], "__init__() (mia_processes.bricks.reports.processes.carpetparcellation method)": [[163, "mia_processes.bricks.reports.processes.CarpetParcellation.__init__"]], "__init__() (mia_processes.bricks.reports.processes.computedvars method)": [[163, "mia_processes.bricks.reports.processes.ComputeDVARS.__init__"]], "__init__() (mia_processes.bricks.reports.processes.framewisedisplacement method)": [[163, "mia_processes.bricks.reports.processes.FramewiseDisplacement.__init__"]], "__init__() (mia_processes.bricks.reports.processes.lateralizationindexcurve method)": [[163, "mia_processes.bricks.reports.processes.LateralizationIndexCurve.__init__"]], "__init__() (mia_processes.bricks.reports.processes.mean_stddev_calc method)": [[163, "mia_processes.bricks.reports.processes.Mean_stdDev_calc.__init__"]], "__init__() (mia_processes.bricks.reports.processes.plotsignalroi method)": [[163, "mia_processes.bricks.reports.processes.PlotSignalROI.__init__"]], "__init__() (mia_processes.bricks.reports.processes.result_collector method)": [[163, "mia_processes.bricks.reports.processes.Result_collector.__init__"]], "__init__() (mia_processes.bricks.reports.processes.spikes method)": [[163, "mia_processes.bricks.reports.processes.Spikes.__init__"]], "__init__() (mia_processes.bricks.reports.reporting.reportanatmriqc method)": [[163, "mia_processes.bricks.reports.reporting.ReportAnatMriqc.__init__"]], "__init__() (mia_processes.bricks.reports.reporting.reportco2inhalcvr method)": [[163, "mia_processes.bricks.reports.reporting.ReportCO2inhalCvr.__init__"]], "__init__() (mia_processes.bricks.reports.reporting.reportfuncmriqc method)": [[163, "mia_processes.bricks.reports.reporting.ReportFuncMriqc.__init__"]], "__init__() (mia_processes.bricks.reports.reporting.reportge2rec method)": [[163, "mia_processes.bricks.reports.reporting.ReportGE2REC.__init__"]], "__init__() (mia_processes.bricks.reports.reporting.reportgroupmriqc method)": [[163, "mia_processes.bricks.reports.reporting.ReportGroupMriqc.__init__"]], "art_qi1() (in module mia_processes.bricks.reports.processes)": [[163, "mia_processes.bricks.reports.processes.art_qi1"]], "art_qi2() (in module mia_processes.bricks.reports.processes)": [[163, "mia_processes.bricks.reports.processes.art_qi2"]], "cjv() (in module mia_processes.bricks.reports.processes)": [[163, "mia_processes.bricks.reports.processes.cjv"]], "cnr() (in module mia_processes.bricks.reports.processes)": [[163, "mia_processes.bricks.reports.processes.cnr"]], "efc() (in module mia_processes.bricks.reports.processes)": [[163, "mia_processes.bricks.reports.processes.efc"]], "fber() (in module mia_processes.bricks.reports.processes)": [[163, "mia_processes.bricks.reports.processes.fber"]], "find_peaks() (in module mia_processes.bricks.reports.processes)": [[163, "mia_processes.bricks.reports.processes.find_peaks"]], "find_spikes() (in module mia_processes.bricks.reports.processes)": [[163, "mia_processes.bricks.reports.processes.find_spikes"]], "fuzzy_jaccard() (in module mia_processes.bricks.reports.processes)": [[163, "mia_processes.bricks.reports.processes.fuzzy_jaccard"]], "gsr() (in module mia_processes.bricks.reports.processes)": [[163, "mia_processes.bricks.reports.processes.gsr"]], "image_binary_dilation() (in module mia_processes.bricks.reports.processes)": [[163, "mia_processes.bricks.reports.processes.image_binary_dilation"]], "lateralization_index_iter_curves() (in module mia_processes.bricks.reports.processes)": [[163, "mia_processes.bricks.reports.processes.lateralization_index_iter_curves"]], "list_outputs() (mia_processes.bricks.reports.processes.anatiqms method)": [[163, "mia_processes.bricks.reports.processes.AnatIQMs.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.processes.boldiqms method)": [[163, "mia_processes.bricks.reports.processes.BoldIQMs.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.processes.boldiqmsplot method)": [[163, "mia_processes.bricks.reports.processes.BoldIQMsPlot.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.processes.carpetparcellation method)": [[163, "mia_processes.bricks.reports.processes.CarpetParcellation.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.processes.computedvars method)": [[163, "mia_processes.bricks.reports.processes.ComputeDVARS.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.processes.framewisedisplacement method)": [[163, "mia_processes.bricks.reports.processes.FramewiseDisplacement.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.processes.lateralizationindexcurve method)": [[163, "mia_processes.bricks.reports.processes.LateralizationIndexCurve.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.processes.mean_stddev_calc method)": [[163, "mia_processes.bricks.reports.processes.Mean_stdDev_calc.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.processes.plotsignalroi method)": [[163, "mia_processes.bricks.reports.processes.PlotSignalROI.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.processes.result_collector method)": [[163, "mia_processes.bricks.reports.processes.Result_collector.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.processes.spikes method)": [[163, "mia_processes.bricks.reports.processes.Spikes.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.reporting.reportanatmriqc method)": [[163, "mia_processes.bricks.reports.reporting.ReportAnatMriqc.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.reporting.reportco2inhalcvr method)": [[163, "mia_processes.bricks.reports.reporting.ReportCO2inhalCvr.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.reporting.reportfuncmriqc method)": [[163, "mia_processes.bricks.reports.reporting.ReportFuncMriqc.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.reporting.reportge2rec method)": [[163, "mia_processes.bricks.reports.reporting.ReportGE2REC.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.reporting.reportgroupmriqc method)": [[163, "mia_processes.bricks.reports.reporting.ReportGroupMriqc.list_outputs"]], "mia_processes.bricks.reports": [[163, "module-mia_processes.bricks.reports"]], "mia_processes.bricks.reports.processes": [[163, "module-mia_processes.bricks.reports.processes"]], "mia_processes.bricks.reports.reporting": [[163, "module-mia_processes.bricks.reports.reporting"]], "normalize_mc_params() (in module mia_processes.bricks.reports.processes)": [[163, "mia_processes.bricks.reports.processes.normalize_mc_params"]], "regress_poly() (in module mia_processes.bricks.reports.processes)": [[163, "mia_processes.bricks.reports.processes.regress_poly"]], "rpve() (in module mia_processes.bricks.reports.processes)": [[163, "mia_processes.bricks.reports.processes.rpve"]], "run_process_mia() (mia_processes.bricks.reports.processes.anatiqms method)": [[163, "mia_processes.bricks.reports.processes.AnatIQMs.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.processes.boldiqms method)": [[163, "mia_processes.bricks.reports.processes.BoldIQMs.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.processes.boldiqmsplot method)": [[163, "mia_processes.bricks.reports.processes.BoldIQMsPlot.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.processes.carpetparcellation method)": [[163, "mia_processes.bricks.reports.processes.CarpetParcellation.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.processes.computedvars method)": [[163, "mia_processes.bricks.reports.processes.ComputeDVARS.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.processes.framewisedisplacement method)": [[163, "mia_processes.bricks.reports.processes.FramewiseDisplacement.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.processes.lateralizationindexcurve method)": [[163, "mia_processes.bricks.reports.processes.LateralizationIndexCurve.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.processes.mean_stddev_calc method)": [[163, "mia_processes.bricks.reports.processes.Mean_stdDev_calc.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.processes.plotsignalroi method)": [[163, "mia_processes.bricks.reports.processes.PlotSignalROI.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.processes.result_collector method)": [[163, "mia_processes.bricks.reports.processes.Result_collector.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.processes.spikes method)": [[163, "mia_processes.bricks.reports.processes.Spikes.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.reporting.reportanatmriqc method)": [[163, "mia_processes.bricks.reports.reporting.ReportAnatMriqc.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.reporting.reportco2inhalcvr method)": [[163, "mia_processes.bricks.reports.reporting.ReportCO2inhalCvr.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.reporting.reportfuncmriqc method)": [[163, "mia_processes.bricks.reports.reporting.ReportFuncMriqc.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.reporting.reportge2rec method)": [[163, "mia_processes.bricks.reports.reporting.ReportGE2REC.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.reporting.reportgroupmriqc method)": [[163, "mia_processes.bricks.reports.reporting.ReportGroupMriqc.run_process_mia"]], "snr() (in module mia_processes.bricks.reports.processes)": [[163, "mia_processes.bricks.reports.processes.snr"]], "snr_dietrich() (in module mia_processes.bricks.reports.processes)": [[163, "mia_processes.bricks.reports.processes.snr_dietrich"]], "summary_stats() (in module mia_processes.bricks.reports.processes)": [[163, "mia_processes.bricks.reports.processes.summary_stats"]], "volume_fraction() (in module mia_processes.bricks.reports.processes)": [[163, "mia_processes.bricks.reports.processes.volume_fraction"]], "wm2max() (in module mia_processes.bricks.reports.processes)": [[163, "mia_processes.bricks.reports.processes.wm2max"]], "mia_processes.bricks.stat": [[164, "module-mia_processes.bricks.stat"]], "estimatecontrast (class in mia_processes.bricks.stat.spm.model)": [[165, "mia_processes.bricks.stat.spm.model.EstimateContrast"]], "estimatemodel (class in mia_processes.bricks.stat.spm.model)": [[165, "mia_processes.bricks.stat.spm.model.EstimateModel"]], "level1design (class in mia_processes.bricks.stat.spm.model)": [[165, "mia_processes.bricks.stat.spm.model.Level1Design"]], "multipleregressiondesign (class in mia_processes.bricks.stat.spm.model)": [[165, "mia_processes.bricks.stat.spm.model.MultipleRegressionDesign"]], "onesamplettestdesign (class in mia_processes.bricks.stat.spm.model)": [[165, "mia_processes.bricks.stat.spm.model.OneSampleTTestDesign"]], "pairedttestdesign (class in mia_processes.bricks.stat.spm.model)": [[165, "mia_processes.bricks.stat.spm.model.PairedTTestDesign"]], "twosamplettestdesign (class in mia_processes.bricks.stat.spm.model)": [[165, "mia_processes.bricks.stat.spm.model.TwoSampleTTestDesign"]], "__init__() (mia_processes.bricks.stat.spm.model.estimatecontrast method)": [[165, "mia_processes.bricks.stat.spm.model.EstimateContrast.__init__"]], "__init__() (mia_processes.bricks.stat.spm.model.estimatemodel method)": [[165, "mia_processes.bricks.stat.spm.model.EstimateModel.__init__"]], "__init__() (mia_processes.bricks.stat.spm.model.level1design method)": [[165, "mia_processes.bricks.stat.spm.model.Level1Design.__init__"]], "__init__() (mia_processes.bricks.stat.spm.model.multipleregressiondesign method)": [[165, "mia_processes.bricks.stat.spm.model.MultipleRegressionDesign.__init__"]], "__init__() (mia_processes.bricks.stat.spm.model.onesamplettestdesign method)": [[165, "mia_processes.bricks.stat.spm.model.OneSampleTTestDesign.__init__"]], "__init__() (mia_processes.bricks.stat.spm.model.pairedttestdesign method)": [[165, "mia_processes.bricks.stat.spm.model.PairedTTestDesign.__init__"]], "__init__() (mia_processes.bricks.stat.spm.model.twosamplettestdesign method)": [[165, "mia_processes.bricks.stat.spm.model.TwoSampleTTestDesign.__init__"]], "get_covariates() (in module mia_processes.bricks.stat.spm.model)": [[165, "mia_processes.bricks.stat.spm.model.get_covariates"]], "list_outputs() (mia_processes.bricks.stat.spm.model.estimatecontrast method)": [[165, "mia_processes.bricks.stat.spm.model.EstimateContrast.list_outputs"]], "list_outputs() (mia_processes.bricks.stat.spm.model.estimatemodel method)": [[165, "mia_processes.bricks.stat.spm.model.EstimateModel.list_outputs"]], "list_outputs() (mia_processes.bricks.stat.spm.model.level1design method)": [[165, "mia_processes.bricks.stat.spm.model.Level1Design.list_outputs"]], "list_outputs() (mia_processes.bricks.stat.spm.model.multipleregressiondesign method)": [[165, "mia_processes.bricks.stat.spm.model.MultipleRegressionDesign.list_outputs"]], "list_outputs() (mia_processes.bricks.stat.spm.model.onesamplettestdesign method)": [[165, "mia_processes.bricks.stat.spm.model.OneSampleTTestDesign.list_outputs"]], "list_outputs() (mia_processes.bricks.stat.spm.model.pairedttestdesign method)": [[165, "mia_processes.bricks.stat.spm.model.PairedTTestDesign.list_outputs"]], "list_outputs() (mia_processes.bricks.stat.spm.model.twosamplettestdesign method)": [[165, "mia_processes.bricks.stat.spm.model.TwoSampleTTestDesign.list_outputs"]], "mia_processes.bricks.stat.spm": [[165, "module-mia_processes.bricks.stat.spm"]], "mia_processes.bricks.stat.spm.model": [[165, "module-mia_processes.bricks.stat.spm.model"]], "run_process_mia() (mia_processes.bricks.stat.spm.model.estimatecontrast method)": [[165, "mia_processes.bricks.stat.spm.model.EstimateContrast.run_process_mia"]], "run_process_mia() (mia_processes.bricks.stat.spm.model.estimatemodel method)": [[165, "mia_processes.bricks.stat.spm.model.EstimateModel.run_process_mia"]], "run_process_mia() (mia_processes.bricks.stat.spm.model.level1design method)": [[165, "mia_processes.bricks.stat.spm.model.Level1Design.run_process_mia"]], "run_process_mia() (mia_processes.bricks.stat.spm.model.multipleregressiondesign method)": [[165, "mia_processes.bricks.stat.spm.model.MultipleRegressionDesign.run_process_mia"]], "run_process_mia() (mia_processes.bricks.stat.spm.model.onesamplettestdesign method)": [[165, "mia_processes.bricks.stat.spm.model.OneSampleTTestDesign.run_process_mia"]], "run_process_mia() (mia_processes.bricks.stat.spm.model.pairedttestdesign method)": [[165, "mia_processes.bricks.stat.spm.model.PairedTTestDesign.run_process_mia"]], "run_process_mia() (mia_processes.bricks.stat.spm.model.twosamplettestdesign method)": [[165, "mia_processes.bricks.stat.spm.model.TwoSampleTTestDesign.run_process_mia"]], "concat_to_list (class in mia_processes.bricks.tools.tools)": [[166, "mia_processes.bricks.tools.tools.Concat_to_list"]], "concat_to_list_of_list (class in mia_processes.bricks.tools.tools)": [[166, "mia_processes.bricks.tools.tools.Concat_to_list_of_list"]], "delete_data (class in mia_processes.bricks.tools.tools)": [[166, "mia_processes.bricks.tools.tools.Delete_data"]], "files_to_list (class in mia_processes.bricks.tools.tools)": [[166, "mia_processes.bricks.tools.tools.Files_To_List"]], "filter_files_list (class in mia_processes.bricks.tools.tools)": [[166, "mia_processes.bricks.tools.tools.Filter_Files_List"]], "find_in_list (class in mia_processes.bricks.tools.tools)": [[166, "mia_processes.bricks.tools.tools.Find_In_List"]], "get_conditions_from_csv (class in mia_processes.bricks.tools.tools)": [[166, "mia_processes.bricks.tools.tools.Get_Conditions_From_csv"]], "get_eprime_info_ge2rec (class in mia_processes.bricks.tools.tools)": [[166, "mia_processes.bricks.tools.tools.Get_Eprime_Info_GE2REC"]], "get_patient_name (class in mia_processes.bricks.tools.tools)": [[166, "mia_processes.bricks.tools.tools.Get_Patient_Name"]], "get_regressors_from_csv (class in mia_processes.bricks.tools.tools)": [[166, "mia_processes.bricks.tools.tools.Get_Regressors_From_csv"]], "import_data (class in mia_processes.bricks.tools.tools)": [[166, "mia_processes.bricks.tools.tools.Import_Data"]], "input_filter (class in mia_processes.bricks.tools.tools)": [[166, "mia_processes.bricks.tools.tools.Input_Filter"]], "list_duplicate (class in mia_processes.bricks.tools.tools)": [[166, "mia_processes.bricks.tools.tools.List_Duplicate"]], "list_to_file (class in mia_processes.bricks.tools.tools)": [[166, "mia_processes.bricks.tools.tools.List_To_File"]], "make_aif (class in mia_processes.bricks.tools.tools)": [[166, "mia_processes.bricks.tools.tools.Make_AIF"]], "make_a_list (class in mia_processes.bricks.tools.tools)": [[166, "mia_processes.bricks.tools.tools.Make_A_List"]], "make_cvr_reg_physio (class in mia_processes.bricks.tools.tools)": [[166, "mia_processes.bricks.tools.tools.Make_CVR_reg_physio"]], "__init__() (mia_processes.bricks.tools.tools.concat_to_list method)": [[166, "mia_processes.bricks.tools.tools.Concat_to_list.__init__"]], "__init__() (mia_processes.bricks.tools.tools.concat_to_list_of_list method)": [[166, "mia_processes.bricks.tools.tools.Concat_to_list_of_list.__init__"]], "__init__() (mia_processes.bricks.tools.tools.delete_data method)": [[166, "mia_processes.bricks.tools.tools.Delete_data.__init__"]], "__init__() (mia_processes.bricks.tools.tools.files_to_list method)": [[166, "mia_processes.bricks.tools.tools.Files_To_List.__init__"]], "__init__() (mia_processes.bricks.tools.tools.filter_files_list method)": [[166, "mia_processes.bricks.tools.tools.Filter_Files_List.__init__"]], "__init__() (mia_processes.bricks.tools.tools.find_in_list method)": [[166, "mia_processes.bricks.tools.tools.Find_In_List.__init__"]], "__init__() (mia_processes.bricks.tools.tools.get_conditions_from_csv method)": [[166, "mia_processes.bricks.tools.tools.Get_Conditions_From_csv.__init__"]], "__init__() (mia_processes.bricks.tools.tools.get_eprime_info_ge2rec method)": [[166, "mia_processes.bricks.tools.tools.Get_Eprime_Info_GE2REC.__init__"]], "__init__() (mia_processes.bricks.tools.tools.get_patient_name method)": [[166, "mia_processes.bricks.tools.tools.Get_Patient_Name.__init__"]], "__init__() (mia_processes.bricks.tools.tools.get_regressors_from_csv method)": [[166, "mia_processes.bricks.tools.tools.Get_Regressors_From_csv.__init__"]], "__init__() (mia_processes.bricks.tools.tools.import_data method)": [[166, "mia_processes.bricks.tools.tools.Import_Data.__init__"]], "__init__() (mia_processes.bricks.tools.tools.input_filter method)": [[166, "mia_processes.bricks.tools.tools.Input_Filter.__init__"]], "__init__() (mia_processes.bricks.tools.tools.list_duplicate method)": [[166, "mia_processes.bricks.tools.tools.List_Duplicate.__init__"]], "__init__() (mia_processes.bricks.tools.tools.list_to_file method)": [[166, "mia_processes.bricks.tools.tools.List_To_File.__init__"]], "__init__() (mia_processes.bricks.tools.tools.make_aif method)": [[166, "mia_processes.bricks.tools.tools.Make_AIF.__init__"]], "__init__() (mia_processes.bricks.tools.tools.make_a_list method)": [[166, "mia_processes.bricks.tools.tools.Make_A_List.__init__"]], "__init__() (mia_processes.bricks.tools.tools.make_cvr_reg_physio method)": [[166, "mia_processes.bricks.tools.tools.Make_CVR_reg_physio.__init__"]], "bol_ar_time() (mia_processes.bricks.tools.tools.make_aif method)": [[166, "mia_processes.bricks.tools.tools.Make_AIF.bol_ar_time"]], "convert_to_native_types() (mia_processes.bricks.tools.tools.make_aif method)": [[166, "mia_processes.bricks.tools.tools.Make_AIF.convert_to_native_types"]], "gaussfir() (mia_processes.bricks.tools.tools.make_cvr_reg_physio method)": [[166, "mia_processes.bricks.tools.tools.Make_CVR_reg_physio.gaussfir"]], "gfb_conv() (mia_processes.bricks.tools.tools.make_cvr_reg_physio method)": [[166, "mia_processes.bricks.tools.tools.Make_CVR_reg_physio.gfb_conv"]], "list_outputs() (mia_processes.bricks.tools.tools.concat_to_list method)": [[166, "mia_processes.bricks.tools.tools.Concat_to_list.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.concat_to_list_of_list method)": [[166, "mia_processes.bricks.tools.tools.Concat_to_list_of_list.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.delete_data method)": [[166, "mia_processes.bricks.tools.tools.Delete_data.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.files_to_list method)": [[166, "mia_processes.bricks.tools.tools.Files_To_List.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.filter_files_list method)": [[166, "mia_processes.bricks.tools.tools.Filter_Files_List.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.find_in_list method)": [[166, "mia_processes.bricks.tools.tools.Find_In_List.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.get_conditions_from_csv method)": [[166, "mia_processes.bricks.tools.tools.Get_Conditions_From_csv.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.get_eprime_info_ge2rec method)": [[166, "mia_processes.bricks.tools.tools.Get_Eprime_Info_GE2REC.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.get_patient_name method)": [[166, "mia_processes.bricks.tools.tools.Get_Patient_Name.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.get_regressors_from_csv method)": [[166, "mia_processes.bricks.tools.tools.Get_Regressors_From_csv.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.import_data method)": [[166, "mia_processes.bricks.tools.tools.Import_Data.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.input_filter method)": [[166, "mia_processes.bricks.tools.tools.Input_Filter.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.list_duplicate method)": [[166, "mia_processes.bricks.tools.tools.List_Duplicate.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.list_to_file method)": [[166, "mia_processes.bricks.tools.tools.List_To_File.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.make_aif method)": [[166, "mia_processes.bricks.tools.tools.Make_AIF.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.make_a_list method)": [[166, "mia_processes.bricks.tools.tools.Make_A_List.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.make_cvr_reg_physio method)": [[166, "mia_processes.bricks.tools.tools.Make_CVR_reg_physio.list_outputs"]], "load_nii() (mia_processes.bricks.tools.tools.make_aif method)": [[166, "mia_processes.bricks.tools.tools.Make_AIF.load_nii"]], "mia_processes.bricks.tools": [[166, "module-mia_processes.bricks.tools"]], "mia_processes.bricks.tools.tools": [[166, "module-mia_processes.bricks.tools.tools"]], "run_process_mia() (mia_processes.bricks.tools.tools.concat_to_list method)": [[166, "mia_processes.bricks.tools.tools.Concat_to_list.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.concat_to_list_of_list method)": [[166, "mia_processes.bricks.tools.tools.Concat_to_list_of_list.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.delete_data method)": [[166, "mia_processes.bricks.tools.tools.Delete_data.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.files_to_list method)": [[166, "mia_processes.bricks.tools.tools.Files_To_List.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.filter_files_list method)": [[166, "mia_processes.bricks.tools.tools.Filter_Files_List.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.find_in_list method)": [[166, "mia_processes.bricks.tools.tools.Find_In_List.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.get_conditions_from_csv method)": [[166, "mia_processes.bricks.tools.tools.Get_Conditions_From_csv.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.get_eprime_info_ge2rec method)": [[166, "mia_processes.bricks.tools.tools.Get_Eprime_Info_GE2REC.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.get_patient_name method)": [[166, "mia_processes.bricks.tools.tools.Get_Patient_Name.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.get_regressors_from_csv method)": [[166, "mia_processes.bricks.tools.tools.Get_Regressors_From_csv.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.import_data method)": [[166, "mia_processes.bricks.tools.tools.Import_Data.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.input_filter method)": [[166, "mia_processes.bricks.tools.tools.Input_Filter.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.list_duplicate method)": [[166, "mia_processes.bricks.tools.tools.List_Duplicate.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.list_to_file method)": [[166, "mia_processes.bricks.tools.tools.List_To_File.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.make_aif method)": [[166, "mia_processes.bricks.tools.tools.Make_AIF.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.make_a_list method)": [[166, "mia_processes.bricks.tools.tools.Make_A_List.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.make_cvr_reg_physio method)": [[166, "mia_processes.bricks.tools.tools.Make_CVR_reg_physio.run_process_mia"]], "spm_hrf() (mia_processes.bricks.tools.tools.make_cvr_reg_physio method)": [[166, "mia_processes.bricks.tools.tools.Make_CVR_reg_physio.spm_hrf"]], "mia_processes.pipelines": [[167, "module-mia_processes.pipelines"]], "co2_inhalation (class in mia_processes.pipelines.cerebvascularreact.co2_inhalation)": [[168, "mia_processes.pipelines.CerebVascularReact.co2_inhalation.CO2_inhalation"]], "mia_processes.pipelines.cerebvascularreact": [[168, "module-mia_processes.pipelines.CerebVascularReact"]], "mia_processes.pipelines.cerebvascularreact.co2_inhalation": [[168, "module-mia_processes.pipelines.CerebVascularReact.co2_inhalation"]], "pipeline_definition() (mia_processes.pipelines.cerebvascularreact.co2_inhalation.co2_inhalation method)": [[168, "mia_processes.pipelines.CerebVascularReact.co2_inhalation.CO2_inhalation.pipeline_definition"]], "dwi_whole_brain_tractography (class in mia_processes.pipelines.dwitractography.dwi_whole_brain_tractography)": [[169, "mia_processes.pipelines.DWITractography.dwi_whole_brain_tractography.Dwi_whole_brain_tractography"]], "mia_processes.pipelines.dwitractography": [[169, "module-mia_processes.pipelines.DWITractography"]], "mia_processes.pipelines.dwitractography.dwi_whole_brain_tractography": [[169, "module-mia_processes.pipelines.DWITractography.dwi_whole_brain_tractography"]], "pipeline_definition() (mia_processes.pipelines.dwitractography.dwi_whole_brain_tractography.dwi_whole_brain_tractography method)": [[169, "mia_processes.pipelines.DWITractography.dwi_whole_brain_tractography.Dwi_whole_brain_tractography.pipeline_definition"]], "anat_airmask (class in mia_processes.pipelines.preprocess.anat_airmask)": [[170, "mia_processes.pipelines.preprocess.anat_airmask.Anat_airmask"]], "anat_headmask (class in mia_processes.pipelines.preprocess.anat_headmask)": [[170, "mia_processes.pipelines.preprocess.anat_headmask.Anat_headmask"]], "anat_mni_tpms (class in mia_processes.pipelines.preprocess.anat_mni_tpms)": [[170, "mia_processes.pipelines.preprocess.anat_mni_tpms.Anat_mni_tpms"]], "anat_skullstrip (class in mia_processes.pipelines.preprocess.anat_skullstrip)": [[170, "mia_processes.pipelines.preprocess.anat_skullstrip.Anat_skullstrip"]], "anat_skullstrip_synthstrip (class in mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip)": [[170, "mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip.Anat_skullstrip_synthstrip"]], "anat_spatial_norm (class in mia_processes.pipelines.preprocess.anat_spatial_norm)": [[170, "mia_processes.pipelines.preprocess.anat_spatial_norm.Anat_spatial_norm"]], "bold_hmc (class in mia_processes.pipelines.preprocess.bold_hmc)": [[170, "mia_processes.pipelines.preprocess.bold_hmc.Bold_hmc"]], "bold_mni_align (class in mia_processes.pipelines.preprocess.bold_mni_align)": [[170, "mia_processes.pipelines.preprocess.bold_mni_align.Bold_mni_align"]], "bold_spatial_preprocessing1 (class in mia_processes.pipelines.preprocess.bold_spatial_preprocessing1)": [[170, "mia_processes.pipelines.preprocess.bold_spatial_preprocessing1.Bold_spatial_preprocessing1"]], "bold_spatial_preprocessing2 (class in mia_processes.pipelines.preprocess.bold_spatial_preprocessing2)": [[170, "mia_processes.pipelines.preprocess.bold_spatial_preprocessing2.Bold_spatial_preprocessing2"]], "dwi_fod_msmt_csd (class in mia_processes.pipelines.preprocess.dwi_fod_msmt_csd)": [[170, "mia_processes.pipelines.preprocess.dwi_fod_msmt_csd.Dwi_fod_msmt_csd"]], "dwi_preprocessing (class in mia_processes.pipelines.preprocess.dwi_preprocessing)": [[170, "mia_processes.pipelines.preprocess.dwi_preprocessing.Dwi_preprocessing"]], "spatial_mask (class in mia_processes.pipelines.preprocess.spatial_mask)": [[170, "mia_processes.pipelines.preprocess.spatial_mask.Spatial_mask"]], "mia_processes.pipelines.preprocess": [[170, "module-mia_processes.pipelines.preprocess"]], "mia_processes.pipelines.preprocess.anat_airmask": [[170, "module-mia_processes.pipelines.preprocess.anat_airmask"]], "mia_processes.pipelines.preprocess.anat_headmask": [[170, "module-mia_processes.pipelines.preprocess.anat_headmask"]], "mia_processes.pipelines.preprocess.anat_mni_tpms": [[170, "module-mia_processes.pipelines.preprocess.anat_mni_tpms"]], "mia_processes.pipelines.preprocess.anat_skullstrip": [[170, "module-mia_processes.pipelines.preprocess.anat_skullstrip"]], "mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip": [[170, "module-mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip"]], "mia_processes.pipelines.preprocess.anat_spatial_norm": [[170, "module-mia_processes.pipelines.preprocess.anat_spatial_norm"]], "mia_processes.pipelines.preprocess.bold_hmc": [[170, "module-mia_processes.pipelines.preprocess.bold_hmc"]], "mia_processes.pipelines.preprocess.bold_mni_align": [[170, "module-mia_processes.pipelines.preprocess.bold_mni_align"]], "mia_processes.pipelines.preprocess.bold_spatial_preprocessing1": [[170, "module-mia_processes.pipelines.preprocess.bold_spatial_preprocessing1"]], "mia_processes.pipelines.preprocess.bold_spatial_preprocessing2": [[170, "module-mia_processes.pipelines.preprocess.bold_spatial_preprocessing2"]], "mia_processes.pipelines.preprocess.dwi_fod_msmt_csd": [[170, "module-mia_processes.pipelines.preprocess.dwi_fod_msmt_csd"]], "mia_processes.pipelines.preprocess.dwi_preprocessing": [[170, "module-mia_processes.pipelines.preprocess.dwi_preprocessing"]], "mia_processes.pipelines.preprocess.spatial_mask": [[170, "module-mia_processes.pipelines.preprocess.spatial_mask"]], "pipeline_definition() (mia_processes.pipelines.preprocess.anat_airmask.anat_airmask method)": [[170, "mia_processes.pipelines.preprocess.anat_airmask.Anat_airmask.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.anat_headmask.anat_headmask method)": [[170, "mia_processes.pipelines.preprocess.anat_headmask.Anat_headmask.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.anat_mni_tpms.anat_mni_tpms method)": [[170, "mia_processes.pipelines.preprocess.anat_mni_tpms.Anat_mni_tpms.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.anat_skullstrip.anat_skullstrip method)": [[170, "mia_processes.pipelines.preprocess.anat_skullstrip.Anat_skullstrip.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip.anat_skullstrip_synthstrip method)": [[170, "mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip.Anat_skullstrip_synthstrip.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.anat_spatial_norm.anat_spatial_norm method)": [[170, "mia_processes.pipelines.preprocess.anat_spatial_norm.Anat_spatial_norm.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.bold_hmc.bold_hmc method)": [[170, "mia_processes.pipelines.preprocess.bold_hmc.Bold_hmc.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.bold_mni_align.bold_mni_align method)": [[170, "mia_processes.pipelines.preprocess.bold_mni_align.Bold_mni_align.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.bold_spatial_preprocessing1.bold_spatial_preprocessing1 method)": [[170, "mia_processes.pipelines.preprocess.bold_spatial_preprocessing1.Bold_spatial_preprocessing1.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.bold_spatial_preprocessing2.bold_spatial_preprocessing2 method)": [[170, "mia_processes.pipelines.preprocess.bold_spatial_preprocessing2.Bold_spatial_preprocessing2.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.dwi_fod_msmt_csd.dwi_fod_msmt_csd method)": [[170, "mia_processes.pipelines.preprocess.dwi_fod_msmt_csd.Dwi_fod_msmt_csd.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.dwi_preprocessing.dwi_preprocessing method)": [[170, "mia_processes.pipelines.preprocess.dwi_preprocessing.Dwi_preprocessing.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.spatial_mask.spatial_mask method)": [[170, "mia_processes.pipelines.preprocess.spatial_mask.Spatial_mask.pipeline_definition"]], "anat_mriqc (class in mia_processes.pipelines.qualitycontrol.anat_mriqc)": [[171, "mia_processes.pipelines.qualityControl.anat_mriqc.Anat_mriqc"]], "bold_mriqc (class in mia_processes.pipelines.qualitycontrol.bold_mriqc)": [[171, "mia_processes.pipelines.qualityControl.bold_mriqc.Bold_mriqc"]], "mia_processes.pipelines.qualitycontrol": [[171, "module-mia_processes.pipelines.qualityControl"]], "mia_processes.pipelines.qualitycontrol.anat_mriqc": [[171, "module-mia_processes.pipelines.qualityControl.anat_mriqc"]], "mia_processes.pipelines.qualitycontrol.bold_mriqc": [[171, "module-mia_processes.pipelines.qualityControl.bold_mriqc"]], "pipeline_definition() (mia_processes.pipelines.qualitycontrol.anat_mriqc.anat_mriqc method)": [[171, "mia_processes.pipelines.qualityControl.anat_mriqc.Anat_mriqc.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.qualitycontrol.bold_mriqc.bold_mriqc method)": [[171, "mia_processes.pipelines.qualityControl.bold_mriqc.Bold_mriqc.pipeline_definition"]], "bold_iqms (class in mia_processes.pipelines.reports.bold_iqms)": [[172, "mia_processes.pipelines.reports.bold_iqms.Bold_iqms"]], "extract_roi_param (class in mia_processes.pipelines.reports.extract_roi_param)": [[172, "mia_processes.pipelines.reports.extract_roi_param.Extract_roi_param"]], "mia_processes.pipelines.reports": [[172, "module-mia_processes.pipelines.reports"]], "mia_processes.pipelines.reports.bold_iqms": [[172, "module-mia_processes.pipelines.reports.bold_iqms"]], "mia_processes.pipelines.reports.extract_roi_param": [[172, "module-mia_processes.pipelines.reports.extract_roi_param"]], "pipeline_definition() (mia_processes.pipelines.reports.bold_iqms.bold_iqms method)": [[172, "mia_processes.pipelines.reports.bold_iqms.Bold_iqms.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.reports.extract_roi_param.extract_roi_param method)": [[172, "mia_processes.pipelines.reports.extract_roi_param.Extract_roi_param.pipeline_definition"]], "bold_stat_cvr (class in mia_processes.pipelines.stat.bold_stat_cvr)": [[173, "mia_processes.pipelines.stat.bold_stat_cvr.Bold_stat_cvr"]], "mia_processes.pipelines.stat": [[173, "module-mia_processes.pipelines.stat"]], "mia_processes.pipelines.stat.bold_stat_cvr": [[173, "module-mia_processes.pipelines.stat.bold_stat_cvr"]], "pipeline_definition() (mia_processes.pipelines.stat.bold_stat_cvr.bold_stat_cvr method)": [[173, "mia_processes.pipelines.stat.bold_stat_cvr.Bold_stat_cvr.pipeline_definition"]], "pagenumcanvas (class in mia_processes.utils.tools)": [[174, "mia_processes.utils.tools.PageNumCanvas"]], "report (class in mia_processes.utils.report)": [[174, "mia_processes.utils.report.Report"]], "reportline (class in mia_processes.utils.tools)": [[174, "mia_processes.utils.tools.ReportLine"]], "__init__() (mia_processes.utils.report.report method)": [[174, "mia_processes.utils.report.Report.__init__"]], "__init__() (mia_processes.utils.tools.pagenumcanvas method)": [[174, "mia_processes.utils.tools.PageNumCanvas.__init__"]], "__init__() (mia_processes.utils.tools.reportline method)": [[174, "mia_processes.utils.tools.ReportLine.__init__"]], "checkfileext() (in module mia_processes.utils.tools)": [[174, "mia_processes.utils.tools.checkFileExt"]], "check_orientations() (in module mia_processes.utils.tools)": [[174, "mia_processes.utils.tools.check_orientations"]], "co2_inhal_cvr_make_report() (mia_processes.utils.report.report method)": [[174, "mia_processes.utils.report.Report.co2_inhal_cvr_make_report"]], "del_dbfieldvalue() (in module mia_processes.utils.tools)": [[174, "mia_processes.utils.tools.del_dbFieldValue"]], "dict4runtime_update() (in module mia_processes.utils.tools)": [[174, "mia_processes.utils.tools.dict4runtime_update"]], "draw() (mia_processes.utils.tools.reportline method)": [[174, "mia_processes.utils.tools.ReportLine.draw"]], "draw_page_number() (mia_processes.utils.tools.pagenumcanvas method)": [[174, "mia_processes.utils.tools.PageNumCanvas.draw_page_number"]], "ge2rec_make_report() (mia_processes.utils.report.report method)": [[174, "mia_processes.utils.report.Report.ge2rec_make_report"]], "get_dbfieldvalue() (in module mia_processes.utils.tools)": [[174, "mia_processes.utils.tools.get_dbFieldValue"]], "get_iqms_data() (mia_processes.utils.report.report method)": [[174, "mia_processes.utils.report.Report.get_iqms_data"]], "mia_processes.utils": [[174, "module-mia_processes.utils"]], "mia_processes.utils.report": [[174, "module-mia_processes.utils.report"]], "mia_processes.utils.tools": [[174, "module-mia_processes.utils.tools"]], "mriqc_anat_make_report() (mia_processes.utils.report.report method)": [[174, "mia_processes.utils.report.Report.mriqc_anat_make_report"]], "mriqc_func_make_report() (mia_processes.utils.report.report method)": [[174, "mia_processes.utils.report.Report.mriqc_func_make_report"]], "mriqc_get_all_run() (in module mia_processes.utils.tools)": [[174, "mia_processes.utils.tools.mriqc_get_all_run"]], "mriqc_group_iqms_tsv() (in module mia_processes.utils.tools)": [[174, "mia_processes.utils.tools.mriqc_group_iqms_tsv"]], "mriqc_group_make_report() (mia_processes.utils.report.report method)": [[174, "mia_processes.utils.report.Report.mriqc_group_make_report"]], "plot_boxplot_points() (in module mia_processes.utils.tools)": [[174, "mia_processes.utils.tools.plot_boxplot_points"]], "plot_qi2() (in module mia_processes.utils.tools)": [[174, "mia_processes.utils.tools.plot_qi2"]], "plot_realignment_parameters() (in module mia_processes.utils.tools)": [[174, "mia_processes.utils.tools.plot_realignment_parameters"]], "plot_segmentation() (in module mia_processes.utils.tools)": [[174, "mia_processes.utils.tools.plot_segmentation"]], "plot_slice_planes() (in module mia_processes.utils.tools)": [[174, "mia_processes.utils.tools.plot_slice_planes"]], "save() (mia_processes.utils.tools.pagenumcanvas method)": [[174, "mia_processes.utils.tools.PageNumCanvas.save"]], "set_dbfieldvalue() (in module mia_processes.utils.tools)": [[174, "mia_processes.utils.tools.set_dbFieldValue"]], "showpage() (mia_processes.utils.tools.pagenumcanvas method)": [[174, "mia_processes.utils.tools.PageNumCanvas.showPage"]]}})