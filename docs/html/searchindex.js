Search.setIndex({"docnames": ["documentation/bricks/preprocess/afni/Automask", "documentation/bricks/preprocess/afni/Calc", "documentation/bricks/preprocess/afni/CalcDropTRs", "documentation/bricks/preprocess/afni/Despike", "documentation/bricks/preprocess/afni/FWHMx", "documentation/bricks/preprocess/afni/GCOR", "documentation/bricks/preprocess/afni/OutlierCount", "documentation/bricks/preprocess/afni/QualityIndex", "documentation/bricks/preprocess/afni/RefitDeoblique", "documentation/bricks/preprocess/afni/SkullStrip", "documentation/bricks/preprocess/afni/TShift", "documentation/bricks/preprocess/afni/TStatMean", "documentation/bricks/preprocess/afni/Volreg", "documentation/bricks/preprocess/ants/AffineInitializer", "documentation/bricks/preprocess/ants/ApplyTransform", "documentation/bricks/preprocess/ants/N4BiasFieldCorrection", "documentation/bricks/preprocess/ants/Registration", "documentation/bricks/preprocess/dipy/ComputeDKI", "documentation/bricks/preprocess/dipy/Denoise", "documentation/bricks/preprocess/freesurfer/Binarize", "documentation/bricks/preprocess/freesurfer/SynthStrip", "documentation/bricks/preprocess/freesurfer/SynthStripMriqc", "documentation/bricks/preprocess/fsl/BetSurfacesExtraction", "documentation/bricks/preprocess/fsl/ExtractROI", "documentation/bricks/preprocess/fsl/FastSegment", "documentation/bricks/preprocess/fsl/Flirt", "documentation/bricks/preprocess/fsl/Smooth", "documentation/bricks/preprocess/mrtrix/ConstrainedSphericalDeconvolution", "documentation/bricks/preprocess/mrtrix/DWIBiasCorrect", "documentation/bricks/preprocess/mrtrix/DWIBrainMask", "documentation/bricks/preprocess/mrtrix/DWIDenoise", "documentation/bricks/preprocess/mrtrix/DWIExtract", "documentation/bricks/preprocess/mrtrix/DWIPreproc", "documentation/bricks/preprocess/mrtrix/EditingTrack", "documentation/bricks/preprocess/mrtrix/FilteringTrack", "documentation/bricks/preprocess/mrtrix/FitTensor", "documentation/bricks/preprocess/mrtrix/Generate5tt2gmwmi", "documentation/bricks/preprocess/mrtrix/Generate5ttfsl", "documentation/bricks/preprocess/mrtrix/MRCat", "documentation/bricks/preprocess/mrtrix/MRConvert", "documentation/bricks/preprocess/mrtrix/MRDeGibbs", "documentation/bricks/preprocess/mrtrix/MRMath", "documentation/bricks/preprocess/mrtrix/MRTransform", "documentation/bricks/preprocess/mrtrix/MTNormalise", "documentation/bricks/preprocess/mrtrix/ResponseSDDhollander", "documentation/bricks/preprocess/mrtrix/SphericalHarmonicExtraction", "documentation/bricks/preprocess/mrtrix/TensorMetrics", "documentation/bricks/preprocess/mrtrix/Tractography", "documentation/bricks/preprocess/mrtrix/TransformFSLConvert", "documentation/bricks/preprocess/others/ApplyBiasCorrection", "documentation/bricks/preprocess/others/ArtifactMask", "documentation/bricks/preprocess/others/Binarize", "documentation/bricks/preprocess/others/ConformImage", "documentation/bricks/preprocess/others/ConvROI", "documentation/bricks/preprocess/others/Enhance", "documentation/bricks/preprocess/others/EstimateSNR", "documentation/bricks/preprocess/others/GradientThreshold", "documentation/bricks/preprocess/others/Harmonize", "documentation/bricks/preprocess/others/IntensityClip", "documentation/bricks/preprocess/others/Mask", "documentation/bricks/preprocess/others/NonSteadyDetector", "documentation/bricks/preprocess/others/Resample1", "documentation/bricks/preprocess/others/Resample2", "documentation/bricks/preprocess/others/RotationMask", "documentation/bricks/preprocess/others/Sanitize", "documentation/bricks/preprocess/others/TSNR", "documentation/bricks/preprocess/others/TemplateFromTemplateFlow", "documentation/bricks/preprocess/others/Threshold", "documentation/bricks/preprocess/spm/Coregister", "documentation/bricks/preprocess/spm/GM_WM_Normalize", "documentation/bricks/preprocess/spm/NewSegment", "documentation/bricks/preprocess/spm/Normalize12", "documentation/bricks/preprocess/spm/Realign", "documentation/bricks/preprocess/spm/SliceTiming", "documentation/bricks/preprocess/spm/Smooth", "documentation/bricks/reports/AnatIQMs", "documentation/bricks/reports/BoldIQMs", "documentation/bricks/reports/BoldIQMsPlot", "documentation/bricks/reports/CarpetParcellation", "documentation/bricks/reports/ComputeDVARS", "documentation/bricks/reports/FramewiseDisplacement", "documentation/bricks/reports/Mean_stdDev_calc", "documentation/bricks/reports/ReportAnatMriqc", "documentation/bricks/reports/ReportCO2inhalCvr", "documentation/bricks/reports/ReportFuncMriqc", "documentation/bricks/reports/ReportGroupMriqc", "documentation/bricks/reports/Result_collector", "documentation/bricks/reports/Spikes", "documentation/bricks/stats/spm/EstimateContrast", "documentation/bricks/stats/spm/EstimateModel", "documentation/bricks/stats/spm/Level1Design", "documentation/bricks/stats/spm/MultipleRegressionDesign", "documentation/bricks/stats/spm/OneSampleTTestDesign", "documentation/bricks/stats/spm/PairedTTestDesign", "documentation/bricks/stats/spm/TwoSampleTTestDesign", "documentation/bricks/tools/Concat_to_list", "documentation/bricks/tools/Concat_to_list_of_list", "documentation/bricks/tools/Delete_data", "documentation/bricks/tools/Files_To_List", "documentation/bricks/tools/Filter_Files_List", "documentation/bricks/tools/Find_In_List", "documentation/bricks/tools/Get_Conditions_From_csv", "documentation/bricks/tools/Get_Patient_Name", "documentation/bricks/tools/Import_Data", "documentation/bricks/tools/Input_Filter", "documentation/bricks/tools/List_Duplicate", "documentation/bricks/tools/List_To_File", "documentation/bricks/tools/Make_A_List", "documentation/documentation", "documentation/pipelines/CerebVascularReact/CO2_inhalation", "documentation/pipelines/DWITractography/DWI_whole_brain_tractograpy", "documentation/pipelines/preprocess/Anat_airmask", "documentation/pipelines/preprocess/Anat_headmask", "documentation/pipelines/preprocess/Anat_mni_tpms", "documentation/pipelines/preprocess/Anat_skullstrip", "documentation/pipelines/preprocess/Anat_skullstrip_synthstrip", "documentation/pipelines/preprocess/Anat_spatial_norm", "documentation/pipelines/preprocess/Bold_hmc", "documentation/pipelines/preprocess/Bold_mni_align", "documentation/pipelines/preprocess/Bold_spatial_preprocessing1", "documentation/pipelines/preprocess/Bold_spatial_preprocessing2", "documentation/pipelines/preprocess/Dwi_fod_msmt_csd", "documentation/pipelines/preprocess/Dwi_preprocessing", "documentation/pipelines/preprocess/Dwi_tissue_boundaries", "documentation/pipelines/preprocess/Spatial_mask", "documentation/pipelines/qualityControl/Anat_mriqc", "documentation/pipelines/qualityControl/Bold_mriqc", "documentation/pipelines/reports/Bold_iqms", "documentation/pipelines/reports/Extract_roi_param", "documentation/pipelines/stat/Bold_stat_cvr", "index", "mia_processes", "mia_processes.bricks", "mia_processes.bricks.preprocess", "mia_processes.bricks.preprocess.afni", "mia_processes.bricks.preprocess.ants", "mia_processes.bricks.preprocess.dipy", "mia_processes.bricks.preprocess.freesurfer", "mia_processes.bricks.preprocess.fsl", "mia_processes.bricks.preprocess.mrtrix", "mia_processes.bricks.preprocess.others", "mia_processes.bricks.preprocess.spm", "mia_processes.bricks.reports", "mia_processes.bricks.stat", "mia_processes.bricks.stat.spm", "mia_processes.bricks.tools", "mia_processes.pipelines", "mia_processes.pipelines.CerebVascularReact", "mia_processes.pipelines.DWITractography", "mia_processes.pipelines.preprocess", "mia_processes.pipelines.qualityControl", "mia_processes.pipelines.reports", "mia_processes.pipelines.stat", "mia_processes.utils", "modules"], "filenames": ["documentation/bricks/preprocess/afni/Automask.rst", "documentation/bricks/preprocess/afni/Calc.rst", "documentation/bricks/preprocess/afni/CalcDropTRs.rst", "documentation/bricks/preprocess/afni/Despike.rst", "documentation/bricks/preprocess/afni/FWHMx.rst", "documentation/bricks/preprocess/afni/GCOR.rst", "documentation/bricks/preprocess/afni/OutlierCount.rst", "documentation/bricks/preprocess/afni/QualityIndex.rst", "documentation/bricks/preprocess/afni/RefitDeoblique.rst", "documentation/bricks/preprocess/afni/SkullStrip.rst", "documentation/bricks/preprocess/afni/TShift.rst", "documentation/bricks/preprocess/afni/TStatMean.rst", "documentation/bricks/preprocess/afni/Volreg.rst", "documentation/bricks/preprocess/ants/AffineInitializer.rst", "documentation/bricks/preprocess/ants/ApplyTransform.rst", "documentation/bricks/preprocess/ants/N4BiasFieldCorrection.rst", "documentation/bricks/preprocess/ants/Registration.rst", "documentation/bricks/preprocess/dipy/ComputeDKI.rst", "documentation/bricks/preprocess/dipy/Denoise.rst", "documentation/bricks/preprocess/freesurfer/Binarize.rst", "documentation/bricks/preprocess/freesurfer/SynthStrip.rst", "documentation/bricks/preprocess/freesurfer/SynthStripMriqc.rst", "documentation/bricks/preprocess/fsl/BetSurfacesExtraction.rst", "documentation/bricks/preprocess/fsl/ExtractROI.rst", "documentation/bricks/preprocess/fsl/FastSegment.rst", "documentation/bricks/preprocess/fsl/Flirt.rst", "documentation/bricks/preprocess/fsl/Smooth.rst", "documentation/bricks/preprocess/mrtrix/ConstrainedSphericalDeconvolution.rst", "documentation/bricks/preprocess/mrtrix/DWIBiasCorrect.rst", "documentation/bricks/preprocess/mrtrix/DWIBrainMask.rst", "documentation/bricks/preprocess/mrtrix/DWIDenoise.rst", "documentation/bricks/preprocess/mrtrix/DWIExtract.rst", "documentation/bricks/preprocess/mrtrix/DWIPreproc.rst", "documentation/bricks/preprocess/mrtrix/EditingTrack.rst", "documentation/bricks/preprocess/mrtrix/FilteringTrack.rst", "documentation/bricks/preprocess/mrtrix/FitTensor.rst", "documentation/bricks/preprocess/mrtrix/Generate5tt2gmwmi.rst", "documentation/bricks/preprocess/mrtrix/Generate5ttfsl.rst", "documentation/bricks/preprocess/mrtrix/MRCat.rst", "documentation/bricks/preprocess/mrtrix/MRConvert.rst", "documentation/bricks/preprocess/mrtrix/MRDeGibbs.rst", "documentation/bricks/preprocess/mrtrix/MRMath.rst", "documentation/bricks/preprocess/mrtrix/MRTransform.rst", "documentation/bricks/preprocess/mrtrix/MTNormalise.rst", "documentation/bricks/preprocess/mrtrix/ResponseSDDhollander.rst", "documentation/bricks/preprocess/mrtrix/SphericalHarmonicExtraction.rst", "documentation/bricks/preprocess/mrtrix/TensorMetrics.rst", "documentation/bricks/preprocess/mrtrix/Tractography.rst", "documentation/bricks/preprocess/mrtrix/TransformFSLConvert.rst", "documentation/bricks/preprocess/others/ApplyBiasCorrection.rst", "documentation/bricks/preprocess/others/ArtifactMask.rst", "documentation/bricks/preprocess/others/Binarize.rst", "documentation/bricks/preprocess/others/ConformImage.rst", "documentation/bricks/preprocess/others/ConvROI.rst", "documentation/bricks/preprocess/others/Enhance.rst", "documentation/bricks/preprocess/others/EstimateSNR.rst", "documentation/bricks/preprocess/others/GradientThreshold.rst", "documentation/bricks/preprocess/others/Harmonize.rst", "documentation/bricks/preprocess/others/IntensityClip.rst", "documentation/bricks/preprocess/others/Mask.rst", "documentation/bricks/preprocess/others/NonSteadyDetector.rst", "documentation/bricks/preprocess/others/Resample1.rst", "documentation/bricks/preprocess/others/Resample2.rst", "documentation/bricks/preprocess/others/RotationMask.rst", "documentation/bricks/preprocess/others/Sanitize.rst", "documentation/bricks/preprocess/others/TSNR.rst", "documentation/bricks/preprocess/others/TemplateFromTemplateFlow.rst", "documentation/bricks/preprocess/others/Threshold.rst", "documentation/bricks/preprocess/spm/Coregister.rst", "documentation/bricks/preprocess/spm/GM_WM_Normalize.rst", "documentation/bricks/preprocess/spm/NewSegment.rst", "documentation/bricks/preprocess/spm/Normalize12.rst", "documentation/bricks/preprocess/spm/Realign.rst", "documentation/bricks/preprocess/spm/SliceTiming.rst", "documentation/bricks/preprocess/spm/Smooth.rst", "documentation/bricks/reports/AnatIQMs.rst", "documentation/bricks/reports/BoldIQMs.rst", "documentation/bricks/reports/BoldIQMsPlot.rst", "documentation/bricks/reports/CarpetParcellation.rst", "documentation/bricks/reports/ComputeDVARS.rst", "documentation/bricks/reports/FramewiseDisplacement.rst", "documentation/bricks/reports/Mean_stdDev_calc.rst", "documentation/bricks/reports/ReportAnatMriqc.rst", "documentation/bricks/reports/ReportCO2inhalCvr.rst", "documentation/bricks/reports/ReportFuncMriqc.rst", "documentation/bricks/reports/ReportGroupMriqc.rst", "documentation/bricks/reports/Result_collector.rst", "documentation/bricks/reports/Spikes.rst", "documentation/bricks/stats/spm/EstimateContrast.rst", "documentation/bricks/stats/spm/EstimateModel.rst", "documentation/bricks/stats/spm/Level1Design.rst", "documentation/bricks/stats/spm/MultipleRegressionDesign.rst", "documentation/bricks/stats/spm/OneSampleTTestDesign.rst", "documentation/bricks/stats/spm/PairedTTestDesign.rst", "documentation/bricks/stats/spm/TwoSampleTTestDesign.rst", "documentation/bricks/tools/Concat_to_list.rst", "documentation/bricks/tools/Concat_to_list_of_list.rst", "documentation/bricks/tools/Delete_data.rst", "documentation/bricks/tools/Files_To_List.rst", "documentation/bricks/tools/Filter_Files_List.rst", "documentation/bricks/tools/Find_In_List.rst", "documentation/bricks/tools/Get_Conditions_From_csv.rst", "documentation/bricks/tools/Get_Patient_Name.rst", "documentation/bricks/tools/Import_Data.rst", "documentation/bricks/tools/Input_Filter.rst", "documentation/bricks/tools/List_Duplicate.rst", "documentation/bricks/tools/List_To_File.rst", "documentation/bricks/tools/Make_A_List.rst", "documentation/documentation.rst", "documentation/pipelines/CerebVascularReact/CO2_inhalation.rst", "documentation/pipelines/DWITractography/DWI_whole_brain_tractograpy.rst", "documentation/pipelines/preprocess/Anat_airmask.rst", "documentation/pipelines/preprocess/Anat_headmask.rst", "documentation/pipelines/preprocess/Anat_mni_tpms.rst", "documentation/pipelines/preprocess/Anat_skullstrip.rst", "documentation/pipelines/preprocess/Anat_skullstrip_synthstrip.rst", "documentation/pipelines/preprocess/Anat_spatial_norm.rst", "documentation/pipelines/preprocess/Bold_hmc.rst", "documentation/pipelines/preprocess/Bold_mni_align.rst", "documentation/pipelines/preprocess/Bold_spatial_preprocessing1.rst", "documentation/pipelines/preprocess/Bold_spatial_preprocessing2.rst", "documentation/pipelines/preprocess/Dwi_fod_msmt_csd.rst", "documentation/pipelines/preprocess/Dwi_preprocessing.rst", "documentation/pipelines/preprocess/Dwi_tissue_boundaries.rst", "documentation/pipelines/preprocess/Spatial_mask.rst", "documentation/pipelines/qualityControl/Anat_mriqc.rst", "documentation/pipelines/qualityControl/Bold_mriqc.rst", "documentation/pipelines/reports/Bold_iqms.rst", "documentation/pipelines/reports/Extract_roi_param.rst", "documentation/pipelines/stat/Bold_stat_cvr.rst", "index.rst", "mia_processes.rst", "mia_processes.bricks.rst", "mia_processes.bricks.preprocess.rst", "mia_processes.bricks.preprocess.afni.rst", "mia_processes.bricks.preprocess.ants.rst", "mia_processes.bricks.preprocess.dipy.rst", "mia_processes.bricks.preprocess.freesurfer.rst", "mia_processes.bricks.preprocess.fsl.rst", "mia_processes.bricks.preprocess.mrtrix.rst", "mia_processes.bricks.preprocess.others.rst", "mia_processes.bricks.preprocess.spm.rst", "mia_processes.bricks.reports.rst", "mia_processes.bricks.stat.rst", "mia_processes.bricks.stat.spm.rst", "mia_processes.bricks.tools.rst", "mia_processes.pipelines.rst", "mia_processes.pipelines.CerebVascularReact.rst", "mia_processes.pipelines.DWITractography.rst", "mia_processes.pipelines.preprocess.rst", "mia_processes.pipelines.qualityControl.rst", "mia_processes.pipelines.reports.rst", "mia_processes.pipelines.stat.rst", "mia_processes.utils.rst", "modules.rst"], "titles": ["Automask brick", "Calc brick", "CalcDropTRs brick", "Despike brick", "FWHMx brick", "GCOR brick", "OutlierCount brick", "QualityIndex brick", "RefitDeoblique brick", "SkullStrip brick", "TShift brick", "TStatMean brick", "Volreg brick", "AffineInitializer brick", "ApplyTransforms brick", "N4BiasFieldCorrection brick", "Registration brick", "ComputeDKI brick", "Denoise brick", "Binarize brick", "SynthStrip brick", "SynthStripMriqc brick", "BetSurfacesExtraction brick", "ExtractROI brick", "FastSegment brick", "Flirt brick", "Smooth brick", "ConstrainedSphericalDeconvolution brick", "DWIBiasCorrect brick", "DWIBrainMask brick", "DWIDenoise brick", "DWIExtract brick", "DWIPreproc brick", "EditingTrack brick", "FilteringTrack brick", "FitTensor brick", "Generate5tt2gmwmi brick", "Generate5ttfsl brick", "MRCat brick", "MRConvert brick", "MRDeGibbs brick", "MRMath brick", "MRTransform brick", "MTNormalise brick", "ResponseSDDhollander brick", "SphericalHarmonicExtraction brick", "TensorMetrics brick", "Tractography brick", "TransformFSLConvert brick", "ApplyBiasCorrection brick", "ArtifactMask brick", "Binarize brick", "ConformImage brick", "ConvROI brick", "Enhance brick", "EstimateSNR brick", "GradientThreshold brick", "Harmonize brick", "IntensityClip brick", "Mask brick", "NonSteadyDetector brick", "Resample1 brick", "Resample2 brick", "RotationMask brick", "Sanitize brick", "TSNR brick", "TemplateFromTemplateFlow brick", "Threshold brick", "Coregister brick", "GM_WM_Normalize brick", "NewSegment brick", "Normalize12 brick", "Realign brick", "SliceTiming brick", "Smooth brick", "AnatIQMs brick", "BoldQMs brick", "BoldQMsPlot brick", "CarpetParcellation brick", "ComputeDVARS brick", "FramewiseDisplacement brick", "Mean_stdDev_calc brick", "ReportAnatMriqc brick", "ReportCO2inhalCvr brick", "ReportFuncMriqc brick", "ReportGroupMriqc brick", "Result_collector brick", "Spikes brick", "EstimateConstrast brick", "EstimateModel brick", "Level1Design brick", "MultipleRegressionDesign brick", "OneSampleTTestDesign brick", "PairedTTestDesign brick", "TwoSampleTTestDesign brick", "Concat_to_list  brick", "Concat_to_list_of_list brick", "Delete_data brick", "Files_To_List brick", "Filter_Files_List brick", "Find_In_List brick", "Get_Conditions_From_csv brick", "Get_Patient_Name brick", "Import_Data  brick", "Input_Filter brick", "List_Duplicate brick", "List_To_File brick", "Make_a_list brick", "Mia_processes\u2019s documentation", "CO2_inhalation pipeline", "DWI_whole_brain_tractograpy pipeline", "Anat_airmask pipeline", "Anat_headmask pipeline", "Anat_mni_tpms pipeline", "Anat_skullstrip pipeline", "Anat_skullstrip_synthstrip pipeline", "Anat_spatial_norm pipeline", "Bold_hmc pipeline", "Bold_mni_align pipeline", "Bold_spatial_preprocessing1 pipeline", "Bold_spatial_preprocessing2 pipeline", "Dwi_fod_msmt_csd pipeline", "Dwi_preprocessing pipeline", "Dwi_tissue_boundaries pipeline", "Spatial_mask pipeline", "Anat_mriqc pipeline", "Bold_mriqc pipeline", "Bold_iqms pipeline", "Extract_roi_param pipeline", "Bold_stat_cvr brick", "Purpose", "mia_processes package", "mia_processes.bricks package", "mia_processes.bricks.preprocess package", "mia_processes.bricks.preprocess.afni package", "mia_processes.bricks.preprocess.ants package", "mia_processes.bricks.preprocess.dipy package", "mia_processes.bricks.preprocess.freesurfer package", "mia_processes.bricks.preprocess.fsl package", "mia_processes.bricks.preprocess.mrtrix package", "mia_processes.bricks.preprocess.others package", "mia_processes.bricks.preprocess.spm package", "mia_processes.bricks.reports package", "mia_processes.bricks.stat package", "mia_processes.bricks.stat.spm package", "mia_processes.bricks.tools package", "mia_processes.pipelines package", "mia_processes.pipelines.CerebVascularReact package", "mia_processes.pipelines.DWITractography package", "mia_processes.pipelines.preprocess package", "mia_processes.pipelines.qualityControl package", "mia_processes.pipelines.reports package", "mia_processes.pipelines.stat package", "mia_processes.utils package", "mia_processes"], "terms": {"home": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "document": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 149, 150, 151, 152, 153], "github": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 135, 137, 140, 141, 153], "3dcliplevel": 0, "algorithm": [0, 12, 15, 27, 35, 47, 70, 71, 110, 121, 139, 140, 142], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 103, 106, 110, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 149, 151, 153], "find": [0, 22, 45, 47, 68], "clip": [0, 6, 7, 16, 64, 115, 140], "level": [0, 88, 89, 90, 91, 92, 93, 94, 104, 139, 145], "after": [0, 19, 42, 47, 51, 61, 67, 69, 73, 79, 81, 128, 139, 140, 142], "an": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 60, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 97, 98, 100, 102, 105, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 153], "eros": [0, 19, 44], "dilat": [0, 19, 34, 142], "step": [0, 1, 5, 15, 30, 35, 39, 47, 50, 89, 110, 114, 117, 121, 122, 123, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 149], "largest": [0, 10, 24], "connect": [0, 142], "compon": [0, 43, 45, 110], "supra": 0, "threshold": [0, 15, 16, 19, 20, 21, 34, 44, 45, 58, 76, 77, 90, 91, 92, 93, 94, 108, 112, 124, 127, 133, 137, 139, 140], "voxel": [0, 6, 7, 10, 11, 12, 15, 19, 23, 24, 25, 26, 30, 34, 36, 39, 44, 47, 51, 54, 68, 71, 72, 74, 77, 79, 89, 90, 91, 92, 93, 94, 110, 121, 129, 134, 139, 142], "ar": [0, 1, 10, 15, 16, 17, 18, 19, 22, 23, 24, 25, 27, 29, 31, 32, 33, 35, 38, 39, 40, 41, 42, 43, 44, 47, 51, 52, 54, 57, 58, 59, 61, 62, 63, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 81, 85, 86, 88, 89, 90, 91, 92, 93, 94, 97, 98, 100, 101, 110, 118, 119, 120, 121, 122, 123, 125, 126, 129, 130, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 153], "kept": [0, 67, 97], "Be": [0, 51, 52, 54, 57, 59, 63, 97], "carr": 0, "thi": [0, 1, 4, 10, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 53, 62, 67, 68, 70, 72, 73, 75, 76, 79, 80, 81, 86, 88, 89, 90, 91, 92, 93, 94, 97, 102, 103, 104, 110, 121, 122, 123, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 149, 150, 151, 152], "program": [0, 22, 45, 68, 72], "itself": [0, 15, 47, 142, 145], "doe": [0, 25, 44], "NOT": [0, 34, 37, 47], "do": [0, 5, 12, 25, 32, 34, 37, 47, 87, 90, 91, 92, 93, 94, 134, 135, 136, 137, 138, 139, 140, 141, 144], "skull": [0, 9, 20, 115, 125, 137, 138, 142, 149], "strip": [0, 9, 20, 22, 115, 125, 137, 149], "mandatori": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 87, 88, 89, 91, 92, 93, 94, 97, 98, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 125, 126, 127], "input": [0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 149, 150, 151, 152], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 149, 150, 151, 152, 153], "in_fil": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 67, 72, 73, 74, 79, 80, 87, 91, 92, 97, 102, 111, 112, 114, 115, 117, 153], "string": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 105, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 153], "repres": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 153], "exist": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 100, 101, 102, 105, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 140, 142, 153], "file": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 97, 101, 102, 103, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 137, 139, 140, 142, 144, 145, 153], "valid": [0, 1, 2, 3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 87, 100, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 153], "extens": [0, 1, 2, 3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 87, 100, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 153], "nii": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 32, 35, 36, 37, 38, 39, 41, 42, 43, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 153], "gz": [0, 1, 2, 3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 32, 35, 36, 37, 38, 39, 41, 42, 43, 44, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 75, 76, 77, 78, 79, 82, 83, 84, 87, 110, 111, 112, 113, 114, 115, 116, 117, 118, 122, 123, 124, 125, 126, 127, 153], "dataset": [0, 4, 11, 31, 134, 139, 142], "can": [0, 10, 15, 16, 17, 19, 24, 25, 42, 68, 69, 70, 71, 74, 86, 89, 90, 91, 92, 93, 94, 97, 130, 131, 135, 137, 142, 153], "4depi": 0, "anatom": [0, 34, 36, 37, 47, 50, 52, 54, 55, 56, 57, 63, 83, 110, 111, 112, 113, 114, 115, 116, 119, 120, 123, 140, 142, 149, 150], "ex": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 142, 145, 153], "usernam": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "data": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 87, 88, 89, 90, 91, 92, 93, 94, 98, 99, 100, 101, 102, 105, 106, 107, 110, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 127, 128, 129, 135, 139, 142, 144, 145, 149, 150, 151, 153], "raw_data": [0, 1, 2, 3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 86, 87, 90, 99, 103, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 145], "func": [0, 2, 3, 8, 10, 11, 12, 18, 26, 60, 64, 65, 68, 72, 73, 74, 76, 84, 85, 87, 98, 99, 104, 105, 106, 117, 119, 120, 124, 126], "option": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 54, 56, 57, 58, 59, 61, 63, 64, 65, 66, 67, 68, 72, 75, 76, 77, 78, 79, 80, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 104, 110, 117, 118, 121, 122, 127, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 153], "default": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 54, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 75, 76, 77, 78, 79, 80, 82, 83, 84, 87, 88, 89, 91, 92, 93, 94, 96, 97, 103, 110, 111, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 126, 130, 153], "valu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 54, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 103, 110, 111, 113, 116, 117, 118, 120, 121, 122, 123, 126, 129, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 151, 153], "clfrac": 0, "float": [0, 3, 5, 6, 10, 13, 14, 15, 16, 18, 19, 25, 26, 27, 31, 32, 33, 39, 43, 44, 45, 47, 51, 55, 58, 67, 68, 70, 71, 72, 73, 74, 76, 77, 79, 80, 87, 88, 89, 90, 91, 92, 93, 94, 101, 110, 118, 122, 125, 126, 127, 140, 142], "0": [0, 1, 2, 5, 6, 10, 12, 13, 14, 15, 16, 18, 19, 23, 24, 25, 26, 27, 29, 32, 33, 35, 39, 40, 41, 42, 43, 44, 47, 51, 58, 61, 64, 67, 68, 70, 71, 72, 73, 74, 76, 77, 79, 80, 82, 84, 87, 88, 90, 91, 92, 93, 94, 99, 101, 106, 107, 110, 116, 118, 120, 122, 127, 137, 139, 140, 142, 153], "5": [0, 1, 6, 7, 10, 14, 15, 16, 18, 19, 25, 30, 35, 39, 47, 61, 70, 71, 72, 73, 82, 83, 84, 90, 91, 92, 93, 94, 110, 116, 123, 140, 142], "set": [0, 2, 10, 13, 15, 18, 19, 23, 24, 25, 27, 30, 32, 34, 35, 39, 42, 44, 45, 47, 51, 54, 68, 72, 73, 74, 79, 90, 103, 125, 126, 135, 139, 145], "fraction": [0, 6, 17, 24, 46, 142], "must": [0, 10, 16, 25, 32, 33, 47, 53, 58, 62, 67, 68, 72, 73, 81, 86, 90, 108, 123, 129, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145], "1": [0, 2, 6, 7, 12, 13, 14, 16, 18, 19, 20, 21, 23, 24, 25, 32, 39, 40, 41, 42, 47, 50, 51, 52, 60, 67, 68, 69, 70, 71, 72, 73, 74, 83, 85, 88, 89, 90, 91, 92, 93, 94, 96, 103, 106, 110, 113, 116, 118, 125, 126, 129, 137, 140, 142, 145, 149, 153], "9": [0, 25, 35, 47, 58, 72, 73, 90], "A": [0, 9, 15, 16, 22, 24, 27, 32, 34, 47, 51, 53, 61, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 81, 82, 84, 85, 86, 90, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 110, 119, 120, 122, 123, 124, 125, 126, 128, 129, 131, 135, 140, 142], "small": [0, 6, 7, 25, 125, 126], "tend": [0, 110], "make": [0, 19, 73, 121, 140, 142, 145, 149, 153], "larger": 0, "out_brain_suffix": 0, "_mask": [0, 50, 59], "suffix": [0, 10, 19, 23, 33, 34, 39, 45, 50, 51, 52, 54, 56, 57, 59, 61, 62, 63, 64, 65, 66, 67, 111, 113, 116, 118, 153], "output_typ": [0, 1, 2, 3, 9, 10, 11, 12, 19, 20, 21, 22, 23, 24, 25, 26], "nifti": [0, 1, 2, 3, 9, 10, 11, 12, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 71, 123, 153], "nifti_gz": [0, 1, 2, 3, 9, 10, 11, 12, 19, 20, 21, 22, 23, 24, 25, 26, 39, 153], "format": [0, 1, 2, 3, 9, 10, 11, 12, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 122, 123, 139, 142], "output": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 149, 150, 151, 152, 153], "one": [0, 1, 2, 3, 4, 9, 10, 11, 12, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 32, 33, 37, 46, 47, 51, 52, 54, 57, 58, 59, 63, 68, 70, 74, 87, 89, 90, 91, 93, 94, 98, 101, 104, 105, 130, 134, 139, 140, 142, 144, 145, 153], "out_prefix": [0, 1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 26, 68, 71, 72, 73, 74, 78, 79, 80, 82, 84, 87], "prefix": [0, 1, 2, 3, 9, 10, 11, 12, 13, 14, 15, 16, 18, 51, 52, 53, 54, 56, 57, 59, 61, 63, 64, 65, 67, 68, 71, 72, 73, 74, 82, 84, 87], "automask_": 0, "integ": [0, 1, 2, 4, 5, 6, 7, 10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 25, 27, 30, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 61, 68, 71, 72, 73, 74, 76, 82, 83, 84, 87, 89, 90, 99, 106, 118, 127, 153], "outward": 0, "undefin": [0, 1, 5, 7, 10, 12, 14, 15, 16, 18, 19, 31, 73, 77, 82, 83, 84, 86, 88, 89, 90, 98, 103, 119, 128], "ie": [0, 1, 5, 10, 12, 14, 15, 16, 18, 19, 31, 44, 47, 82, 83, 84], "erod": [0, 19, 44, 57, 142], "inward": 0, "out_brain": [0, 115], "derived_data": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 97, 102, 103, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "func_mask": 0, "out_fil": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 25, 26, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 49, 51, 52, 54, 56, 57, 58, 59, 61, 63, 64, 67, 75, 76, 77, 78, 79, 80, 86, 87, 100, 105, 112, 114, 117, 142, 153], "automask_func": [0, 97], "useful": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 110, 111, 112, 113, 115, 116, 117, 118, 125, 126, 127, 129], "link": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 110, 111, 112, 113, 115, 116, 117, 118, 125, 126, 127, 129, 130, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145], "nipyp": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 22, 23, 24, 25, 27, 28, 30, 31, 32, 35, 37, 38, 40, 41, 42, 44, 46, 47, 50, 60, 65, 68, 70, 71, 72, 73, 74, 79, 80, 88, 89, 90, 91, 92, 93, 94, 130, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144], "assum": [1, 32, 73, 90, 91, 92, 93, 94], "comput": [1, 11, 14, 16, 17, 18, 19, 27, 35, 40, 43, 45, 47, 55, 57, 77, 125, 126, 130, 134, 136, 139, 140, 141, 142, 149], "being": [1, 47, 68, 71, 72], "perform": [1, 15, 25, 27, 30, 35, 38, 41, 42, 45, 68, 90, 91, 92, 93, 94, 121, 123, 139, 142], "occupi": 1, "same": [1, 8, 10, 19, 23, 25, 32, 37, 68, 73, 74, 86, 90, 101, 125, 126, 141, 142], "space": [1, 13, 14, 16, 22, 23, 25, 40, 42, 50, 51, 52, 54, 57, 59, 63, 66, 68, 69, 70, 71, 72, 75, 78, 110, 111, 116, 119, 127, 142, 149, 153], "have": [1, 15, 16, 24, 25, 27, 32, 34, 47, 53, 62, 68, 69, 70, 71, 72, 81, 86, 90, 91, 92, 93, 94, 140, 142], "orient": [1, 34, 42, 44, 47, 90, 91, 92, 93, 94, 110, 139, 149], "in_file_a": [1, 2], "first": [1, 5, 10, 14, 16, 19, 24, 25, 30, 32, 35, 39, 43, 47, 67, 72, 81, 82, 83, 84, 85, 86, 91, 92, 93, 94, 99, 100, 101, 106, 115, 121, 142], "img_1": 1, "expr": [1, 114], "b": [1, 15, 17, 27, 29, 32, 39, 68, 71, 72, 88, 95, 96, 110, 114, 121, 122, 123, 139, 142, 145], "express": [1, 79], "appli": [1, 14, 16, 18, 25, 27, 37, 43, 44, 47, 58, 67, 68, 69, 72, 73, 81, 90, 91, 92, 93, 94, 103, 104, 111, 113, 118, 123, 139, 140, 145], "between": [1, 6, 10, 13, 15, 16, 32, 34, 47, 61, 67, 68, 70, 71, 73, 79, 82, 83, 84, 85, 90, 91, 92, 93, 94, 99, 121, 125, 126, 128, 134, 139, 140, 153], "c": [1, 88, 95, 96, 145], "allow": [1, 17, 19, 22, 25, 47, 68, 90, 91, 92, 93, 94, 104, 123, 128], "parenthes": 1, "It": [1, 16, 17, 20, 23, 24, 25, 42, 73, 86, 123], "also": [1, 10, 17, 24, 25, 47, 68, 71, 72, 85, 86, 90, 97, 110, 122, 128], "possibl": [1, 16, 23, 24, 25, 32, 68, 72, 125, 126, 139], "built": [1, 27, 44, 81, 130, 149], "function": [1, 16, 17, 25, 27, 34, 42, 52, 55, 68, 79, 83, 87, 89, 90, 110, 117, 119, 120, 121, 124, 129, 139, 140, 142, 149, 150, 151, 153], "sin": 1, "co": [1, 110, 123], "sqrt": [1, 142], "mean": [1, 12, 16, 17, 41, 46, 70, 71, 72, 76, 79, 84, 86, 88, 91, 92, 93, 94, 126, 127, 134, 136, 142, 149, 151], "stdev": 1, "some": [1, 16, 23, 39, 68, 75, 76, 88, 90, 110, 123, 130, 134, 135, 136, 137, 138, 139, 141, 144], "design": [1, 32, 88, 89, 90, 101, 129, 144, 147], "help": [1, 121, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 149, 150, 151, 152], "implement": [1, 80, 89, 142], "logic": 1, "x": [1, 18, 23, 25, 42, 45, 47, 68, 71, 72, 74, 90, 110, 124, 137, 142, 153], "For": [1, 10, 14, 16, 19, 25, 39, 54, 56, 68, 69, 72, 86, 91, 92, 93, 94, 101, 149, 153], "more": [1, 3, 12, 16, 17, 27, 31, 32, 47, 51, 52, 54, 57, 58, 59, 63, 68, 72, 79, 90, 129, 145], "exampl": [1, 10, 14, 16, 19, 27, 36, 56, 66, 68, 69, 72, 86, 153], "refer": [1, 13, 25, 43, 48, 68, 72, 75, 76, 90, 111, 135, 140, 145, 150], "imag": [1, 2, 3, 4, 5, 6, 7, 12, 13, 15, 17, 19, 20, 21, 22, 24, 27, 30, 31, 34, 35, 40, 43, 44, 45, 46, 47, 48, 50, 55, 58, 65, 68, 70, 77, 79, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 110, 111, 113, 115, 116, 119, 120, 121, 122, 123, 128, 129, 130, 134, 135, 136, 137, 138, 139, 140, 141, 142, 149, 150, 153], "c_": 1, "in_file_b": 1, "second": [1, 10, 25, 32, 35, 37, 39, 43, 47, 72, 73, 90, 91, 92, 93, 94, 99, 110, 115, 122], "img_2": 1, "in_file_c": 1, "third": [1, 39, 85, 108, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145], "img_3": 1, "single_idx": 1, "volum": [1, 4, 10, 24, 25, 29, 32, 35, 39, 41, 42, 45, 60, 64, 71, 72, 73, 76, 79, 90, 110, 117, 122, 126, 127, 134, 137, 138, 139, 140, 141, 142, 153], "index": [1, 2, 10, 23, 70, 73, 76, 82, 83, 84, 86, 89, 99, 106, 127, 128, 130, 134, 151], "The": [1, 3, 7, 10, 12, 13, 16, 17, 18, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 53, 54, 61, 62, 67, 68, 69, 70, 71, 72, 73, 77, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 97, 99, 100, 101, 103, 106, 110, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "onli": [1, 6, 7, 17, 18, 19, 24, 25, 27, 30, 32, 33, 34, 35, 36, 39, 43, 45, 47, 51, 52, 54, 57, 59, 63, 67, 70, 72, 74, 89, 90, 91, 92, 93, 94, 103, 134, 142, 145], "start_idx": [1, 2], "start": [1, 2, 41, 45, 123, 135, 153], "requir": [1, 15, 16, 27, 28, 29, 30, 31, 32, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 68, 70, 86, 91, 92, 93, 94, 110, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145], "stop_idx": [1, 2], "stop": [1, 2, 47, 68], "35": [1, 73, 101], "out": [1, 2, 4, 5, 6, 7, 9, 10, 11, 13, 14, 15, 18, 19, 27, 38, 39, 41, 47, 50, 75, 76, 77, 79, 80, 87, 127, 142, 149, 153], "c_img_1": 1, "current": [1, 18, 70, 72, 73, 86, 89, 91, 92, 93, 94, 122, 145], "initi": [1, 5, 16, 25, 35, 44, 47, 130, 131], "mai": [1, 12, 25, 68, 69, 72, 90, 142], "crash": 1, "execut": [1, 32, 34], "produc": [1, 70, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 151], "ani": [1, 19, 20, 21, 33, 34, 40, 47, 68, 71, 86, 90, 91, 92, 93, 94, 107, 134], "result": [1, 15, 24, 25, 37, 47, 53, 61, 62, 68, 70, 71, 72, 81, 86, 98, 99, 103, 104, 106, 125, 126, 128, 142, 145], "without": [1, 42, 47, 50, 70, 72, 82, 86, 142, 153], "error": [1, 31, 89, 125, 126, 142], "messag": 1, "If": [2, 10, 15, 16, 20, 21, 25, 27, 30, 32, 33, 35, 36, 39, 41, 42, 43, 47, 53, 62, 68, 70, 71, 72, 73, 74, 81, 86, 89, 90, 91, 92, 93, 94, 97, 98, 99, 103, 106, 125, 128, 140, 142, 145, 153], "none": [2, 16, 32, 46, 70, 71, 73, 90, 91, 92, 93, 94, 118, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 149, 150, 151, 152, 153], "automat": [2, 39, 73, 83, 89, 90, 103, 142], "length": [2, 33, 47, 52, 88, 89, 90, 140], "3d": [2, 4, 9, 11, 15, 19, 23, 47, 61, 72, 119, 120, 134, 136, 138, 141, 142], "crop": [2, 37, 47], "cropped_": 2, "cannot": [2, 19, 75, 76], "lower": [2, 16, 58, 72, 142], "than": [2, 10, 12, 17, 37, 42, 45, 51, 68, 70, 71, 90, 140], "equal": [2, 14, 19, 27, 35, 42, 72, 88, 94], "10": [2, 13, 23, 33, 55, 58, 70, 71, 73, 74, 83, 90, 101, 110, 118, 140, 142], "cropped_func": 2, "calc": [2, 108, 114, 133, 134], "replac": [3, 18, 25, 42], "someth": 3, "pleas": [3, 20, 21, 27, 28, 29, 30, 31, 32, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 69, 72, 89, 90, 123, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 149, 150, 151, 152], "ey": [3, 66], "alwai": 3, "store": [3, 35, 68, 153], "boolean": [3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 19, 20, 21, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 37, 39, 42, 43, 44, 45, 46, 47, 57, 58, 64, 67, 68, 70, 72, 74, 79, 80, 86, 87, 88, 89, 91, 92, 93, 94, 103, 117, 127, 140, 153], "true": [3, 4, 5, 6, 7, 8, 14, 15, 16, 24, 25, 28, 30, 31, 46, 57, 58, 67, 70, 72, 74, 79, 86, 87, 88, 89, 91, 92, 93, 94, 103, 115, 116, 117, 121, 123, 126, 127, 140, 142, 153], "d": [3, 95, 140, 145], "d_": 3, "d_func": 3, "all": [4, 17, 19, 24, 25, 29, 31, 32, 33, 34, 35, 39, 47, 51, 68, 72, 73, 74, 75, 76, 79, 85, 87, 90, 91, 92, 93, 94, 97, 110, 121, 127, 129, 130, 134, 142, 145, 153], "sub": [4, 37, 83, 91, 92, 93, 94, 97, 134], "each": [4, 5, 10, 13, 16, 23, 24, 25, 27, 33, 34, 44, 47, 53, 54, 66, 68, 70, 72, 79, 81, 85, 88, 89, 90, 91, 92, 93, 94, 101, 103, 110, 121, 129, 133, 134, 139, 140, 142, 145, 153], "tr": [4, 5, 10, 73, 77], "separ": [4, 10, 24, 44, 68, 72, 77, 134], "mean_reg_func_valid": [4, 5, 76, 84, 118, 127], "combin": [4, 5, 6, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "final": [4, 5, 6, 10, 15, 25, 34, 44, 58, 81, 104, 119, 120, 121, 129, 142], "measur": [4, 5, 6, 17, 35, 70, 71, 75, 76, 90, 94, 142, 147, 150], "along": [4, 5, 6, 25, 38, 39, 139, 142], "axi": [4, 5, 6, 13, 25, 32, 38, 39, 47, 139, 142, 153], "detrend": [4, 6, 7, 10, 87], "specifi": [4, 6, 7, 10, 12, 14, 15, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 39, 40, 42, 43, 44, 45, 46, 47, 53, 68, 73, 74, 78, 79, 80, 88, 89, 90, 91, 92, 93, 94, 106, 139], "order": [4, 10, 12, 14, 15, 16, 22, 27, 33, 43, 47, 61, 70, 73, 89, 90, 101, 110, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145], "prepend": [4, 6, 7, 26, 53, 68, 74, 78, 79, 80], "filenam": [4, 6, 7, 26, 68, 72, 74, 78, 79, 80, 90, 103, 145], "fwhm_": 4, "arg": [4, 153], "add": [4, 10, 34, 88, 97, 131, 153], "showmeclassicfwhm": 4, "old": [4, 86, 142], "classic": [4, 16, 90, 135, 144], "method": [4, 10, 12, 25, 40, 42, 47, 50, 57, 63, 68, 71, 72, 89, 91, 92, 93, 94, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 153], "mask_fil": [4, 5, 6, 7, 59], "mask": [4, 6, 7, 12, 15, 16, 17, 18, 20, 21, 22, 25, 27, 28, 30, 32, 33, 34, 35, 37, 43, 44, 45, 47, 53, 66, 68, 72, 74, 75, 76, 79, 82, 83, 84, 86, 87, 89, 90, 91, 92, 93, 94, 108, 110, 113, 114, 115, 116, 118, 121, 122, 123, 125, 126, 127, 129, 133, 134, 139, 140, 142, 149, 151], "automask_mean_reg_func_valid": [4, 5, 6, 7, 78, 79, 118, 127], "fwhm_mean_reg_func_valid": [4, 76], "no_demean": 5, "fals": [5, 6, 7, 10, 12, 13, 14, 15, 16, 19, 20, 21, 25, 27, 28, 31, 32, 33, 34, 35, 37, 39, 42, 43, 44, 45, 46, 47, 58, 64, 68, 70, 72, 74, 80, 86, 87, 88, 89, 116, 117, 127, 137, 140, 153], "need": [5, 12, 22, 25, 52, 68, 70, 71, 72, 89, 90, 104, 142, 145], "demean": [5, 142], "nfirst": 5, "number": [5, 12, 13, 15, 16, 19, 24, 25, 27, 33, 35, 39, 42, 43, 44, 45, 47, 60, 64, 70, 72, 73, 75, 76, 77, 82, 83, 84, 88, 89, 90, 110, 142, 153], "ignor": [5, 10, 25, 90], "3": [5, 6, 7, 13, 14, 15, 16, 23, 24, 25, 27, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 61, 67, 68, 70, 71, 72, 73, 74, 90, 91, 92, 93, 94, 101, 107, 110, 114, 115, 116, 118, 124, 127, 140, 142, 145], "global": [5, 16, 76, 90, 91, 92, 93, 94, 121, 131], "06123": 5, "reg_func_valid": [6, 7, 76, 79, 127], "autoclip": [6, 7], "off": [6, 7, 47, 72], "mutual": [6, 7, 10, 16, 25, 26, 68, 71, 88, 97], "exclus": [6, 7, 10, 16, 25, 26, 32, 33, 47, 71, 88, 110, 122], "automask": [6, 7, 108, 133, 134], "interv": [6, 7], "write": [6, 7, 16, 33, 68, 69, 70, 71, 72, 89, 120], "median": [6, 7, 41, 54, 58, 79, 85, 140, 142], "mad": [6, 7, 142], "count": [6, 7, 39, 127], "timepoint": [6, 7, 79, 87], "legendr": [6, 45, 47], "polynomi": [6, 7, 10, 12, 43, 45, 47, 90, 142], "outliers_": 6, "qthr": 6, "001": [6, 68, 70, 71, 102], "indic": [6, 32, 37, 40, 41, 67, 72, 74, 79, 86, 89, 99, 142], "q": 6, "alpha": 6, "correl": [6, 7, 16, 25, 68, 76, 89, 90, 91, 92, 93, 94, 134, 142], "across": [6, 7, 20, 39, 41, 42, 66, 79, 142, 153], "polort": [6, 7], "timeseri": [6, 7], "outliers_reg_func_valid": [6, 7, 76, 77, 127], "1d": [7, 10, 12], "seri": [7, 10, 14, 32, 42, 47, 68, 77, 79, 87, 90, 139, 140, 141], "outlier": [7, 58, 76, 77, 84, 127, 134, 140, 142], "qi": [7, 142], "qi_": 7, "quadrant": 7, "similar": [7, 16, 90, 118], "spearman": 7, "minu": [7, 90], "coeffici": [7, 27, 34, 35, 42, 45, 46, 68, 88, 89, 128], "rank": 7, "e": [7, 15, 17, 27, 32, 33, 39, 40, 42, 47, 70, 71, 79, 86, 89, 91, 92, 93, 94, 95, 99, 103, 106, 123, 125, 126, 142, 145], "name": [8, 24, 38, 41, 66, 67, 68, 74, 81, 86, 88, 89, 90, 91, 92, 93, 94, 100, 101, 102, 103, 118, 119, 120, 128, 131, 142, 144, 145, 153], "refit": 8, "t1w": [9, 13, 14, 15, 16, 19, 20, 21, 22, 24, 25, 37, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 63, 66, 75, 82, 102, 107, 110, 111, 112, 113, 114, 115, 116, 140, 150], "ss": 9, "ss_": 9, "ss_t1w": [9, 112], "shift": [10, 12, 40, 142], "from": [10, 16, 17, 20, 21, 24, 25, 27, 35, 36, 39, 40, 41, 42, 44, 45, 47, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 70, 71, 73, 75, 76, 79, 80, 81, 85, 87, 88, 89, 90, 91, 92, 93, 94, 102, 103, 104, 113, 115, 116, 117, 118, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 149, 150, 153], "so": [10, 23, 47, 68, 70, 71, 72, 73, 86, 90, 121, 142], "align": [10, 12, 13, 16, 25, 32, 70, 118, 126, 141], "tempor": [10, 141], "origin": [10, 12, 15, 16, 25, 42, 58, 68, 70, 72, 74, 103, 130, 137, 142, 145, 153], "you": [10, 14, 16, 20, 21, 23, 68, 72, 89, 91, 92, 93, 94, 97, 125], "either": [10, 24, 25, 42, 68, 73, 89], "slice_tim": 10, "tpattern": 10, "neither": 10, "two": [10, 12, 24, 25, 32, 35, 70, 86, 98, 99, 101, 103, 128, 130, 142, 144, 145], "defin": [10, 16, 33, 34, 42, 43, 47, 51, 52, 54, 57, 59, 63, 67, 71, 81, 88, 89, 90, 91, 92, 93, 94, 98, 103, 123, 124, 128, 129, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145], "process": [10, 15, 27, 30, 31, 34, 47, 67, 70, 73, 104, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 125, 126, 127, 130, 131, 132, 133, 141, 144, 145, 147, 148, 149, 150, 151, 152], "return": [10, 106, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 153], "interpol": [10, 12, 14, 16, 25, 30, 40, 42, 61, 68, 72, 91, 92, 93, 94, 111, 113, 116, 118], "fourier": [10, 12, 89, 90, 126], "linear": [10, 12, 14, 16, 32, 42, 46, 90, 113, 118, 122, 138], "cubic": [10, 12, 42], "quintic": [10, 12], "heptic": [10, 12], "differ": [10, 12, 24, 25, 70, 71, 72, 73, 90, 110, 121, 123, 139, 141, 142], "most": [10, 12, 45, 72], "accur": [10, 12, 72], "slowest": [10, 12], "1st": [10, 12, 90], "least": [10, 12, 25, 27, 33, 35, 47, 71, 91, 92, 94, 121], "3rd": [10, 12, 68, 72, 90], "lagrang": [10, 12], "5th": [10, 12, 90], "7th": [10, 12, 68, 72], "st_corr": 10, "st_corr_": 10, "rlt": 10, "befor": [10, 16, 30, 33, 40, 42, 69, 71, 72, 81, 122], "remov": [10, 34, 52, 58, 79, 81, 90, 97, 122, 134, 139, 142], "trend": 10, "rltplu": 10, "later": [10, 86, 151], "put": [10, 16, 35, 153], "back": [10, 68, 72, 141], "slice_encoding_dir": 10, "k": [10, 89, 128, 142], "direct": [10, 25, 27, 32, 34, 42, 45, 47, 68, 72, 74, 110, 122, 142], "which": [10, 16, 17, 18, 19, 24, 25, 27, 31, 32, 33, 38, 39, 40, 41, 43, 44, 45, 58, 61, 62, 64, 67, 68, 70, 71, 72, 73, 74, 75, 76, 80, 81, 85, 88, 89, 90, 91, 92, 93, 94, 100, 101, 110, 118, 119, 120, 121, 122, 129, 140, 142, 153], "neg": [10, 15, 27, 34], "revers": [10, 14, 32, 42, 149], "entri": [10, 43, 53, 62, 81, 86, 98, 140, 142], "correspond": [10, 27, 39, 45, 51, 68, 75, 76, 77, 81, 86, 98, 99, 104, 105, 106, 110, 119, 128, 133, 142, 144, 145, 153], "zero": [10, 15, 17, 19, 34, 47, 68, 72, 79, 91, 92, 93, 94, 142], "point": [10, 13, 23, 25, 42, 47, 68, 70, 71, 72, 89, 125, 126, 140, 153], "ii": 10, "unchang": [10, 39], "thei": [10, 15, 33, 47, 68, 71, 72, 90, 153], "2": [10, 12, 13, 14, 15, 16, 18, 24, 25, 26, 32, 33, 35, 39, 40, 41, 42, 44, 45, 47, 66, 68, 70, 71, 72, 73, 74, 76, 77, 89, 90, 91, 92, 93, 94, 96, 99, 101, 103, 110, 116, 118, 122, 127, 137, 142, 145], "list": [10, 14, 15, 16, 19, 24, 25, 27, 31, 33, 38, 39, 40, 42, 43, 44, 51, 53, 54, 61, 62, 67, 68, 69, 70, 71, 72, 73, 74, 75, 81, 86, 88, 89, 90, 91, 92, 93, 94, 97, 101, 103, 104, 113, 118, 119, 120, 128, 129, 142, 144, 145, 153], "offset": [10, 12], "acquisit": [10, 20, 32, 39, 73, 90, 141, 142], "onset": [10, 90, 101, 145], "alt": 10, "z": [10, 23, 25, 42, 45, 47, 68, 71, 72, 74, 87, 110, 124, 140, 142], "altplu": 10, "z2": 10, "altminu": 10, "seq": 10, "seqplu": 10, "seqminu": 10, "pattern": [10, 68, 72, 145], "rather": [10, 37, 42], "header": [10, 15, 32, 39, 42, 68, 72, 140], "One": [10, 68, 71, 72, 90, 101, 129, 130], "manual": [10, 18, 37, 129], "": [10, 16, 24, 25, 26, 33, 46, 54, 68, 72, 74, 80, 90, 110, 122, 123, 129, 137, 139, 141, 145], "m": [10, 73, 83, 86, 110, 123], "millisecond": 10, "tslice": 10, "given": [10, 16, 34, 47, 58, 90, 91, 92, 93, 94, 99, 131, 134, 140], "tzero": 10, "minimum": [10, 19, 23, 25, 33, 47], "maximum": [10, 19, 23, 26, 27, 33, 43, 44, 47, 67, 70, 71, 74, 79, 142, 144], "note": [10, 15, 23, 25, 27, 28, 29, 30, 31, 32, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 70, 88, 89, 91, 92, 93, 94, 104, 106, 110, 123, 124], "when": [10, 12, 16, 42, 47, 61, 68, 70, 71, 72, 81, 123, 125, 126], "averag": [10, 11, 18, 68, 79, 122, 123, 134], "st_corr_func": 10, "time": [11, 12, 14, 23, 32, 47, 68, 77, 87, 90, 91, 92, 93, 94, 110, 120, 122, 134, 140, 141, 153], "mean_": 11, "mean_func": [11, 84], "tstat": 11, "copyorigin": 12, "copi": [12, 15, 72], "coord": [12, 39], "reg": [12, 70, 71], "reg_": 12, "save_oned_matrix": 12, "save": [12, 15, 19, 25, 70, 75, 76, 131, 142, 153], "transform": [12, 16, 25, 68, 70, 71, 72, 111, 113, 116, 118, 135, 137, 139, 140], "matrix": [12, 25, 42, 90, 91, 92, 93, 94, 129, 139, 144], "oned": 12, "save_md1d_fil": 12, "max": [12, 15, 19, 25, 41, 47, 142], "displac": [12, 127, 142], "outputfil": 12, "md1d": 12, "timeshift": 12, "slice": [12, 19, 25, 32, 39, 68, 77, 82, 83, 84, 87, 90, 120, 134, 141, 142, 145, 153], "twopass": [12, 126], "pass": [12, 44, 90, 153], "registr": [12, 32, 50, 68, 70, 71, 108, 110, 116, 117, 123, 126, 133, 135, 138, 149], "smooth": [12, 15, 16, 30, 68, 70, 71, 72, 108, 119, 120, 124, 133, 138, 141], "get": [12, 16, 22, 27, 30, 33, 35, 44, 47, 101, 102, 111, 116, 118, 140, 141, 145, 149, 150, 153], "crude": [12, 44], "fine": [12, 25, 68], "high": [12, 47, 90], "resolut": [12, 20, 66, 89, 111, 113, 116, 118, 124, 128, 129, 140, 149], "move": [12, 13, 16, 42, 68, 116, 135], "few": 12, "zpad": 12, "4": [12, 14, 15, 16, 19, 25, 47, 68, 70, 72, 73, 74, 90, 91, 92, 93, 94, 99, 110, 115, 116, 118, 120, 123, 142, 153], "zeropad": 12, "around": [12, 13, 25, 68, 72, 77, 142], "edg": [12, 19, 77], "n": [12, 72, 90, 110, 123, 142], "dure": [12, 15, 27, 31, 32, 42, 47, 89, 90, 103, 119, 120], "rotat": [12, 13, 25, 50, 72, 75, 83, 119, 120, 140, 142, 149], "in_weight_volum": 12, "tupl": [12, 14, 15, 16, 30, 33, 39, 45, 47, 70, 118], "weight": [12, 15, 16, 21, 25, 29, 31, 33, 34, 35, 37, 39, 47, 72, 88, 123, 134, 139], "md1d_file": 12, "aff12": 12, "reg_func_md": 12, "oned_fil": [12, 117], "movement": [12, 68, 80, 117, 122, 127], "txt": [12, 19, 25, 27, 33, 34, 39, 42, 44, 48, 72, 80, 81, 83, 86, 90, 99, 117, 119, 120, 127, 129, 142], "reg_func_on": 12, "oned_matrix": 12, "reg_func_oned_matrix": 12, "reg_func": 12, "moving_imag": [13, 16, 116], "map": [13, 15, 20, 24, 25, 28, 30, 34, 42, 46, 56, 66, 69, 70, 75, 119, 122, 129, 141, 142, 149, 153], "fix": [13, 16, 47, 69, 135], "fixed_imag": [13, 16], "t1w_templat": 13, "dimens": [13, 14, 15, 16, 19, 25, 37, 39, 42, 70, 71, 90, 114, 115, 118, 124, 142], "local_search": 13, "determin": [13, 25, 35, 42, 47, 58, 72, 83], "local": [13, 40, 136], "optim": [13, 20, 135, 139], "run": [13, 32, 40, 85, 104, 125, 126, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 153, 154], "search": [13, 25, 68, 72, 128, 130], "iter": [13, 15, 16, 34, 35, 43, 68, 145], "affinetransform": 13, "affinetransform_": 13, "principal_ax": 13, "whether": [13, 25, 42, 58, 72, 91, 92, 93, 94, 142], "princip": 13, "radian_fract": 13, "arc": 13, "ax": [13, 39, 40, 41, 42, 52, 142], "search_factor": 13, "15": [13, 16, 42, 43, 44, 47, 73, 101, 116], "increment": 13, "degre": [13, 17, 25, 27, 44, 68, 71, 72, 142], "mat": [13, 14, 16, 25, 48, 70, 88, 89, 90, 91, 92, 93, 94, 129], "affinetransform_t1w": 13, "input_imag": 14, "reference_imag": [14, 61, 62, 140], "wish": [14, 72], "warp": [14, 16, 42, 70, 71, 141], "ref_t1w": 14, "multipl": [14, 16, 45, 90, 125, 126, 129, 144, 153], "last": [14, 19, 131], "post_n4c_t1w_clipped_masked_inversecomposit": 14, "h5": [14, 16, 111, 113, 116, 118], "default_valu": [14, 153], "forc": [14, 25, 31, 128], "treat": 14, "dimension": [14, 89, 123], "instead": [14, 16, 19, 35], "doubl": [14, 16, 25, 74], "input_image_typ": 14, "type": [14, 20, 24, 25, 34, 44, 47, 70, 73, 74, 86, 90, 91, 92, 93, 94, 101, 107, 110, 121, 123, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 149, 150, 151, 152], "scalar": [14, 33], "vector": [14, 45, 68, 91, 92, 93, 94, 110, 122, 144], "tensor": [14, 139], "nearestneighbor": [14, 16, 118], "cosinewindowedsinc": [14, 16, 118], "welchwindowedsinc": [14, 16, 118], "hammingwindowedsinc": [14, 16, 118], "lanczoswindowedsinc": [14, 16, 116, 118], "multilabel": [14, 16, 111, 118], "gaussian": [14, 15, 16, 17, 18, 68, 70, 71, 72, 118, 138, 141], "bspline": [14, 15, 16, 118], "model": [14, 15, 16, 18, 20, 21, 25, 34, 47, 88, 91, 92, 93, 94, 129, 132, 137, 143], "t": [14, 23, 70, 71, 88, 89, 110, 123, 128, 129, 142, 144], "t_": 14, "print_out_composite_warp_fil": 14, "composit": [14, 16, 111, 113, 116, 118], "interpolation_paramet": [14, 16], "form": [14, 15, 16, 30, 32, 33, 39, 45, 47, 70, 71, 118, 153], "sigma": [14, 16, 26, 142], "alphaparamet": [14, 16], "invert_transform_flag": 14, "invert": [14, 19, 42, 58], "flag": 14, "ants_warp": 14, "tran": [14, 16, 142], "follinw": 14, "trnasform": 14, "t_t1w": 14, "variant": 15, "popular": 15, "n3": 15, "nonparameter": 15, "nonuniform": 15, "normal": [15, 25, 47, 79, 80, 110, 119, 121, 142, 149], "retrospect": 15, "base": [15, 19, 25, 27, 32, 33, 34, 35, 40, 47, 67, 70, 89, 90, 110, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 149, 150, 151, 152, 153], "assumpt": 15, "corrupt": [15, 142], "low": [15, 25, 142, 145], "frequenc": 15, "convolut": [15, 128, 137, 140], "intens": [15, 16, 24, 25, 35, 39, 42, 64, 70, 71, 77, 79, 90, 110, 121, 139, 140, 142], "histogram": [15, 16, 25, 68, 140], "basic": [15, 89, 90, 110, 131, 140, 145], "protocol": [15, 32, 142], "deconvolv": [15, 44], "remap": 15, "spatial": [15, 39, 41, 66, 68, 72, 119, 122, 123, 125, 139, 141, 149], "spline": [15, 25, 61, 68, 71, 72], "2d": [15, 19, 25], "4d": [15, 23, 42, 47, 61, 70, 72, 140, 153], "thera": 15, "close": [15, 18, 45, 77, 79, 142], "prior": 15, "copy_head": 15, "optionn": [15, 26, 79, 80], "n4c": [15, 97], "n4c_": 15, "rescale_intens": [15, 115], "rescal": [15, 25, 39], "min": [15, 19, 25, 41, 47, 126], "rang": [15, 16, 19, 20, 24, 25, 85, 140, 142], "theorigin": 15, "within": [15, 27, 30, 34, 35, 45, 47, 68, 79, 90, 91, 92, 93, 94, 129, 142], "user": [15, 73, 90, 91, 92, 93, 94, 128], "save_bia": 15, "estim": [15, 16, 17, 28, 30, 32, 34, 45, 68, 70, 71, 72, 83, 90, 91, 92, 93, 94, 110, 112, 119, 120, 122, 128, 139, 140, 142, 144], "bspline_fitting_dist": 15, "fit": [15, 35, 43, 58, 72, 89, 142], "distanc": [15, 20, 21, 68, 70, 71, 72, 140], "300": [15, 27, 42], "bspline_ord": 15, "convergence_threshold": [15, 16, 116, 118], "converg": [15, 16], "n_iter": [15, 115], "1e": [15, 16, 116, 118], "6": [15, 25, 26, 42, 47, 70, 73, 74, 87, 90, 91, 92, 93, 94, 101, 123, 127, 137, 140, 142], "histogram_sharpen": 15, "three": [15, 24, 27, 39, 41, 42, 46, 74, 91, 92, 93, 94, 121], "sharpen": 15, "fwhm": [15, 26, 68, 70, 71, 72, 74, 75, 76, 134], "wienernos": 15, "numberofhistogrambin": 15, "These": [15, 17, 68, 72, 89, 125, 126], "describ": [15, 50, 57, 63, 66, 68, 70, 71, 142], "deconvolut": [15, 27, 47, 110, 121, 139], "been": [15, 32, 37, 47, 68, 69, 72, 90, 104, 125, 126, 142], "shown": 15, "work": [15, 53, 62, 81, 86, 109, 110, 123, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145], "fairli": 15, "well": 15, "12": [15, 23, 25, 35, 68, 73, 90, 142], "02": [15, 68], "200": [15, 47], "mask_imag": [15, 89, 90], "region": [15, 16, 33, 47, 50, 72, 77, 81, 138, 140, 142, 145], "t1w_mask": [15, 59], "50": [15, 71, 73, 80, 115, 127], "30": [15, 16, 45, 71, 73, 118, 120], "20": [15, 16, 40, 70, 73, 90, 101, 116, 118], "shrink_factor": [15, 16, 116, 118], "shrink": [15, 16], "factor": [15, 16, 43, 90, 91, 92, 93, 94, 142], "weight_imag": 15, "rel": [15, 71, 91, 92, 93, 94, 142], "g": [15, 42, 70, 71, 79, 86, 103, 125, 126, 145], "probabl": [15, 68, 69, 70, 71, 72, 119, 149], "white": [15, 24, 25, 27, 47, 51, 52, 54, 59, 63, 70, 77, 110, 113, 121, 123, 124, 139, 140, 141, 142, 149], "matter": [15, 24, 25, 27, 37, 47, 67, 70, 77, 110, 113, 121, 123, 129, 139, 140, 141, 142, 149, 151], "t1w_pve_0": [15, 24], "bias_imag": [15, 49, 114, 115, 118], "t1w_bia": [15, 49], "negative_valu": 15, "present": [15, 24, 31, 86, 98, 142], "otherwis": [15, 73, 103, 140], "n4c_t1w": [15, 114], "regist": [16, 22, 25, 71, 75, 78, 110, 116, 117, 119, 123, 134, 135, 149], "predefin": 16, "sequenc": [16, 119, 120, 142], "cost": [16, 25, 34], "oper": [16, 41, 103, 131, 139, 145], "metric": [16, 77, 116, 118, 139, 142, 150], "both": [16, 22, 25, 29, 58, 98], "non": [16, 17, 24, 27, 31, 42, 64, 70, 71, 126, 136, 140, 142], "usual": [16, 67, 125, 126, 133], "done": [16, 19, 35, 72, 91, 92, 93, 94, 110, 117, 121, 122, 123, 137, 142], "stage": [16, 89, 119, 120, 132, 149], "affin": [16, 70, 71, 116, 118, 135, 138], "rigid": [16, 25, 116, 118], "ultim": 16, "syn": [16, 118], "see": [16, 25, 47, 69, 72, 90, 118, 127, 129, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 149, 150, 151, 152], "transform_paramet": [16, 116, 118], "initil": [16, 116, 118], "initial_moving_transform": 16, "alreadi": [16, 25, 37, 68, 72], "warpfield": 16, "correct": [16, 31, 32, 40, 73, 76, 79, 90, 110, 115, 118, 119, 121, 122, 127, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 149], "geometr": 16, "distort": [16, 32, 110, 122, 139], "epi": [16, 25, 32, 110, 122, 142, 149], "want": [16, 125], "structur": [16, 25, 72, 142, 149, 150], "could": [16, 27, 28, 29, 30, 31, 32, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 68, 70, 86, 110, 119], "intial_moving_transform": 16, "here": [16, 47, 97, 130, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145], "found": [16, 100, 130, 131, 135, 137, 140, 142], "fmriprep": [16, 118, 135], "mriqc": [16, 50, 52, 54, 55, 56, 57, 63, 78, 79, 80, 87, 111, 112, 113, 115, 116, 117, 118, 127, 135, 137, 140, 142, 149, 150, 153], "niworkflow": [16, 51, 58, 59, 64, 77, 78, 135, 140, 142], "should": [16, 17, 27, 28, 29, 30, 31, 32, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 68, 70, 71, 72, 75, 76, 88, 89, 91, 92, 93, 94, 97, 101, 102, 110, 121, 122, 125, 126, 142], "templat": [16, 42, 50, 61, 62, 71, 75, 78, 111, 118, 127, 140, 141, 149], "collapse_output_transform": 16, "collaps": 16, "initialize_transforms_per_stag": 16, "previou": [16, 35, 69], "genericlabel": [16, 118], "item": [16, 19, 24, 26, 27, 31, 33, 38, 39, 40, 43, 44, 51, 61, 62, 67, 68, 70, 71, 72, 73, 74, 75, 88, 89, 90, 91, 92, 93, 94, 100, 118, 119, 120, 129], "cc": [16, 118], "meansquar": [16, 118], "demon": [16, 118], "gc": [16, 118], "mi": [16, 68, 118], "matt": [16, 116, 118], "avail": [16, 32, 90, 103, 125, 126, 146], "cross": [16, 47, 68, 121], "squar": [16, 25, 35, 39, 42, 88, 90], "inform": [16, 24, 25, 68, 75, 76, 79, 83, 86, 89, 90, 101, 110, 128, 131, 139, 145, 153], "metric_weight": [16, 116, 118], "sum": [16, 41, 43, 70, 71, 142], "per": [16, 24, 34, 43, 47, 70, 73, 89, 90, 91, 92, 93, 94], "output_inverse_warped_imag": 16, "inverse_warped_imag": 16, "w": [16, 71, 142], "w_": 16, "radius_bins_item_trait": 16, "radiu": [16, 47, 80, 142], "bin": [16, 25, 90], "signa_unit": 16, "vox": [16, 34, 39, 71], "mm": [16, 20, 21, 26, 33, 39, 47, 68, 70, 71, 72, 74, 80, 113, 142, 149], "len": 16, "unit": [16, 25, 73, 79, 90, 153], "smoothing_sigma": [16, 116, 118], "compositeaffin": [16, 118], "translat": [16, 72, 83, 118, 119, 120], "gaussiandisplacementfield": [16, 118], "timevaryingvelocityfield": [16, 118], "timevaryingbsplinevelocityfield": [16, 118], "bsplinesyn": [16, 118], "exponenti": [16, 118], "bsplineexponenti": [16, 118], "01": [16, 68], "08": [16, 116, 118], "use_estimate_learning_rate_onc": 16, "learn": [16, 20], "rate": [16, 67], "use_histogram_match": [16, 116], "match": [16, 19, 34, 42, 45, 68, 90, 97, 110, 137, 139], "winsorize_lower_quantil": 16, "005": 16, "quantil": 16, "winsorize_upper_quantil": 16, "995": 16, "upper": [16, 58], "write_composite_transform": 16, "number_of_iter": [16, 35, 116, 118], "07": [16, 116], "8": [16, 27, 35, 54, 70, 73, 74, 89, 90, 91, 92, 93, 94, 101, 118], "convergence_window_s": [16, 116, 118], "window": [16, 25, 30, 40, 90], "size": [16, 18, 23, 25, 30, 37, 39, 47, 53, 68, 71, 72, 81, 90, 91, 92, 93, 94, 140, 142], "fixed_image_mask": 16, "null": [16, 47], "limit": [16, 23], "sampl": [16, 25, 42, 47, 68, 70, 71, 72, 125, 126, 144], "omit": [16, 27, 33, 91, 92, 93, 94], "template_desc": 16, "brain_mask": [16, 20, 21, 45, 78, 82, 84, 116, 121, 122], "initial_moving_transform_com": 16, "center": [16, 18, 91, 92, 93, 94, 142, 144], "invert_initial_moving_transform": 16, "indicatewheth": 16, "invers": [16, 33, 42, 69, 70, 111, 113, 116, 118, 123], "moving_image_mask": 16, "t1w_desc": [16, 19, 20, 21, 116], "10000": [16, 118], "1000": [16, 27, 47, 79, 118, 127, 142], "100": [16, 19, 47, 71, 118], "500": [16, 33, 118], "250": [16, 118], "radius_or_number_of_bin": [16, 116, 118], "other": [16, 18, 47, 51, 68, 70, 71, 73, 90, 91, 92, 93, 94, 97, 104, 108, 110, 130, 132, 133, 134, 142, 145, 149], "56": [16, 83, 101, 116, 118], "random_se": 16, "seed": [16, 45, 47, 110, 123, 139], "random": [16, 47, 54, 116, 118, 125, 126], "gener": [16, 22, 27, 32, 46, 47, 68, 71, 72, 89, 90, 123, 131, 132, 139, 140, 142, 144, 145, 151, 153], "sampling_percentag": [16, 116, 118], "percentag": 16, "strategi": [16, 20], "sampling_strategi": [16, 116, 118], "regular": [16, 118], "composite_transform": [16, 116, 118], "t1w_composit": 16, "inverse_composite_transform": [16, 111, 113, 116, 118], "t1w_inversecomposit": 16, "w_inverse_t1w": 16, "warped_imag": [16, 116], "w_t1w": 16, "dki": [17, 35, 136], "expans": [17, 90], "dti": [17, 35], "quantif": 17, "water": 17, "biolog": [17, 110, 123], "tissu": [17, 27, 29, 34, 47, 56, 70, 71, 75, 110, 121, 134, 138, 139, 142, 149], "us": [17, 19, 20, 26, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 50, 53, 68, 69, 70, 71, 72, 73, 77, 79, 81, 82, 84, 86, 88, 90, 91, 92, 93, 94, 97, 101, 103, 108, 110, 111, 113, 114, 118, 119, 121, 123, 124, 127, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 149, 150, 151, 152, 153], "propos": [17, 40, 149], "dipi": [17, 18, 108, 132, 133, 149], "sinc": [17, 25, 39, 42, 75, 76], "standard": [17, 18, 22, 26, 42, 66, 70, 71, 84, 91, 92, 93, 94, 140, 142, 151], "statist": [17, 32, 34, 128, 129, 132, 139, 140, 143, 144, 152], "anisotropi": [17, 46], "fa": [17, 44, 46, 47], "md": 17, "axial": [17, 40, 46, 87], "ad": [17, 39, 46, 69, 153], "radial": [17, 46], "rd": [17, 46], "In": [17, 27, 28, 29, 30, 31, 32, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 72, 89, 90, 110, 121, 122, 130, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145], "addit": [17, 32, 34, 37, 69, 72, 90, 91, 92, 93, 94], "mk": 17, "ak": 17, "rk": 17, "mkt": 17, "kfa": 17, "depend": [17, 25, 94], "in_dwi": [17, 110, 121, 122, 123], "multi": [17, 27, 44, 90, 110, 135, 139], "shell": [17, 27, 44, 110, 139], "acquir": [17, 32, 40, 90, 141], "dwi": [17, 27, 32, 35, 39, 40, 41, 42, 44, 47, 48, 110, 139, 148, 149], "dwi_bvec": 17, "bvec": [17, 27, 28, 29, 30, 31, 32, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 110, 122], "dwi_bval": 17, "bval": [17, 27, 28, 29, 30, 31, 32, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 110, 122], "in_mask": [17, 18, 27, 28, 30, 35, 36, 37, 44, 76, 79, 111, 142], "brain": [17, 18, 19, 20, 21, 27, 34, 35, 36, 37, 44, 45, 66, 72, 76, 77, 78, 79, 82, 91, 92, 93, 94, 116, 118, 121, 122, 127, 134, 138, 139, 142, 148, 149], "dwi_brainmask": [17, 27, 28, 29, 30, 33, 35, 43, 44], "out_fa": 17, "dwi_dki_fa": 17, "out_md": 17, "dwi_dki_md": 17, "out_rd": 17, "dwi_dki_rd": 17, "out_ad": 17, "dwi_dki_ad": 17, "out_mk": 17, "dwi_dki_mk": 17, "out_rk": 17, "dwi_dki_rk": 17, "out_ak": 17, "dwi_dki_ak": 17, "out_mkt": 17, "dwi_dki_mkt": 17, "out_kfa": 17, "dwi_dki_kfa": 17, "jensen": 17, "jh": 17, "2005": 17, "pixel": [18, 142], "specif": [18, 20, 47, 88, 89, 91, 92, 93, 94, 129, 137, 144], "patch": 18, "contrast": [18, 20, 58, 81, 86, 89, 90, 91, 92, 94, 129, 142, 144], "interest": [18, 25, 33, 47, 81, 138, 142, 144, 145], "block_radiu": 18, "block": [18, 90, 137], "noise_model": 18, "rician": 18, "nois": [18, 30, 122, 139, 142, 153], "distribut": [18, 34, 42, 44, 47, 58, 89, 110, 139, 142, 149], "denoise_": 18, "patch_radiu": 18, "func_brain_mask": 18, "noise_mask": 18, "signal": [18, 20, 27, 35, 44, 54, 77, 90, 121, 142], "signal_mask": 18, "deviat": [18, 26, 84, 140, 142, 151], "snr": [18, 112, 132, 140, 142], "ratio": [18, 25, 34], "260": [18, 101], "denoise_func": 18, "articl": 18, "rmin": 19, "rmax": 19, "binval": 19, "binvalnot": 19, "By": [19, 24, 35, 39, 44, 79, 130], "ab": 19, "take": [19, 23, 24, 47, 69, 99, 128], "absolut": [19, 91, 92, 93, 94, 140, 153], "unsign": [19, 74], "bin_col_nul": 19, "its": [19, 27, 37, 72, 73, 90, 100, 128, 130, 142], "column": [19, 82, 83, 84, 90, 101, 129, 153], "get_count_fil": 19, "hit": 19, "ascii": [19, 42], "ntotvox": 19, "pct": 19, "four": 19, "nhit": 19, "total": [19, 32, 40, 42, 89, 110, 122, 153], "nvoxtot": 19, "percent": 19, "out_suffix": 19, "_thresh": 19, "mgz": [19, 20, 21], "zero_edg": 19, "plane": [19, 40, 82, 83, 84, 90], "sure": [19, 68, 72, 73], "zero_slice_edg": 19, "erode2d": 19, "frame_no": 19, "frame": [19, 70, 87, 127], "extract": [19, 20, 21, 110, 122, 123, 134, 138, 139, 149, 151], "label": [19, 66, 113, 142, 153], "globalmean": 19, "count_fil": 19, "pathlik": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 61, 62, 70, 71, 72, 73, 82, 88, 89, 90, 91, 92, 93, 94, 119, 120, 121, 124, 129], "object": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 61, 62, 68, 70, 71, 72, 73, 82, 88, 89, 90, 91, 92, 93, 94, 119, 120, 121, 124, 129, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 149, 153], "contain": [19, 24, 27, 32, 33, 34, 47, 67, 68, 71, 82, 84, 85, 88, 89, 90, 91, 92, 93, 94, 101, 121, 124, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 151, 152, 153], "t1w_binarize_count_fil": 19, "freesurf": [19, 20, 108, 125, 132, 133, 149], "tool": [20, 25, 108, 131, 132, 139, 154], "mri_synthstrip": [20, 137], "landscap": 20, "modal": [20, 85, 138, 141, 153], "subject": [20, 25, 68, 75, 78, 85, 91, 92, 93, 94, 121, 141, 142, 149], "popul": 20, "leverag": 20, "deep": [20, 77], "synthes": 20, "arbitrari": 20, "train": 20, "segment": [20, 25, 34, 36, 50, 69, 71, 75, 77, 78, 82, 112, 125, 126, 127, 138, 140, 141, 142, 153], "robust": 20, "agnost": 20, "your": [20, 21, 91, 92, 93, 94, 97, 125], "analysi": [20, 21, 89, 91, 92, 93, 94, 144, 148, 149], "cite": [20, 21], "border_mm": [20, 21], "border": [20, 21, 40], "control": [20, 21, 23, 70, 71, 88, 140, 150], "boundari": [20, 21, 25, 36, 110], "no_csf": 20, "exclud": [20, 21, 25, 31, 33, 47, 91, 92, 93, 94], "csf": [20, 21, 24, 27, 29, 44, 48, 66, 70, 113, 121, 123, 149], "out_mask": [20, 21, 114, 115], "binari": [20, 21, 24, 27, 34, 35, 45, 78, 122, 140, 142], "adapt": [21, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 75, 76, 78, 79, 80, 87, 111, 112, 113, 115, 116, 117, 118, 140, 142, 149, 153], "mriqc_1": 21, "mriqc_2": 21, "freeesurfer_path": 21, "pt": 21, "altern": 21, "gpu": 21, "cli": [21, 137], "bet2": 22, "betsurf": 22, "scalp": 22, "creat": [22, 23, 27, 53, 61, 62, 71, 72, 81, 86, 89, 110, 129, 134, 140, 142, 144, 149, 153], "involv": [22, 68, 70, 71], "mesh": [22, 47], "vtk": 22, "inskull_mask_fil": 22, "t1w_brain_inskull_mask": 22, "inskull_mesh_fil": 22, "t1w_brain_inskull_mesh": 22, "skullstrip": [22, 108, 114, 133, 134], "t1w_brain": 22, "outskin_mask_fil": 22, "t1w_brain_outskin_mask": [22, 82], "outskin_mesh_fil": 22, "t1w_brain_outskin_mesh": 22, "outskull_mask_fil": 22, "t1w_brain_outskull_mask": 22, "outskull_mesh_fil": 22, "t1w_brain_outskull_mesh": 22, "skull_mask_fil": 22, "t1w_brain_skull_mask": 22, "fast": [22, 28, 37, 45, 90, 125, 138], "taken": [23, 72], "new": [23, 86, 88, 142], "just": 23, "argument": [23, 25, 47], "inclus": [23, 33, 47], "would": [23, 72, 86, 90], "t1w_5tt": [23, 36, 37, 47], "t_min": 23, "mininum": 23, "t_size": 23, "x_min": 23, "x_size": 23, "y_min": 23, "y": [23, 25, 42, 45, 47, 68, 71, 72, 74, 110, 124, 142, 153], "y_size": 23, "z_min": 23, "z_size": 23, "roi_fil": 23, "5tt_roi": 23, "class": [24, 56, 70, 71, 72, 87, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 149, 150, 151, 152, 153], "grei": [24, 27, 37, 47, 67, 70, 113, 128, 129, 139, 141, 149], "t1": [24, 37, 44, 119, 120, 123, 134], "t2": [24, 37, 119, 120], "pd": 24, "chang": [24, 25, 39, 79, 90, 131, 137], "img_typ": 24, "int": [24, 25, 42, 60, 64, 66, 72, 74, 77, 90, 91, 92, 93, 94, 142], "aid": 24, "identifi": 24, "mixeltyp": 24, "classif": 24, "mixtur": 24, "That": 24, "again": 24, "those": [24, 30, 33, 36, 45, 70, 71, 90, 97, 142], "t1w_mixeltyp": 24, "partial_volume_fil": 24, "partial": [24, 142], "where": [24, 25, 42, 68, 72, 86, 89, 91, 92, 93, 94, 123, 128, 142, 153], "proport": [24, 90, 91, 92, 93, 94, 142], "t1w_pve_1": 24, "t1w_pve_2": 24, "partial_volume_map": 24, "pveseg": 24, "best": [24, 68, 141, 153], "hard": 24, "follow": [24, 35, 68, 69, 70, 86, 90, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 137, 142, 144, 149], "quick": 24, "visual": 24, "assess": [24, 142], "t1w_pveseg": 24, "tissue_class_fil": 24, "t1w_seg_0": 24, "t1w_seg_1": 24, "t1w_seg_2": 24, "tissue_class_map": 24, "classifi": [24, 140], "singl": [24, 25, 27, 31, 32, 44, 70, 74, 86, 90, 139, 142], "necessari": [24, 68, 81, 89, 90, 121, 123, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145], "etc": [24, 25, 42, 47, 70, 86, 90, 124, 140, 142, 145], "t1w_seg": [24, 56, 57], "fmrib": 25, "calcul": [25, 36, 58, 68, 73, 79, 81, 86, 91, 92, 93, 94, 128, 131, 132, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 150, 152], "obtain": [25, 29, 69, 125, 128, 142, 153], "get_registered_fil": 25, "apply_xfm": 25, "apply_isoxfm": 25, "still": 25, "field": [25, 32, 42, 43, 66, 69, 70, 71, 110, 114, 115, 118, 119, 120, 122, 124, 135, 139, 140, 153], "view": 25, "fov": 25, "b0mean": 25, "in_refer": 25, "suppli": [25, 43], "in_matrix_fil": 25, "isotrop": [25, 68, 72], "resampl": [25, 53, 54, 62, 71, 90, 128, 137, 140], "provid": [25, 33, 34, 36, 37, 39, 41, 44, 45, 47, 68, 72, 110, 122, 125, 126, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 149], "4x4": [25, 42], "matrix_struct_to_diff": 25, "angle_rep": 25, "euler": 25, "quaternion": 25, "represent": [25, 91, 92, 93, 94], "angl": [25, 47], "bbrslope": 25, "bbr": 25, "slope": 25, "bbrtype": 25, "sign": [25, 74], "global_ab": 25, "local_abl": 25, "bgvalu": 25, "background": [25, 50, 70, 142], "outsid": [25, 33, 68, 72, 142], "256": [25, 68, 101], "coarse_search": 25, "60": [25, 45, 47, 70, 71, 101], "coars": [25, 68], "delta": 25, "mutualinfo": 25, "corratio": 25, "normcor": 25, "normi": 25, "leastsq": 25, "labeldiff": 25, "There": [25, 91, 92, 93, 94], "main": [25, 43, 89, 90, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145], "normalis": [25, 68, 71, 82, 83, 84, 90, 91, 92, 93, 94, 119, 120, 125, 139, 141], "recommend": [25, 68, 72], "try": [25, 45, 70, 71, 153], "cost_func": 25, "searchcost": 25, "data_typ": [25, 74], "char": [25, 74], "short": [25, 74], "dof": [25, 123], "7": [25, 43, 44, 68, 70, 71, 72, 73, 90, 91, 92, 93, 94, 137], "freedom": 25, "larg": 25, "appropri": [25, 47, 139], "scanner": [25, 142], "rigid2d": 25, "echospac": 25, "echo": [25, 32, 119, 120, 142], "fine_search": 25, "18": [25, 73], "fieldmap": 25, "rad": [25, 142], "field_map_regist": 25, "fieldmapmask": 25, "field_map_registered_mask": 25, "force_sc": 25, "even": 25, "re": [25, 66, 68], "interp": [25, 61, 68, 71, 72, 123], "trilinear": [25, 61, 68, 71, 72], "nearestneighbour": [25, 123], "reslic": [25, 68, 72, 139], "applyxfm": 25, "in_weight": 25, "ref_weight": 25, "area": 25, "increas": [25, 70, 71, 123], "import": [25, 70, 145], "ventricl": 25, "introduc": [25, 90], "artifici": 25, "wherea": [25, 72], "min_sampl": 25, "no_clamp": 25, "clampinp": 25, "no_resampl": 25, "no_resample_blur": 25, "blur": [25, 142], "downsampl": [25, 47], "no_search": 25, "angular": [25, 34, 80], "padding_s": 25, "pedir": 25, "phase": [25, 32, 68, 72, 110, 142], "encod": [25, 32, 68, 72, 110, 137, 142], "mode": 25, "bodi": 25, "save_log": 25, "log": [25, 35, 139, 142], "schedul": 25, "what": [25, 75, 76], "how": [25, 46, 140], "optimis": [25, 45], "fsldir": 25, "flirtsch": 25, "sch2d_6dof": 25, "searchr_x": 25, "90": [25, 71], "searchr_i": 25, "searchr_z": 25, "sinc_width": 25, "full": [25, 26, 70, 71, 74, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 149, 150, 151, 152], "width": [25, 26, 42, 70, 71, 72, 74, 90, 153], "sinc_window": 25, "rectangular": 25, "han": [25, 90], "blackman": 25, "use_qform": 25, "sform": 25, "qform": 25, "wm_seg": 25, "wmcoord": 25, "coordin": [25, 39, 47], "wm_coor": 25, "wmnorm": 25, "wm_norm": 25, "b0mean_registered_with_t1w": 25, "out_log": 25, "b0mean_flirt_log": 25, "out_matrix": 25, "b0mean_t1w_flirt": 25, "faq": 25, "nput": [26, 29], "uncompress": [26, 68, 71, 72, 73, 74, 81, 82, 100, 119, 120], "img": [26, 62, 68, 70, 71, 72, 74, 100, 119, 124, 142], "hdr": [26, 62, 68, 70, 71, 72, 74, 100, 119, 124], "half": [26, 32, 42, 70, 71, 74], "kernel": [26, 68, 72, 74, 121], "Will": 26, "convert": [26, 27, 28, 29, 30, 31, 32, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 123, 139], "intern": [26, 103, 145], "approxim": [26, 45, 70, 71], "355": 26, "s_": 26, "filter": [26, 30, 36, 58, 67, 69, 90, 97, 99, 103, 106, 110, 139, 142, 144, 145], "55": [26, 47], "s_func": 26, "fsl": [26, 28, 39, 56, 80, 108, 110, 123, 125, 132, 133, 139, 140], "fiber": [27, 44, 47, 110, 149], "densiti": [27, 34, 42, 47, 110, 139], "basi": [27, 43, 90], "responsesddholland": [27, 108, 133, 139], "aim": [27, 44, 54, 91, 92, 93, 94, 110, 121, 122, 123], "amount": [27, 42, 90], "diffus": [27, 28, 29, 30, 31, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 110, 121, 122, 123, 139, 148], "orthogon": 27, "spheric": [27, 34, 42, 46, 47, 110, 121, 139], "mrtrix": [27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 108, 123, 132, 133], "dwi2fod": [27, 139], "command": [27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 134, 139], "mia_process": [27, 28, 29, 30, 31, 32, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 68, 69, 70, 71, 72, 73, 74, 90, 91, 92, 93, 94, 125, 126, 130], "mif": [27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 110, 121, 122, 123], "mrconvert": [27, 28, 29, 30, 31, 32, 35, 38, 40, 41, 42, 43, 44, 45, 46, 47, 108, 133, 139], "case": [27, 28, 29, 30, 31, 32, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 86, 89, 142], "wm_txt": 27, "wm": [27, 44, 47, 66, 69, 70, 113, 121, 142, 149], "respons": [27, 48, 89, 90, 110, 121, 139], "text": [27, 32, 33, 34, 39, 44, 48, 142], "csd": [27, 110, 121], "row": [27, 77, 101, 142, 153], "msmt_csd": [27, 121], "dwi_response_wm": [27, 44], "uniqu": [27, 121], "comparti": 27, "get_predicted_sign": [27, 35, 121], "predict": [27, 35, 121], "csf_txt": 27, "cerebrospin": [27, 77, 113, 121, 149], "fluid": [27, 77, 121], "dwi_response_csf": [27, 44], "gm_txt": 27, "gm": [27, 34, 44, 47, 66, 69, 70, 91, 92, 93, 94, 113, 121, 142, 149], "dwi_response_gm": [27, 44], "in_direct": 27, "az": 27, "el": 27, "pair": [27, 32, 79, 122], "over": [27, 42, 47, 90, 128, 134], "constraint": 27, "max_sh": [27, 44], "harmon": [27, 34, 42, 44, 63, 75, 108, 110, 125, 133, 139, 140], "lmax": 27, "up": [27, 73, 86], "3000": [27, 31, 77], "wm_odf": 27, "odf": 27, "dwi_wm_odf": 27, "gm_odf": 27, "dwi_gm_odf": 27, "csf_odf": 27, "dwi_csf_odf": 27, "predicted_signal_fil": [27, 35, 121], "dwi_odf_predicted_sign": 27, "use_fsl": 28, "configur": [28, 32], "populs": [28, 32, 130, 135, 137, 140, 141], "use_an": 28, "ant": [28, 108, 114, 115, 118, 132, 133, 140], "n4": [28, 135], "bia": [28, 31, 71, 75, 110, 115, 118, 119, 122, 135, 140, 141, 149], "dwi_unbia": 28, "bias_field_map": 28, "dwi_bias_field_map": 28, "includ": [29, 31, 32, 33, 47, 66, 72, 88, 89, 90, 91, 92, 93, 94, 130, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145], "dwi2mask": [29, 32, 139], "marchenko": 30, "pastur": 30, "pca": [30, 139], "pipelin": [30, 68, 97, 104, 108, 129, 130, 131, 142, 145, 154], "extend": [30, 85], "dwi_denois": 30, "noise_map": 30, "dwi_noise_map": 30, "certain": [31, 108, 139], "bzero": 31, "nobzero": 31, "singleshel": 31, "enforc": 31, "presenc": [31, 34], "no_bzero": 31, "them": [31, 34, 70, 71, 149, 153], "gradient": [31, 39, 110, 112, 122, 140], "dwi_bzero": 31, "inhomogen": [32, 110, 122, 139, 142], "dwifslpreproc": [32, 139], "rpe_opt": [32, 122], "rpe_non": 32, "rpe_al": 32, "oppos": [32, 110, 122], "parametr": [32, 70, 90], "fill": [32, 53, 62, 81, 86, 91, 92, 93, 94, 102, 140, 142], "concaten": [32, 41, 103, 122, 139, 145], "rpe_pair": 32, "typic": [32, 68, 70, 72, 90], "ha": [32, 37, 47, 68, 90, 104, 125, 126], "se_epi_corr": 32, "consist": [32, 51, 52, 54, 57, 59, 63, 70], "spin": 32, "part": [32, 67], "rpe_air": 32, "se": 32, "possess": 32, "while": [32, 47, 68, 70, 71, 98], "opposit": [32, 110, 122], "ident": [32, 42, 68, 72, 89, 125, 126, 137], "readout": [32, 110, 122, 142], "dwi_b0_inverse_phas": 32, "pe_dir": 32, "ap": [32, 110, 122], "pa": [32, 110, 122], "lr": [32, 110, 122], "rl": [32, 110, 122], "anterior": [32, 71, 110, 122, 142], "posterior": [32, 110, 122, 142], "left": [32, 40, 86, 110, 122, 142], "right": [32, 40, 86, 104, 110, 122, 142], "toleft": [32, 110, 122], "align_seepi": 32, "achiev": 32, "eddyqc_al": 32, "keep": [32, 37, 47], "eddy_qc": 32, "instal": [32, 108, 125], "eddyqc_text": 32, "variou": [32, 131, 132, 139, 146, 149, 151], "nocleanup": 32, "delet": [32, 61, 62, 81, 140, 145, 153], "intermedi": 32, "script": [32, 37, 131], "scratch": 32, "directori": [32, 53, 62, 81, 86, 91, 92, 93, 94, 103, 131, 140, 142, 145, 153], "complet": [32, 130, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 149, 150, 151, 152], "ro_tim": 32, "eddy_mask": 32, "automaticcali": 32, "dwi_brain_mask": 32, "eddy_opt": [32, 122], "line": [32, 82, 83, 84, 85, 153], "slm": [32, 122], "repol": 32, "data_is_shel": [32, 122], "eddy_slspec": 32, "group": [32, 94, 121, 142, 153], "topup_opt": 32, "scale": [32, 39, 43, 90, 91, 92, 93, 94], "preprocess": [32, 108, 110, 121, 123, 129, 131, 132, 142, 146], "dwi_fslpreproc": 32, "tckedit": [33, 139], "in_track": [33, 34], "tck": [33, 34, 47, 110], "select": [33, 34, 39, 44, 46, 47, 68, 69, 70, 72, 90, 103, 104, 121, 124, 139, 145], "streamlin": [33, 34, 110, 123, 139], "criteria": [33, 47], "fail": 33, "criterion": [33, 142], "vertic": 33, "written": [33, 68, 71, 72, 91, 92, 93, 94, 102, 103, 145], "ends_onli": 33, "test": [33, 89, 90, 144], "end": [33, 52, 58, 110, 123, 142], "against": 33, "roi": [33, 47, 81, 86, 103, 138, 142, 145, 151], "get_tck_weights_out_desc": 33, "roi_excl": [33, 47], "enter": [33, 47, 74, 91, 92, 93, 94], "discard": [33, 47, 60, 127], "roi_incl": [33, 47], "travers": [33, 47], "accept": [33, 47, 68, 153], "roi_incl_ord": [33, 47], "inclusion_ord": [33, 47], "roi_mask": [33, 47], "exit": [33, 47, 91, 92, 93, 94, 131], "truncat": [33, 47], "maxlength": 33, "26": [33, 73, 90, 101, 142], "minlength": 33, "desir": [33, 47, 86], "propag": [33, 47], "20000": 33, "skip": [33, 87], "commenc": 33, "maxweight": 33, "minweight": 33, "tck_weights_in": 33, "tck_weight": 33, "tracks_out": [33, 34], "tracks_edit": 33, "tck_weights_out": 33, "tracks_tck_weight": 33, "whole": [34, 36, 44, 68, 72, 103, 110, 139, 148], "fibr": [34, 42, 44, 110, 121, 139], "fod": [34, 42, 47, 110, 139], "lobe": [34, 110, 139], "integr": [34, 47, 110, 139], "tcksift": [34, 139], "in_fod": 34, "wm_fod_norm": 34, "sift": [34, 47, 110], "fd_scale_gm": 34, "conjunct": 34, "act": [34, 37, 47, 110, 123, 139], "heurist": 34, "downsiz": 34, "no_dilate_lut": 34, "lookup": [34, 45], "tabl": [34, 45], "precis": [34, 47, 64, 72, 125, 126], "tangent": 34, "li": 34, "spread": [34, 42], "make_null_lob": 34, "cover": [34, 153], "amplitud": [34, 45, 47], "remove_untrack": 34, "attribut": [34, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145], "get_csv_fil": 34, "csv": [34, 101, 145], "get_mu_fil": 34, "get_out_selection_fil": 34, "proc_mask": 34, "act_imag": [34, 47], "five": [34, 47], "deriv": [34, 37, 46, 88, 89, 90, 137], "5tt_coreg": [34, 123], "fd_thresh_valu": 34, "term_ratio_valu": 34, "termin": [34, 47, 110], "reduct": 34, "term_mu_valu": 34, "onc": [34, 47, 58], "proportion": 34, "reach": [34, 47], "tracks_sift": [34, 110], "csv_file_out": 34, "tracks_tcksift_stat": 34, "mu_file_out": 34, "mu": 34, "tracks_tcksift_mu": 34, "selection_file_out": 34, "tracks_tcksift_select": 34, "defaul": 35, "kurtosi": [35, 142], "wl": 35, "empir": 35, "ordinari": 35, "ol": 35, "ols_opt": 35, "iwl": 35, "numbr": 35, "choos": [35, 39, 47, 68, 85, 91, 92, 93, 94, 110], "dwi2tensor": [35, 139], "estimate_dkt": 35, "get_output_b0": 35, "b0": [35, 123, 149], "contribut": 35, "number_of_it": 35, "reweight": 35, "ma": 35, "d11": 35, "d22": 35, "d33": 35, "d12": 35, "d13": 35, "d23": 35, "dwi_dti": [35, 46], "out_dkt": 35, "w1111": 35, "w2222": 35, "w3333": 35, "w1112": 35, "w1113": 35, "w1222": 35, "w1333": 35, "w2223": 35, "w2333": 35, "11": [35, 73, 101, 142], "w1122": 35, "w1133": 35, "w2233": 35, "14": [35, 73, 90], "w1123": 35, "w1223": 35, "w1233": 35, "dwi_dki": 35, "out_b0": 35, "dwi_b0": 35, "dwi_dti_predicted_sign": 35, "5tt2gmwmi": [36, 139], "5tt": [36, 47, 123, 139], "generate5ttfsl": [36, 108, 133, 139], "accord": [36, 67, 73, 135], "lie": 36, "upon": 36, "brainmask": [36, 37, 127], "t1w_5tt_gmwmseed": 36, "suitabl": [37, 68, 72, 139], "constrain": [37, 47, 110, 121, 123], "tractographi": [37, 108, 123, 133, 139, 148], "5ttgen": [37, 139], "no_crop": 37, "reduc": [37, 47, 110], "sgm_amyg_hipp": 37, "amygdala": 37, "hippocampi": 37, "cortic": [37, 77, 123], "premask": 37, "fasl": 37, "t2_imag": 37, "dwi1": 38, "dwi2": 38, "out_file_nam": [38, 41], "out_file_format": 39, "export_bvec_bv": 39, "export": [39, 104], "retain": [39, 67], "fourth": [39, 89], "begin": [39, 81, 87, 103, 140], "24": [39, 73, 90], "report": [39, 108, 125, 126, 131, 132, 146, 154], "25": [39, 47, 73, 118], "0mm": 39, "5mm": 39, "respect": 39, "leav": 39, "bval_scal": 39, "ye": 39, "enabl": [39, 68, 72], "disabl": [39, 79], "dw": 39, "norm": [39, 41, 116, 140], "grad_fil": 39, "scheme": 39, "diff_mrtrix_format": 39, "in_bvec": [39, 110, 122], "in_bval": [39, 110, 122], "bavl": 39, "out_bvec": 39, "out_bval": 39, "artefact": [40, 122], "mri": [40, 68, 70, 71, 72, 134, 142, 150], "subvoxel": 40, "kellner": 40, "et": [40, 79, 142], "al": [40, 79, 142], "motion": [40, 68, 72, 76, 77, 79, 80, 110, 122, 127, 142, 149], "dwipreproc": [40, 108, 133, 139], "wa": [40, 68, 72, 103, 104, 131, 145], "coron": 40, "sagitt": 40, "maxw": 40, "variat": [40, 70, 71, 125, 126], "tv": 40, "minw": 40, "nshift": 40, "discret": 40, "subpixel": 40, "unring": [40, 110, 122], "dwi_unring": 40, "product": [41, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145], "rm": 41, "var": 41, "std": [41, 65, 81], "absmax": 41, "magmax": 41, "sdt": 41, "absmin": 41, "thu": [41, 67], "oerat": 41, "mean_along_axis3": 41, "dwi_mean": 41, "modifi": [42, 90, 140], "reorient": 42, "apodis": 42, "4th": [42, 47, 70, 90], "antipod": 42, "symmetr": 42, "28": [42, 73, 90], "fod_reori": 42, "nearest": [42, 68, 71, 72, 91, 92, 93, 94], "root": 42, "midway_spac": 42, "midwai": 42, "template_imag": 42, "warp_imag": 42, "linear_transform": 42, "3x4": 42, "convent": 42, "flix_ax": 42, "flip": 42, "replace_fil": 42, "oversample_factor": 42, "target": [42, 68, 137], "deform": [42, 69, 70, 119, 124], "deformation_field": [42, 71], "warp_full_imag": 42, "5d": 42, "mrregist": 42, "deformation_field_5d": 42, "fod_modul": 42, "jac": 42, "modul": [42, 46, 70, 90, 130, 132, 133, 143, 146, 154], "preserv": [42, 74], "appar": [42, 46], "bundl": 42, "jacobian": 42, "fod_direction_fil": 42, "dwi_transform": 42, "dwi_wmfod": 43, "dwi_gmfod": 43, "dwi_csffod": 43, "order_numb": 43, "niter_numb": 43, "potenti": 43, "loop": 43, "inner": 43, "updat": [43, 153], "balanc": 43, "reference_numb": 43, "282095": 43, "posit": [43, 47, 58, 72, 99, 106], "compart": [43, 121], "balanced_numb": 43, "incorpor": 43, "nomalis": 43, "dwi_wmfod_norm": 43, "dwi_gmfod_norm": 43, "dwi_csffod_norm": 43, "unsupervis": 44, "decompos": 44, "smaller": [44, 72], "individu": [44, 89, 153], "dwi2respons": [44, 139], "fa_thresh": 44, "versu": [44, 72], "get_final_voxel": 44, "show": [44, 77, 121, 142, 153], "were": [44, 89, 90], "construct": [44, 86], "basu": 44, "tisuu": 44, "40": [44, 71, 73, 101], "wm_algo": 44, "tax": 44, "tournier": 44, "extern": 44, "2019": 44, "csf_file": 44, "wm_file": 44, "gm_file": 44, "voxels_imag": 44, "dwi_response_voxel": 44, "sh2peak": [45, 139], "in_sh_coeff": 45, "sh": 45, "wm_fod": 45, "num": 45, "associ": [45, 89, 90, 103, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145], "faster": [45, 70, 71, 72], "phi": 45, "theta": 45, "peaks_imag": 45, "thresh_valu": 45, "greater": [45, 140], "consid": [45, 79], "seeds_fil": 45, "restart": 45, "output_imag": 45, "turn": [45, 110], "wm_fod_peak": 45, "adc": 46, "planar": [46, 119, 120], "eigenvalu": 46, "eigenvector": 46, "tensor2metr": [46, 139], "eigval": 46, "magnitud": [46, 140], "get_ad": 46, "get_adc": 46, "get_cl": 46, "westin": 46, "shape": [46, 52, 142], "get_cp": 46, "get_c": 46, "get_fa": 46, "get_rd": 46, "get_valu": 46, "get_vector": 46, "computeth": 46, "ad_fil": 46, "dwi_dti_ad": 46, "adc_fil": 46, "dwi_dti_adc": 46, "cl_file": 46, "dwi_dti_cl": 46, "cp_file": 46, "dwi_dti_cp": 46, "cs_file": 46, "dwi_dti_c": 46, "fa_fil": 46, "dwi_dti_fa": 46, "rd_file": 46, "dwi_dti_rd": 46, "value_fil": 46, "dwi_dti_valu": 46, "vector_fil": 46, "dwi_dti_vector": 46, "tckgen": [47, 139], "At": 47, "mechan": 47, "ifod2": 47, "fact": [47, 90, 110], "ifod1": 47, "nulldist": 47, "sd_stream": 47, "tensor_det": 47, "tensor_prob": 47, "assign": [47, 131], "continu": 47, "track": [47, 110, 123, 139], "sd": 47, "determinist": 47, "probabilist": 47, "cutoff": [47, 70, 71], "nopreselectcompt": 47, "pre": [47, 132, 139, 140, 149], "use_rk4": 47, "rung": 47, "kutta": 47, "tracto_seed_unidirect": 47, "tracto_get_output_se": 47, "locat": [47, 77], "success": [47, 68, 130, 131], "backtrack": 47, "crop_at_gmwmi": 47, "endpoint": 47, "interfac": [47, 70, 130, 139, 140], "nulldist1": 47, "45": [47, 73], "nulldist2": 47, "downsample_factor": 47, "max_lenght": 47, "voxels": 47, "min_lenght": 47, "step_siz": 47, "rk4": 47, "32": [47, 73, 90, 101], "trial": [47, 90], "5000": 47, "seed_dynam": 47, "dynam": [47, 89], "improv": [47, 72, 110], "reconstruct": [47, 142], "substitut": 47, "seed_gmwmi": 47, "framework": 47, "gmwmseed_coreg": [47, 123], "seed_grid_voxel": 47, "place": 47, "grid": [47, 137], "grid_siz": 47, "27": [47, 73, 90], "mesh_grid": 47, "seed_imag": 47, "entir": 47, "seed_reject": 47, "reject": [47, 110], "seed_rnd_voxel": 47, "placement": 47, "seed_spher": 47, "xyz": 47, "r": [47, 68, 72, 86, 95, 96, 103, 129, 142], "95": [47, 142], "tracto_seeds_numb": 47, "attempt": 47, "until": 47, "OR": 47, "request": 47, "2000": 47, "tracto_max_attempts_per_seed_numb": 47, "enough": 47, "ensur": 47, "actual": [47, 67, 75, 76, 99, 106], "plausibl": [47, 110, 123], "prematur": 47, "unabl": 47, "tracto_seed_cutoff": 47, "cut": 47, "tracto_seed_direct": 47, "Of": 47, "ifod_pow": 47, "ifod": 47, "rais": 47, "power": [47, 79, 142], "nsampl": 47, "ifod2_n_sampl": 47, "2nd": [47, 68, 71, 72, 90], "dwi_tracto": 47, "dwi__tracto_out_se": 47, "transformconvert": [48, 139], "flirt": [48, 108, 110, 123, 133, 138], "in_transform": 48, "diff2struct_fsl": 48, "out_transform": 48, "t1w_inu": 49, "paper": [50, 57, 63], "mortamet": [50, 57, 63], "colleagu": [50, 57, 63], "workflow": [50, 52, 54, 55, 56, 57, 63, 87, 111, 112, 113, 116, 140, 149, 150], "head_mask": [50, 82, 111], "head": [50, 68, 72, 73, 75, 79, 111, 114, 115, 125, 127, 142, 149], "t1w_outskin_mask": 50, "nasion_post_mask": 50, "t_tpl": [50, 78, 118, 127], "mni152nlin2009casym_r": [50, 66, 75, 77, 78, 113, 118, 126, 127], "01_desc": [50, 77, 78, 118, 126, 127], "rot_mask": 50, "t1w_rotmask": [50, 63, 75], "out_art_mask": [50, 111], "art_t1w_mask": [50, 75, 82, 111], "out_hat_mask": [50, 111], "hat": [50, 75, 82, 142, 149], "hat_t1w_mask": [50, 75, 111], "out_air_mask": [50, 111], "air": [50, 70, 75, 82, 113, 125, 140, 142, 149], "air_t1w_mask": [50, 75, 82, 111], "carreful": [51, 52, 54, 57, 59, 63, 97], "overwritten": [51, 52, 53, 54, 57, 59, 63, 81, 88, 89, 91, 92, 93, 94, 142], "element": [51, 70, 71, 81, 86, 89, 90, 103, 105, 106, 140, 142, 144, 145], "path": [51, 53, 56, 57, 58, 59, 63, 64, 65, 66, 67, 70, 73, 98, 103, 105, 131, 142, 153], "_bin": 51, "thresh_low": 51, "applic": [51, 67], "t1w_bin": 51, "nibabel": [52, 140], "squeeze_imag": 52, "reorder": 52, "closest": 52, "canon": [52, 90], "as_closest_canon": 52, "convolve_with": [53, 140], "images_to_convolv": [53, 140], "Then": [53, 140], "convolv": [53, 81, 90, 140, 142], "resiz": [53, 81, 140, 142], "patientname_data": [53, 81, 86, 103, 140, 142, 145], "roi_data": [53, 62, 81, 103, 128, 140, 142, 145], "convroi_bold": [53, 128, 140], "receiv": [53, 62, 81, 86, 140, 142], "runtim": [53, 62, 81, 86, 140, 142], "To": [53, 58, 62, 70, 81, 86, 88, 90, 108, 121, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145], "correctli": [53, 62, 81, 86, 140, 142], "databas": [53, 62, 73, 77, 81, 86, 89, 90, 102, 103, 128, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 153], "patientnam": [53, 62, 81, 86, 102, 103, 128, 140, 142, 145], "tag": [53, 62, 81, 86, 102, 103, 128, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 153], "aca_l": [53, 103], "aca_r": [53, 103], "acm_l": [53, 103], "acm_r": [53, 103], "out_imag": [53, 62], "conv": [53, 81], "patient": [53, 62, 81, 83, 86, 102, 103, 128, 142, 145], "name_data": [53, 62, 81, 86, 103, 128], "convaca_l": [53, 62, 81, 128], "convaca_r": [53, 62, 81, 128], "convacm_l": [53, 62, 81, 128], "convacm_r": [53, 62, 81, 128], "excess": 54, "superior": [54, 142], "99": [54, 58, 142], "among": [54, 91, 92, 93, 94], "_enh": 54, "t1w_enh": 54, "seg_fil": [55, 56, 112], "out_snr": 55, "96": [55, 90, 101], "_estimate_snr": 55, "fastseg": [56, 108, 133, 138], "_grad": 56, "scan": [56, 67, 70, 72, 73, 76, 77, 90, 91, 92, 94, 141], "t1w_grad": 56, "As": [57, 63, 91, 92, 93, 94], "decrib": [57, 63], "arfifact": [57, 63], "wm_mask": 57, "whith": 57, "erodemask": 57, "_harmon": 57, "t1w_harmon": 57, "dtype": [58, 74], "robustli": 58, "spike": [58, 76, 77, 79, 82, 84, 108, 127, 132, 134, 142], "denois": [58, 108, 110, 122, 133, 136, 139, 149], "thrown": 58, "awai": 58, "int16": [58, 74], "float32": [58, 64, 74], "uint8": [58, 74], "datatyp": 58, "nonneg": 58, "p_max": 58, "bound": [58, 71], "p_min": 58, "xtension": 58, "t1w_clip": 58, "niworflow": [58, 59, 64], "cofound": [60, 65], "n_volumes_to_discard": [60, 64], "cofund": [60, 65, 79, 80], "nonsteadystatedetector": [60, 133, 140], "files_to_resampl": [61, 62], "t1w_002": 61, "_003": 61, "suffix_to_delet": 61, "_002": [61, 67], "reprsent": 61, "t1w_003": 61, "_data": 62, "convroi_bold2": [62, 128, 140], "_2": [62, 142], "convaca_l_2": [62, 128], "convaca_r_2": [62, 128], "convacm_l_2": [62, 128], "convacm_r_2": [62, 128], "_rotmask": 63, "max_32bit": 64, "cast": 64, "higher": [64, 68, 72, 79, 88, 90, 142, 145], "encount": 64, "steadi": [64, 126, 140], "state": [64, 126, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145], "_valid": 64, "func_valid": [64, 77, 127], "sanitizeimag": 64, "prefix_stddev": 65, "stddev": 65, "prefix_tsnr": 65, "suffix_stddev": 65, "_stddev": 65, "dev": 65, "suffix_tnsr": 65, "_tsnr": 65, "out_tsnr_fil": 65, "func_tsnr": 65, "out_stddev_fil": 65, "func_stddev": 65, "repositori": 66, "neuroimag": [66, 142], "tempalt": 66, "mni152nlin2009casym": [66, 111, 113, 118, 149], "mnicolin27": 66, "mnipediatricasym": 66, "sever": [66, 90, 110, 121, 139, 145], "entiti": 66, "atla": [66, 141], "particular": [66, 72, 74], "difumo": 66, "scahefer2018": 66, "desc": [66, 97, 111, 116, 118], "descript": [66, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 149, 150, 151, 152, 153], "256dimens": 66, "in_templ": [66, 111, 113, 116, 118], "t2w": [66, 111, 112, 113, 114, 115, 116, 150], "probseg": [66, 113], "t2map": 66, "cach": 66, "tpl": 66, "02_t1w": 66, "c1anat": [67, 70, 119, 124], "c2anat": [67, 70, 119, 124], "c3anat": [67, 70, 119, 124], "c4anat": [67, 70, 119, 124], "c5anat": [67, 70, 119, 124], "gm_filter": 67, "c1": [67, 69, 124], "spm": [67, 69, 80, 88, 89, 90, 108, 124, 132, 133, 140, 142, 143], "syntax": [67, 68, 69, 70, 71, 72, 73, 74, 90, 91, 92, 93, 94, 124], "everyth": 67, "abov": 67, "becom": 67, "below": [67, 73], "multipli": [67, 79], "c1anat_002": 67, "thinsp": [68, 69, 70, 71, 72, 98, 99, 100, 103, 104, 105, 106, 109, 119], "emsp": [68, 69, 70, 71, 72, 98, 99, 100, 103, 104, 105, 106, 109, 119], "ensp": [68, 69, 70, 71, 72, 98, 99, 100, 103, 104, 105, 106, 109, 119], "nbsp": [68, 69, 70, 71, 72, 98, 99, 100, 103, 104, 105, 106, 109, 119], "ref": 68, "remain": [68, 72, 142], "stationari": 68, "sourc": [68, 80, 119, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 149, 150, 151, 152, 153], "downloaded_data": [68, 71, 101], "meanfunc": [68, 72, 99, 119], "jiggl": 68, "about": [68, 75, 76, 83, 86, 128], "anat": [68, 70, 71, 75, 82, 83, 85, 98, 99, 103, 104, 106, 119, 120, 125, 153], "apply_to_fil": [68, 69, 71], "jobtyp": [68, 69, 71, 72, 120], "estwrit": [68, 71, 72, 120], "except": [68, 90, 97], "procedur": [68, 142], "coregistered_sourc": [68, 119], "coregistered_fil": 68, "whose": [68, 86, 128], "rewritten": [68, 72], "subsequ": 68, "filter_files_list": [68, 108, 132, 145], "librari": [68, 69, 103, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 149], "cost_funct": 68, "eoption": [68, 71, 72], "cost_fun": 68, "nmi": 68, "ecc": 68, "ncc": 68, "maximis": 68, "minimis": 68, "inter": [68, 85, 138], "entropi": [68, 142], "sep": [68, 72], "increasingli": 68, "ones": 68, "toler": 68, "tol": 68, "param": [68, 86, 90, 138, 139, 142, 145, 153], "less": 68, "joint": 68, "write_interp": [68, 69, 71, 72, 120], "roption": [68, 72], "long": [68, 71, 72, 74], "neighbour": [68, 71, 72, 91, 92, 93, 94], "fastest": [68, 72], "realign": [68, 71, 108, 119, 120, 133, 141], "ok": [68, 71, 72], "pet": [68, 71, 72, 91, 92, 93, 94], "fmri": [68, 71, 72, 79, 129, 142, 144], "becaus": [68, 70, 71, 72], "give": [68, 70, 71, 72, 95, 96, 103, 125, 126, 145], "better": [68, 72, 142], "although": [68, 72], "slower": [68, 72], "write_wrap": [68, 72], "wrap": [68, 72], "check": [68, 72, 97, 123, 149, 153], "nose": [68, 72], "poke": [68, 72], "No": [68, 70, 71, 72, 90, 91, 92, 93, 94], "realli": [68, 72], "un": [68, 72], "write_mask": [68, 72], "like": [68, 72, 81, 86, 137, 142], "With": [68, 72, 91, 92, 93, 94], "through": [68, 72], "look": [68, 72, 73, 100], "occur": [68, 70, 71, 72, 90], "coregisterd": 68, "capsul": 68, "spm12": [68, 70, 71, 72, 73, 74, 90, 129], "equival": 69, "normalize12": [69, 108, 119, 120, 133, 141], "in_filt": 69, "nativ": [69, 70, 119, 125, 126, 149], "deformation_fil": [69, 71, 124], "therefor": [69, 73, 128], "togeth": [69, 141, 153], "write_bounding_box": [69, 71], "write_voxel_s": [69, 71], "normalized_fil": [69, 71], "made": [69, 86, 90, 104, 124, 125, 126], "c2": [69, 124], "channel_fil": 70, "channel": 70, "vol": [70, 71], "channel_info": 70, "biasreg": [70, 71], "biasfwhm": [70, 71], "reguralis": 70, "goal": [70, 71], "aris": [70, 71, 142], "due": [70, 71, 79, 90], "artifact": [70, 71, 72, 75, 82, 139, 140, 142, 149], "physic": [70, 71], "veri": [70, 71], "littl": [70, 71], "uniform": [70, 71], "effect": [70, 71, 86, 88, 89, 90, 91, 92, 93, 94, 142], "tell": [70, 71], "doesn": [70, 71], "regularis": [70, 71], "00001": [70, 71], "extrem": [70, 71, 77, 142], "light": [70, 71], "heavi": [70, 71], "infin": 70, "smoother": [70, 71], "fewer": [70, 71], "150": [70, 71, 101], "version": [70, 89, 131], "noth": [70, 131], "0001": [70, 71, 120], "tpm": [70, 71], "ngau": 70, "bone": 70, "soft": 70, "dartel": 70, "unmodul": 70, "inf": [70, 71], "ci": 70, "toobox": [70, 131], "rci": 70, "mcwi": 70, "wci": 70, "warping_regular": [70, 71], "rough": [70, 71], "latter": [70, 98], "05": [70, 71, 101, 118], "affine_regular": 70, "affreg": [70, 71], "mni": [70, 71, 111, 113, 119, 149], "eastern": 70, "subj": [70, 71], "sampling_dist": [70, 71], "samp": [70, 71], "write_deformation_field": 70, "disk": 70, "util": [70, 131, 154], "forward": [70, 119, 137], "bias_corrected_imag": [70, 119], "manat": [70, 119], "bias_field_imag": [70, 119], "biasfield_anat": 70, "native_class_imag": [70, 119, 124], "dartel_input_imag": 70, "toolbox": [70, 145], "rc1anat": 70, "rc2anat": 70, "rc3anat": 70, "rc4anat": 70, "rc5anat": 70, "modulated_class_imag": 70, "mwc1anat": 70, "mwc2anat": 70, "mwc3anat": 70, "mwc4anat": 70, "homeusernam": 70, "mwc5anat": 70, "normalized_class_imag": 70, "wc1anat": 70, "wc2anat": 70, "wc3anat": 70, "wc4anat": 70, "wc5anat": 70, "inverse_deformation_field": 70, "surfac": [70, 137, 138], "gifti": 70, "iy_anat": 70, "forward_deformation_field": [70, 119], "y_anat": [70, 71, 119, 124], "transformation_mat": 70, "anat_seg8": 70, "support": 70, "mrf": 70, "cleanup": 70, "image_to_align": 71, "def": 71, "y_": [71, 124], "est": 71, "come": [71, 140], "normalized_imag": 71, "bias_regular": [71, 120], "bias_fwhm": [71, 120], "70": 71, "80": 71, "110": 71, "120": 71, "130": [71, 101], "140": [71, 142], "affine_regularization_typ": 71, "good": [71, 142], "woption": 71, "bb": 71, "box": [71, 85], "commissur": 71, "78": [71, 101], "112": [71, 101], "76": [71, 101], "85": [71, 101], "7nd": 71, "wanat": [71, 83, 119, 120], "code": 72, "contact": 72, "develop": [72, 86], "team": [72, 130], "realignment_paramet": [72, 119, 120], "modified_in_fil": 72, "write_which": 72, "realigned_fil": 72, "mean_imag": 72, "qualiti": [72, 134, 140, 142, 150], "speed": 72, "trade": 72, "highest": 72, "register_to_mean": 72, "rtm": 72, "weight_img": 72, "lot": 72, "extra": 72, "seriou": 72, "account": [72, 90], "rfunc": 72, "rp_func": [72, 99, 119, 120, 129], "compat": [73, 79], "verif": 73, "sequenti": [73, 130], "ascend": 73, "descend": 73, "interleav": 73, "middl": 73, "top": 73, "bottom": 73, "down": 73, "foot": 73, "num_slic": 73, "nslice": 73, "initialis": [73, 90, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145], "53": [73, 90], "repetit": 73, "retriev": [73, 90, 103, 145, 153], "000002": 73, "ta": 73, "slice_ord": 73, "ref_slic": 73, "9433981886792453": 73, "13": [73, 83, 101], "16": [73, 90, 137, 140, 142], "17": [73, 90, 101], "19": [73, 90, 142], "21": [73, 90], "22": [73, 101, 116, 117, 118, 125, 126, 127, 137, 140, 149], "23": [73, 90], "29": [73, 101], "31": [73, 90, 101], "33": [73, 101], "34": [73, 90], "36": [73, 90], "37": 73, "38": 73, "39": [73, 90], "41": [73, 90], "42": [73, 90, 101, 142], "43": [73, 90], "44": [73, 101], "46": 73, "47": [73, 101], "48": 73, "49": [73, 90, 101], "51": [73, 101], "52": [73, 90, 101], "refslic": 73, "chosen": [73, 85, 89, 91, 92, 93, 94], "_undefin": 73, "timed_fil": 73, "afunc": 73, "int32": 74, "prec": 74, "float64": 74, "implicit_mask": 74, "im": 74, "impli": [74, 91, 92, 93, 94], "implicit": [74, 91, 92, 93, 94], "smoothed_fil": 74, "sfunc": 74, "aspect": [75, 76], "compar": [75, 76, 110, 121, 142], "ground": [75, 76], "truth": [75, 76], "json": [75, 76, 82, 84, 97, 127, 153], "in_ra": [75, 113], "airmask": [75, 142], "artmask": [75, 142], "hatmask": 75, "headmask": [75, 142], "n4c_t1w_clipped_brain_outskin_mask": 75, "in_fwhm": 75, "fwhm_t1w": 75, "in_inu": 75, "n4c_t1w_clipped_bia": [75, 115], "in_noinu": 75, "n4c_t1w_clipped_harmon": 75, "mni_tpm": [75, 113], "csf_tpl": [75, 113], "01_label": [75, 113], "csf_probseg": [75, 113], "gm_tpl": [75, 113], "gm_probseg": [75, 113], "wm_tpl": [75, 113], "wm_probseg": [75, 113], "pvm": [75, 142], "probal": 75, "ss_n4c_t1w_clippep_pve_0": 75, "ss_n4c_t1w_clippep_pve_1": 75, "ss_n4c_t1w_clippep_pve_2": 75, "rotmask": [75, 142], "ss_n4c_t1w_clippep_seg": [75, 82], "t1w_anat_qc": [75, 82], "qc": [75, 76], "in_epi": 76, "bold": [76, 77, 79, 81, 86, 87, 118, 134, 140, 142, 149, 153], "in_fd_thresh": 76, "fd": [76, 77, 84, 142], "in_dummy_tr": 76, "dummi": [76, 77], "in_dvars_fil": [76, 77], "dvar": [76, 77, 84, 127, 142], "dvars_reg_func_valid": [76, 77, 79, 127], "in_fd_fil": [76, 77], "fd_reg_func_valid_on": [76, 77, 80, 127], "in_fwhm_fil": 76, "in_gcor": 76, "0612": 76, "in_hmc": 76, "automask_reg_func_valid": 76, "in_outliers_fil": [76, 77], "in_qi_fil": 76, "qi_reg_func_valid": 76, "in_spikes_fil": [76, 77], "spikes_reg_func_valid": [76, 77], "in_tsnr": 76, "tsnr": [76, 108, 126, 127, 133, 140], "reg_func_valid_tsnr": [76, 127], "mean_reg_func_valid_functional_qc": 76, "plot": [77, 82, 83, 84, 126, 142, 153], "figur": [77, 84, 142, 153], "wise": [77, 127, 142], "identif": [77, 142], "carpetplot": [77, 142], "carpet": [77, 78, 84, 97, 118, 126, 127], "voxelwis": 77, "grai": [77, 110, 121, 123, 142, 151], "cerebellum": 77, "crown": [77, 142], "band": 77, "fmriplot": 77, "in_func": 77, "drop_tr": 77, "drop": 77, "fd_thresh": [77, 127], "carpet_seg": [77, 126, 127], "cseg_t_tpl": [77, 78, 126, 127], "carpet_dseg": [77, 78, 118, 126, 127], "repet": 77, "func_valid_fmriplot": [77, 84], "png": [77, 84, 153], "subtract": [78, 142], "cseg": 78, "cseg_": 78, "parcelatt": 78, "dramat": 79, "intensity_norm": 79, "divid": 79, "x10": 79, "2012": 79, "altogeth": 79, "dvars_": 79, "remove_zero_vari": 79, "variance_tol": 79, "0000001000": 79, "purpos": [79, 110, 122, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 151], "iqm": [79, 80, 82, 84, 85, 142, 150, 151, 153], "reproduc": [80, 142], "fsl_motion_outli": [80, 142], "reg_func_valid_on": 80, "fd_": 80, "parameter_sourc": 80, "afni": [80, 108, 114, 127, 132, 133, 149, 150], "fsfast": 80, "nipi": [80, 130, 140], "parametric_map": [81, 142], "rois_fil": [81, 103, 142], "next": [81, 90, 142], "roi_analysi": [81, 142], "_": [81, 86, 137, 140, 142], "deduct": 81, "prefix_to_delet": 81, "underscor": [81, 103], "contrast_typ": 81, "spmt_0001": [81, 88, 128, 129], "beta_0001": [81, 88, 89, 128, 129], "deduc": 81, "mean_out_fil": 81, "std_out_fil": 81, "aca_l_mean_spmt_bold": [81, 86], "aca_r_mean_spmt_bold": [81, 86], "acm_l_mean_spmt_bold": [81, 86], "acm_r_mean_spmt_bold": [81, 86], "aca_l_mean_beta_bold": 81, "aca_r_mean_beta_bold": 81, "acm_l_mean_beta_bold": 81, "acm_r_mean_beta_bold": 81, "aca_l_std_spmt_bold": 81, "aca_r_std_spmt_bold": 81, "acm_l_std_spmt_bold": 81, "acm_r_std_spmt_bold": 81, "aca_l_std_beta_bold": 81, "aca_r_std_beta_bold": 81, "acm_l_std_beta_bold": 81, "acm_r_std_beta_bold": 81, "iqms_fil": [82, 84, 153], "art_mask": 82, "air_mask": 82, "pre_n4c_t1w_clipped_desc": 82, "outskin": [82, 138], "anat_fig_col": 82, "anat_fig_row": 82, "spikes_": [82, 84, 87], "norm_anat": [82, 83], "norm_anat_fig_col": [82, 83], "norm_anat_fig_row": [82, 83], "anat_inf_slice_start": 82, "displai": [82, 83, 84, 131, 153], "anat_slices_gap": 82, "gap": [82, 83, 84, 153], "norm_anat_inf_slice_start": [82, 83], "norm_anat_slices_gap": [82, 83], "pdf": [82, 83, 84, 85, 97, 125, 126, 153], "t1w_ref_anatomical_mriqcreport_2023_03_31_11_42_10_75": [82, 125], "v22": [82, 84, 113, 115, 149, 150], "06": [82, 84, 90, 113, 115, 116, 117, 118, 127, 137, 149, 150], "func_func_qc": 84, "func_fig_col": 84, "func_fig_row": 84, "norm_func_fig_col": [83, 84], "norm_func_fig_row": [83, 84], "automask_mean_func_valid": 84, "func_inf_slice_start": 84, "func_slices_gap": 84, "iqms_plot": 84, "norm_func": [83, 84], "w_n4c_mean_reg_func_valid": [84, 118], "norm_func_inf_slice_start": [83, 84], "norm_func_slices_gap": [83, 84], "stddev_func": 84, "reg_func_valid_stddev": 84, "func_ref_functional_mriqcreport_2023_03_31_11_42_10_75": [84, 126], "gerer": 85, "choosen": [], "boxplot": [85, 153], "quartil": 85, "q1": 85, "q3": 85, "whisker": 85, "5x": 85, "iqr": 85, "tsv": [85, 153], "report_pdf": 85, "out_tsv": [85, 153], "matplotlib": 85, "parameter_fil": [86, 142], "results_aggreg": [86, 128, 142], "overwrit": [86, 142], "doublet": 86, "hemispher": [86, 128, 142], "letter": 86, "l": [86, 95, 96, 103, 142], "apath": 86, "apat": 86, "collect": [86, 142], "territori": 86, "notion": 86, "cours": [86, 140], "todo": 86, "asap": 86, "exactli": [86, 142], "hemi": [86, 142], "aca": [86, 95, 96, 103, 142], "record": 86, "spmt": [86, 142, 151], "laterality_index": 86, "patient_info": [83, 86, 128], "dictionari": [83, 86, 89, 90, 128, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 153], "kei": [83, 86, 89, 90, 128, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 153], "ablair": 86, "pathologi": [83, 86, 128], "acmd": [83, 86], "ag": [83, 86, 128], "64": [86, 90, 101, 137], "sex": [83, 86, 128], "mr": [83, 86, 128, 142], "3t": [83, 86], "ga": [83, 86, 128], "bactal": [83, 86], "gasadmin": [83, 86, 128], "xml": 86, "bold_std_beta": [86, 128], "xl": [86, 128], "bold_il_mean_spmt": [86, 128], "bold_mean_spmt": [86, 128], "spikes_mask": [87, 142], "no_zscor": 87, "zscore": [87, 140], "skip_fram": 87, "spike_thresh": [87, 142], "score": [87, 140], "call": 87, "spki": [87, 127], "detect": [87, 126, 127, 140, 142], "spikes_func": [87, 127], "t_contrast_nam": 88, "condit": [88, 89, 90, 101, 145], "t_condition_nam": 88, "t_contrast_weight": 88, "session": [88, 90, 101, 153], "f": [88, 89, 140, 142], "f_contrast_nam": 88, "f_contrast_t_nam": 88, "spm_mat_fil": [88, 89, 90], "beta_imag": [88, 89, 128, 129], "regress": [88, 89, 90, 128, 142, 144], "beta_0002": [88, 89, 128, 129], "beta_0003": [88, 89, 128, 129], "beta_0004": [88, 89, 128, 129], "beta_0005": [88, 89, 128, 129], "beta_0006": [88, 89, 128, 129], "beta_0007": [88, 89, 128, 129], "beta_0008": [88, 89, 128, 129], "residual_imag": [88, 89], "residu": [88, 89], "resm": [88, 89], "task": [88, 142], "v": 88, "baselin": 88, "r1_1": 88, "use_deriv": 88, "group_contrast": 88, "elsewher": 88, "positif": 88, "out_spm_mat_fil": [88, 89, 91, 92, 93, 94, 129], "smp_mat_fil": [88, 89, 91, 92, 93, 94], "con_imag": [88, 89], "con_0001": 88, "con_0002": 88, "con_0003": 88, "con_0004": 88, "spmt_imag": [88, 89, 128, 129], "stat": [88, 89, 108, 131, 132, 142, 146], "spmt_0002": 88, "spmt_0003": 88, "spmt_0004": 88, "ess_imag": [88, 89], "ess_0001": [88, 89], "ess_0002": [88, 89], "ess_0003": [88, 89], "ess_0004": [88, 89], "spmf_imag": [88, 89], "spmf_0001": [88, 89], "spmf_0002": [88, 89], "spmf_0003": [88, 89], "spmf_0004": [88, 89], "estimatecontrast": [88, 108, 128, 129, 143, 144], "\u03b2": 89, "bayesian": 89, "open": [89, 104, 130], "ticket": [89, 125, 126], "spmmat": 89, "estimation_method": 89, "independ": [89, 90, 94], "iid": 89, "yet": 89, "write_residu": 89, "dynamiqu": 89, "tot_reg_num": 89, "factor_info": [89, 90], "level1design": [89, 101, 108, 129, 143, 144, 145], "factori": [89, 90], "interact": [89, 90, 91, 92, 93, 94, 144], "factor1": [89, 90], "factor2": [89, 90], "hrf": [89, 90], "fourier_han": [89, 90], "gamma": [89, 90], "fir": [89, 90], "hemodynam": [89, 90], "beta_000k": [89, 128], "kth": [89, 128], "varianc": [89, 94], "res_000k": 89, "fuction": 89, "res_0001": 89, "res_0002": 89, "res_0003": 89, "res_0238": 89, "res_0239": 89, "res_0240": 89, "rpvimag": 89, "rpv": 89, "con_0005": 89, "con_0006": 89, "con_0007": 89, "con_0008": 89, "spmt_0005": 89, "spmt_0006": 89, "spmt_0007": 89, "spmt_0008": 89, "timing_unit": 90, "event": [90, 101], "sec": 90, "interscan_interv": 90, "rt": 90, "microtime_resolut": 90, "fmri_t": 90, "build": [90, 145, 147, 148, 149, 150, 151, 152], "regressor": [90, 91, 92, 93, 94, 129], "previous": [90, 104, 128, 129], "microtime_onset": 90, "fmri_t0": 90, "coincid": [90, 91, 92, 93, 94], "sess_scan": 90, "sess": 90, "wai": 90, "sess_1_scanpath_1": 90, "sess_2_scanpath_2": 90, "sess_n_scanpath_n": 90, "func_1": 90, "func_2": 90, "sess_cond_nam": 90, "cond": 90, "sess_1_condname_1": 90, "sess_1_condname_2": 90, "sess_1_condname_n": 90, "sess_2_condname_1": 90, "sess_2_condname_2": 90, "sess_2_condname_n": 90, "sess_n_condname_1": 90, "sess_n_condname_2": 90, "sess_n_condname_n": 90, "cond1": 90, "cond2": 90, "sess_cond_onset": 90, "epoch": 90, "sess_1_cond_1_onset_1": 90, "sess_1_cond_1_onset_2": 90, "sess_1_cond_1_onset_n": 90, "sess_1_cond_2_onset_1": 90, "sess_1_cond_2_onset_2": 90, "sess_1_cond_2_onset_n": 90, "sess_1_cond_n_onset_1": 90, "sess_1_cond_n_onset_2": 90, "sess_1_cond_n_onset_n": 90, "sess_2_cond_1_onset_1": 90, "sess_2_cond_1_onset_2": 90, "sess_2_cond_1_onset_n": 90, "sess_2_cond_2_onset_1": 90, "sess_2_cond_2_onset_2": 90, "sess_2_cond_2_onset_n": 90, "sess_2_cond_n_onset_1": 90, "sess_2_cond_n_onset_2": 90, "sess_2_cond_n_onset_n": 90, "sess_n_cond_1_onset_1": 90, "sess_n_cond_1_onset_2": 90, "sess_n_cond_1_onset_n": 90, "sess_n_cond_2_onset_1": 90, "sess_n_cond_2_onset_2": 90, "sess_n_cond_2_onset_n": 90, "sess_n_cond_n_onset_1": 90, "sess_n_cond_n_onset_2": 90, "sess_n_cond_n_onset_n": 90, "72": 90, "117": 90, "152": [90, 101], "59": [90, 142], "225": 90, "98": [90, 101, 142], "206": 90, "282": 90, "sess_cond_dur": 90, "durat": [90, 101, 145], "compli": 90, "sess_1_cond_1_duration_1": 90, "sess_1_cond_1_duration_2": 90, "sess_1_cond_1_duration_n": 90, "sess_1_cond_2_duration_1": 90, "sess_1_cond_2_duration_2": 90, "sess_1_cond_2_duration_n": 90, "sess_1_cond_n_duration_1": 90, "sess_1_cond_n_duration_2": 90, "sess_1_cond_n_duration_n": 90, "sess_2_cond_1_duration_1": 90, "sess_2_cond_1_duration_2": 90, "sess_2_cond_1_duration_n": 90, "sess_2_cond_2_duration_1": 90, "sess_2_cond_2_duration_2": 90, "sess_2_cond_2_duration_n": 90, "sess_2_cond_n_duration_1": 90, "sess_2_cond_n_duration_2": 90, "sess_2_cond_n_duration_n": 90, "sess_n_cond_1_duration_1": 90, "sess_n_cond_1_duration_2": 90, "sess_n_cond_1_duration_n": 90, "sess_n_cond_2_duration_1": 90, "sess_n_cond_2_duration_2": 90, "sess_n_cond_2_duration_n": 90, "sess_n_cond_n_duration_1": 90, "sess_n_cond_n_duration_2": 90, "sess_n_cond_n_duration_n": 90, "54": 90, "81": 90, "sess_cond_tmod": 90, "tmod": 90, "characteris": 90, "nonlinear": 90, "6th": 90, "sess_1_cond_1_tmod": 90, "sess_1_cond_2_tmod": 90, "sess_1_cond_n_tmod": 90, "sess_2_cond_1_tmod": 90, "sess_2_cond_2_tmod": 90, "sess2_cond_n_tmod": 90, "sess_n_cond_1_tmod": 90, "sess_n_cond_2_tmod": 90, "sess_n_cond_n_tmod": 90, "sess_cond_pmod_nam": 90, "pmod": 90, "relat": [90, 101, 142, 144], "sess_1_cond_1_pmodname_1": 90, "sess_1_cond_1_pmodname_2": 90, "sess_1_cond_1_pmodname_n": 90, "sess_1_cond_2_pmodname_1": 90, "sess_1_cond_2_pmodname_2": 90, "sess_1_cond_2_pmodname_n": 90, "sess_1_cond_n_pmodname_1": 90, "sess_1_cond_n_pmodname_2": 90, "sess_1_cond_n_pmodname_n": 90, "sess_2_cond_1_pmodname_1": 90, "sess_2_cond_1_pmodname_2": 90, "sess_2_cond_1_pmodname_n": 90, "sess_2_cond_2_pmodname_1": 90, "sess_2_cond_2_pmodname_2": 90, "sess_2_cond_2_pmodname_n": 90, "sess_2_cond_n_pmodname_1": 90, "sess_2_cond_n_pmodname_2": 90, "sess_2_cond_n_pmodname_n": 90, "sess_n_cond_1_pmodname_1": 90, "sess_n_cond_1_pmodname_2": 90, "sess_n_cond_1_pmodname_n": 90, "sess_n_cond_2_pmodname_1": 90, "sess_n_cond_2_pmodname_2": 90, "sess_n_cond_2_pmodname_n": 90, "sess_n_cond_n_pmodname_1": 90, "sess_n_cond_n_pmodname_2": 90, "sess_n_cond_n_pmodname_n": 90, "pmod1": 90, "pmod2": 90, "sess_cond_pmod_valu": 90, "sess_1_cond_1_pmod_1_val_1": 90, "sess_1_cond_1_pmod_1_val_2": 90, "sess_1_cond_1_pmod_1_val_n": 90, "sess_1_cond_1_pmod_2_val_1": 90, "sess_1_cond_1_pmod_2_val_2": 90, "sess_1_cond_1_pmod_2_val_n": 90, "sess_1_cond_1_pmod_n_val_1": 90, "sess_1_cond_1_pmod_n_val_2": 90, "sess_1_cond_1_pmod_n_val_n": 90, "sess_1_cond_2_pmod_1_val_1": 90, "sess_1_cond_2_pmod_1_val_2": 90, "sess_1_cond_2_pmod_1_val_n": 90, "sess_1_cond_2_pmod_2_val_1": 90, "sess_1_cond_2_pmod_2_val_2": 90, "sess_1_cond_2_pmod_2_val_n": 90, "sess_1_cond_2_pmod_n_val_1": 90, "sess_1_cond_2_pmod_n_val_2": 90, "sess_1_cond_2_pmod_n_val_n": 90, "sess_1_cond_n_pmod_1_val_1": 90, "sess_1_cond_n_pmod_1_val_2": 90, "sess_1_cond_n_pmod_1_val_n": 90, "sess_1_cond_n_pmod_2_val_1": 90, "sess_1_cond_n_pmod_2_val_2": 90, "sess_1_cond_n_pmod_2_val_n": 90, "sess_1_cond_n_pmod_n_val_1": 90, "sess_1_cond_n_pmod_n_val_2": 90, "sess_1_cond_n_pmod_n_val_n": 90, "sess_2_cond_1_pmod_1_val_1": 90, "sess_2_cond_1_pmod_1_val_2": 90, "sess_2_cond_1_pmod_1_val_n": 90, "sess_2_cond_1_pmod_2_val_1": 90, "sess_2_cond_1_pmod_2_val_2": 90, "sess_2_cond_1_pmod_2_val_n": 90, "sess_2_cond_1_pmod_n_val_1": 90, "sess_2_cond_1_pmod_n_val_2": 90, "sess_2_cond_1_pmod_n_val_n": 90, "sess_2_cond_2_pmod_1_val_1": 90, "sess_2_cond_2_pmod_1_val_2": 90, "sess_2_cond_2_pmod_1_val_n": 90, "sess_2_cond_2_pmod_2_val_1": 90, "sess_2_cond_2_pmod_2_val_2": 90, "sess_2_cond_2_pmod_2_val_n": 90, "sess_2_cond_2_pmod_n_val_1": 90, "sess_2_cond_2_pmod_n_val_2": 90, "sess_2_cond_2_pmod_n_val_n": 90, "sess_2_cond_n_pmod_1_val_1": 90, "sess_2_cond_n_pmod_1_val_2": 90, "sess_2_cond_n_pmod_1_val_n": 90, "sess_2_cond_n_pmod_2_val_1": 90, "sess_2_cond_n_pmod_2_val_2": 90, "sess_2_cond_n_pmod_2_val_n": 90, "sess_2_cond_n_pmod_n_val_1": 90, "sess_2_cond_n_pmod_n_val_2": 90, "sess_2_cond_n_pmod_n_val_n": 90, "sess_n_cond_1_pmod_1_val_1": 90, "sess_n_cond_1_pmod_1_val_2": 90, "sess_n_cond_1_pmod_1_val_n": 90, "sess_n_cond_1_pmod_2_val_1": 90, "sess_n_cond_1_pmod_2_val_2": 90, "sess_n_cond_1_pmod_2_val_n": 90, "sess_n_cond_1_pmod_n_val_1": 90, "sess_n_cond_1_pmod_n_val_2": 90, "sess_n_cond_1_pmod_n_val_n": 90, "sess_n_cond_2_pmod_1_val_1": 90, "sess_n_cond_2_pmod_1_val_2": 90, "sess_n_cond_2_pmod_1_val_n": 90, "sess_n_cond_2_pmod_2_val_1": 90, "sess_n_cond_2_pmod_2_val_2": 90, "sess_n_cond_2_pmod_2_val_n": 90, "sess_n_cond_2_pmod_n_val_1": 90, "sess_n_cond_2_pmod_n_val_2": 90, "sess_n_cond_2_pmod_n_val_n": 90, "sess_n_cond_n_pmod_1_val_1": 90, "sess_n_cond_n_pmod_1_val_2": 90, "sess_n_cond_n_pmod_1_val_n": 90, "sess_n_cond_n_pmod_2_val_1": 90, "sess_n_cond_n_pmod_2_val_2": 90, "sess_n_cond_n_pmod_2_val_n": 90, "sess_n_cond_n_pmod_n_val_1": 90, "sess_n_cond_n_pmod_n_val_2": 90, "sess_n_cond_n_pmod_n_val_n": 90, "61": 90, "105": [90, 101], "178": 90, "65": [90, 101], "221": 90, "sess_cond_pmod_poli": 90, "poli": 90, "stick": 90, "height": [90, 153], "further": [90, 125, 126], "cube": 90, "sess_1_cond_1_pmod_1_poli": 90, "sess_1_cond_1_pmod_2_poli": 90, "sess_1_cond_1_pmod_n_poli": 90, "sess_1_cond_2_pmod_1_poli": 90, "sess_1_cond_2_pmod_2_poli": 90, "sess_1_cond_2_pmod_n_poli": 90, "sess_1_cond_n_pmod_1_poli": 90, "sess_1_cond_n_pmod_2_poli": 90, "sess_1_cond_n_pmod_n_poli": 90, "sess_2_cond_1_pmod_1_poli": 90, "sess_2_cond_1_pmod_2_poli": 90, "sess_2_cond_1_pmod_n_poli": 90, "sess_2_cond_2_pmod_1_poli": 90, "sess_2_cond_2_pmod_2_poli": 90, "sess_2_cond_2_pmod_n_poli": 90, "sess_2_cond_n_pmod_1_poli": 90, "sess_2_cond_n_pmod_2_poli": 90, "sess_2_cond_n_pmod_n_poli": 90, "sess_n_cond_1_pmod_1_poli": 90, "sess_n_cond_1_pmod_2_poli": 90, "sess_n_cond_1_pmod_n_poli": 90, "sess_n_cond_2_pmod_1_poli": 90, "sess_n_cond_2_pmod_2_poli": 90, "sess_n_cond_2_pmod_n_poli": 90, "sess_n_cond_n_pmod_1_poli": 90, "sess_n_cond_n_pmod_2_poli": 90, "sess_n_cond_n_pmod_n_poli": 90, "sess_cond_orth": 90, "orth": 90, "orthogonalis": 90, "othogonalis": 90, "sess_1_cond_1_orth": 90, "sess_1_cond_2_orth": 90, "sess_1_cond_n_orth": 90, "sess_2_cond_1_orth": 90, "sess_2_cond_2_orth": 90, "sess2_cond_n_orth": 90, "sess_n_cond_1_orth": 90, "sess_n_cond_2_orth": 90, "sess_n_cond_n_orth": 90, "sess_multi": 90, "detail": [90, 129], "experiment": [90, 91, 92, 93, 94], "cell": 90, "arrai": [90, 140, 142], "load": [90, 103], "go": 90, "sess_1_multi": 90, "sess_2_multi": 90, "sess_n_multi": 90, "sess_regress": 90, "haemodynam": 90, "val": 90, "sess_1_dict_1": 90, "sess_1_dict_2": 90, "sess_1_dict_n": 90, "sess_2_dict_1": 90, "sess_2_dict_2": 90, "sess_2_dict_n": 90, "sess_n_dict_1": 90, "sess_n_dict_2": 90, "sess_n_dict_n": 90, "reg1": 90, "79": 90, "585": 90, "805": 90, "155": [90, 101], "66": 90, "195": 90, "045": 90, "82": 90, "765": 90, "67": [90, 101], "955": 90, "935": 90, "865": 90, "reg2": 90, "58": 90, "09": 90, "91": [90, 142], "87": 90, "73": 90, "sess_multi_reg": 90, "multi_reg": 90, "sess_1_file_1": 90, "sess_1_file_2": 90, "sess_1_file_n": 90, "sess_2_file_1": 90, "sess_2_file_2": 90, "sess_2_file_n": 90, "sess_n_file_1": 90, "sess_n_file_2": 90, "sess_n_file_n": 90, "file1": [90, 98], "file2": [90, 98], "sess_hpf": 90, "hpf": 90, "slow": 90, "drift": 90, "period": 90, "longer": [90, 110], "128": 90, "427": 90, "major": 90, "variabl": [90, 91, 92, 93, 94, 125, 126, 131], "subdivis": 90, "peak": [90, 110, 139], "vari": [90, 122], "plu": 90, "dispers": 90, "finit": 90, "impuls": 90, "post": 90, "stimulu": 90, "span": 90, "volterra_expansion_ord": 90, "volt": 90, "volterra": 90, "formul": 90, "global_intensity_norm": 90, "mask_threshold": 90, "mthresh": 90, "explicitli": 90, "analys": [90, 122, 149], "mask_swc1anat": 90, "model_serial_correl": 90, "cvi": 90, "serial": 90, "alias": 90, "biorhythm": 90, "unmodel": 90, "neuron": 90, "activ": [90, 91, 92, 93, 94, 137], "autoregress": 90, "reml": [90, 144], "001_data": [91, 92, 93, 94], "con_001": [91, 92, 94], "002_data": [91, 92, 93, 94], "out_dir_nam": [91, 92, 93, 94], "spm_stat_2ndlevel": [91, 92, 93, 94], "directoti": [91, 92, 93, 94], "folder": [91, 92, 93, 94], "project": [91, 92, 93, 94, 142, 153], "include_intercept": 91, "intercept": 91, "threshold_mask": [91, 92, 93, 94], "exce": [91, 92, 93, 94], "absoult": [91, 92, 93, 94], "threshold_mask_valu": [91, 92, 93, 94], "use_implicit_mask": [91, 92, 93, 94], "nan": [91, 92, 93, 94], "global_calc": [91, 92, 93, 94], "vbm": [91, 92, 93, 94], "own": [91, 92, 93, 94], "global_calc_valu": [91, 92, 93, 94], "fullmean": [91, 92, 93, 94], "no_grand_mean_sc": [91, 92, 93, 94], "overal": [91, 92, 93, 94], "grand": [91, 92, 93, 94], "scall": [91, 92, 93, 94], "ancova": [91, 92, 93, 94], "user_covariates_nam": 91, "covari": [91, 92, 93, 94, 144], "user_covariates_vector": 91, "user_covariates_cent": 91, "aslo": [91, 92, 93, 94], "reaction": [91, 92, 93, 94], "usercovariates_cent": 91, "covariates_nam": [91, 92, 93, 94], "nuissanc": [91, 92, 93, 94], "examin": [91, 92, 93, 94], "additionl": [91, 92, 93, 94], "covariates_vector": [91, 92, 93, 94], "covariates_interact": [91, 92, 93, 94], "covariates_cent": [91, 92, 93, 94], "interc": [91, 92, 93, 94], "opportun": [91, 92, 93, 94], "facto": [91, 92, 93, 94], "explicit_mask_fil": [91, 92, 93, 94], "explicit": [91, 92, 93, 94], "calculaion": [91, 92, 93, 94], "cacul": [91, 92, 93, 94, 142], "paired_fil": 93, "beta_001": 93, "beta_002": 93, "onesamplettestdesign": [93, 94, 108, 143, 144], "group1_fil": 94, "grouop": 94, "group2_fil": 94, "con_002": 94, "unequal_vari": 94, "unequ": 94, "acm": [95, 96, 103], "out_list": [95, 105], "acp": 96, "pica": 96, "roi_c": 96, "roi_fron": 96, "roi_insula": 96, "roi_occ": 96, "roi_par": 96, "roi_str": 96, "roi_temp": 96, "roi_tha": 96, "sca": 96, "listoflist": 96, "histori": 97, "to_keep_filt": 97, "regex": 97, "to_remove_filt": 97, "to_remove_fil": 97, "01_anatomical_mriqcreport_2023_05_12_16_26_12_58": 97, "_qc": 97, "exclusif": 97, "files_remov": 97, "file3": 98, "file_list": [98, 106], "in_list": [99, 100], "index_filt": [99, 106], "python": [99, 106], "filtered_list": 99, "pars": 100, "anat1_001": 100, "anat1_002": 100, "anat1_003": 100, "anat2_002": 100, "002": 100, "bloc": 101, "csv_file": 101, "conten": 101, "mia_project": [101, 102], "sess01_bloc_onset": 101, "sess02_event_onset": 101, "design_typ": 101, "cond_nam": 101, "inc": 101, "con": 101, "n1": 101, "n2": 101, "f1": 101, "f2": 101, "cond_onset": 101, "88": 101, "144": 101, "174": 101, "236": 101, "248": 101, "274": 101, "102": 101, "116": 101, "154": 101, "164": 101, "184": 101, "196": 101, "208": 101, "222": 101, "74996667": 101, "99996667": 101, "24996667": 101, "49996667": 101, "74": 101, "92": 101, "119": 101, "123": 101, "125": 101, "137": 101, "141": 101, "143": 101, "146": 101, "159": 101, "161": 101, "204": 101, "238": 101, "89": 101, "94": 101, "134": 101, "148": 101, "191": 101, "202": 101, "215": 101, "233": 101, "242": 101, "245": 101, "281": 101, "290": 101, "303": 101, "310": 101, "319": 101, "339": 101, "341": 101, "33333333e": 101, "2499667": 101, "4999667": 101, "9999667": 101, "7499667": 101, "62": 101, "101": 101, "249967": 101, "103": 101, "499967": 101, "999967": 101, "749967": 101, "170": 101, "188": 101, "227": 101, "265": 101, "283": 101, "285": 101, "287": 101, "344": 101, "157": 101, "168": 101, "177": 101, "179": 101, "182": 101, "197": 101, "240": 101, "254": 101, "267": 101, "269": 101, "294": 101, "299": 101, "301": 101, "314": 101, "317": 101, "326": 101, "332": 101, "335": 101, "337": 101, "346": 101, "cond_dur": 101, "tha": 102, "patient_nam": 102, "rois_list": [103, 145], "lib_dir": [103, 145], "roi_list": [103, 145], "caract": 103, "foo": [103, 145], "faa": [103, 145], "foo_1": [103, 145], "faa_2": [103, 145], "miaresourc": [103, 145], "file_in_db": [103, 145], "output_directori": [103, 140, 145, 153], "resourc": [103, 142], "catch": 103, "starts_with": 103, "properli": [104, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145], "node": 104, "hand": [104, 130], "databrows": 104, "send": 104, "manag": [104, 130], "button": 104, "click": 104, "database_scan": 104, "file_nam": [105, 140, 153], "obj1": 107, "obj2": 107, "obj_list": 107, "brick": [108, 118, 119, 120, 121, 122, 123, 124, 127, 128, 130, 131, 149, 150, 151, 153, 154], "atom": [108, 130, 131, 134, 135, 136, 137, 138, 140, 141, 149, 150], "parti": [108, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145], "softwar": [108, 133], "calcdroptr": [108, 133, 134], "despik": [108, 117, 133, 134], "fwhmx": [108, 125, 127, 133, 134], "gcor": [108, 127, 133, 134], "outlierscount": 108, "qualityindex": [108, 133, 134], "refitdeobliqu": [108, 133, 134], "tshift": [108, 133, 134], "tstatmean": [108, 133, 134], "volreg": [108, 133, 134], "affineiniti": [108, 133, 135], "applytransform": [108, 111, 113, 133, 135], "n4biasfieldcorrect": [108, 114, 115, 118, 133, 135], "computedki": [108, 133, 136], "binar": [108, 114, 133, 137, 140], "synthstrip": [108, 125, 133, 137, 149], "synthstripmriqc": [108, 133, 137], "betsurfacesextract": [108, 133, 138], "extractroi": [108, 133, 138], "applybiascorrect": [108, 133, 140], "artifactmask": [108, 133, 140], "conformimag": [108, 125, 133, 140], "convroi": [108, 128, 133, 140], "enhanc": [108, 112, 133, 140], "estimatesnr": [108, 133, 140], "gradientthreshold": [108, 133, 140], "intensityclip": [108, 133, 140], "nonsteadydetector": 108, "resample1": [108, 124, 128, 133, 140], "resample2": [108, 128, 133, 140], "rotationmask": [108, 133, 140], "sanit": [108, 126, 133, 140], "templatefromtemplateflow": [108, 133, 140], "constrainedsphericaldeconvolut": [108, 133, 139], "dwibiascorrect": [108, 133, 139], "dwibrainmask": [108, 133, 139], "dwidenois": [108, 133, 139], "dwiextract": [108, 133, 139], "editingtrack": [108, 133, 139], "filteringtrack": [108, 133, 139], "fittensor": [108, 133, 139], "generate5tt2gmwmi": [108, 133, 139], "mrcat": [108, 133, 139], "mrdegibb": [108, 133, 139], "mrmath": [108, 133, 139], "mrtransform": [108, 133, 139], "mtnormalis": [108, 133, 139], "sphericalharmonicextract": [108, 133, 139], "tensormetr": [108, 133, 139], "transformfslconvert": [108, 133, 139], "coregist": [108, 110, 119, 120, 123, 133, 141], "gm_wm_normal": [108, 124, 133, 141], "newseg": [108, 119, 133, 141], "slicetim": [108, 133, 141], "anatiqm": [108, 132, 142], "boldiqm": [108, 132, 142], "boldiqmsplot": [108, 132, 142], "carpetparcel": [108, 132, 142], "computedvar": [108, 132, 142], "framewisedisplac": [108, 132, 142], "mean_stddev_calc": [108, 128, 132, 142], "reportanatmriqc": [108, 132, 142], "reportfuncmriqc": [108, 132, 142], "reportgroupmriqc": [108, 132, 142], "result_collector": [108, 128, 132, 142], "estimatemodel": [108, 128, 129, 143, 144], "multipleregressiondesign": [108, 143, 144], "twosamplettestdesign": [108, 143, 144], "concat_to_list": [108, 128, 132, 145], "concat_to_list_of_list": [108, 128, 132, 145], "delete_data": [108, 132, 145], "files_to_list": [108, 128, 132, 145], "find_in_list": [108, 128, 132, 145], "get_conditions_from_csv": [108, 132, 145], "get_patient_nam": [108, 132, 145], "import_data": [108, 128, 132, 145], "input_filt": [108, 132, 145], "list_dupl": [108, 119, 132, 145], "list_to_fil": [108, 132, 145], "make_a_list": [108, 132, 145], "cerebvascularreact": [108, 131, 146], "co2_inhal": [108, 131, 146], "progress": [108, 109], "dwitractographi": [108, 131, 146], "dwi_whole_brain_tractograpi": 108, "anat_airmask": [108, 131, 146], "anat_headmask": [108, 131, 146], "anat_mni_tpm": [108, 125, 131, 146], "anat_skullstrip": [108, 131, 146], "anat_skullstrip_synthstrip": [108, 131, 146], "anat_spatial_norm": [108, 131, 146], "bold_hmc": [108, 131, 146], "bold_mni_align": [108, 131, 146], "bold_spatial_preprocessing1": [108, 131, 146], "bold_spatial_preprocessing2": [108, 131, 146], "dwi_fod_msmt_csd": [108, 131, 146], "dwi_preprocess": [108, 146, 149], "dwi_tissue_boundari": 108, "spatial_mask": [108, 128, 129, 131, 146], "qualitycontrol": [108, 131, 146], "anat_mriqc": [108, 131, 146], "bold_mri_qc": 108, "bold_iqm": [108, 131, 146], "extract_roi_param": [108, 131, 146], "bold_stat_cvr": [108, 131, 146], "insight": [109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "tractogram": 110, "multishel": [110, 122], "implaus": 110, "overestim": 110, "msmtt": 110, "exploit": 110, "sensit": 110, "prepar": [110, 121, 123], "atc": 110, "coregistr": [110, 123], "million": 110, "randomli": 110, "subset": [110, 139], "200k": 110, "10k": 110, "shorter": 110, "softawr": 110, "tractseg": 110, "tutori": [110, 123], "andi": 110, "book": 110, "suggest": [110, 123], "howev": [110, 123], "seem": [110, 123], "perfectli": [110, 123], "edit": [110, 139], "in_dwi_pe_dir": [110, 122], "in_diw": [110, 122], "in_dwi_ro_tim": [110, 122], "in_b0_revers": [110, 122], "topup": [110, 122, 139], "b0_revers": [110, 122], "in_t1w": [110, 123], "sh_peak": 110, "dwi_denoised_unringed_dwifslpreproc_unbias_wm_odf_norm_peak": 110, "tracks_10mio": 110, "dwi_denoised_unringed_dwifslpreproc_unbias_wm_odf_norm_tracto": 110, "tracks_200k": 110, "dwi_denoised_unringed_dwifslpreproc_unbias_wm_odf_norm_tracto_200k": 110, "tracks_10k": 110, "dwi_denoised_unringed_dwifslpreproc_unbias_wm_odf_norm_tracto_10k": 110, "dwi_denoised_unringed_dwifslpreproc_unbias_wm_odf_norm_tracto_sift": 110, "tracks_sift_10k": 110, "t1w_coreg": [110, 123], "t1w_transform": [110, 123], "advanc": 110, "neurophil": 110, "templateflow": [111, 113, 116, 118, 140], "t1w_brain_outskin": 111, "t1w_masked_inversecomposit": [111, 113, 116], "t1w_brain_mask": 111, "out_rot_mask": 111, "rot_t1w_mask": 111, "ss_t1w_seg": 112, "denoise_ss_t1w_enh_grad": 112, "bias_correct": 114, "n4c_t1w_bia": 114, "ss_orig_t1w": 114, "ss_orig_t1w_bin": 114, "intes": 115, "out_correct": 115, "n4c_t1w_clip": 115, "ss_n4c_t1w_clip": 115, "pre_n4c_t1w_clipped_desc_brain_mask": 115, "moving_mask": 116, "t1w_masked_composit": 116, "w_t1w_mask": 116, "mric": 116, "hcm": 117, "bold_hcm": 117, "deobliqu": [117, 134], "deobliq": 117, "reg_d_func_on": [117, 127], "reg_d_func": 117, "mriq": [117, 118], "hmc": 117, "boldref": 118, "seg": [118, 142], "dseg": 118, "epi_mask": 118, "epi_mean": [118, 127], "reg_convergence_threshold": 118, "reg_convergence_window_s": 118, "reg_interpol": 118, "reg_metr": 118, "reg_metric_weight": 118, "reg_number_of_iter": 118, "reg_radius_or_number_of_bin": 118, "reg_sampling_percentag": 118, "reg_sampling_strategi": 118, "reg_shrink_factor": 118, "reg_smoothing_sigma": 118, "reg_transform_paramet": 118, "reg_transform": 118, "seg_template_r": 118, "template_r": 118, "n4c_mean_reg_func_valid_composit": 118, "n4c_mean_reg_func_valid_bia": 118, "epi_mni": 118, "epi_parc": [118, 127], "n4c_mean_reg_func_valid_inversecomposit": 118, "anat_fil": [119, 120, 125, 153], "sush": 120, "turbo": [119, 120], "func_fil": [119, 120, 126], "normalized_anat": [119, 120], "smoothed_func": [119, 120, 124, 129], "swrfunc": [119, 120, 129], "spatial_preprocess": [120, 132, 133], "rf": 121, "we": 121, "everi": [121, 134, 141], "studi": [121, 142], "dwi_denoised_unringed_dwifslpreproc_unbia": [121, 122, 123], "dwi_denoised_unringed_dwifslpreproc_unbias_brain_mask": [121, 122], "voxel_fin": 121, "dwi_denoised_unringed_dwifslpreproc_unbias_response_voxel": 121, "dwi_denoised_unringed_dwifslpreproc_unbias_odf_predicted_sign": 121, "wm_odf_norm": 121, "dwi_denoised_unringed_dwifslpreproc_unbias_wm_odf_norm": 121, "gm_odf_norm": 121, "dwi_denoised_unringed_dwifslpreproc_unbias_gm_odf_norm": 121, "csf_odf_norm": 121, "dwi_denoised_unringed_dwifslpreproc_unbias_csf_odf_norm": 121, "gibb": [122, 139], "ring": [122, 139], "distrort": 122, "eddi": [122, 139], "convers": [122, 123, 139], "distorst": 122, "preproc_dwi": 122, "creation": 123, "subcort": 123, "patholog": 123, "transfom": 123, "t1w_5tt_transform": 123, "t1w_5tt_transformed_gmwmse": 123, "c6anat": 124, "mask_002": [124, 128, 129], "mask_swc1anat_002": 124, "mask_003": 124, "mask_swc1anat_003": 124, "disclaim": [125, 126], "special": [125, 126, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145], "effort": [125, 126], "mia": [125, 126], "much": [125, 126], "sought": [125, 126], "environ": [125, 126, 130], "ants_random_se": [125, 126], "bare": 125, "metal": 125, "itk_global_default_number_of_thread": 125, "omp_num_thread": 125, "discuss": [125, 126], "bet": [125, 138], "anat_report": 125, "summari": [125, 126, 127, 139], "nterpol": 126, "func_report": 126, "bold_mriqc": [127, 131, 146], "parcel": [127, 142], "hmc_motion": 127, "ras_epi": 127, "dummy_tr": 127, "interg": 127, "dvars_intensity_norm": 127, "dvars_remove_zero_vari": 127, "epi_tsnr": 127, "fd_normal": 127, "fd_parameter_sourc": 127, "fd_radiu": 127, "fwhm_combin": 127, "fwhm_detrend": 127, "hmc_epi": 127, "quality_index_automask": 127, "outlier_fract": 127, "spikes_detrend": 127, "spikes_no_zscor": 127, "spikes_skip_fram": 127, "spikes_skipe_thresh": 127, "boldqc_out_fil": 127, "mean_reg_func_valid_bold_qc": 127, "dvars_fil": 127, "fd_file": 127, "framewis": [127, 142], "outliercount_fil": 127, "spike_fil": 127, "mask_anat_002": [128, 129], "preced": 128, "resample2_mask": 128, "conv_roi_mak": 128, "convacp_l_2": 128, "convacp_r_2": 128, "convpica_l_2": 128, "convpica_r_2": 128, "cing_l_2": 128, "cing_r_2": 128, "fron_l_2": 128, "fron_r_2": 128, "insula_l_2": 128, "insula_r_2": 128, "occ_l_2": 128, "occ_r_2": 128, "par_l_2": 128, "par_r_2": 128, "str_l_2": 128, "str_r_2": 128, "temp_l_2": 128, "temp_r_2": 128, "tha_l_2": 128, "tha_r_2": 128, "convsca_l_2": 128, "convsca_r_2": 128, "xls_file": 128, "il": 128, "bold_il_mean_beta": 128, "bold_mean_beta": 128, "bold_il_std_spmt": 128, "bold_std_spmt": 128, "bold_il_std_beta": 128, "roi_dat": 128, "convacp_l": 128, "convacp_r": 128, "convpica_l": 128, "convpica_r": 128, "cing_l": 128, "cing_r": 128, "fron_l": 128, "fron_r": 128, "insula_l": 128, "insula_r": 128, "occ_l": 128, "occ_r": 128, "par_l": 128, "par_r": 128, "str_l": 128, "str_r": 128, "temp_l": 128, "temp_r": 128, "tha_l": 128, "tha_r": 128, "convsca_l": 128, "convsca_r": 128, "directli": [129, 130, 134, 135, 136, 137, 138, 139, 141, 144], "explic": 129, "regressor_physio_etco2_ctl": 129, "conta": 129, "beta": [129, 151], "predictor": 129, "populse_mia": [130, 131, 134, 135, 136, 137, 138, 139, 141, 144], "ergonom": 130, "easili": 130, "offer": 130, "known": [130, 142, 153], "commun": 130, "under": [130, 147, 153], "umbrella": 130, "websit": [130, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 149, 150, 151, 152], "On": [130, 153], "inherit": 130, "page": [130, 153], "offici": 131, "dwi_whole_brain_tractographi": [131, 146], "dwipreprocess": [131, 146], "__init__": [131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 153, 154], "get_iqms_data": [131, 153], "mriqc_anat_make_report": [131, 153], "mriqc_func_make_report": [131, 153], "mriqc_group_make_report": [131, 153], "pagenumcanva": [131, 153], "draw_page_numb": [131, 153], "showpag": [131, 153], "reportlin": [131, 153], "draw": [131, 153], "checkfileext": [131, 153], "del_dbfieldvalu": [131, 153], "dict4runtime_upd": [131, 153], "get_dbfieldvalu": [131, 153], "mriqc_get_all_run": [131, 153], "mriqc_group_iqms_tsv": [131, 153], "plot_boxplot_point": [131, 153], "plot_qi2": [131, 153], "plot_segment": [131, 153], "set_dbfieldvalu": [131, 153], "slice_planes_plot": [], "dedic": [131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 151, 153], "py": [131, 137, 140, 153], "mainli": 131, "setup": 131, "get_gitvers": [131, 154], "commit": 131, "git": 131, "matlab": 131, "launch": [131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145], "processmatlab": [131, 154], "processmia": [131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145], "overrid": 131, "get_input_spec": [131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 149, 150, 151, 152], "trait": [131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 149, 150, 151, 152], "get_output_spec": [131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 149, 150, 151, 152], "add_exit": [131, 154], "add_path": [131, 154], "change_directori": [131, 154], "display_paramet": [131, 154], "parameter_nam": 131, "set_global_vari": [131, 154], "variable_nam": 131, "set_vari": [131, 154], "treatment": [132, 149], "submodul": [132, 133, 143, 146, 154], "list_output": [132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 153], "run_process_mia": [132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 153], "art_qi1": [132, 142], "art_qi2": [132, 142], "cjv": [132, 142], "cnr": [132, 142], "efc": [132, 142], "fber": [132, 142], "find_peak": [132, 142], "find_spik": [132, 142], "fuzzy_jaccard": [132, 142], "gsr": [132, 142], "image_binary_dil": [132, 142], "normalize_mc_param": [132, 142], "regress_poli": [132, 142], "rpve": [132, 142], "snr_dietrich": [132, 142], "summary_stat": [132, 142], "volume_fract": [132, 142], "wm2max": [132, 142], "encapsul": 133, "homemad": 133, "outliercount": [133, 134], "convblock": [133, 137], "stripmodel": [133, 137], "conform": [133, 137, 140], "resample_lik": [133, 137], "artifact_mask": [133, 140], "is_outli": [133, 140], "customis": [134, 135, 136, 137, 138, 139, 141, 144], "thing": [134, 135, 136, 137, 138, 139, 141, 144], "3dautomask": 134, "instanti": [134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145], "plug": [134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145], "self": [134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 153], "is_plug": [134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145], "inheritance_d": [134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145], "notindb": [134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145], "make_initresult": [134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145], "inheritance_dict": [134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145], "arithmet": 134, "droptr": 134, "3dcalc": 134, "surround": [134, 142], "3dtstat": 134, "3dvolreg": [134, 149], "http": [135, 137, 140, 141, 153], "io": [135, 137, 140, 141], "html": [135, 137, 140, 141], "com": [135, 137, 140, 153], "niprep": [135, 137, 140, 153], "tree": 135, "master": 135, "mri_binar": 137, "statement": 137, "OF": 137, "blob": [137, 140, 153], "2995ded957961a7f3704de57eee88eb6cc30d52d": 137, "ndim": 137, "in_channel": 137, "out_channel": 137, "stride": 137, "leaki": 137, "leakyrelu": 137, "unet": 137, "blabla": [137, 142, 151], "nb_featur": 137, "nb_level": 137, "feat_mult": 137, "max_featur": 137, "nb_conv_per_level": 137, "max_pool": 137, "return_mask": 137, "input_nii": 137, "output_dtyp": 137, "cval": 137, "via": 137, "inskul": 138, "outskul": 138, "surfacesextract": 138, "fslroi": 138, "intra": 138, "mrtrix3": 139, "b1": 139, "domain": 139, "dholland": 139, "applymask": 140, "e021008da0a2ef1c48e882baf932139a673349f9": 140, "l301": 140, "45ab13e1bf6fdbf5e29c90cef44055b0b9cf391b": 140, "l92": 140, "common": 140, "conform_imag": 140, "l75": 140, "l974": 140, "l970": 140, "l1039": 140, "l405": 140, "prescrib": 140, "percentil": [140, 142], "l474": 140, "f662acfce8def4717e0c3414618f3a5de5913b31": 140, "confound": 140, "resample_from_to": 140, "skimag": 140, "l448": 140, "l394": 140, "l899": 140, "imdata": 140, "airdata": 140, "thresh": 140, "nparrai": 140, "numobserv": 140, "numdimens": 140, "numpi": [140, 142], "observ": 140, "bolean": 140, "bori": 140, "iglewicz": 140, "david": 140, "hoaglin": 140, "1993": 140, "handl": 140, "asqc": 140, "techniqu": 140, "edward": 140, "mykytka": 140, "ph": 140, "editor": 140, "_ar_est_yw": 142, "_flatten_dict": 142, "_prepare_mask": 142, "_robust_zscor": 142, "atkinson1997": 142, "atkinson": 142, "magnet": 142, "reson": 142, "focu": 142, "ieee": 142, "med": 142, "903": 142, "910": 142, "1997": 142, "doi": 142, "1109": 142, "650886": 142, "dietrich2007": 142, "dietrich": 142, "influenc": 142, "multichannel": 142, "coil": 142, "parallel": 142, "jmri": 142, "375": 142, "385": 142, "2007": 142, "1002": 142, "20969": 142, "ganzetti2016": 142, "ganzetti": 142, "driven": 142, "approach": 142, "front": 142, "neuroinform": 142, "2016": 142, "3389": 142, "fninf": 142, "00010": 142, "giannelli2010": 142, "giannelli": 142, "character": 142, "nyquist": 142, "ghost": 142, "clinic": 142, "system": 142, "bandwidth": 142, "j": 142, "app": 142, "clin": 142, "phy": 142, "2010": 142, "1120": 142, "jacmp": 142, "v11i4": 142, "3237": 142, "magnota2006": 142, "magnotta": 142, "va": 142, "friedman": 142, "fbirn": 142, "multicent": 142, "dig": 142, "147": 142, "2006": 142, "1007": 142, "s10278": 142, "006": 142, "0264": 142, "shehzad2015": 142, "shehzad": 142, "connectom": 142, "neurosci": 142, "confer": 142, "abstract": 142, "neuroinformat": 142, "2015": 142, "conf": 142, "fnin": 142, "00047": 142, "union": 142, "power2012": 142, "spuriou": 142, "systemat": 142, "network": 142, "xlm": 142, "mortamet2009": [142, 149], "_1": 142, "frac": 142, "limits_": 142, "x_": 142, "art": 142, "ndarrai": 142, "min_voxel": 142, "max_voxel": 142, "300000": 142, "chi": 142, "onto": 142, "artifactu": 142, "2_n": 142, "2n": 142, "mu_wm": 142, "mu_gm": 142, "sigma_wm": 142, "sigma_gm": 142, "proxi": 142, "inu": 142, "sigma_": 142, "mu_": 142, "sigma_air": 142, "sigma_b": 142, "framemask": 142, "shannon": 142, "induc": 142, "energi": 142, "concentr": 142, "sum_": 142, "x_j": 142, "ln": 142, "2_j": 142, "equat": 142, "empti": 142, "insert": 142, "skin": 142, "in_tpm": 142, "in_mni_tpm": 142, "epi_data": 142, "ref_fil": 142, "circl": 142, "intersect": 142, "str": 142, "ball": 142, "footprint": 142, "inferior": 142, "rx": 142, "pitch": 142, "ry": 142, "roll": 142, "rz": 142, "yaw": 142, "remove_mean": 142, "failure_mod": 142, "bool": 142, "p": 142, "k_i": 142, "p_": 142, "mu_fg": 142, "sigma_fg": 142, "foreground": 142, "mu_f": 142, "sigma_f": 142, "mad_air": 142, "eq": 142, "rayleigh": 142, "pi": 142, "sometim": 142, "bg": 142, "icv": 142, "sum_i": 142, "pairedttestdesign": [108, 143, 144], "get_covari": [143, 144], "restrict": 144, "likelihood": 144, "glm": [144, 152], "manipul": 145, "list1": 145, "list2": 145, "1rst": 145, "browser": 145, "tab": 145, "anoth": 145, "pipeline_definit": [146, 147, 148, 149, 150, 151, 152], "cerebrovascular": [147, 149], "reactiv": 147, "evalu": [147, 152], "cvr": [142, 147, 149, 152, 153], "hypercapnia": 147, "challeng": [147, 153], "autoexport_nodes_paramet": [147, 148, 149, 150, 151, 152], "kwarg": [147, 148, 149, 150, 151, 152, 153], "reserv": 149, "anat_mriqc_pipelin": 150, "irm": 151, "bold_stat": 152, "report_fil": 153, "dict4runtim": 153, "mriqc_group": 153, "canva": 153, "footer": 153, "constructor": 153, "page_count": 153, "break": 153, "flowabl": 153, "ext_dic": 153, "ext": 153, "valid_bool": 153, "in_ext": 153, "tags2del": 153, "db": 153, "tag_to_del": 153, "db_filenam": 153, "dict": 153, "recov": 153, "raw": [83, 153], "files_nam": 153, "sting": 153, "datafram": 153, "panda": 153, "titl": 153, "ylabel": 153, "tabular": 153, "x_grid": 153, "ref_pdf": 153, "fit_pdf": 153, "ref_data": 153, "cutoff_idx": 153, "bla": 153, "out_dir": 153, "5a0f0408bd0c176dbc46088c6ffe279269180f3f": 153, "viz": 153, "l550": 153, "tag_to_add": 153, "field_typ": 153, "visibl": 153, "fig_row": 153, "fig_col": 153, "inf_slice_start": [], "slices_gap": [], "dyn": 153, "cmap": 153, "greys_r": 153, "only_nois": 153, "out_nam": 153, "blablabla": [], "packag": 154, "subpackag": 154, "info": 154, "process_matlab": 154, "plot_slice_plan": [131, 153], "slice_start": 153, "slice_step": 153, "mosaic": 153, "panel": 153, "color": 153, "wrfunc": [83, 119], "realignment_parameters_desc": 83, "patientref": 83, "1_co2_inhal_cvr_report_2024_01_24_09_34_58_08": 83, "normalized_func": 119, "co2_inhal_cvr_make_report": [131, 153], "reportco2inhalcvr": [132, 142], "co2": [142, 153], "inhal": 142}, "objects": {"": [[131, 0, 0, "-", "mia_processes"]], "mia_processes": [[132, 0, 0, "-", "bricks"], [131, 0, 0, "-", "info"], [146, 0, 0, "-", "pipelines"], [131, 0, 0, "-", "process_matlab"], [153, 0, 0, "-", "utils"]], "mia_processes.bricks": [[133, 0, 0, "-", "preprocess"], [142, 0, 0, "-", "reports"], [143, 0, 0, "-", "stat"], [145, 0, 0, "-", "tools"]], "mia_processes.bricks.preprocess": [[134, 0, 0, "-", "afni"], [135, 0, 0, "-", "ants"], [136, 0, 0, "-", "dipy"], [137, 0, 0, "-", "freesurfer"], [138, 0, 0, "-", "fsl"], [139, 0, 0, "-", "mrtrix"], [140, 0, 0, "-", "others"], [141, 0, 0, "-", "spm"]], "mia_processes.bricks.preprocess.afni": [[134, 0, 0, "-", "processes"]], "mia_processes.bricks.preprocess.afni.processes": [[134, 1, 1, "", "Automask"], [134, 1, 1, "", "Calc"], [134, 1, 1, "", "CalcDropTRs"], [134, 1, 1, "", "Despike"], [134, 1, 1, "", "FWHMx"], [134, 1, 1, "", "GCOR"], [134, 1, 1, "", "OutlierCount"], [134, 1, 1, "", "QualityIndex"], [134, 1, 1, "", "RefitDeoblique"], [134, 1, 1, "", "SkullStrip"], [134, 1, 1, "", "TShift"], [134, 1, 1, "", "TStatMean"], [134, 1, 1, "", "Volreg"]], "mia_processes.bricks.preprocess.afni.processes.Automask": [[134, 2, 1, "", "__init__"], [134, 2, 1, "", "list_outputs"], [134, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.Calc": [[134, 2, 1, "", "__init__"], [134, 2, 1, "", "list_outputs"], [134, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.CalcDropTRs": [[134, 2, 1, "", "__init__"], [134, 2, 1, "", "list_outputs"], [134, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.Despike": [[134, 2, 1, "", "__init__"], [134, 2, 1, "", "list_outputs"], [134, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.FWHMx": [[134, 2, 1, "", "__init__"], [134, 2, 1, "", "list_outputs"], [134, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.GCOR": [[134, 2, 1, "", "__init__"], [134, 2, 1, "", "list_outputs"], [134, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.OutlierCount": [[134, 2, 1, "", "__init__"], [134, 2, 1, "", "list_outputs"], [134, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.QualityIndex": [[134, 2, 1, "", "__init__"], [134, 2, 1, "", "list_outputs"], [134, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.RefitDeoblique": [[134, 2, 1, "", "__init__"], [134, 2, 1, "", "list_outputs"], [134, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.SkullStrip": [[134, 2, 1, "", "__init__"], [134, 2, 1, "", "list_outputs"], [134, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.TShift": [[134, 2, 1, "", "__init__"], [134, 2, 1, "", "list_outputs"], [134, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.TStatMean": [[134, 2, 1, "", "__init__"], [134, 2, 1, "", "list_outputs"], [134, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.Volreg": [[134, 2, 1, "", "__init__"], [134, 2, 1, "", "list_outputs"], [134, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.ants": [[135, 0, 0, "-", "processes"]], "mia_processes.bricks.preprocess.ants.processes": [[135, 1, 1, "", "AffineInitializer"], [135, 1, 1, "", "ApplyTransforms"], [135, 1, 1, "", "N4BiasFieldCorrection"], [135, 1, 1, "", "Registration"]], "mia_processes.bricks.preprocess.ants.processes.AffineInitializer": [[135, 2, 1, "", "__init__"], [135, 2, 1, "", "list_outputs"], [135, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.ants.processes.ApplyTransforms": [[135, 2, 1, "", "__init__"], [135, 2, 1, "", "list_outputs"], [135, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.ants.processes.N4BiasFieldCorrection": [[135, 2, 1, "", "__init__"], [135, 2, 1, "", "list_outputs"], [135, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.ants.processes.Registration": [[135, 2, 1, "", "__init__"], [135, 2, 1, "", "list_outputs"], [135, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.dipy": [[136, 0, 0, "-", "processes"]], "mia_processes.bricks.preprocess.dipy.processes": [[136, 1, 1, "", "ComputeDKI"], [136, 1, 1, "", "Denoise"]], "mia_processes.bricks.preprocess.dipy.processes.ComputeDKI": [[136, 2, 1, "", "__init__"], [136, 2, 1, "", "list_outputs"], [136, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.dipy.processes.Denoise": [[136, 2, 1, "", "__init__"], [136, 2, 1, "", "list_outputs"], [136, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.freesurfer": [[137, 0, 0, "-", "processes"]], "mia_processes.bricks.preprocess.freesurfer.processes": [[137, 1, 1, "", "Binarize"], [137, 1, 1, "", "SynthStrip"], [137, 1, 1, "", "SynthStripMriqc"]], "mia_processes.bricks.preprocess.freesurfer.processes.Binarize": [[137, 2, 1, "", "__init__"], [137, 2, 1, "", "list_outputs"], [137, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.freesurfer.processes.SynthStrip": [[137, 2, 1, "", "__init__"], [137, 2, 1, "", "list_outputs"], [137, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc": [[137, 1, 1, "", "ConvBlock"], [137, 1, 1, "", "StripModel"], [137, 2, 1, "", "__init__"], [137, 2, 1, "", "conform"], [137, 2, 1, "", "list_outputs"], [137, 2, 1, "", "resample_like"], [137, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.ConvBlock": [[137, 2, 1, "", "__init__"], [137, 2, 1, "", "forward"]], "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.StripModel": [[137, 2, 1, "", "__init__"], [137, 2, 1, "", "forward"]], "mia_processes.bricks.preprocess.fsl": [[138, 0, 0, "-", "processes"]], "mia_processes.bricks.preprocess.fsl.processes": [[138, 1, 1, "", "BetSurfacesExtraction"], [138, 1, 1, "", "ExtractROI"], [138, 1, 1, "", "FastSegment"], [138, 1, 1, "", "Flirt"], [138, 1, 1, "", "Smooth"]], "mia_processes.bricks.preprocess.fsl.processes.BetSurfacesExtraction": [[138, 2, 1, "", "__init__"], [138, 2, 1, "", "list_outputs"], [138, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.fsl.processes.ExtractROI": [[138, 2, 1, "", "__init__"], [138, 2, 1, "", "list_outputs"], [138, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.fsl.processes.FastSegment": [[138, 2, 1, "", "__init__"], [138, 2, 1, "", "list_outputs"], [138, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.fsl.processes.Flirt": [[138, 2, 1, "", "__init__"], [138, 2, 1, "", "list_outputs"], [138, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.fsl.processes.Smooth": [[138, 2, 1, "", "__init__"], [138, 2, 1, "", "list_outputs"], [138, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix": [[139, 0, 0, "-", "processes"]], "mia_processes.bricks.preprocess.mrtrix.processes": [[139, 1, 1, "", "ConstrainedSphericalDeconvolution"], [139, 1, 1, "", "DWIBiasCorrect"], [139, 1, 1, "", "DWIBrainMask"], [139, 1, 1, "", "DWIDenoise"], [139, 1, 1, "", "DWIExtract"], [139, 1, 1, "", "DWIPreproc"], [139, 1, 1, "", "EditingTrack"], [139, 1, 1, "", "FilteringTrack"], [139, 1, 1, "", "FitTensor"], [139, 1, 1, "", "Generate5tt2gmwmi"], [139, 1, 1, "", "Generate5ttfsl"], [139, 1, 1, "", "MRCat"], [139, 1, 1, "", "MRConvert"], [139, 1, 1, "", "MRDeGibbs"], [139, 1, 1, "", "MRMath"], [139, 1, 1, "", "MRTransform"], [139, 1, 1, "", "MTNormalise"], [139, 1, 1, "", "ResponseSDDhollander"], [139, 1, 1, "", "SphericalHarmonicExtraction"], [139, 1, 1, "", "TensorMetrics"], [139, 1, 1, "", "Tractography"], [139, 1, 1, "", "TransformFSLConvert"]], "mia_processes.bricks.preprocess.mrtrix.processes.ConstrainedSphericalDeconvolution": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "list_outputs"], [139, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.DWIBiasCorrect": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "list_outputs"], [139, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.DWIBrainMask": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "list_outputs"], [139, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.DWIDenoise": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "list_outputs"], [139, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.DWIExtract": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "list_outputs"], [139, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.DWIPreproc": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "list_outputs"], [139, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.EditingTrack": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "list_outputs"], [139, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.FilteringTrack": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "list_outputs"], [139, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.FitTensor": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "list_outputs"], [139, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.Generate5tt2gmwmi": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "list_outputs"], [139, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.Generate5ttfsl": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "list_outputs"], [139, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.MRCat": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "list_outputs"], [139, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.MRConvert": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "list_outputs"], [139, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.MRDeGibbs": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "list_outputs"], [139, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.MRMath": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "list_outputs"], [139, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.MRTransform": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "list_outputs"], [139, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.MTNormalise": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "list_outputs"], [139, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.ResponseSDDhollander": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "list_outputs"], [139, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.SphericalHarmonicExtraction": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "list_outputs"], [139, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.TensorMetrics": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "list_outputs"], [139, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.Tractography": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "list_outputs"], [139, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.TransformFSLConvert": [[139, 2, 1, "", "__init__"], [139, 2, 1, "", "list_outputs"], [139, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others": [[140, 0, 0, "-", "processing"]], "mia_processes.bricks.preprocess.others.processing": [[140, 1, 1, "", "ApplyBiasCorrection"], [140, 1, 1, "", "ArtifactMask"], [140, 1, 1, "", "Binarize"], [140, 1, 1, "", "ConformImage"], [140, 1, 1, "", "ConvROI"], [140, 1, 1, "", "Enhance"], [140, 1, 1, "", "EstimateSNR"], [140, 1, 1, "", "GradientThreshold"], [140, 1, 1, "", "Harmonize"], [140, 1, 1, "", "IntensityClip"], [140, 1, 1, "", "Mask"], [140, 1, 1, "", "NonSteadyStateDetector"], [140, 1, 1, "", "Resample1"], [140, 1, 1, "", "Resample2"], [140, 1, 1, "", "RotationMask"], [140, 1, 1, "", "Sanitize"], [140, 1, 1, "", "TSNR"], [140, 1, 1, "", "TemplateFromTemplateFlow"], [140, 1, 1, "", "Threshold"], [140, 3, 1, "", "artifact_mask"], [140, 3, 1, "", "is_outlier"], [140, 3, 1, "", "threshold"]], "mia_processes.bricks.preprocess.others.processing.ApplyBiasCorrection": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "list_outputs"], [140, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.ArtifactMask": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "list_outputs"], [140, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.Binarize": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "list_outputs"], [140, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.ConformImage": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "list_outputs"], [140, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.ConvROI": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "list_outputs"], [140, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.Enhance": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "list_outputs"], [140, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.EstimateSNR": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "list_outputs"], [140, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.GradientThreshold": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "list_outputs"], [140, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.Harmonize": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "list_outputs"], [140, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.IntensityClip": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "list_outputs"], [140, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.Mask": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "list_outputs"], [140, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.NonSteadyStateDetector": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "list_outputs"], [140, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.Resample1": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "list_outputs"], [140, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.Resample2": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "list_outputs"], [140, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.RotationMask": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "list_outputs"], [140, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.Sanitize": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "list_outputs"], [140, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.TSNR": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "list_outputs"], [140, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.TemplateFromTemplateFlow": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "list_outputs"], [140, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.Threshold": [[140, 2, 1, "", "__init__"], [140, 2, 1, "", "list_outputs"], [140, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.spm": [[141, 0, 0, "-", "spatial_preprocessing"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing": [[141, 1, 1, "", "Coregister"], [141, 1, 1, "", "GM_WM_Normalize"], [141, 1, 1, "", "NewSegment"], [141, 1, 1, "", "Normalize12"], [141, 1, 1, "", "Realign"], [141, 1, 1, "", "SliceTiming"], [141, 1, 1, "", "Smooth"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Coregister": [[141, 2, 1, "", "__init__"], [141, 2, 1, "", "list_outputs"], [141, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing.GM_WM_Normalize": [[141, 2, 1, "", "__init__"], [141, 2, 1, "", "list_outputs"], [141, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing.NewSegment": [[141, 2, 1, "", "__init__"], [141, 2, 1, "", "list_outputs"], [141, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Normalize12": [[141, 2, 1, "", "__init__"], [141, 2, 1, "", "list_outputs"], [141, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Realign": [[141, 2, 1, "", "__init__"], [141, 2, 1, "", "list_outputs"], [141, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing.SliceTiming": [[141, 2, 1, "", "__init__"], [141, 2, 1, "", "list_outputs"], [141, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Smooth": [[141, 2, 1, "", "__init__"], [141, 2, 1, "", "list_outputs"], [141, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports": [[142, 0, 0, "-", "processes"], [142, 0, 0, "-", "reporting"]], "mia_processes.bricks.reports.processes": [[142, 1, 1, "", "AnatIQMs"], [142, 1, 1, "", "BoldIQMs"], [142, 1, 1, "", "BoldIQMsPlot"], [142, 1, 1, "", "CarpetParcellation"], [142, 1, 1, "", "ComputeDVARS"], [142, 1, 1, "", "FramewiseDisplacement"], [142, 1, 1, "", "Mean_stdDev_calc"], [142, 1, 1, "", "Result_collector"], [142, 1, 1, "", "Spikes"], [142, 3, 1, "", "art_qi1"], [142, 3, 1, "", "art_qi2"], [142, 3, 1, "", "cjv"], [142, 3, 1, "", "cnr"], [142, 3, 1, "", "efc"], [142, 3, 1, "", "fber"], [142, 3, 1, "", "find_peaks"], [142, 3, 1, "", "find_spikes"], [142, 3, 1, "", "fuzzy_jaccard"], [142, 3, 1, "", "gsr"], [142, 3, 1, "", "image_binary_dilation"], [142, 3, 1, "", "normalize_mc_params"], [142, 3, 1, "", "regress_poly"], [142, 3, 1, "", "rpve"], [142, 3, 1, "", "snr"], [142, 3, 1, "", "snr_dietrich"], [142, 3, 1, "", "summary_stats"], [142, 3, 1, "", "volume_fraction"], [142, 3, 1, "", "wm2max"]], "mia_processes.bricks.reports.processes.AnatIQMs": [[142, 2, 1, "", "__init__"], [142, 2, 1, "", "list_outputs"], [142, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.processes.BoldIQMs": [[142, 2, 1, "", "__init__"], [142, 2, 1, "", "list_outputs"], [142, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.processes.BoldIQMsPlot": [[142, 2, 1, "", "__init__"], [142, 2, 1, "", "list_outputs"], [142, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.processes.CarpetParcellation": [[142, 2, 1, "", "__init__"], [142, 2, 1, "", "list_outputs"], [142, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.processes.ComputeDVARS": [[142, 2, 1, "", "__init__"], [142, 2, 1, "", "list_outputs"], [142, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.processes.FramewiseDisplacement": [[142, 2, 1, "", "__init__"], [142, 2, 1, "", "list_outputs"], [142, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.processes.Mean_stdDev_calc": [[142, 2, 1, "", "__init__"], [142, 2, 1, "", "list_outputs"], [142, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.processes.Result_collector": [[142, 2, 1, "", "__init__"], [142, 2, 1, "", "list_outputs"], [142, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.processes.Spikes": [[142, 2, 1, "", "__init__"], [142, 2, 1, "", "list_outputs"], [142, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.reporting": [[142, 1, 1, "", "ReportAnatMriqc"], [142, 1, 1, "", "ReportCO2inhalCvr"], [142, 1, 1, "", "ReportFuncMriqc"], [142, 1, 1, "", "ReportGroupMriqc"]], "mia_processes.bricks.reports.reporting.ReportAnatMriqc": [[142, 2, 1, "", "__init__"], [142, 2, 1, "", "list_outputs"], [142, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.reporting.ReportCO2inhalCvr": [[142, 2, 1, "", "__init__"], [142, 2, 1, "", "list_outputs"], [142, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.reporting.ReportFuncMriqc": [[142, 2, 1, "", "__init__"], [142, 2, 1, "", "list_outputs"], [142, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.reporting.ReportGroupMriqc": [[142, 2, 1, "", "__init__"], [142, 2, 1, "", "list_outputs"], [142, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.stat": [[144, 0, 0, "-", "spm"]], "mia_processes.bricks.stat.spm": [[144, 0, 0, "-", "model"]], "mia_processes.bricks.stat.spm.model": [[144, 1, 1, "", "EstimateContrast"], [144, 1, 1, "", "EstimateModel"], [144, 1, 1, "", "Level1Design"], [144, 1, 1, "", "MultipleRegressionDesign"], [144, 1, 1, "", "OneSampleTTestDesign"], [144, 1, 1, "", "PairedTTestDesign"], [144, 1, 1, "", "TwoSampleTTestDesign"], [144, 3, 1, "", "get_covariates"]], "mia_processes.bricks.stat.spm.model.EstimateContrast": [[144, 2, 1, "", "__init__"], [144, 2, 1, "", "list_outputs"], [144, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.stat.spm.model.EstimateModel": [[144, 2, 1, "", "__init__"], [144, 2, 1, "", "list_outputs"], [144, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.stat.spm.model.Level1Design": [[144, 2, 1, "", "__init__"], [144, 2, 1, "", "list_outputs"], [144, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.stat.spm.model.MultipleRegressionDesign": [[144, 2, 1, "", "__init__"], [144, 2, 1, "", "list_outputs"], [144, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.stat.spm.model.OneSampleTTestDesign": [[144, 2, 1, "", "__init__"], [144, 2, 1, "", "list_outputs"], [144, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.stat.spm.model.PairedTTestDesign": [[144, 2, 1, "", "__init__"], [144, 2, 1, "", "list_outputs"], [144, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.stat.spm.model.TwoSampleTTestDesign": [[144, 2, 1, "", "__init__"], [144, 2, 1, "", "list_outputs"], [144, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools": [[145, 0, 0, "-", "tools"]], "mia_processes.bricks.tools.tools": [[145, 1, 1, "", "Concat_to_list"], [145, 1, 1, "", "Concat_to_list_of_list"], [145, 1, 1, "", "Delete_data"], [145, 1, 1, "", "Files_To_List"], [145, 1, 1, "", "Filter_Files_List"], [145, 1, 1, "", "Find_In_List"], [145, 1, 1, "", "Get_Conditions_From_csv"], [145, 1, 1, "", "Get_Patient_Name"], [145, 1, 1, "", "Import_Data"], [145, 1, 1, "", "Input_Filter"], [145, 1, 1, "", "List_Duplicate"], [145, 1, 1, "", "List_To_File"], [145, 1, 1, "", "Make_A_List"]], "mia_processes.bricks.tools.tools.Concat_to_list": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "list_outputs"], [145, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Concat_to_list_of_list": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "list_outputs"], [145, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Delete_data": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "list_outputs"], [145, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Files_To_List": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "list_outputs"], [145, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Filter_Files_List": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "list_outputs"], [145, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Find_In_List": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "list_outputs"], [145, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Get_Conditions_From_csv": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "list_outputs"], [145, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Get_Patient_Name": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "list_outputs"], [145, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Import_Data": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "list_outputs"], [145, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Input_Filter": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "list_outputs"], [145, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.List_Duplicate": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "list_outputs"], [145, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.List_To_File": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "list_outputs"], [145, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Make_A_List": [[145, 2, 1, "", "__init__"], [145, 2, 1, "", "list_outputs"], [145, 2, 1, "", "run_process_mia"]], "mia_processes.info": [[131, 3, 1, "", "get_gitversion"]], "mia_processes.pipelines": [[147, 0, 0, "-", "CerebVascularReact"], [148, 0, 0, "-", "DWITractography"], [149, 0, 0, "-", "preprocess"], [150, 0, 0, "-", "qualityControl"], [151, 0, 0, "-", "reports"], [152, 0, 0, "-", "stat"]], "mia_processes.pipelines.CerebVascularReact": [[147, 0, 0, "-", "co2_inhalation"]], "mia_processes.pipelines.CerebVascularReact.co2_inhalation": [[147, 1, 1, "", "CO2_inhalation"]], "mia_processes.pipelines.CerebVascularReact.co2_inhalation.CO2_inhalation": [[147, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.DWITractography": [[148, 0, 0, "-", "dwi_whole_brain_tractography"]], "mia_processes.pipelines.DWITractography.dwi_whole_brain_tractography": [[148, 1, 1, "", "Dwi_whole_brain_tractography"]], "mia_processes.pipelines.DWITractography.dwi_whole_brain_tractography.Dwi_whole_brain_tractography": [[148, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess": [[149, 0, 0, "-", "anat_airmask"], [149, 0, 0, "-", "anat_headmask"], [149, 0, 0, "-", "anat_mni_tpms"], [149, 0, 0, "-", "anat_skullstrip"], [149, 0, 0, "-", "anat_skullstrip_synthstrip"], [149, 0, 0, "-", "anat_spatial_norm"], [149, 0, 0, "-", "bold_hmc"], [149, 0, 0, "-", "bold_mni_align"], [149, 0, 0, "-", "bold_spatial_preprocessing1"], [149, 0, 0, "-", "bold_spatial_preprocessing2"], [149, 0, 0, "-", "dwi_fod_msmt_csd"], [149, 0, 0, "-", "dwi_preprocessing"], [149, 0, 0, "-", "spatial_mask"]], "mia_processes.pipelines.preprocess.anat_airmask": [[149, 1, 1, "", "Anat_airmask"]], "mia_processes.pipelines.preprocess.anat_airmask.Anat_airmask": [[149, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.anat_headmask": [[149, 1, 1, "", "Anat_headmask"]], "mia_processes.pipelines.preprocess.anat_headmask.Anat_headmask": [[149, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.anat_mni_tpms": [[149, 1, 1, "", "Anat_mni_tpms"]], "mia_processes.pipelines.preprocess.anat_mni_tpms.Anat_mni_tpms": [[149, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.anat_skullstrip": [[149, 1, 1, "", "Anat_skullstrip"]], "mia_processes.pipelines.preprocess.anat_skullstrip.Anat_skullstrip": [[149, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip": [[149, 1, 1, "", "Anat_skullstrip_synthstrip"]], "mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip.Anat_skullstrip_synthstrip": [[149, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.anat_spatial_norm": [[149, 1, 1, "", "Anat_spatial_norm"]], "mia_processes.pipelines.preprocess.anat_spatial_norm.Anat_spatial_norm": [[149, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.bold_hmc": [[149, 1, 1, "", "Bold_hmc"]], "mia_processes.pipelines.preprocess.bold_hmc.Bold_hmc": [[149, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.bold_mni_align": [[149, 1, 1, "", "Bold_mni_align"]], "mia_processes.pipelines.preprocess.bold_mni_align.Bold_mni_align": [[149, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.bold_spatial_preprocessing1": [[149, 1, 1, "", "Bold_spatial_preprocessing1"]], "mia_processes.pipelines.preprocess.bold_spatial_preprocessing1.Bold_spatial_preprocessing1": [[149, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.bold_spatial_preprocessing2": [[149, 1, 1, "", "Bold_spatial_preprocessing2"]], "mia_processes.pipelines.preprocess.bold_spatial_preprocessing2.Bold_spatial_preprocessing2": [[149, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.dwi_fod_msmt_csd": [[149, 1, 1, "", "Dwi_fod_msmt_csd"]], "mia_processes.pipelines.preprocess.dwi_fod_msmt_csd.Dwi_fod_msmt_csd": [[149, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.dwi_preprocessing": [[149, 1, 1, "", "Dwi_preprocessing"]], "mia_processes.pipelines.preprocess.dwi_preprocessing.Dwi_preprocessing": [[149, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.spatial_mask": [[149, 1, 1, "", "Spatial_mask"]], "mia_processes.pipelines.preprocess.spatial_mask.Spatial_mask": [[149, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.qualityControl": [[150, 0, 0, "-", "anat_mriqc"], [150, 0, 0, "-", "bold_mriqc"]], "mia_processes.pipelines.qualityControl.anat_mriqc": [[150, 1, 1, "", "Anat_mriqc"]], "mia_processes.pipelines.qualityControl.anat_mriqc.Anat_mriqc": [[150, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.qualityControl.bold_mriqc": [[150, 1, 1, "", "Bold_mriqc"]], "mia_processes.pipelines.qualityControl.bold_mriqc.Bold_mriqc": [[150, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.reports": [[151, 0, 0, "-", "bold_iqms"], [151, 0, 0, "-", "extract_roi_param"]], "mia_processes.pipelines.reports.bold_iqms": [[151, 1, 1, "", "Bold_iqms"]], "mia_processes.pipelines.reports.bold_iqms.Bold_iqms": [[151, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.reports.extract_roi_param": [[151, 1, 1, "", "Extract_roi_param"]], "mia_processes.pipelines.reports.extract_roi_param.Extract_roi_param": [[151, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.stat": [[152, 0, 0, "-", "bold_stat_cvr"]], "mia_processes.pipelines.stat.bold_stat_cvr": [[152, 1, 1, "", "Bold_stat_cvr"]], "mia_processes.pipelines.stat.bold_stat_cvr.Bold_stat_cvr": [[152, 2, 1, "", "pipeline_definition"]], "mia_processes.process_matlab": [[131, 1, 1, "", "ProcessMatlab"]], "mia_processes.process_matlab.ProcessMatlab": [[131, 2, 1, "", "__init__"], [131, 2, 1, "", "add_exit"], [131, 2, 1, "", "add_path"], [131, 2, 1, "", "change_directory"], [131, 2, 1, "", "display_parameter"], [131, 2, 1, "", "run"], [131, 2, 1, "", "set_global_variable"], [131, 2, 1, "", "set_variable"]], "mia_processes.utils": [[153, 0, 0, "-", "report"], [153, 0, 0, "-", "tools"]], "mia_processes.utils.report": [[153, 1, 1, "", "Report"]], "mia_processes.utils.report.Report": [[153, 2, 1, "", "__init__"], [153, 2, 1, "", "co2_inhal_cvr_make_report"], [153, 2, 1, "", "get_iqms_data"], [153, 2, 1, "", "mriqc_anat_make_report"], [153, 2, 1, "", "mriqc_func_make_report"], [153, 2, 1, "", "mriqc_group_make_report"]], "mia_processes.utils.tools": [[153, 1, 1, "", "PageNumCanvas"], [153, 1, 1, "", "ReportLine"], [153, 3, 1, "", "checkFileExt"], [153, 3, 1, "", "del_dbFieldValue"], [153, 3, 1, "", "dict4runtime_update"], [153, 3, 1, "", "get_dbFieldValue"], [153, 3, 1, "", "mriqc_get_all_run"], [153, 3, 1, "", "mriqc_group_iqms_tsv"], [153, 3, 1, "", "plot_boxplot_points"], [153, 3, 1, "", "plot_qi2"], [153, 3, 1, "", "plot_segmentation"], [153, 3, 1, "", "plot_slice_planes"], [153, 3, 1, "", "set_dbFieldValue"]], "mia_processes.utils.tools.PageNumCanvas": [[153, 2, 1, "", "__init__"], [153, 2, 1, "", "draw_page_number"], [153, 2, 1, "", "save"], [153, 2, 1, "", "showPage"]], "mia_processes.utils.tools.ReportLine": [[153, 2, 1, "", "__init__"], [153, 2, 1, "", "draw"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "titleterms": {"automask": 0, "brick": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "creat": [0, 91, 92, 93, 94, 115, 123], "brain": [0, 9, 24, 25, 29, 110, 115], "onli": [0, 69], "mask": [0, 5, 29, 36, 50, 57, 59, 63, 67, 78, 111, 112, 124, 128], "imag": [0, 9, 10, 11, 14, 16, 18, 23, 25, 26, 28, 29, 32, 36, 37, 38, 39, 41, 42, 49, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 69, 71, 72, 73, 74, 75, 76, 112, 114, 117, 118, 124, 125, 126, 127], "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 22, 23, 24, 25, 32, 44, 49, 55, 56, 57, 61, 62, 83, 89, 112, 115, 116, 122, 125, 126, 129], "afni": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 134], "3dautomask": 0, "calc": 1, "voxel": [1, 5, 45], "arithmet": 1, "3d": [1, 3, 6, 7, 12, 26, 74], "dataset": [1, 2, 3, 6, 7, 8, 12], "1": [1, 111], "3dcalc": [1, 2], "calcdroptr": 2, "drop": 2, "volum": [2, 6, 7, 12, 19, 26, 31, 74], "bold": [2, 10, 11, 60, 64, 73, 117, 126, 127], "despik": 3, "remov": [3, 40], "spike": [3, 87], "from": [3, 8, 9, 12, 23, 29, 31, 46, 56, 66, 69, 72, 78, 97, 98, 99, 100, 105, 106, 107, 111, 112, 124, 125, 126, 127], "time": [3, 7, 10, 65, 72, 73], "input": [3, 6, 12, 14, 19, 39, 49, 51, 56, 57, 64, 96], "3ddespik": 3, "fwhmx": 4, "comput": [4, 5, 6, 7, 41, 46, 50, 56, 63, 65, 71, 75, 76, 79, 87, 111, 112, 127], "fwhm": 4, "gcor": 5, "averag": 5, "correl": 5, "between": [5, 39, 48], "everi": [5, 73], "other": [5, 140], "over": 5, "ani": 5, "given": [5, 51, 67], "outliercount": 6, "3dtoutcount": 6, "outlier": 6, "all": [6, 70, 98, 107], "sub": [6, 7], "each": [6, 7, 12, 45, 86, 96], "tr": [6, 7], "qualityindex": 7, "qualiti": [7, 75, 76, 125, 126, 127], "index": 7, "3dtqual": 7, "refitdeobliqu": 8, "deobliqu": 8, "ie": 8, "transform": [8, 13, 14, 42, 48, 62], "obliqu": 8, "cardin": 8, "3drefit": 8, "skullstrip": 9, "3dskullstrip": 9, "t1": 9, "weight": 9, "mri": 9, "extract": [9, 22, 23, 31, 39, 45, 115], "surround": 9, "tissu": [9, 24, 37, 43, 113, 123], "tshift": 10, "slice": [10, 73, 99], "correct": [10, 15, 28, 49, 70, 114, 117], "mean": [10, 11, 18, 81, 118, 128], "option": [10, 11, 39], "3dtshift": 10, "tstatmean": 11, "3dtstat": 11, "volreg": 12, "regist": [12, 113, 118], "base": [12, 129], "3dvolreg": 12, "affineiniti": 13, "initi": 13, "an": [13, 14, 19, 23, 49, 59, 61, 71, 95, 96, 119, 120], "affin": [13, 25], "ant": [13, 14, 15, 16, 135], "affineinit": 13, "applytransform": 14, "accord": 14, "refer": [14, 61, 62, 73, 103, 125, 126, 127, 142], "set": [14, 62, 69], "n4biasfieldcorrect": 15, "n4": 15, "bia": [15, 49, 70, 114], "field": [15, 28, 49], "registr": [16, 25, 118], "computedki": 17, "reconstruct": 17, "diffus": [17, 32, 35], "signal": 17, "kurtosi": 17, "tensor": [17, 35, 46], "model": [17, 70, 71, 89, 90, 144], "denois": [18, 30, 112], "non": [18, 60], "local": 18, "algorithm": [18, 44], "nlmean": 18, "binar": [19, 51], "encod": [19, 122], "surfac": [19, 22], "file": [19, 33, 39, 49, 55, 86, 98, 100, 105, 106], "synthstrip": [20, 21, 115], "synthstripmriqc": 21, "skull": [21, 22, 112, 114], "strip": [21, 112, 114], "tool": [21, 32, 145, 153], "mri_synthstrip": 21, "freesurf": [21, 115, 137], "done": 21, "mriqc": [21, 75, 76, 82, 84, 85, 125, 126], "v22": [21, 75, 76, 125, 126], "06": [21, 75, 76, 125, 126], "betsurfacesextract": 22, "inskul": 22, "outskul": 22, "outskin": 22, "bet": 22, "fsl": [22, 23, 24, 25, 32, 37, 48, 138], "extractroi": 23, "region": [23, 86], "interest": [23, 86, 88], "roi": [23, 128], "fslroi": 23, "fastseg": 24, "segment": [24, 37, 55, 56, 70, 124], "fast": 24, "flirt": 25, "linear": 25, "intra": 25, "inter": 25, "modal": [25, 68], "smooth": [26, 74], "gaussian": [26, 74], "constrainedsphericaldeconvolut": 27, "estim": [27, 35, 44, 55, 88, 89, 121], "fibr": 27, "orient": [27, 121], "distribut": [27, 121], "fod": [27, 121], "dwibiascorrect": 28, "perform": [28, 32, 33, 39, 47, 48], "b1": 28, "inhomogen": 28, "dwi": [28, 29, 30, 31, 121, 122, 123], "dwibrainmask": 29, "gener": [29, 36, 37, 78, 82, 83, 84, 85, 86, 98, 105, 106, 107], "whole": 29, "dwidenois": 30, "data": [30, 31, 34, 82, 84, 86, 97, 103, 104, 111, 119, 120, 125, 126], "dwiextract": 31, "shell": 31, "b": 31, "0": 31, "dwipreproc": 32, "pre": [32, 119, 120], "process": [32, 61, 119, 120, 134, 135, 136, 137, 138, 139, 140, 142], "": [32, 44, 48, 108], "topup": 32, "eddi": 32, "editingtrack": 33, "variou": [33, 128], "edit": 33, "oper": 33, "track": [33, 34], "filteringtrack": 34, "filter": [34, 104], "fittensor": 35, "generate5tt2gmwmi": 36, "appropri": 36, "seed": 36, "streamlin": [36, 47], "grei": [36, 69, 124], "matter": [36, 57, 69, 124, 128], "white": [36, 57, 69], "interfac": 36, "generate5ttfsl": 37, "five": 37, "type": [37, 39], "5tt": 37, "mrcat": 38, "concaten": [38, 95], "sever": 38, "one": [38, 53, 92, 99], "mrconvert": 39, "convers": [39, 48], "differ": [39, 68], "subset": 39, "mrdegibb": 40, "gibb": 40, "ring": 40, "artifact": [40, 50, 111], "mrmath": 41, "summari": [41, 86], "statist": 41, "intens": [41, 43, 58], "along": 41, "specifi": 41, "axi": 41, "singl": [41, 106], "mrtransform": 42, "appli": [42, 49, 51, 59, 71], "spatial": [42, 70, 71, 116], "reslic": 42, "mtnormalis": 43, "multi": 43, "inform": 43, "log": 43, "domain": 43, "normalis": [43, 69, 70], "responsesddholland": 44, "respons": 44, "function": [44, 45, 76, 84, 118, 126, 127], "spheric": [44, 45], "deconvolut": 44, "dholland": 44, "sphericalharmonicextract": 45, "peak": 45, "harmon": [45, 57], "tensormetr": 46, "metric": [46, 75, 76, 125, 126, 127], "tractographi": [47, 110], "transformfslconvert": 48, "matrix": 48, "format": 48, "mrtrix3": 48, "applybiascorrect": 49, "artifactmask": 50, "lower": 51, "threshold": [51, 56, 67], "conformimag": 52, "conform": 52, "t1w": [52, 123, 125], "convroi": 53, "convolut": 53, "enhanc": 54, "estimatesnr": 55, "snr": [55, 65], "gradientthreshold": 56, "histogram": 56, "magnitud": 56, "gradient": 56, "intensityclip": 58, "clip": 58, "rang": 58, "prescrib": 58, "percentil": 58, "binari": [59, 67], "nonsteadydetector": 60, "detect": 60, "steadi": 60, "state": 60, "begin": 60, "4d": 60, "resample1": 61, "resampl": 61, "resolut": [61, 62], "nibabel": 61, "resample_from_to": 61, "resample2": 62, "skimag": 62, "resiz": 62, "rotationmask": 63, "rotat": [63, 111], "sanit": 64, "tsnr": 65, "cours": 65, "seri": [65, 72], "templatefromtemplateflow": 66, "get": [66, 113, 125, 126], "templat": [66, 113, 116], "templateflow": 66, "make": [67, 81, 95, 96], "coregist": 68, "align": [68, 71], "togeth": 68, "scan": 68, "gm_wm_normal": 69, "newseg": 70, "same": [70, 72], "normalize12": 71, "deform": 71, "best": 71, "atla": 71, "necessari": 71, "thi": [71, 105], "normal": [71, 116], "realign": 72, "acquir": 72, "subject": [72, 113], "slicetim": 73, "bring": 73, "back": 73, "anatiqm": 75, "anatom": [75, 82, 125], "iqm": [75, 76, 125, 126, 127], "defin": [75, 76], "boldqm": 76, "boldqmsplot": 77, "carpetparcel": 78, "dilat": 78, "brainmask": 78, "substract": 78, "itself": [78, 105], "union": 78, "obtain": 78, "crown": 78, "epi": [78, 118], "parcel": 78, "computedvar": 79, "dvar": 79, "deriv": 79, "varianc": 79, "framewisedisplac": 80, "calcul": 80, "fd": 80, "framewis": 80, "displac": 80, "power2012": 80, "mean_stddev_calc": 81, "standard": [81, 128], "deviat": [81, 128], "parametr": 81, "map": [81, 113], "reportanatmriqc": 82, "report": [82, 83, 84, 85, 142, 151, 153], "pipelin": [82, 83, 84, 85, 103, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 146, 147, 148, 149, 150, 151, 152], "reportfuncmriqc": 84, "functionn": [], "reportgroupmriqc": 85, "group": 85, "result_collector": 86, "contain": [86, 96, 98, 100, 105, 107], "number": 87, "estimateconstrast": 88, "contrast": 88, "spm12": [88, 89, 91, 92, 93, 94], "fmri": [88, 89, 90, 91, 92, 93, 94, 119, 120], "manag": 88, "estimatemodel": 89, "classic": 89, "reml": 89, "restrict": 89, "maximum": 89, "likelihood": 89, "procedur": 89, "level1design": 90, "specif": 90, "glm": [90, 129], "analysi": [90, 129], "multipleregressiondesign": 91, "spm": [91, 92, 93, 94, 129, 141, 144], "design": [91, 92, 93, 94], "multipl": 91, "regress": 91, "factori": [91, 92, 93, 94], "onesamplettestdesign": 92, "sampl": [92, 94], "t": [92, 93, 94], "test": [92, 93, 94], "pairedttestdesign": 93, "pair": 93, "twosamplettestdesign": 94, "two": 94, "concat_to_list": 95, "output": [95, 96, 104], "list": [95, 96, 98, 99, 100, 105, 106, 107, 124], "correspond": 95, "list1": [95, 96], "list2": [95, 96], "concat_to_list_of_list": 96, "iter": 96, "element": [96, 99, 100], "delete_data": 97, "delet": 97, "databas": 97, "files_to_list": 98, "3": 98, "name": [98, 105], "theses": 98, "filter_files_list": 99, "select": [99, 100], "more": 99, "find_in_list": 100, "1rst": 100, "pattern": 100, "get_conditions_from_csv": 101, "get_patient_nam": 102, "import_data": 103, "import": 103, "current": 103, "input_filt": 104, "To": 104, "content": 104, "browser": 104, "tab": 104, "anoth": 104, "list_dupl": 105, "list_to_fil": 106, "make_a_list": 107, "2": 107, "object": 107, "mia_process": [108, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "document": 108, "co2_inhal": [109, 147], "cerebrovascular": 109, "reactiv": 109, "cvr": [83, 109, 129], "evalu": [83, 109, 129], "under": 109, "co2": 109, "challeng": [83, 109], "dwi_whole_brain_tractograpi": 110, "mrtrix": [110, 139], "anat_airmask": [111, 149], "air": 111, "hat": 111, "structur": [111, 112, 114, 125], "follow": 111, "step": 111, "mortamet2009": 111, "anat_headmask": [112, 149], "head": [112, 117], "dipi": [112, 136], "anat_mni_tpm": [113, 149], "probabl": 113, "them": 113, "space": [113, 118, 123], "anat_skullstrip": [114, 149], "anat_skullstrip_synthstrip": [115, 149], "workflow": [115, 125, 126], "anat_spatial_norm": [116, 149], "mni": [116, 118], "mni152nlin2009casym": 116, "bold_hmc": [117, 149], "motion": 117, "bold_mni_align": [118, 149], "check": 118, "out": 118, "bold_spatial_preprocessing1": [119, 149], "exampl": [119, 120], "bold_spatial_preprocessing2": [120, 149], "dwi_fod_msmt_csd": [121, 149], "fiber": 121, "dwi_preprocess": 122, "preprocess": [122, 133, 134, 135, 136, 137, 138, 139, 140, 141, 149], "revers": 122, "phase": 122, "b0": 122, "dwi_tissue_boundari": 123, "boundari": 123, "registratiojn": 123, "spatial_mask": [124, 149], "result": 124, "previou": 124, "produc": [124, 128], "anat_mriqc": [125, 150], "t2w": 125, "bold_mriqc": [126, 150], "bold_iqm": [127, 151], "extract_roi_param": [128, 151], "grai": 128, "later": 128, "indic": [128, 130], "beta": 128, "spmt": 128, "valu": 128, "bold_stat_cvr": [129, 152], "first": 129, "level": 129, "purpos": 130, "tabl": 130, "develop": 130, "packag": [131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "subpackag": [131, 132, 133, 143, 146], "submodul": [131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 149, 150, 151, 152, 153], "info": 131, "modul": [131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 149, 150, 151, 152, 153], "process_matlab": 131, "spatial_preprocess": 141, "stat": [143, 144, 152], "cerebvascularreact": 147, "dwitractographi": 148, "dwi_whole_brain_tractographi": 148, "dwipreprocess": 149, "qualitycontrol": 150, "util": 153, "reportco2inhalcvr": 83, "hypercapnia": 83}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Automask brick": [[0, "automask-brick"]], "Create a brain-only mask of the image using AFNI 3dAutomask": [[0, "create-a-brain-only-mask-of-the-image-using-afni-3dautomask"]], "Calc brick": [[1, "calc-brick"]], "Voxel-by-voxel arithmetic on 3D datasets 1, using AFNI 3dcalc": [[1, "voxel-by-voxel-arithmetic-on-3d-datasets-using-afni-3dcalc"]], "CalcDropTRs brick": [[2, "calcdroptrs-brick"]], "Drop volumes of bold datasets, using AFNI 3dcalc": [[2, "drop-volumes-of-bold-datasets-using-afni-3dcalc"]], "Despike brick": [[3, "despike-brick"]], "Removes spikes from the 3D+time input dataset using AFNI 3dDespike": [[3, "removes-spikes-from-the-3d-time-input-dataset-using-afni-3ddespike"]], "FWHMx brick": [[4, "fwhmx-brick"]], "Computes FWHMs using AFNI FWHMx": [[4, "computes-fwhms-using-afni-fwhmx"]], "GCOR brick": [[5, "gcor-brick"]], "Using AFNI GCOR, computes the average correlation between every voxel and every other voxel, over any given mask": [[5, "using-afni-gcor-computes-the-average-correlation-between-every-voxel-and-every-other-voxel-over-any-given-mask"]], "OutlierCount brick": [[6, "outliercount-brick"]], "Using AFNI 3dToutcount, computes outliers for all sub-bricks (3D volumes for each TR) in the input dataset": [[6, "using-afni-3dtoutcount-computes-outliers-for-all-sub-bricks-3d-volumes-for-each-tr-in-the-input-dataset"]], "QualityIndex brick": [[7, "qualityindex-brick"]], "Computes a quality index for each sub-brick (3D volumes for each TR) in a 3D+time dataset using AFNI 3dTqual": [[7, "computes-a-quality-index-for-each-sub-brick-3d-volumes-for-each-tr-in-a-3d-time-dataset-using-afni-3dtqual"]], "RefitDeoblique brick": [[8, "refitdeoblique-brick"]], "Deoblique dataset (ie transform dataset from oblique to cardinal) using AFNI 3drefit": [[8, "deoblique-dataset-ie-transform-dataset-from-oblique-to-cardinal-using-afni-3drefit"]], "SkullStrip brick": [[9, "skullstrip-brick"]], "Using AFNI 3dSkullStrip, from T1-weighted MRI images, extract the brain from surrounding tissue": [[9, "using-afni-3dskullstrip-from-t1-weighted-mri-images-extract-the-brain-from-surrounding-tissue"]], "TShift brick": [[10, "tshift-brick"]], "Slice-time correction of bold images (using mean option of the AFNI 3dTshift)": [[10, "slice-time-correction-of-bold-images-using-mean-option-of-the-afni-3dtshift"]], "TStatMean brick": [[11, "tstatmean-brick"]], "Mean of bold images (using mean option of the AFNI 3dTstat)": [[11, "mean-of-bold-images-using-mean-option-of-the-afni-3dtstat"]], "Volreg brick": [[12, "volreg-brick"]], "Registers each 3D volume from the input dataset to the base volume using AFNI 3dvolreg": [[12, "registers-each-3d-volume-from-the-input-dataset-to-the-base-volume-using-afni-3dvolreg"]], "AffineInitializer brick": [[13, "affineinitializer-brick"]], "Initialize an affine transform using ANTs AffineInitizer": [[13, "initialize-an-affine-transform-using-ants-affineinitizer"]], "ApplyTransforms brick": [[14, "applytransforms-brick"]], "Using ANTs ApplyTransforms, transforms an input image according to a reference image and a transform (or a set of transforms)": [[14, "using-ants-applytransforms-transforms-an-input-image-according-to-a-reference-image-and-a-transform-or-a-set-of-transforms"]], "N4BiasFieldCorrection brick": [[15, "n4biasfieldcorrection-brick"]], "N4 Bias field correction using ANTs N4BiasFieldCorrection": [[15, "n4-bias-field-correction-using-ants-n4biasfieldcorrection"]], "Registration brick": [[16, "registration-brick"]], "Image registration using ANTs Registration": [[16, "image-registration-using-ants-registration"]], "ComputeDKI brick": [[17, "computedki-brick"]], "Reconstruction of the diffusion signal with the kurtosis tensor model": [[17, "reconstruction-of-the-diffusion-signal-with-the-kurtosis-tensor-model"]], "Denoise brick": [[18, "denoise-brick"]], "Denoise image using Non-Local Means algorithm (NLMEANS)": [[18, "denoise-image-using-non-local-means-algorithm-nlmeans"]], "Binarize brick": [[19, "binarize-brick"], [51, "binarize-brick"]], "Binarize an input volume (or volume-encoded surface file)": [[19, "binarize-an-input-volume-or-volume-encoded-surface-file"]], "SynthStrip brick": [[20, "synthstrip-brick"]], "SynthStripMriqc brick": [[21, "synthstripmriqc-brick"]], "Skull-stripping using SynthStrip tool (mri_synthstrip in FreeSurfer) as done in mriqc v22.06": [[21, "skull-stripping-using-synthstrip-tool-mri-synthstrip-in-freesurfer-as-done-in-mriqc-v22-06"]], "BetSurfacesExtraction brick": [[22, "betsurfacesextraction-brick"]], "Surfaces (skull, inskull, outskull, outskin) extraction using BET (FSL)": [[22, "surfaces-skull-inskull-outskull-outskin-extraction-using-bet-fsl"]], "ExtractROI brick": [[23, "extractroi-brick"]], "Extract region of interest (ROI) from an image using fslroi (FSL)": [[23, "extract-region-of-interest-roi-from-an-image-using-fslroi-fsl"]], "FastSegment brick": [[24, "fastsegment-brick"]], "Brain tissue segmentation using FAST (FSL)": [[24, "brain-tissue-segmentation-using-fast-fsl"]], "Flirt brick": [[25, "flirt-brick"]], "Linear (affine) intra- and inter-modal brain image registration using FLIRT (FSL)": [[25, "linear-affine-intra-and-inter-modal-brain-image-registration-using-flirt-fsl"]], "Smooth brick": [[26, "smooth-brick"], [74, "smooth-brick"]], "3D Gaussian smoothing of image volumes": [[26, "d-gaussian-smoothing-of-image-volumes"], [74, "d-gaussian-smoothing-of-image-volumes"]], "ConstrainedSphericalDeconvolution brick": [[27, "constrainedsphericaldeconvolution-brick"]], "Estimate fibre orientation distributions (FOD)": [[27, "estimate-fibre-orientation-distributions-fod"]], "DWIBiasCorrect brick": [[28, "dwibiascorrect-brick"]], "Perform B1 field inhomogeneity correction for a DWI image": [[28, "perform-b1-field-inhomogeneity-correction-for-a-dwi-image"]], "DWIBrainMask brick": [[29, "dwibrainmask-brick"]], "Generates a whole brain mask from a DWI image.": [[29, "generates-a-whole-brain-mask-from-a-dwi-image"]], "DWIDenoise brick": [[30, "dwidenoise-brick"]], "Denoise DWI data": [[30, "denoise-dwi-data"]], "DWIExtract brick": [[31, "dwiextract-brick"]], "Extract shell or b=0 volumes from DWI data": [[31, "extract-shell-or-b-0-volumes-from-dwi-data"]], "DWIPreproc brick": [[32, "dwipreproc-brick"]], "Perform diffusion image pre-processing using FSL\u2019s topup and eddy tool": [[32, "perform-diffusion-image-pre-processing-using-fsls-topup-and-eddy-tool"]], "EditingTrack brick": [[33, "editingtrack-brick"]], "Perform various editing operations on track files": [[33, "perform-various-editing-operations-on-track-files"]], "FilteringTrack brick": [[34, "filteringtrack-brick"]], "Filter tracking data": [[34, "filter-tracking-data"]], "FitTensor brick": [[35, "fittensor-brick"]], "Diffusion tensor estimation": [[35, "diffusion-tensor-estimation"]], "Generate5tt2gmwmi brick": [[36, "generate5tt2gmwmi-brick"]], "Generate a mask image appropriate for seeding streamlines on the grey matter-white matter interface": [[36, "generate-a-mask-image-appropriate-for-seeding-streamlines-on-the-grey-matter-white-matter-interface"]], "Generate5ttfsl brick": [[37, "generate5ttfsl-brick"]], "Generate a five-tissues-type (5TT) segmented tissue image with FSL": [[37, "generate-a-five-tissues-type-5tt-segmented-tissue-image-with-fsl"]], "MRCat brick": [[38, "mrcat-brick"]], "Concatenate several images into one": [[38, "concatenate-several-images-into-one"]], "MRConvert brick": [[39, "mrconvert-brick"]], "Perform conversion between different file types and optionally extract a subset of the input image": [[39, "perform-conversion-between-different-file-types-and-optionally-extract-a-subset-of-the-input-image"]], "MRDeGibbs brick": [[40, "mrdegibbs-brick"]], "Remove Gibbs ringing artifacts": [[40, "remove-gibbs-ringing-artifacts"]], "MRMath brick": [[41, "mrmath-brick"]], "Compute summary statistic on image intensities along a specified axis of a single image": [[41, "compute-summary-statistic-on-image-intensities-along-a-specified-axis-of-a-single-image"]], "MRTransform brick": [[42, "mrtransform-brick"]], "Apply spatial transformations or reslice images": [[42, "apply-spatial-transformations-or-reslice-images"]], "MTNormalise brick": [[43, "mtnormalise-brick"]], "Multi-tissue informed log-domain intensity normalisation": [[43, "multi-tissue-informed-log-domain-intensity-normalisation"]], "ResponseSDDhollander brick": [[44, "responsesddhollander-brick"]], "Estimate response function(s) for spherical deconvolution using the Dhollander algorithm": [[44, "estimate-response-function-s-for-spherical-deconvolution-using-the-dhollander-algorithm"]], "SphericalHarmonicExtraction brick": [[45, "sphericalharmonicextraction-brick"]], "Extract the peaks of a spherical harmonic function in each voxel": [[45, "extract-the-peaks-of-a-spherical-harmonic-function-in-each-voxel"]], "TensorMetrics brick": [[46, "tensormetrics-brick"]], "Compute metrics from tensors": [[46, "compute-metrics-from-tensors"]], "Tractography brick": [[47, "tractography-brick"]], "Performs streamlines tractography": [[47, "performs-streamlines-tractography"]], "TransformFSLConvert brick": [[48, "transformfslconvert-brick"]], "Perform conversion between FSL\u2019s transformation matrix format to mrtrix3\u2019s": [[48, "perform-conversion-between-fsls-transformation-matrix-format-to-mrtrix3s"]], "ApplyBiasCorrection brick": [[49, "applybiascorrection-brick"]], "Apply bias field correction to an input file using the bias image": [[49, "apply-bias-field-correction-to-an-input-file-using-the-bias-image"]], "ArtifactMask brick": [[50, "artifactmask-brick"]], "Computes artifact mask": [[50, "computes-artifact-mask"]], "Binarizes the input image applying the given lower threshold": [[51, "binarizes-the-input-image-applying-the-given-lower-threshold"]], "ConformImage brick": [[52, "conformimage-brick"]], "Conform T1w image": [[52, "conform-t1w-image"]], "ConvROI brick": [[53, "convroi-brick"]], "Image convolution with one image": [[53, "image-convolution-with-one-image"]], "Enhance brick": [[54, "enhance-brick"]], "Image enhancing": [[54, "image-enhancing"]], "EstimateSNR brick": [[55, "estimatesnr-brick"]], "Estimate SNR using a segmentation file": [[55, "estimate-snr-using-a-segmentation-file"]], "GradientThreshold brick": [[56, "gradientthreshold-brick"]], "Computes a threshold from the histogram of the magnitude gradient image using a segmentation of the input image": [[56, "computes-a-threshold-from-the-histogram-of-the-magnitude-gradient-image-using-a-segmentation-of-the-input-image"]], "Harmonize brick": [[57, "harmonize-brick"]], "Harmonize input image using a white matter mask": [[57, "harmonize-input-image-using-a-white-matter-mask"]], "IntensityClip brick": [[58, "intensityclip-brick"]], "Clip the intensity range as prescribed by the percentiles": [[58, "clip-the-intensity-range-as-prescribed-by-the-percentiles"]], "Mask brick": [[59, "mask-brick"]], "Apply a binary mask to an image": [[59, "apply-a-binary-mask-to-an-image"]], "NonSteadyDetector brick": [[60, "nonsteadydetector-brick"]], "Detect non-steady-state at the beginning of a bold 4D image": [[60, "detect-non-steady-state-at-the-beginning-of-a-bold-4d-image"]], "Resample1 brick": [[61, "resample1-brick"]], "Resamples an image to the resolution of a reference image using nibabel.processing.resample_from_to()": [[61, "resamples-an-image-to-the-resolution-of-a-reference-image-using-nibabel-processing-resample-from-to"]], "Resample2 brick": [[62, "resample2-brick"]], "Sets images to the resolution of a reference image using skimage.transform.resize()": [[62, "sets-images-to-the-resolution-of-a-reference-image-using-skimage-transform-resize"]], "RotationMask brick": [[63, "rotationmask-brick"]], "Compute the rotation mask image": [[63, "compute-the-rotation-mask-image"]], "Sanitize brick": [[64, "sanitize-brick"]], "Sanitize input bold image": [[64, "sanitize-input-bold-image"]], "TSNR brick": [[65, "tsnr-brick"]], "Computes the time-course SNR for a time series": [[65, "computes-the-time-course-snr-for-a-time-series"]], "TemplateFromTemplateFlow brick": [[66, "templatefromtemplateflow-brick"]], "Get template image from TemplateFlow": [[66, "get-template-image-from-templateflow"]], "Threshold brick": [[67, "threshold-brick"]], "Makes a binary mask image at a given threshold": [[67, "makes-a-binary-mask-image-at-a-given-threshold"]], "Coregister brick": [[68, "coregister-brick"]], "Align together scans of different modalities": [[68, "align-together-scans-of-different-modalities"]], "GM_WM_Normalize brick": [[69, "gm-wm-normalize-brick"]], "Normalises only the grey or/and white matter from a set of images": [[69, "normalises-only-the-grey-or-and-white-matter-from-a-set-of-images"]], "NewSegment brick": [[70, "newsegment-brick"]], "Segments,  bias  corrects  and  spatially normalises - all in the same model": [[70, "segments-bias-corrects-and-spatially-normalises-all-in-the-same-model"]], "Normalize12 brick": [[71, "normalize12-brick"]], "Computes the deformation that best aligns the model (atlas) with an image, then if necessary, apply this deformation to spatially normalize images": [[71, "computes-the-deformation-that-best-aligns-the-model-atlas-with-an-image-then-if-necessary-apply-this-deformation-to-spatially-normalize-images"]], "Realign brick": [[72, "realign-brick"]], "Realigns a time-series of images acquired from the same subject": [[72, "realigns-a-time-series-of-images-acquired-from-the-same-subject"]], "SliceTiming brick": [[73, "slicetiming-brick"]], "Bring back every slice of a BOLD image to the reference slice time.": [[73, "bring-back-every-slice-of-a-bold-image-to-the-reference-slice-time"]], "AnatIQMs brick": [[75, "anatiqms-brick"]], "Computes the anatomical Image Quality Metrics (IQMs) as defined in mriqc v22.06": [[75, "computes-the-anatomical-image-quality-metrics-iqms-as-defined-in-mriqc-v22-06"]], "BoldQMs brick": [[76, "boldqms-brick"]], "Computes the functional Image Quality Metrics (IQMs) as defined in mriqc v22.06": [[76, "computes-the-functional-image-quality-metrics-iqms-as-defined-in-mriqc-v22-06"]], "BoldQMsPlot brick": [[77, "boldqmsplot-brick"]], "CarpetParcellation brick": [[78, "carpetparcellation-brick"]], "Dilate brainmask, substract from itself then generate the union of obtained crown mask and epi parcellation": [[78, "dilate-brainmask-substract-from-itself-then-generate-the-union-of-obtained-crown-mask-and-epi-parcellation"]], "ComputeDVARS brick": [[79, "computedvars-brick"]], "Computes DVARS (derivative of variance)": [[79, "computes-dvars-derivative-of-variance"]], "FramewiseDisplacement brick": [[80, "framewisedisplacement-brick"]], "Calculate the FD (framewise displacement) as in [Power2012]": [[80, "calculate-the-fd-framewise-displacement-as-in-power2012"]], "Mean_stdDev_calc brick": [[81, "mean-stddev-calc-brick"]], "Makes the mean and standard deviation of parametric maps": [[81, "makes-the-mean-and-standard-deviation-of-parametric-maps"]], "ReportAnatMriqc brick": [[82, "reportanatmriqc-brick"]], "Generates the report for anatomical data in mriqc pipeline": [[82, "generates-the-report-for-anatomical-data-in-mriqc-pipeline"]], "ReportCO2inhalCvr brick": [[83, "reportco2inhalcvr-brick"]], "Generates the report for CVR evaluation using hypercapnia challenge pipeline": [[83, "generates-the-report-for-cvr-evaluation-using-hypercapnia-challenge-pipeline"]], "ReportFuncMriqc brick": [[84, "reportfuncmriqc-brick"]], "Generates the report for functional data in mriqc pipeline": [[84, "generates-the-report-for-functional-data-in-mriqc-pipeline"]], "ReportGroupMriqc brick": [[85, "reportgroupmriqc-brick"]], "Generate a group report for mriqc pipeline": [[85, "generate-a-group-report-for-mriqc-pipeline"]], "Result_collector brick": [[86, "result-collector-brick"]], "Generates files containing summary data for each region of interest": [[86, "generates-files-containing-summary-data-for-each-region-of-interest"]], "Spikes brick": [[87, "spikes-brick"]], "Computes the number of spikes": [[87, "computes-the-number-of-spikes"]], "EstimateConstrast brick": [[88, "estimateconstrast-brick"]], "Estimate contrasts of interest (SPM12 fMRI contrast manager)": [[88, "estimate-contrasts-of-interest-spm12-fmri-contrast-manager"]], "EstimateModel brick": [[89, "estimatemodel-brick"]], "Model Estimation using classical (ReML - Restricted Maximum Likelihood) procedure (SPM12 fMRI model estimation)": [[89, "model-estimation-using-classical-reml-restricted-maximum-likelihood-procedure-spm12-fmri-model-estimation"]], "Level1Design brick": [[90, "level1design-brick"]], "fMRI model specification for GLM analysis.": [[90, "fmri-model-specification-for-glm-analysis"]], "MultipleRegressionDesign brick": [[91, "multipleregressiondesign-brick"]], "Create SPM design for multiple regression (SPM12 fMRI factorial Design)": [[91, "create-spm-design-for-multiple-regression-spm12-fmri-factorial-design"]], "OneSampleTTestDesign brick": [[92, "onesamplettestdesign-brick"]], "Create SPM design for one sample t-test (SPM12 fMRI factorial Design)": [[92, "create-spm-design-for-one-sample-t-test-spm12-fmri-factorial-design"]], "PairedTTestDesign brick": [[93, "pairedttestdesign-brick"]], "Create SPM design for paired t-test (SPM12 fMRI factorial Design)": [[93, "create-spm-design-for-paired-t-test-spm12-fmri-factorial-design"]], "TwoSampleTTestDesign brick": [[94, "twosamplettestdesign-brick"]], "Create SPM design for two sample t-test (SPM12 fMRI factorial Design)": [[94, "create-spm-design-for-two-sample-t-test-spm12-fmri-factorial-design"]], "Concat_to_list  brick": [[95, "concat-to-list-brick"]], "Make an output list corresponding to the concatenation of list1 and list2": [[95, "make-an-output-list-corresponding-to-the-concatenation-of-list1-and-list2"]], "Concat_to_list_of_list brick": [[96, "concat-to-list-of-list-brick"]], "Make an output list of list containing the iteration of the input list1 with each element of the input list2": [[96, "make-an-output-list-of-list-containing-the-iteration-of-the-input-list1-with-each-element-of-the-input-list2"]], "Delete_data brick": [[97, "delete-data-brick"]], "Delete data from database": [[97, "delete-data-from-database"]], "Files_To_List brick": [[98, "files-to-list-brick"]], "From 3 file names, generating a list containing all theses file names": [[98, "from-3-file-names-generating-a-list-containing-all-theses-file-names"]], "Filter_Files_List brick": [[99, "filter-files-list-brick"]], "Selects one or more (slicing) elements from a list": [[99, "selects-one-or-more-slicing-elements-from-a-list"]], "Find_In_List brick": [[100, "find-in-list-brick"]], "From a list of files, select the 1rst element that contains a pattern": [[100, "from-a-list-of-files-select-the-1rst-element-that-contains-a-pattern"]], "Get_Conditions_From_csv brick": [[101, "get-conditions-from-csv-brick"]], "Get_Patient_Name brick": [[102, "get-patient-name-brick"]], "Import_Data  brick": [[103, "import-data-brick"]], "Import reference data into the current pipeline": [[103, "import-reference-data-into-the-current-pipeline"]], "Input_Filter brick": [[104, "input-filter-brick"]], "To filter the content of the Data Browser tab or the output data of another brick": [[104, "to-filter-the-content-of-the-data-browser-tab-or-the-output-data-of-another-brick"]], "List_Duplicate brick": [[105, "list-duplicate-brick"]], "From a file name, generating a list containing this file name and the file name itself": [[105, "from-a-file-name-generating-a-list-containing-this-file-name-and-the-file-name-itself"]], "List_To_File brick": [[106, "list-to-file-brick"]], "From a list of files, generation of a single file": [[106, "from-a-list-of-files-generation-of-a-single-file"]], "Make_a_list brick": [[107, "make-a-list-brick"]], "From 2 objects, generating a list containing all these objects": [[107, "from-2-objects-generating-a-list-containing-all-these-objects"]], "Mia_processes\u2019s documentation": [[108, "mia-processes-s-documentation"]], "CO2_inhalation pipeline": [[109, "co2-inhalation-pipeline"]], "Cerebrovascular reactivity (CVR) evaluation under CO2 challenge": [[109, "cerebrovascular-reactivity-cvr-evaluation-under-co2-challenge"]], "DWI_whole_brain_tractograpy pipeline": [[110, "dwi-whole-brain-tractograpy-pipeline"]], "Brain Tractography with MRTrix": [[110, "brain-tractography-with-mrtrix"]], "Anat_airmask pipeline": [[111, "anat-airmask-pipeline"]], "Compute rotation mask, air mask, artifact mask and hat mask for structural data following step 1 from [Mortamet2009]": [[111, "compute-rotation-mask-air-mask-artifact-mask-and-hat-mask-for-structural-data-following-step-1-from-mortamet2009"]], "Anat_headmask pipeline": [[112, "anat-headmask-pipeline"]], "Compute head mask from skull stripped structural image using Denoise from Dipy": [[112, "compute-head-mask-from-skull-stripped-structural-image-using-denoise-from-dipy"]], "Anat_mni_tpms pipeline": [[113, "anat-mni-tpms-pipeline"]], "Get templates tissues probability map and register them in subject space": [[113, "get-templates-tissues-probability-map-and-register-them-in-subject-space"]], "Anat_skullstrip pipeline": [[114, "anat-skullstrip-pipeline"]], "Bias correction and skull stripping of a structural image": [[114, "bias-correction-and-skull-stripping-of-a-structural-image"]], "Anat_skullstrip_synthstrip pipeline": [[115, "anat-skullstrip-synthstrip-pipeline"]], "Create a brain-extraction workflow using SynthStrip (Freesurfer)": [[115, "create-a-brain-extraction-workflow-using-synthstrip-freesurfer"]], "Anat_spatial_norm pipeline": [[116, "anat-spatial-norm-pipeline"]], "Spatial normalization to MNI (using MNI152NLin2009cAsym template)": [[116, "spatial-normalization-to-mni-using-mni152nlin2009casym-template"]], "Bold_hmc pipeline": [[117, "bold-hmc-pipeline"]], "Head motion correction of a bold image": [[117, "head-motion-correction-of-a-bold-image"]], "Bold_mni_align pipeline": [[118, "bold-mni-align-pipeline"]], "Register a mean functional image EPI in MNI space (for checking out registration)": [[118, "register-a-mean-functional-image-epi-in-mni-space-for-checking-out-registration"]], "Bold_spatial_preprocessing1 pipeline": [[119, "bold-spatial-preprocessing1-pipeline"]], "An example of fMRI data pre-processing": [[119, "an-example-of-fmri-data-pre-processing"], [120, "an-example-of-fmri-data-pre-processing"]], "Bold_spatial_preprocessing2 pipeline": [[120, "bold-spatial-preprocessing2-pipeline"]], "Dwi_fod_msmt_csd pipeline": [[121, "dwi-fod-msmt-csd-pipeline"]], "Estimate DWI fiber orientation distribution (FOD)": [[121, "estimate-dwi-fiber-orientation-distribution-fod"]], "Dwi_preprocessing pipeline": [[122, "dwi-preprocessing-pipeline"]], "DWI preprocessing using a reverse-phase encoded b0": [[122, "dwi-preprocessing-using-a-reverse-phase-encoded-b0"]], "Dwi_tissue_boundaries pipeline": [[123, "dwi-tissue-boundaries-pipeline"]], "Create tissue boundaries with a T1w and registratiojn in DWI space": [[123, "create-tissue-boundaries-with-a-t1w-and-registratiojn-in-dwi-space"]], "Spatial_mask pipeline": [[124, "spatial-mask-pipeline"]], "From a list of images resulting from a previous segmentation, produces a grey matter mask": [[124, "from-a-list-of-images-resulting-from-a-previous-segmentation-produces-a-grey-matter-mask"]], "Anat_mriqc pipeline": [[125, "anat-mriqc-pipeline"]], "Get no-reference IQMs (image quality metrics) from structural (T1w and T2w) data using mriqc anatomical workflow (mriqc v22.06)": [[125, "get-no-reference-iqms-image-quality-metrics-from-structural-t1w-and-t2w-data-using-mriqc-anatomical-workflow-mriqc-v22-06"]], "Bold_mriqc pipeline": [[126, "bold-mriqc-pipeline"]], "Get no-reference IQMs (image quality metrics) from functional (BOLD) data using mriqc functional workflow (mriqc v22.06)": [[126, "get-no-reference-iqms-image-quality-metrics-from-functional-bold-data-using-mriqc-functional-workflow-mriqc-v22-06"]], "Bold_iqms pipeline": [[127, "bold-iqms-pipeline"]], "Compute no-reference IQMs (image quality metrics) from functional (BOLD)": [[127, "compute-no-reference-iqms-image-quality-metrics-from-functional-bold"]], "Extract_roi_param pipeline": [[128, "extract-roi-param-pipeline"]], "Produces gray matter masks for various ROIs and means, standard deviations, laterality indices for beta and spmT values in these ROIs": [[128, "produces-gray-matter-masks-for-various-rois-and-means-standard-deviations-laterality-indices-for-beta-and-spmt-values-in-these-rois"]], "Bold_stat_cvr brick": [[129, "bold-stat-cvr-brick"]], "SPM-based first level GLM analysis used in the CVR evaluation": [[129, "spm-based-first-level-glm-analysis-used-in-the-cvr-evaluation"]], "Purpose": [[130, "purpose"]], "Indices and tables for developers": [[130, "indices-and-tables-for-developers"]], "mia_processes package": [[131, "module-mia_processes"]], "Subpackages": [[131, "subpackages"], [132, "subpackages"], [133, "subpackages"], [143, "subpackages"], [146, "subpackages"]], "Submodules": [[131, "submodules"], [134, "submodules"], [135, "submodules"], [136, "submodules"], [137, "submodules"], [138, "submodules"], [139, "submodules"], [140, "submodules"], [141, "submodules"], [142, "submodules"], [144, "submodules"], [145, "submodules"], [147, "submodules"], [148, "submodules"], [149, "submodules"], [150, "submodules"], [151, "submodules"], [152, "submodules"], [153, "submodules"]], "mia_processes.info module": [[131, "module-mia_processes.info"]], "mia_processes.process_matlab module": [[131, "module-mia_processes.process_matlab"]], "mia_processes.bricks package": [[132, "module-mia_processes.bricks"]], "mia_processes.bricks.preprocess package": [[133, "module-mia_processes.bricks.preprocess"]], "mia_processes.bricks.preprocess.afni package": [[134, "module-mia_processes.bricks.preprocess.afni"]], "mia_processes.bricks.preprocess.afni.processes module": [[134, "module-mia_processes.bricks.preprocess.afni.processes"]], "mia_processes.bricks.preprocess.ants package": [[135, "module-mia_processes.bricks.preprocess.ants"]], "mia_processes.bricks.preprocess.ants.processes module": [[135, "module-mia_processes.bricks.preprocess.ants.processes"]], "mia_processes.bricks.preprocess.dipy package": [[136, "module-mia_processes.bricks.preprocess.dipy"]], "mia_processes.bricks.preprocess.dipy.processes module": [[136, "module-mia_processes.bricks.preprocess.dipy.processes"]], "mia_processes.bricks.preprocess.freesurfer package": [[137, "module-mia_processes.bricks.preprocess.freesurfer"]], "mia_processes.bricks.preprocess.freesurfer.processes module": [[137, "module-mia_processes.bricks.preprocess.freesurfer.processes"]], "mia_processes.bricks.preprocess.fsl package": [[138, "module-mia_processes.bricks.preprocess.fsl"]], "mia_processes.bricks.preprocess.fsl.processes module": [[138, "module-mia_processes.bricks.preprocess.fsl.processes"]], "mia_processes.bricks.preprocess.mrtrix package": [[139, "module-mia_processes.bricks.preprocess.mrtrix"]], "mia_processes.bricks.preprocess.mrtrix.processes module": [[139, "module-mia_processes.bricks.preprocess.mrtrix.processes"]], "mia_processes.bricks.preprocess.others package": [[140, "module-mia_processes.bricks.preprocess.others"]], "mia_processes.bricks.preprocess.others.processing module": [[140, "module-mia_processes.bricks.preprocess.others.processing"]], "mia_processes.bricks.preprocess.spm package": [[141, "module-mia_processes.bricks.preprocess.spm"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing module": [[141, "module-mia_processes.bricks.preprocess.spm.spatial_preprocessing"]], "mia_processes.bricks.reports package": [[142, "module-mia_processes.bricks.reports"]], "mia_processes.bricks.reports.processes module": [[142, "module-mia_processes.bricks.reports.processes"]], "References": [[142, null]], "mia_processes.bricks.reports.reporting module": [[142, "module-mia_processes.bricks.reports.reporting"]], "mia_processes.bricks.stat package": [[143, "module-mia_processes.bricks.stat"]], "mia_processes.bricks.stat.spm package": [[144, "module-mia_processes.bricks.stat.spm"]], "mia_processes.bricks.stat.spm.model module": [[144, "module-mia_processes.bricks.stat.spm.model"]], "mia_processes.bricks.tools package": [[145, "module-mia_processes.bricks.tools"]], "mia_processes.bricks.tools.tools module": [[145, "module-mia_processes.bricks.tools.tools"]], "mia_processes.pipelines package": [[146, "module-mia_processes.pipelines"]], "mia_processes.pipelines.CerebVascularReact package": [[147, "module-mia_processes.pipelines.CerebVascularReact"]], "mia_processes.pipelines.CerebVascularReact.co2_inhalation module": [[147, "module-mia_processes.pipelines.CerebVascularReact.co2_inhalation"]], "mia_processes.pipelines.DWITractography package": [[148, "module-mia_processes.pipelines.DWITractography"]], "mia_processes.pipelines.DWITractography.dwi_whole_brain_tractography module": [[148, "module-mia_processes.pipelines.DWITractography.dwi_whole_brain_tractography"]], "mia_processes.pipelines.preprocess package": [[149, "module-mia_processes.pipelines.preprocess"]], "mia_processes.pipelines.preprocess.anat_airmask module": [[149, "module-mia_processes.pipelines.preprocess.anat_airmask"]], "mia_processes.pipelines.preprocess.anat_headmask module": [[149, "module-mia_processes.pipelines.preprocess.anat_headmask"]], "mia_processes.pipelines.preprocess.anat_mni_tpms module": [[149, "module-mia_processes.pipelines.preprocess.anat_mni_tpms"]], "mia_processes.pipelines.preprocess.anat_skullstrip module": [[149, "module-mia_processes.pipelines.preprocess.anat_skullstrip"]], "mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip module": [[149, "module-mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip"]], "mia_processes.pipelines.preprocess.anat_spatial_norm module": [[149, "module-mia_processes.pipelines.preprocess.anat_spatial_norm"]], "mia_processes.pipelines.preprocess.bold_hmc module": [[149, "module-mia_processes.pipelines.preprocess.bold_hmc"]], "mia_processes.pipelines.preprocess.bold_mni_align module": [[149, "module-mia_processes.pipelines.preprocess.bold_mni_align"]], "mia_processes.pipelines.preprocess.bold_spatial_preprocessing1 module": [[149, "module-mia_processes.pipelines.preprocess.bold_spatial_preprocessing1"]], "mia_processes.pipelines.preprocess.bold_spatial_preprocessing2 module": [[149, "module-mia_processes.pipelines.preprocess.bold_spatial_preprocessing2"]], "mia_processes.pipelines.preprocess.dwi_fod_msmt_csd module": [[149, "module-mia_processes.pipelines.preprocess.dwi_fod_msmt_csd"]], "mia_processes.pipelines.preprocess.dwipreprocessing module": [[149, "module-mia_processes.pipelines.preprocess.dwi_preprocessing"]], "mia_processes.pipelines.preprocess.spatial_mask module": [[149, "module-mia_processes.pipelines.preprocess.spatial_mask"]], "mia_processes.pipelines.qualityControl package": [[150, "module-mia_processes.pipelines.qualityControl"]], "mia_processes.pipelines.qualityControl.anat_mriqc module": [[150, "module-mia_processes.pipelines.qualityControl.anat_mriqc"]], "mia_processes.pipelines.qualityControl.bold_mriqc module": [[150, "module-mia_processes.pipelines.qualityControl.bold_mriqc"]], "mia_processes.pipelines.reports package": [[151, "module-mia_processes.pipelines.reports"]], "mia_processes.pipelines.reports.bold_iqms module": [[151, "module-mia_processes.pipelines.reports.bold_iqms"]], "mia_processes.pipelines.reports.extract_roi_param module": [[151, "module-mia_processes.pipelines.reports.extract_roi_param"]], "mia_processes.pipelines.stat package": [[152, "module-mia_processes.pipelines.stat"]], "mia_processes.pipelines.stat.bold_stat_cvr module": [[152, "module-mia_processes.pipelines.stat.bold_stat_cvr"]], "mia_processes.utils package": [[153, "module-mia_processes.utils"]], "mia_processes.utils.report module": [[153, "module-mia_processes.utils.report"]], "mia_processes.utils.tools module": [[153, "module-mia_processes.utils.tools"]], "mia_processes": [[154, "mia-processes"]]}, "indexentries": {"processmatlab (class in mia_processes.process_matlab)": [[131, "mia_processes.process_matlab.ProcessMatlab"]], "__init__() (mia_processes.process_matlab.processmatlab method)": [[131, "mia_processes.process_matlab.ProcessMatlab.__init__"]], "add_exit() (mia_processes.process_matlab.processmatlab method)": [[131, "mia_processes.process_matlab.ProcessMatlab.add_exit"]], "add_path() (mia_processes.process_matlab.processmatlab method)": [[131, "mia_processes.process_matlab.ProcessMatlab.add_path"]], "change_directory() (mia_processes.process_matlab.processmatlab method)": [[131, "mia_processes.process_matlab.ProcessMatlab.change_directory"]], "display_parameter() (mia_processes.process_matlab.processmatlab method)": [[131, "mia_processes.process_matlab.ProcessMatlab.display_parameter"]], "get_gitversion() (in module mia_processes.info)": [[131, "mia_processes.info.get_gitversion"]], "mia_processes": [[131, "module-mia_processes"]], "mia_processes.info": [[131, "module-mia_processes.info"]], "mia_processes.process_matlab": [[131, "module-mia_processes.process_matlab"]], "module": [[131, "module-mia_processes"], [131, "module-mia_processes.info"], [131, "module-mia_processes.process_matlab"], [132, "module-mia_processes.bricks"], [133, "module-mia_processes.bricks.preprocess"], [134, "module-mia_processes.bricks.preprocess.afni"], [134, "module-mia_processes.bricks.preprocess.afni.processes"], [135, "module-mia_processes.bricks.preprocess.ants"], [135, "module-mia_processes.bricks.preprocess.ants.processes"], [136, "module-mia_processes.bricks.preprocess.dipy"], [136, "module-mia_processes.bricks.preprocess.dipy.processes"], [137, "module-mia_processes.bricks.preprocess.freesurfer"], [137, "module-mia_processes.bricks.preprocess.freesurfer.processes"], [138, "module-mia_processes.bricks.preprocess.fsl"], [138, "module-mia_processes.bricks.preprocess.fsl.processes"], [139, "module-mia_processes.bricks.preprocess.mrtrix"], [139, "module-mia_processes.bricks.preprocess.mrtrix.processes"], [140, "module-mia_processes.bricks.preprocess.others"], [140, "module-mia_processes.bricks.preprocess.others.processing"], [141, "module-mia_processes.bricks.preprocess.spm"], [141, "module-mia_processes.bricks.preprocess.spm.spatial_preprocessing"], [142, "module-mia_processes.bricks.reports"], [142, "module-mia_processes.bricks.reports.processes"], [142, "module-mia_processes.bricks.reports.reporting"], [143, "module-mia_processes.bricks.stat"], [144, "module-mia_processes.bricks.stat.spm"], [144, "module-mia_processes.bricks.stat.spm.model"], [145, "module-mia_processes.bricks.tools"], [145, "module-mia_processes.bricks.tools.tools"], [146, "module-mia_processes.pipelines"], [147, "module-mia_processes.pipelines.CerebVascularReact"], [147, "module-mia_processes.pipelines.CerebVascularReact.co2_inhalation"], [148, "module-mia_processes.pipelines.DWITractography"], [148, "module-mia_processes.pipelines.DWITractography.dwi_whole_brain_tractography"], [149, "module-mia_processes.pipelines.preprocess"], [149, "module-mia_processes.pipelines.preprocess.anat_airmask"], [149, "module-mia_processes.pipelines.preprocess.anat_headmask"], [149, "module-mia_processes.pipelines.preprocess.anat_mni_tpms"], [149, "module-mia_processes.pipelines.preprocess.anat_skullstrip"], [149, "module-mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip"], [149, "module-mia_processes.pipelines.preprocess.anat_spatial_norm"], [149, "module-mia_processes.pipelines.preprocess.bold_hmc"], [149, "module-mia_processes.pipelines.preprocess.bold_mni_align"], [149, "module-mia_processes.pipelines.preprocess.bold_spatial_preprocessing1"], [149, "module-mia_processes.pipelines.preprocess.bold_spatial_preprocessing2"], [149, "module-mia_processes.pipelines.preprocess.dwi_fod_msmt_csd"], [149, "module-mia_processes.pipelines.preprocess.dwi_preprocessing"], [149, "module-mia_processes.pipelines.preprocess.spatial_mask"], [150, "module-mia_processes.pipelines.qualityControl"], [150, "module-mia_processes.pipelines.qualityControl.anat_mriqc"], [150, "module-mia_processes.pipelines.qualityControl.bold_mriqc"], [151, "module-mia_processes.pipelines.reports"], [151, "module-mia_processes.pipelines.reports.bold_iqms"], [151, "module-mia_processes.pipelines.reports.extract_roi_param"], [152, "module-mia_processes.pipelines.stat"], [152, "module-mia_processes.pipelines.stat.bold_stat_cvr"], [153, "module-mia_processes.utils"], [153, "module-mia_processes.utils.report"], [153, "module-mia_processes.utils.tools"]], "run() (mia_processes.process_matlab.processmatlab method)": [[131, "mia_processes.process_matlab.ProcessMatlab.run"]], "set_global_variable() (mia_processes.process_matlab.processmatlab method)": [[131, "mia_processes.process_matlab.ProcessMatlab.set_global_variable"]], "set_variable() (mia_processes.process_matlab.processmatlab method)": [[131, "mia_processes.process_matlab.ProcessMatlab.set_variable"]], "mia_processes.bricks": [[132, "module-mia_processes.bricks"]], "mia_processes.bricks.preprocess": [[133, "module-mia_processes.bricks.preprocess"]], "automask (class in mia_processes.bricks.preprocess.afni.processes)": [[134, "mia_processes.bricks.preprocess.afni.processes.Automask"]], "calc (class in mia_processes.bricks.preprocess.afni.processes)": [[134, "mia_processes.bricks.preprocess.afni.processes.Calc"]], "calcdroptrs (class in mia_processes.bricks.preprocess.afni.processes)": [[134, "mia_processes.bricks.preprocess.afni.processes.CalcDropTRs"]], "despike (class in mia_processes.bricks.preprocess.afni.processes)": [[134, "mia_processes.bricks.preprocess.afni.processes.Despike"]], "fwhmx (class in mia_processes.bricks.preprocess.afni.processes)": [[134, "mia_processes.bricks.preprocess.afni.processes.FWHMx"]], "gcor (class in mia_processes.bricks.preprocess.afni.processes)": [[134, "mia_processes.bricks.preprocess.afni.processes.GCOR"]], "outliercount (class in mia_processes.bricks.preprocess.afni.processes)": [[134, "mia_processes.bricks.preprocess.afni.processes.OutlierCount"]], "qualityindex (class in mia_processes.bricks.preprocess.afni.processes)": [[134, "mia_processes.bricks.preprocess.afni.processes.QualityIndex"]], "refitdeoblique (class in mia_processes.bricks.preprocess.afni.processes)": [[134, "mia_processes.bricks.preprocess.afni.processes.RefitDeoblique"]], "skullstrip (class in mia_processes.bricks.preprocess.afni.processes)": [[134, "mia_processes.bricks.preprocess.afni.processes.SkullStrip"]], "tshift (class in mia_processes.bricks.preprocess.afni.processes)": [[134, "mia_processes.bricks.preprocess.afni.processes.TShift"]], "tstatmean (class in mia_processes.bricks.preprocess.afni.processes)": [[134, "mia_processes.bricks.preprocess.afni.processes.TStatMean"]], "volreg (class in mia_processes.bricks.preprocess.afni.processes)": [[134, "mia_processes.bricks.preprocess.afni.processes.Volreg"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.automask method)": [[134, "mia_processes.bricks.preprocess.afni.processes.Automask.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.calc method)": [[134, "mia_processes.bricks.preprocess.afni.processes.Calc.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.calcdroptrs method)": [[134, "mia_processes.bricks.preprocess.afni.processes.CalcDropTRs.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.despike method)": [[134, "mia_processes.bricks.preprocess.afni.processes.Despike.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.fwhmx method)": [[134, "mia_processes.bricks.preprocess.afni.processes.FWHMx.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.gcor method)": [[134, "mia_processes.bricks.preprocess.afni.processes.GCOR.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.outliercount method)": [[134, "mia_processes.bricks.preprocess.afni.processes.OutlierCount.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.qualityindex method)": [[134, "mia_processes.bricks.preprocess.afni.processes.QualityIndex.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.refitdeoblique method)": [[134, "mia_processes.bricks.preprocess.afni.processes.RefitDeoblique.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.skullstrip method)": [[134, "mia_processes.bricks.preprocess.afni.processes.SkullStrip.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.tshift method)": [[134, "mia_processes.bricks.preprocess.afni.processes.TShift.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.tstatmean method)": [[134, "mia_processes.bricks.preprocess.afni.processes.TStatMean.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.volreg method)": [[134, "mia_processes.bricks.preprocess.afni.processes.Volreg.__init__"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.automask method)": [[134, "mia_processes.bricks.preprocess.afni.processes.Automask.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.calc method)": [[134, "mia_processes.bricks.preprocess.afni.processes.Calc.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.calcdroptrs method)": [[134, "mia_processes.bricks.preprocess.afni.processes.CalcDropTRs.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.despike method)": [[134, "mia_processes.bricks.preprocess.afni.processes.Despike.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.fwhmx method)": [[134, "mia_processes.bricks.preprocess.afni.processes.FWHMx.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.gcor method)": [[134, "mia_processes.bricks.preprocess.afni.processes.GCOR.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.outliercount method)": [[134, "mia_processes.bricks.preprocess.afni.processes.OutlierCount.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.qualityindex method)": [[134, "mia_processes.bricks.preprocess.afni.processes.QualityIndex.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.refitdeoblique method)": [[134, "mia_processes.bricks.preprocess.afni.processes.RefitDeoblique.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.skullstrip method)": [[134, "mia_processes.bricks.preprocess.afni.processes.SkullStrip.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.tshift method)": [[134, "mia_processes.bricks.preprocess.afni.processes.TShift.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.tstatmean method)": [[134, "mia_processes.bricks.preprocess.afni.processes.TStatMean.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.volreg method)": [[134, "mia_processes.bricks.preprocess.afni.processes.Volreg.list_outputs"]], "mia_processes.bricks.preprocess.afni": [[134, "module-mia_processes.bricks.preprocess.afni"]], "mia_processes.bricks.preprocess.afni.processes": [[134, "module-mia_processes.bricks.preprocess.afni.processes"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.automask method)": [[134, "mia_processes.bricks.preprocess.afni.processes.Automask.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.calc method)": [[134, "mia_processes.bricks.preprocess.afni.processes.Calc.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.calcdroptrs method)": [[134, "mia_processes.bricks.preprocess.afni.processes.CalcDropTRs.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.despike method)": [[134, "mia_processes.bricks.preprocess.afni.processes.Despike.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.fwhmx method)": [[134, "mia_processes.bricks.preprocess.afni.processes.FWHMx.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.gcor method)": [[134, "mia_processes.bricks.preprocess.afni.processes.GCOR.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.outliercount method)": [[134, "mia_processes.bricks.preprocess.afni.processes.OutlierCount.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.qualityindex method)": [[134, "mia_processes.bricks.preprocess.afni.processes.QualityIndex.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.refitdeoblique method)": [[134, "mia_processes.bricks.preprocess.afni.processes.RefitDeoblique.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.skullstrip method)": [[134, "mia_processes.bricks.preprocess.afni.processes.SkullStrip.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.tshift method)": [[134, "mia_processes.bricks.preprocess.afni.processes.TShift.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.tstatmean method)": [[134, "mia_processes.bricks.preprocess.afni.processes.TStatMean.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.volreg method)": [[134, "mia_processes.bricks.preprocess.afni.processes.Volreg.run_process_mia"]], "affineinitializer (class in mia_processes.bricks.preprocess.ants.processes)": [[135, "mia_processes.bricks.preprocess.ants.processes.AffineInitializer"]], "applytransforms (class in mia_processes.bricks.preprocess.ants.processes)": [[135, "mia_processes.bricks.preprocess.ants.processes.ApplyTransforms"]], "n4biasfieldcorrection (class in mia_processes.bricks.preprocess.ants.processes)": [[135, "mia_processes.bricks.preprocess.ants.processes.N4BiasFieldCorrection"]], "registration (class in mia_processes.bricks.preprocess.ants.processes)": [[135, "mia_processes.bricks.preprocess.ants.processes.Registration"]], "__init__() (mia_processes.bricks.preprocess.ants.processes.affineinitializer method)": [[135, "mia_processes.bricks.preprocess.ants.processes.AffineInitializer.__init__"]], "__init__() (mia_processes.bricks.preprocess.ants.processes.applytransforms method)": [[135, "mia_processes.bricks.preprocess.ants.processes.ApplyTransforms.__init__"]], "__init__() (mia_processes.bricks.preprocess.ants.processes.n4biasfieldcorrection method)": [[135, "mia_processes.bricks.preprocess.ants.processes.N4BiasFieldCorrection.__init__"]], "__init__() (mia_processes.bricks.preprocess.ants.processes.registration method)": [[135, "mia_processes.bricks.preprocess.ants.processes.Registration.__init__"]], "list_outputs() (mia_processes.bricks.preprocess.ants.processes.affineinitializer method)": [[135, "mia_processes.bricks.preprocess.ants.processes.AffineInitializer.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.ants.processes.applytransforms method)": [[135, "mia_processes.bricks.preprocess.ants.processes.ApplyTransforms.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.ants.processes.n4biasfieldcorrection method)": [[135, "mia_processes.bricks.preprocess.ants.processes.N4BiasFieldCorrection.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.ants.processes.registration method)": [[135, "mia_processes.bricks.preprocess.ants.processes.Registration.list_outputs"]], "mia_processes.bricks.preprocess.ants": [[135, "module-mia_processes.bricks.preprocess.ants"]], "mia_processes.bricks.preprocess.ants.processes": [[135, "module-mia_processes.bricks.preprocess.ants.processes"]], "run_process_mia() (mia_processes.bricks.preprocess.ants.processes.affineinitializer method)": [[135, "mia_processes.bricks.preprocess.ants.processes.AffineInitializer.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.ants.processes.applytransforms method)": [[135, "mia_processes.bricks.preprocess.ants.processes.ApplyTransforms.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.ants.processes.n4biasfieldcorrection method)": [[135, "mia_processes.bricks.preprocess.ants.processes.N4BiasFieldCorrection.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.ants.processes.registration method)": [[135, "mia_processes.bricks.preprocess.ants.processes.Registration.run_process_mia"]], "computedki (class in mia_processes.bricks.preprocess.dipy.processes)": [[136, "mia_processes.bricks.preprocess.dipy.processes.ComputeDKI"]], "denoise (class in mia_processes.bricks.preprocess.dipy.processes)": [[136, "mia_processes.bricks.preprocess.dipy.processes.Denoise"]], "__init__() (mia_processes.bricks.preprocess.dipy.processes.computedki method)": [[136, "mia_processes.bricks.preprocess.dipy.processes.ComputeDKI.__init__"]], "__init__() (mia_processes.bricks.preprocess.dipy.processes.denoise method)": [[136, "mia_processes.bricks.preprocess.dipy.processes.Denoise.__init__"]], "list_outputs() (mia_processes.bricks.preprocess.dipy.processes.computedki method)": [[136, "mia_processes.bricks.preprocess.dipy.processes.ComputeDKI.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.dipy.processes.denoise method)": [[136, "mia_processes.bricks.preprocess.dipy.processes.Denoise.list_outputs"]], "mia_processes.bricks.preprocess.dipy": [[136, "module-mia_processes.bricks.preprocess.dipy"]], "mia_processes.bricks.preprocess.dipy.processes": [[136, "module-mia_processes.bricks.preprocess.dipy.processes"]], "run_process_mia() (mia_processes.bricks.preprocess.dipy.processes.computedki method)": [[136, "mia_processes.bricks.preprocess.dipy.processes.ComputeDKI.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.dipy.processes.denoise method)": [[136, "mia_processes.bricks.preprocess.dipy.processes.Denoise.run_process_mia"]], "binarize (class in mia_processes.bricks.preprocess.freesurfer.processes)": [[137, "mia_processes.bricks.preprocess.freesurfer.processes.Binarize"]], "synthstrip (class in mia_processes.bricks.preprocess.freesurfer.processes)": [[137, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStrip"]], "synthstripmriqc (class in mia_processes.bricks.preprocess.freesurfer.processes)": [[137, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc"]], "synthstripmriqc.convblock (class in mia_processes.bricks.preprocess.freesurfer.processes)": [[137, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.ConvBlock"]], "synthstripmriqc.stripmodel (class in mia_processes.bricks.preprocess.freesurfer.processes)": [[137, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.StripModel"]], "__init__() (mia_processes.bricks.preprocess.freesurfer.processes.binarize method)": [[137, "mia_processes.bricks.preprocess.freesurfer.processes.Binarize.__init__"]], "__init__() (mia_processes.bricks.preprocess.freesurfer.processes.synthstrip method)": [[137, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStrip.__init__"]], "__init__() (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc method)": [[137, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.__init__"]], "__init__() (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc.convblock method)": [[137, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.ConvBlock.__init__"]], "__init__() (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc.stripmodel method)": [[137, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.StripModel.__init__"]], "conform() (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc method)": [[137, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.conform"]], "forward() (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc.convblock method)": [[137, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.ConvBlock.forward"]], "forward() (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc.stripmodel method)": [[137, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.StripModel.forward"]], "list_outputs() (mia_processes.bricks.preprocess.freesurfer.processes.binarize method)": [[137, "mia_processes.bricks.preprocess.freesurfer.processes.Binarize.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.freesurfer.processes.synthstrip method)": [[137, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStrip.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc method)": [[137, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.list_outputs"]], "mia_processes.bricks.preprocess.freesurfer": [[137, "module-mia_processes.bricks.preprocess.freesurfer"]], "mia_processes.bricks.preprocess.freesurfer.processes": [[137, "module-mia_processes.bricks.preprocess.freesurfer.processes"]], "resample_like() (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc method)": [[137, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.resample_like"]], "run_process_mia() (mia_processes.bricks.preprocess.freesurfer.processes.binarize method)": [[137, "mia_processes.bricks.preprocess.freesurfer.processes.Binarize.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.freesurfer.processes.synthstrip method)": [[137, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStrip.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc method)": [[137, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.run_process_mia"]], "betsurfacesextraction (class in mia_processes.bricks.preprocess.fsl.processes)": [[138, "mia_processes.bricks.preprocess.fsl.processes.BetSurfacesExtraction"]], "extractroi (class in mia_processes.bricks.preprocess.fsl.processes)": [[138, "mia_processes.bricks.preprocess.fsl.processes.ExtractROI"]], "fastsegment (class in mia_processes.bricks.preprocess.fsl.processes)": [[138, "mia_processes.bricks.preprocess.fsl.processes.FastSegment"]], "flirt (class in mia_processes.bricks.preprocess.fsl.processes)": [[138, "mia_processes.bricks.preprocess.fsl.processes.Flirt"]], "smooth (class in mia_processes.bricks.preprocess.fsl.processes)": [[138, "mia_processes.bricks.preprocess.fsl.processes.Smooth"]], "__init__() (mia_processes.bricks.preprocess.fsl.processes.betsurfacesextraction method)": [[138, "mia_processes.bricks.preprocess.fsl.processes.BetSurfacesExtraction.__init__"]], "__init__() (mia_processes.bricks.preprocess.fsl.processes.extractroi method)": [[138, "mia_processes.bricks.preprocess.fsl.processes.ExtractROI.__init__"]], "__init__() (mia_processes.bricks.preprocess.fsl.processes.fastsegment method)": [[138, "mia_processes.bricks.preprocess.fsl.processes.FastSegment.__init__"]], "__init__() (mia_processes.bricks.preprocess.fsl.processes.flirt method)": [[138, "mia_processes.bricks.preprocess.fsl.processes.Flirt.__init__"]], "__init__() (mia_processes.bricks.preprocess.fsl.processes.smooth method)": [[138, "mia_processes.bricks.preprocess.fsl.processes.Smooth.__init__"]], "list_outputs() (mia_processes.bricks.preprocess.fsl.processes.betsurfacesextraction method)": [[138, "mia_processes.bricks.preprocess.fsl.processes.BetSurfacesExtraction.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.fsl.processes.extractroi method)": [[138, "mia_processes.bricks.preprocess.fsl.processes.ExtractROI.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.fsl.processes.fastsegment method)": [[138, "mia_processes.bricks.preprocess.fsl.processes.FastSegment.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.fsl.processes.flirt method)": [[138, "mia_processes.bricks.preprocess.fsl.processes.Flirt.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.fsl.processes.smooth method)": [[138, "mia_processes.bricks.preprocess.fsl.processes.Smooth.list_outputs"]], "mia_processes.bricks.preprocess.fsl": [[138, "module-mia_processes.bricks.preprocess.fsl"]], "mia_processes.bricks.preprocess.fsl.processes": [[138, "module-mia_processes.bricks.preprocess.fsl.processes"]], "run_process_mia() (mia_processes.bricks.preprocess.fsl.processes.betsurfacesextraction method)": [[138, "mia_processes.bricks.preprocess.fsl.processes.BetSurfacesExtraction.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.fsl.processes.extractroi method)": [[138, "mia_processes.bricks.preprocess.fsl.processes.ExtractROI.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.fsl.processes.fastsegment method)": [[138, "mia_processes.bricks.preprocess.fsl.processes.FastSegment.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.fsl.processes.flirt method)": [[138, "mia_processes.bricks.preprocess.fsl.processes.Flirt.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.fsl.processes.smooth method)": [[138, "mia_processes.bricks.preprocess.fsl.processes.Smooth.run_process_mia"]], "constrainedsphericaldeconvolution (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.ConstrainedSphericalDeconvolution"]], "dwibiascorrect (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.DWIBiasCorrect"]], "dwibrainmask (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.DWIBrainMask"]], "dwidenoise (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.DWIDenoise"]], "dwiextract (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.DWIExtract"]], "dwipreproc (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.DWIPreproc"]], "editingtrack (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.EditingTrack"]], "filteringtrack (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.FilteringTrack"]], "fittensor (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.FitTensor"]], "generate5tt2gmwmi (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.Generate5tt2gmwmi"]], "generate5ttfsl (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.Generate5ttfsl"]], "mrcat (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.MRCat"]], "mrconvert (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.MRConvert"]], "mrdegibbs (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.MRDeGibbs"]], "mrmath (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.MRMath"]], "mrtransform (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.MRTransform"]], "mtnormalise (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.MTNormalise"]], "responsesddhollander (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.ResponseSDDhollander"]], "sphericalharmonicextraction (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.SphericalHarmonicExtraction"]], "tensormetrics (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.TensorMetrics"]], "tractography (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.Tractography"]], "transformfslconvert (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.TransformFSLConvert"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.constrainedsphericaldeconvolution method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.ConstrainedSphericalDeconvolution.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.dwibiascorrect method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.DWIBiasCorrect.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.dwibrainmask method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.DWIBrainMask.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.dwidenoise method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.DWIDenoise.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.dwiextract method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.DWIExtract.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.dwipreproc method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.DWIPreproc.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.editingtrack method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.EditingTrack.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.filteringtrack method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.FilteringTrack.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.fittensor method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.FitTensor.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.generate5tt2gmwmi method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.Generate5tt2gmwmi.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.generate5ttfsl method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.Generate5ttfsl.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.mrcat method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.MRCat.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.mrconvert method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.MRConvert.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.mrdegibbs method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.MRDeGibbs.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.mrmath method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.MRMath.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.mrtransform method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.MRTransform.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.mtnormalise method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.MTNormalise.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.responsesddhollander method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.ResponseSDDhollander.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.sphericalharmonicextraction method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.SphericalHarmonicExtraction.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.tensormetrics method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.TensorMetrics.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.tractography method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.Tractography.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.transformfslconvert method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.TransformFSLConvert.__init__"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.constrainedsphericaldeconvolution method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.ConstrainedSphericalDeconvolution.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.dwibiascorrect method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.DWIBiasCorrect.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.dwibrainmask method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.DWIBrainMask.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.dwidenoise method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.DWIDenoise.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.dwiextract method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.DWIExtract.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.dwipreproc method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.DWIPreproc.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.editingtrack method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.EditingTrack.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.filteringtrack method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.FilteringTrack.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.fittensor method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.FitTensor.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.generate5tt2gmwmi method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.Generate5tt2gmwmi.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.generate5ttfsl method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.Generate5ttfsl.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.mrcat method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.MRCat.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.mrconvert method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.MRConvert.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.mrdegibbs method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.MRDeGibbs.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.mrmath method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.MRMath.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.mrtransform method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.MRTransform.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.mtnormalise method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.MTNormalise.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.responsesddhollander method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.ResponseSDDhollander.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.sphericalharmonicextraction method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.SphericalHarmonicExtraction.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.tensormetrics method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.TensorMetrics.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.tractography method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.Tractography.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.transformfslconvert method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.TransformFSLConvert.list_outputs"]], "mia_processes.bricks.preprocess.mrtrix": [[139, "module-mia_processes.bricks.preprocess.mrtrix"]], "mia_processes.bricks.preprocess.mrtrix.processes": [[139, "module-mia_processes.bricks.preprocess.mrtrix.processes"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.constrainedsphericaldeconvolution method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.ConstrainedSphericalDeconvolution.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.dwibiascorrect method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.DWIBiasCorrect.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.dwibrainmask method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.DWIBrainMask.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.dwidenoise method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.DWIDenoise.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.dwiextract method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.DWIExtract.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.dwipreproc method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.DWIPreproc.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.editingtrack method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.EditingTrack.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.filteringtrack method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.FilteringTrack.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.fittensor method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.FitTensor.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.generate5tt2gmwmi method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.Generate5tt2gmwmi.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.generate5ttfsl method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.Generate5ttfsl.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.mrcat method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.MRCat.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.mrconvert method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.MRConvert.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.mrdegibbs method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.MRDeGibbs.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.mrmath method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.MRMath.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.mrtransform method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.MRTransform.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.mtnormalise method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.MTNormalise.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.responsesddhollander method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.ResponseSDDhollander.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.sphericalharmonicextraction method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.SphericalHarmonicExtraction.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.tensormetrics method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.TensorMetrics.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.tractography method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.Tractography.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.transformfslconvert method)": [[139, "mia_processes.bricks.preprocess.mrtrix.processes.TransformFSLConvert.run_process_mia"]], "applybiascorrection (class in mia_processes.bricks.preprocess.others.processing)": [[140, "mia_processes.bricks.preprocess.others.processing.ApplyBiasCorrection"]], "artifactmask (class in mia_processes.bricks.preprocess.others.processing)": [[140, "mia_processes.bricks.preprocess.others.processing.ArtifactMask"]], "binarize (class in mia_processes.bricks.preprocess.others.processing)": [[140, "mia_processes.bricks.preprocess.others.processing.Binarize"]], "conformimage (class in mia_processes.bricks.preprocess.others.processing)": [[140, "mia_processes.bricks.preprocess.others.processing.ConformImage"]], "convroi (class in mia_processes.bricks.preprocess.others.processing)": [[140, "mia_processes.bricks.preprocess.others.processing.ConvROI"]], "enhance (class in mia_processes.bricks.preprocess.others.processing)": [[140, "mia_processes.bricks.preprocess.others.processing.Enhance"]], "estimatesnr (class in mia_processes.bricks.preprocess.others.processing)": [[140, "mia_processes.bricks.preprocess.others.processing.EstimateSNR"]], "gradientthreshold (class in mia_processes.bricks.preprocess.others.processing)": [[140, "mia_processes.bricks.preprocess.others.processing.GradientThreshold"]], "harmonize (class in mia_processes.bricks.preprocess.others.processing)": [[140, "mia_processes.bricks.preprocess.others.processing.Harmonize"]], "intensityclip (class in mia_processes.bricks.preprocess.others.processing)": [[140, "mia_processes.bricks.preprocess.others.processing.IntensityClip"]], "mask (class in mia_processes.bricks.preprocess.others.processing)": [[140, "mia_processes.bricks.preprocess.others.processing.Mask"]], "nonsteadystatedetector (class in mia_processes.bricks.preprocess.others.processing)": [[140, "mia_processes.bricks.preprocess.others.processing.NonSteadyStateDetector"]], "resample1 (class in mia_processes.bricks.preprocess.others.processing)": [[140, "mia_processes.bricks.preprocess.others.processing.Resample1"]], "resample2 (class in mia_processes.bricks.preprocess.others.processing)": [[140, "mia_processes.bricks.preprocess.others.processing.Resample2"]], "rotationmask (class in mia_processes.bricks.preprocess.others.processing)": [[140, "mia_processes.bricks.preprocess.others.processing.RotationMask"]], "sanitize (class in mia_processes.bricks.preprocess.others.processing)": [[140, "mia_processes.bricks.preprocess.others.processing.Sanitize"]], "tsnr (class in mia_processes.bricks.preprocess.others.processing)": [[140, "mia_processes.bricks.preprocess.others.processing.TSNR"]], "templatefromtemplateflow (class in mia_processes.bricks.preprocess.others.processing)": [[140, "mia_processes.bricks.preprocess.others.processing.TemplateFromTemplateFlow"]], "threshold (class in mia_processes.bricks.preprocess.others.processing)": [[140, "mia_processes.bricks.preprocess.others.processing.Threshold"]], "__init__() (mia_processes.bricks.preprocess.others.processing.applybiascorrection method)": [[140, "mia_processes.bricks.preprocess.others.processing.ApplyBiasCorrection.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.artifactmask method)": [[140, "mia_processes.bricks.preprocess.others.processing.ArtifactMask.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.binarize method)": [[140, "mia_processes.bricks.preprocess.others.processing.Binarize.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.conformimage method)": [[140, "mia_processes.bricks.preprocess.others.processing.ConformImage.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.convroi method)": [[140, "mia_processes.bricks.preprocess.others.processing.ConvROI.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.enhance method)": [[140, "mia_processes.bricks.preprocess.others.processing.Enhance.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.estimatesnr method)": [[140, "mia_processes.bricks.preprocess.others.processing.EstimateSNR.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.gradientthreshold method)": [[140, "mia_processes.bricks.preprocess.others.processing.GradientThreshold.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.harmonize method)": [[140, "mia_processes.bricks.preprocess.others.processing.Harmonize.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.intensityclip method)": [[140, "mia_processes.bricks.preprocess.others.processing.IntensityClip.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.mask method)": [[140, "mia_processes.bricks.preprocess.others.processing.Mask.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.nonsteadystatedetector method)": [[140, "mia_processes.bricks.preprocess.others.processing.NonSteadyStateDetector.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.resample1 method)": [[140, "mia_processes.bricks.preprocess.others.processing.Resample1.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.resample2 method)": [[140, "mia_processes.bricks.preprocess.others.processing.Resample2.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.rotationmask method)": [[140, "mia_processes.bricks.preprocess.others.processing.RotationMask.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.sanitize method)": [[140, "mia_processes.bricks.preprocess.others.processing.Sanitize.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.tsnr method)": [[140, "mia_processes.bricks.preprocess.others.processing.TSNR.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.templatefromtemplateflow method)": [[140, "mia_processes.bricks.preprocess.others.processing.TemplateFromTemplateFlow.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.threshold method)": [[140, "mia_processes.bricks.preprocess.others.processing.Threshold.__init__"]], "artifact_mask() (in module mia_processes.bricks.preprocess.others.processing)": [[140, "mia_processes.bricks.preprocess.others.processing.artifact_mask"]], "is_outlier() (in module mia_processes.bricks.preprocess.others.processing)": [[140, "mia_processes.bricks.preprocess.others.processing.is_outlier"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.applybiascorrection method)": [[140, "mia_processes.bricks.preprocess.others.processing.ApplyBiasCorrection.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.artifactmask method)": [[140, "mia_processes.bricks.preprocess.others.processing.ArtifactMask.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.binarize method)": [[140, "mia_processes.bricks.preprocess.others.processing.Binarize.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.conformimage method)": [[140, "mia_processes.bricks.preprocess.others.processing.ConformImage.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.convroi method)": [[140, "mia_processes.bricks.preprocess.others.processing.ConvROI.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.enhance method)": [[140, "mia_processes.bricks.preprocess.others.processing.Enhance.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.estimatesnr method)": [[140, "mia_processes.bricks.preprocess.others.processing.EstimateSNR.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.gradientthreshold method)": [[140, "mia_processes.bricks.preprocess.others.processing.GradientThreshold.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.harmonize method)": [[140, "mia_processes.bricks.preprocess.others.processing.Harmonize.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.intensityclip method)": [[140, "mia_processes.bricks.preprocess.others.processing.IntensityClip.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.mask method)": [[140, "mia_processes.bricks.preprocess.others.processing.Mask.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.nonsteadystatedetector method)": [[140, "mia_processes.bricks.preprocess.others.processing.NonSteadyStateDetector.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.resample1 method)": [[140, "mia_processes.bricks.preprocess.others.processing.Resample1.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.resample2 method)": [[140, "mia_processes.bricks.preprocess.others.processing.Resample2.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.rotationmask method)": [[140, "mia_processes.bricks.preprocess.others.processing.RotationMask.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.sanitize method)": [[140, "mia_processes.bricks.preprocess.others.processing.Sanitize.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.tsnr method)": [[140, "mia_processes.bricks.preprocess.others.processing.TSNR.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.templatefromtemplateflow method)": [[140, "mia_processes.bricks.preprocess.others.processing.TemplateFromTemplateFlow.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.threshold method)": [[140, "mia_processes.bricks.preprocess.others.processing.Threshold.list_outputs"]], "mia_processes.bricks.preprocess.others": [[140, "module-mia_processes.bricks.preprocess.others"]], "mia_processes.bricks.preprocess.others.processing": [[140, "module-mia_processes.bricks.preprocess.others.processing"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.applybiascorrection method)": [[140, "mia_processes.bricks.preprocess.others.processing.ApplyBiasCorrection.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.artifactmask method)": [[140, "mia_processes.bricks.preprocess.others.processing.ArtifactMask.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.binarize method)": [[140, "mia_processes.bricks.preprocess.others.processing.Binarize.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.conformimage method)": [[140, "mia_processes.bricks.preprocess.others.processing.ConformImage.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.convroi method)": [[140, "mia_processes.bricks.preprocess.others.processing.ConvROI.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.enhance method)": [[140, "mia_processes.bricks.preprocess.others.processing.Enhance.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.estimatesnr method)": [[140, "mia_processes.bricks.preprocess.others.processing.EstimateSNR.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.gradientthreshold method)": [[140, "mia_processes.bricks.preprocess.others.processing.GradientThreshold.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.harmonize method)": [[140, "mia_processes.bricks.preprocess.others.processing.Harmonize.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.intensityclip method)": [[140, "mia_processes.bricks.preprocess.others.processing.IntensityClip.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.mask method)": [[140, "mia_processes.bricks.preprocess.others.processing.Mask.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.nonsteadystatedetector method)": [[140, "mia_processes.bricks.preprocess.others.processing.NonSteadyStateDetector.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.resample1 method)": [[140, "mia_processes.bricks.preprocess.others.processing.Resample1.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.resample2 method)": [[140, "mia_processes.bricks.preprocess.others.processing.Resample2.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.rotationmask method)": [[140, "mia_processes.bricks.preprocess.others.processing.RotationMask.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.sanitize method)": [[140, "mia_processes.bricks.preprocess.others.processing.Sanitize.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.tsnr method)": [[140, "mia_processes.bricks.preprocess.others.processing.TSNR.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.templatefromtemplateflow method)": [[140, "mia_processes.bricks.preprocess.others.processing.TemplateFromTemplateFlow.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.threshold method)": [[140, "mia_processes.bricks.preprocess.others.processing.Threshold.run_process_mia"]], "threshold() (in module mia_processes.bricks.preprocess.others.processing)": [[140, "mia_processes.bricks.preprocess.others.processing.threshold"]], "coregister (class in mia_processes.bricks.preprocess.spm.spatial_preprocessing)": [[141, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Coregister"]], "gm_wm_normalize (class in mia_processes.bricks.preprocess.spm.spatial_preprocessing)": [[141, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.GM_WM_Normalize"]], "newsegment (class in mia_processes.bricks.preprocess.spm.spatial_preprocessing)": [[141, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.NewSegment"]], "normalize12 (class in mia_processes.bricks.preprocess.spm.spatial_preprocessing)": [[141, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Normalize12"]], "realign (class in mia_processes.bricks.preprocess.spm.spatial_preprocessing)": [[141, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Realign"]], "slicetiming (class in mia_processes.bricks.preprocess.spm.spatial_preprocessing)": [[141, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.SliceTiming"]], "smooth (class in mia_processes.bricks.preprocess.spm.spatial_preprocessing)": [[141, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Smooth"]], "__init__() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.coregister method)": [[141, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Coregister.__init__"]], "__init__() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.gm_wm_normalize method)": [[141, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.GM_WM_Normalize.__init__"]], "__init__() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.newsegment method)": [[141, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.NewSegment.__init__"]], "__init__() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.normalize12 method)": [[141, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Normalize12.__init__"]], "__init__() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.realign method)": [[141, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Realign.__init__"]], "__init__() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.slicetiming method)": [[141, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.SliceTiming.__init__"]], "__init__() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.smooth method)": [[141, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Smooth.__init__"]], "list_outputs() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.coregister method)": [[141, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Coregister.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.gm_wm_normalize method)": [[141, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.GM_WM_Normalize.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.newsegment method)": [[141, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.NewSegment.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.normalize12 method)": [[141, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Normalize12.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.realign method)": [[141, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Realign.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.slicetiming method)": [[141, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.SliceTiming.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.smooth method)": [[141, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Smooth.list_outputs"]], "mia_processes.bricks.preprocess.spm": [[141, "module-mia_processes.bricks.preprocess.spm"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing": [[141, "module-mia_processes.bricks.preprocess.spm.spatial_preprocessing"]], "run_process_mia() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.coregister method)": [[141, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Coregister.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.gm_wm_normalize method)": [[141, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.GM_WM_Normalize.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.newsegment method)": [[141, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.NewSegment.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.normalize12 method)": [[141, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Normalize12.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.realign method)": [[141, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Realign.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.slicetiming method)": [[141, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.SliceTiming.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.smooth method)": [[141, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Smooth.run_process_mia"]], "anatiqms (class in mia_processes.bricks.reports.processes)": [[142, "mia_processes.bricks.reports.processes.AnatIQMs"]], "boldiqms (class in mia_processes.bricks.reports.processes)": [[142, "mia_processes.bricks.reports.processes.BoldIQMs"]], "boldiqmsplot (class in mia_processes.bricks.reports.processes)": [[142, "mia_processes.bricks.reports.processes.BoldIQMsPlot"]], "carpetparcellation (class in mia_processes.bricks.reports.processes)": [[142, "mia_processes.bricks.reports.processes.CarpetParcellation"]], "computedvars (class in mia_processes.bricks.reports.processes)": [[142, "mia_processes.bricks.reports.processes.ComputeDVARS"]], "framewisedisplacement (class in mia_processes.bricks.reports.processes)": [[142, "mia_processes.bricks.reports.processes.FramewiseDisplacement"]], "mean_stddev_calc (class in mia_processes.bricks.reports.processes)": [[142, "mia_processes.bricks.reports.processes.Mean_stdDev_calc"]], "reportanatmriqc (class in mia_processes.bricks.reports.reporting)": [[142, "mia_processes.bricks.reports.reporting.ReportAnatMriqc"]], "reportco2inhalcvr (class in mia_processes.bricks.reports.reporting)": [[142, "mia_processes.bricks.reports.reporting.ReportCO2inhalCvr"]], "reportfuncmriqc (class in mia_processes.bricks.reports.reporting)": [[142, "mia_processes.bricks.reports.reporting.ReportFuncMriqc"]], "reportgroupmriqc (class in mia_processes.bricks.reports.reporting)": [[142, "mia_processes.bricks.reports.reporting.ReportGroupMriqc"]], "result_collector (class in mia_processes.bricks.reports.processes)": [[142, "mia_processes.bricks.reports.processes.Result_collector"]], "spikes (class in mia_processes.bricks.reports.processes)": [[142, "mia_processes.bricks.reports.processes.Spikes"]], "__init__() (mia_processes.bricks.reports.processes.anatiqms method)": [[142, "mia_processes.bricks.reports.processes.AnatIQMs.__init__"]], "__init__() (mia_processes.bricks.reports.processes.boldiqms method)": [[142, "mia_processes.bricks.reports.processes.BoldIQMs.__init__"]], "__init__() (mia_processes.bricks.reports.processes.boldiqmsplot method)": [[142, "mia_processes.bricks.reports.processes.BoldIQMsPlot.__init__"]], "__init__() (mia_processes.bricks.reports.processes.carpetparcellation method)": [[142, "mia_processes.bricks.reports.processes.CarpetParcellation.__init__"]], "__init__() (mia_processes.bricks.reports.processes.computedvars method)": [[142, "mia_processes.bricks.reports.processes.ComputeDVARS.__init__"]], "__init__() (mia_processes.bricks.reports.processes.framewisedisplacement method)": [[142, "mia_processes.bricks.reports.processes.FramewiseDisplacement.__init__"]], "__init__() (mia_processes.bricks.reports.processes.mean_stddev_calc method)": [[142, "mia_processes.bricks.reports.processes.Mean_stdDev_calc.__init__"]], "__init__() (mia_processes.bricks.reports.processes.result_collector method)": [[142, "mia_processes.bricks.reports.processes.Result_collector.__init__"]], "__init__() (mia_processes.bricks.reports.processes.spikes method)": [[142, "mia_processes.bricks.reports.processes.Spikes.__init__"]], "__init__() (mia_processes.bricks.reports.reporting.reportanatmriqc method)": [[142, "mia_processes.bricks.reports.reporting.ReportAnatMriqc.__init__"]], "__init__() (mia_processes.bricks.reports.reporting.reportco2inhalcvr method)": [[142, "mia_processes.bricks.reports.reporting.ReportCO2inhalCvr.__init__"]], "__init__() (mia_processes.bricks.reports.reporting.reportfuncmriqc method)": [[142, "mia_processes.bricks.reports.reporting.ReportFuncMriqc.__init__"]], "__init__() (mia_processes.bricks.reports.reporting.reportgroupmriqc method)": [[142, "mia_processes.bricks.reports.reporting.ReportGroupMriqc.__init__"]], "art_qi1() (in module mia_processes.bricks.reports.processes)": [[142, "mia_processes.bricks.reports.processes.art_qi1"]], "art_qi2() (in module mia_processes.bricks.reports.processes)": [[142, "mia_processes.bricks.reports.processes.art_qi2"]], "cjv() (in module mia_processes.bricks.reports.processes)": [[142, "mia_processes.bricks.reports.processes.cjv"]], "cnr() (in module mia_processes.bricks.reports.processes)": [[142, "mia_processes.bricks.reports.processes.cnr"]], "efc() (in module mia_processes.bricks.reports.processes)": [[142, "mia_processes.bricks.reports.processes.efc"]], "fber() (in module mia_processes.bricks.reports.processes)": [[142, "mia_processes.bricks.reports.processes.fber"]], "find_peaks() (in module mia_processes.bricks.reports.processes)": [[142, "mia_processes.bricks.reports.processes.find_peaks"]], "find_spikes() (in module mia_processes.bricks.reports.processes)": [[142, "mia_processes.bricks.reports.processes.find_spikes"]], "fuzzy_jaccard() (in module mia_processes.bricks.reports.processes)": [[142, "mia_processes.bricks.reports.processes.fuzzy_jaccard"]], "gsr() (in module mia_processes.bricks.reports.processes)": [[142, "mia_processes.bricks.reports.processes.gsr"]], "image_binary_dilation() (in module mia_processes.bricks.reports.processes)": [[142, "mia_processes.bricks.reports.processes.image_binary_dilation"]], "list_outputs() (mia_processes.bricks.reports.processes.anatiqms method)": [[142, "mia_processes.bricks.reports.processes.AnatIQMs.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.processes.boldiqms method)": [[142, "mia_processes.bricks.reports.processes.BoldIQMs.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.processes.boldiqmsplot method)": [[142, "mia_processes.bricks.reports.processes.BoldIQMsPlot.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.processes.carpetparcellation method)": [[142, "mia_processes.bricks.reports.processes.CarpetParcellation.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.processes.computedvars method)": [[142, "mia_processes.bricks.reports.processes.ComputeDVARS.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.processes.framewisedisplacement method)": [[142, "mia_processes.bricks.reports.processes.FramewiseDisplacement.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.processes.mean_stddev_calc method)": [[142, "mia_processes.bricks.reports.processes.Mean_stdDev_calc.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.processes.result_collector method)": [[142, "mia_processes.bricks.reports.processes.Result_collector.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.processes.spikes method)": [[142, "mia_processes.bricks.reports.processes.Spikes.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.reporting.reportanatmriqc method)": [[142, "mia_processes.bricks.reports.reporting.ReportAnatMriqc.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.reporting.reportco2inhalcvr method)": [[142, "mia_processes.bricks.reports.reporting.ReportCO2inhalCvr.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.reporting.reportfuncmriqc method)": [[142, "mia_processes.bricks.reports.reporting.ReportFuncMriqc.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.reporting.reportgroupmriqc method)": [[142, "mia_processes.bricks.reports.reporting.ReportGroupMriqc.list_outputs"]], "mia_processes.bricks.reports": [[142, "module-mia_processes.bricks.reports"]], "mia_processes.bricks.reports.processes": [[142, "module-mia_processes.bricks.reports.processes"]], "mia_processes.bricks.reports.reporting": [[142, "module-mia_processes.bricks.reports.reporting"]], "normalize_mc_params() (in module mia_processes.bricks.reports.processes)": [[142, "mia_processes.bricks.reports.processes.normalize_mc_params"]], "regress_poly() (in module mia_processes.bricks.reports.processes)": [[142, "mia_processes.bricks.reports.processes.regress_poly"]], "rpve() (in module mia_processes.bricks.reports.processes)": [[142, "mia_processes.bricks.reports.processes.rpve"]], "run_process_mia() (mia_processes.bricks.reports.processes.anatiqms method)": [[142, "mia_processes.bricks.reports.processes.AnatIQMs.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.processes.boldiqms method)": [[142, "mia_processes.bricks.reports.processes.BoldIQMs.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.processes.boldiqmsplot method)": [[142, "mia_processes.bricks.reports.processes.BoldIQMsPlot.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.processes.carpetparcellation method)": [[142, "mia_processes.bricks.reports.processes.CarpetParcellation.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.processes.computedvars method)": [[142, "mia_processes.bricks.reports.processes.ComputeDVARS.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.processes.framewisedisplacement method)": [[142, "mia_processes.bricks.reports.processes.FramewiseDisplacement.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.processes.mean_stddev_calc method)": [[142, "mia_processes.bricks.reports.processes.Mean_stdDev_calc.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.processes.result_collector method)": [[142, "mia_processes.bricks.reports.processes.Result_collector.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.processes.spikes method)": [[142, "mia_processes.bricks.reports.processes.Spikes.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.reporting.reportanatmriqc method)": [[142, "mia_processes.bricks.reports.reporting.ReportAnatMriqc.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.reporting.reportco2inhalcvr method)": [[142, "mia_processes.bricks.reports.reporting.ReportCO2inhalCvr.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.reporting.reportfuncmriqc method)": [[142, "mia_processes.bricks.reports.reporting.ReportFuncMriqc.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.reporting.reportgroupmriqc method)": [[142, "mia_processes.bricks.reports.reporting.ReportGroupMriqc.run_process_mia"]], "snr() (in module mia_processes.bricks.reports.processes)": [[142, "mia_processes.bricks.reports.processes.snr"]], "snr_dietrich() (in module mia_processes.bricks.reports.processes)": [[142, "mia_processes.bricks.reports.processes.snr_dietrich"]], "summary_stats() (in module mia_processes.bricks.reports.processes)": [[142, "mia_processes.bricks.reports.processes.summary_stats"]], "volume_fraction() (in module mia_processes.bricks.reports.processes)": [[142, "mia_processes.bricks.reports.processes.volume_fraction"]], "wm2max() (in module mia_processes.bricks.reports.processes)": [[142, "mia_processes.bricks.reports.processes.wm2max"]], "mia_processes.bricks.stat": [[143, "module-mia_processes.bricks.stat"]], "estimatecontrast (class in mia_processes.bricks.stat.spm.model)": [[144, "mia_processes.bricks.stat.spm.model.EstimateContrast"]], "estimatemodel (class in mia_processes.bricks.stat.spm.model)": [[144, "mia_processes.bricks.stat.spm.model.EstimateModel"]], "level1design (class in mia_processes.bricks.stat.spm.model)": [[144, "mia_processes.bricks.stat.spm.model.Level1Design"]], "multipleregressiondesign (class in mia_processes.bricks.stat.spm.model)": [[144, "mia_processes.bricks.stat.spm.model.MultipleRegressionDesign"]], "onesamplettestdesign (class in mia_processes.bricks.stat.spm.model)": [[144, "mia_processes.bricks.stat.spm.model.OneSampleTTestDesign"]], "pairedttestdesign (class in mia_processes.bricks.stat.spm.model)": [[144, "mia_processes.bricks.stat.spm.model.PairedTTestDesign"]], "twosamplettestdesign (class in mia_processes.bricks.stat.spm.model)": [[144, "mia_processes.bricks.stat.spm.model.TwoSampleTTestDesign"]], "__init__() (mia_processes.bricks.stat.spm.model.estimatecontrast method)": [[144, "mia_processes.bricks.stat.spm.model.EstimateContrast.__init__"]], "__init__() (mia_processes.bricks.stat.spm.model.estimatemodel method)": [[144, "mia_processes.bricks.stat.spm.model.EstimateModel.__init__"]], "__init__() (mia_processes.bricks.stat.spm.model.level1design method)": [[144, "mia_processes.bricks.stat.spm.model.Level1Design.__init__"]], "__init__() (mia_processes.bricks.stat.spm.model.multipleregressiondesign method)": [[144, "mia_processes.bricks.stat.spm.model.MultipleRegressionDesign.__init__"]], "__init__() (mia_processes.bricks.stat.spm.model.onesamplettestdesign method)": [[144, "mia_processes.bricks.stat.spm.model.OneSampleTTestDesign.__init__"]], "__init__() (mia_processes.bricks.stat.spm.model.pairedttestdesign method)": [[144, "mia_processes.bricks.stat.spm.model.PairedTTestDesign.__init__"]], "__init__() (mia_processes.bricks.stat.spm.model.twosamplettestdesign method)": [[144, "mia_processes.bricks.stat.spm.model.TwoSampleTTestDesign.__init__"]], "get_covariates() (in module mia_processes.bricks.stat.spm.model)": [[144, "mia_processes.bricks.stat.spm.model.get_covariates"]], "list_outputs() (mia_processes.bricks.stat.spm.model.estimatecontrast method)": [[144, "mia_processes.bricks.stat.spm.model.EstimateContrast.list_outputs"]], "list_outputs() (mia_processes.bricks.stat.spm.model.estimatemodel method)": [[144, "mia_processes.bricks.stat.spm.model.EstimateModel.list_outputs"]], "list_outputs() (mia_processes.bricks.stat.spm.model.level1design method)": [[144, "mia_processes.bricks.stat.spm.model.Level1Design.list_outputs"]], "list_outputs() (mia_processes.bricks.stat.spm.model.multipleregressiondesign method)": [[144, "mia_processes.bricks.stat.spm.model.MultipleRegressionDesign.list_outputs"]], "list_outputs() (mia_processes.bricks.stat.spm.model.onesamplettestdesign method)": [[144, "mia_processes.bricks.stat.spm.model.OneSampleTTestDesign.list_outputs"]], "list_outputs() (mia_processes.bricks.stat.spm.model.pairedttestdesign method)": [[144, "mia_processes.bricks.stat.spm.model.PairedTTestDesign.list_outputs"]], "list_outputs() (mia_processes.bricks.stat.spm.model.twosamplettestdesign method)": [[144, "mia_processes.bricks.stat.spm.model.TwoSampleTTestDesign.list_outputs"]], "mia_processes.bricks.stat.spm": [[144, "module-mia_processes.bricks.stat.spm"]], "mia_processes.bricks.stat.spm.model": [[144, "module-mia_processes.bricks.stat.spm.model"]], "run_process_mia() (mia_processes.bricks.stat.spm.model.estimatecontrast method)": [[144, "mia_processes.bricks.stat.spm.model.EstimateContrast.run_process_mia"]], "run_process_mia() (mia_processes.bricks.stat.spm.model.estimatemodel method)": [[144, "mia_processes.bricks.stat.spm.model.EstimateModel.run_process_mia"]], "run_process_mia() (mia_processes.bricks.stat.spm.model.level1design method)": [[144, "mia_processes.bricks.stat.spm.model.Level1Design.run_process_mia"]], "run_process_mia() (mia_processes.bricks.stat.spm.model.multipleregressiondesign method)": [[144, "mia_processes.bricks.stat.spm.model.MultipleRegressionDesign.run_process_mia"]], "run_process_mia() (mia_processes.bricks.stat.spm.model.onesamplettestdesign method)": [[144, "mia_processes.bricks.stat.spm.model.OneSampleTTestDesign.run_process_mia"]], "run_process_mia() (mia_processes.bricks.stat.spm.model.pairedttestdesign method)": [[144, "mia_processes.bricks.stat.spm.model.PairedTTestDesign.run_process_mia"]], "run_process_mia() (mia_processes.bricks.stat.spm.model.twosamplettestdesign method)": [[144, "mia_processes.bricks.stat.spm.model.TwoSampleTTestDesign.run_process_mia"]], "concat_to_list (class in mia_processes.bricks.tools.tools)": [[145, "mia_processes.bricks.tools.tools.Concat_to_list"]], "concat_to_list_of_list (class in mia_processes.bricks.tools.tools)": [[145, "mia_processes.bricks.tools.tools.Concat_to_list_of_list"]], "delete_data (class in mia_processes.bricks.tools.tools)": [[145, "mia_processes.bricks.tools.tools.Delete_data"]], "files_to_list (class in mia_processes.bricks.tools.tools)": [[145, "mia_processes.bricks.tools.tools.Files_To_List"]], "filter_files_list (class in mia_processes.bricks.tools.tools)": [[145, "mia_processes.bricks.tools.tools.Filter_Files_List"]], "find_in_list (class in mia_processes.bricks.tools.tools)": [[145, "mia_processes.bricks.tools.tools.Find_In_List"]], "get_conditions_from_csv (class in mia_processes.bricks.tools.tools)": [[145, "mia_processes.bricks.tools.tools.Get_Conditions_From_csv"]], "get_patient_name (class in mia_processes.bricks.tools.tools)": [[145, "mia_processes.bricks.tools.tools.Get_Patient_Name"]], "import_data (class in mia_processes.bricks.tools.tools)": [[145, "mia_processes.bricks.tools.tools.Import_Data"]], "input_filter (class in mia_processes.bricks.tools.tools)": [[145, "mia_processes.bricks.tools.tools.Input_Filter"]], "list_duplicate (class in mia_processes.bricks.tools.tools)": [[145, "mia_processes.bricks.tools.tools.List_Duplicate"]], "list_to_file (class in mia_processes.bricks.tools.tools)": [[145, "mia_processes.bricks.tools.tools.List_To_File"]], "make_a_list (class in mia_processes.bricks.tools.tools)": [[145, "mia_processes.bricks.tools.tools.Make_A_List"]], "__init__() (mia_processes.bricks.tools.tools.concat_to_list method)": [[145, "mia_processes.bricks.tools.tools.Concat_to_list.__init__"]], "__init__() (mia_processes.bricks.tools.tools.concat_to_list_of_list method)": [[145, "mia_processes.bricks.tools.tools.Concat_to_list_of_list.__init__"]], "__init__() (mia_processes.bricks.tools.tools.delete_data method)": [[145, "mia_processes.bricks.tools.tools.Delete_data.__init__"]], "__init__() (mia_processes.bricks.tools.tools.files_to_list method)": [[145, "mia_processes.bricks.tools.tools.Files_To_List.__init__"]], "__init__() (mia_processes.bricks.tools.tools.filter_files_list method)": [[145, "mia_processes.bricks.tools.tools.Filter_Files_List.__init__"]], "__init__() (mia_processes.bricks.tools.tools.find_in_list method)": [[145, "mia_processes.bricks.tools.tools.Find_In_List.__init__"]], "__init__() (mia_processes.bricks.tools.tools.get_conditions_from_csv method)": [[145, "mia_processes.bricks.tools.tools.Get_Conditions_From_csv.__init__"]], "__init__() (mia_processes.bricks.tools.tools.get_patient_name method)": [[145, "mia_processes.bricks.tools.tools.Get_Patient_Name.__init__"]], "__init__() (mia_processes.bricks.tools.tools.import_data method)": [[145, "mia_processes.bricks.tools.tools.Import_Data.__init__"]], "__init__() (mia_processes.bricks.tools.tools.input_filter method)": [[145, "mia_processes.bricks.tools.tools.Input_Filter.__init__"]], "__init__() (mia_processes.bricks.tools.tools.list_duplicate method)": [[145, "mia_processes.bricks.tools.tools.List_Duplicate.__init__"]], "__init__() (mia_processes.bricks.tools.tools.list_to_file method)": [[145, "mia_processes.bricks.tools.tools.List_To_File.__init__"]], "__init__() (mia_processes.bricks.tools.tools.make_a_list method)": [[145, "mia_processes.bricks.tools.tools.Make_A_List.__init__"]], "list_outputs() (mia_processes.bricks.tools.tools.concat_to_list method)": [[145, "mia_processes.bricks.tools.tools.Concat_to_list.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.concat_to_list_of_list method)": [[145, "mia_processes.bricks.tools.tools.Concat_to_list_of_list.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.delete_data method)": [[145, "mia_processes.bricks.tools.tools.Delete_data.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.files_to_list method)": [[145, "mia_processes.bricks.tools.tools.Files_To_List.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.filter_files_list method)": [[145, "mia_processes.bricks.tools.tools.Filter_Files_List.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.find_in_list method)": [[145, "mia_processes.bricks.tools.tools.Find_In_List.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.get_conditions_from_csv method)": [[145, "mia_processes.bricks.tools.tools.Get_Conditions_From_csv.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.get_patient_name method)": [[145, "mia_processes.bricks.tools.tools.Get_Patient_Name.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.import_data method)": [[145, "mia_processes.bricks.tools.tools.Import_Data.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.input_filter method)": [[145, "mia_processes.bricks.tools.tools.Input_Filter.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.list_duplicate method)": [[145, "mia_processes.bricks.tools.tools.List_Duplicate.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.list_to_file method)": [[145, "mia_processes.bricks.tools.tools.List_To_File.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.make_a_list method)": [[145, "mia_processes.bricks.tools.tools.Make_A_List.list_outputs"]], "mia_processes.bricks.tools": [[145, "module-mia_processes.bricks.tools"]], "mia_processes.bricks.tools.tools": [[145, "module-mia_processes.bricks.tools.tools"]], "run_process_mia() (mia_processes.bricks.tools.tools.concat_to_list method)": [[145, "mia_processes.bricks.tools.tools.Concat_to_list.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.concat_to_list_of_list method)": [[145, "mia_processes.bricks.tools.tools.Concat_to_list_of_list.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.delete_data method)": [[145, "mia_processes.bricks.tools.tools.Delete_data.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.files_to_list method)": [[145, "mia_processes.bricks.tools.tools.Files_To_List.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.filter_files_list method)": [[145, "mia_processes.bricks.tools.tools.Filter_Files_List.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.find_in_list method)": [[145, "mia_processes.bricks.tools.tools.Find_In_List.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.get_conditions_from_csv method)": [[145, "mia_processes.bricks.tools.tools.Get_Conditions_From_csv.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.get_patient_name method)": [[145, "mia_processes.bricks.tools.tools.Get_Patient_Name.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.import_data method)": [[145, "mia_processes.bricks.tools.tools.Import_Data.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.input_filter method)": [[145, "mia_processes.bricks.tools.tools.Input_Filter.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.list_duplicate method)": [[145, "mia_processes.bricks.tools.tools.List_Duplicate.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.list_to_file method)": [[145, "mia_processes.bricks.tools.tools.List_To_File.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.make_a_list method)": [[145, "mia_processes.bricks.tools.tools.Make_A_List.run_process_mia"]], "mia_processes.pipelines": [[146, "module-mia_processes.pipelines"]], "co2_inhalation (class in mia_processes.pipelines.cerebvascularreact.co2_inhalation)": [[147, "mia_processes.pipelines.CerebVascularReact.co2_inhalation.CO2_inhalation"]], "mia_processes.pipelines.cerebvascularreact": [[147, "module-mia_processes.pipelines.CerebVascularReact"]], "mia_processes.pipelines.cerebvascularreact.co2_inhalation": [[147, "module-mia_processes.pipelines.CerebVascularReact.co2_inhalation"]], "pipeline_definition() (mia_processes.pipelines.cerebvascularreact.co2_inhalation.co2_inhalation method)": [[147, "mia_processes.pipelines.CerebVascularReact.co2_inhalation.CO2_inhalation.pipeline_definition"]], "dwi_whole_brain_tractography (class in mia_processes.pipelines.dwitractography.dwi_whole_brain_tractography)": [[148, "mia_processes.pipelines.DWITractography.dwi_whole_brain_tractography.Dwi_whole_brain_tractography"]], "mia_processes.pipelines.dwitractography": [[148, "module-mia_processes.pipelines.DWITractography"]], "mia_processes.pipelines.dwitractography.dwi_whole_brain_tractography": [[148, "module-mia_processes.pipelines.DWITractography.dwi_whole_brain_tractography"]], "pipeline_definition() (mia_processes.pipelines.dwitractography.dwi_whole_brain_tractography.dwi_whole_brain_tractography method)": [[148, "mia_processes.pipelines.DWITractography.dwi_whole_brain_tractography.Dwi_whole_brain_tractography.pipeline_definition"]], "anat_airmask (class in mia_processes.pipelines.preprocess.anat_airmask)": [[149, "mia_processes.pipelines.preprocess.anat_airmask.Anat_airmask"]], "anat_headmask (class in mia_processes.pipelines.preprocess.anat_headmask)": [[149, "mia_processes.pipelines.preprocess.anat_headmask.Anat_headmask"]], "anat_mni_tpms (class in mia_processes.pipelines.preprocess.anat_mni_tpms)": [[149, "mia_processes.pipelines.preprocess.anat_mni_tpms.Anat_mni_tpms"]], "anat_skullstrip (class in mia_processes.pipelines.preprocess.anat_skullstrip)": [[149, "mia_processes.pipelines.preprocess.anat_skullstrip.Anat_skullstrip"]], "anat_skullstrip_synthstrip (class in mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip)": [[149, "mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip.Anat_skullstrip_synthstrip"]], "anat_spatial_norm (class in mia_processes.pipelines.preprocess.anat_spatial_norm)": [[149, "mia_processes.pipelines.preprocess.anat_spatial_norm.Anat_spatial_norm"]], "bold_hmc (class in mia_processes.pipelines.preprocess.bold_hmc)": [[149, "mia_processes.pipelines.preprocess.bold_hmc.Bold_hmc"]], "bold_mni_align (class in mia_processes.pipelines.preprocess.bold_mni_align)": [[149, "mia_processes.pipelines.preprocess.bold_mni_align.Bold_mni_align"]], "bold_spatial_preprocessing1 (class in mia_processes.pipelines.preprocess.bold_spatial_preprocessing1)": [[149, "mia_processes.pipelines.preprocess.bold_spatial_preprocessing1.Bold_spatial_preprocessing1"]], "bold_spatial_preprocessing2 (class in mia_processes.pipelines.preprocess.bold_spatial_preprocessing2)": [[149, "mia_processes.pipelines.preprocess.bold_spatial_preprocessing2.Bold_spatial_preprocessing2"]], "dwi_fod_msmt_csd (class in mia_processes.pipelines.preprocess.dwi_fod_msmt_csd)": [[149, "mia_processes.pipelines.preprocess.dwi_fod_msmt_csd.Dwi_fod_msmt_csd"]], "dwi_preprocessing (class in mia_processes.pipelines.preprocess.dwi_preprocessing)": [[149, "mia_processes.pipelines.preprocess.dwi_preprocessing.Dwi_preprocessing"]], "spatial_mask (class in mia_processes.pipelines.preprocess.spatial_mask)": [[149, "mia_processes.pipelines.preprocess.spatial_mask.Spatial_mask"]], "mia_processes.pipelines.preprocess": [[149, "module-mia_processes.pipelines.preprocess"]], "mia_processes.pipelines.preprocess.anat_airmask": [[149, "module-mia_processes.pipelines.preprocess.anat_airmask"]], "mia_processes.pipelines.preprocess.anat_headmask": [[149, "module-mia_processes.pipelines.preprocess.anat_headmask"]], "mia_processes.pipelines.preprocess.anat_mni_tpms": [[149, "module-mia_processes.pipelines.preprocess.anat_mni_tpms"]], "mia_processes.pipelines.preprocess.anat_skullstrip": [[149, "module-mia_processes.pipelines.preprocess.anat_skullstrip"]], "mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip": [[149, "module-mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip"]], "mia_processes.pipelines.preprocess.anat_spatial_norm": [[149, "module-mia_processes.pipelines.preprocess.anat_spatial_norm"]], "mia_processes.pipelines.preprocess.bold_hmc": [[149, "module-mia_processes.pipelines.preprocess.bold_hmc"]], "mia_processes.pipelines.preprocess.bold_mni_align": [[149, "module-mia_processes.pipelines.preprocess.bold_mni_align"]], "mia_processes.pipelines.preprocess.bold_spatial_preprocessing1": [[149, "module-mia_processes.pipelines.preprocess.bold_spatial_preprocessing1"]], "mia_processes.pipelines.preprocess.bold_spatial_preprocessing2": [[149, "module-mia_processes.pipelines.preprocess.bold_spatial_preprocessing2"]], "mia_processes.pipelines.preprocess.dwi_fod_msmt_csd": [[149, "module-mia_processes.pipelines.preprocess.dwi_fod_msmt_csd"]], "mia_processes.pipelines.preprocess.dwi_preprocessing": [[149, "module-mia_processes.pipelines.preprocess.dwi_preprocessing"]], "mia_processes.pipelines.preprocess.spatial_mask": [[149, "module-mia_processes.pipelines.preprocess.spatial_mask"]], "pipeline_definition() (mia_processes.pipelines.preprocess.anat_airmask.anat_airmask method)": [[149, "mia_processes.pipelines.preprocess.anat_airmask.Anat_airmask.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.anat_headmask.anat_headmask method)": [[149, "mia_processes.pipelines.preprocess.anat_headmask.Anat_headmask.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.anat_mni_tpms.anat_mni_tpms method)": [[149, "mia_processes.pipelines.preprocess.anat_mni_tpms.Anat_mni_tpms.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.anat_skullstrip.anat_skullstrip method)": [[149, "mia_processes.pipelines.preprocess.anat_skullstrip.Anat_skullstrip.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip.anat_skullstrip_synthstrip method)": [[149, "mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip.Anat_skullstrip_synthstrip.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.anat_spatial_norm.anat_spatial_norm method)": [[149, "mia_processes.pipelines.preprocess.anat_spatial_norm.Anat_spatial_norm.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.bold_hmc.bold_hmc method)": [[149, "mia_processes.pipelines.preprocess.bold_hmc.Bold_hmc.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.bold_mni_align.bold_mni_align method)": [[149, "mia_processes.pipelines.preprocess.bold_mni_align.Bold_mni_align.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.bold_spatial_preprocessing1.bold_spatial_preprocessing1 method)": [[149, "mia_processes.pipelines.preprocess.bold_spatial_preprocessing1.Bold_spatial_preprocessing1.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.bold_spatial_preprocessing2.bold_spatial_preprocessing2 method)": [[149, "mia_processes.pipelines.preprocess.bold_spatial_preprocessing2.Bold_spatial_preprocessing2.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.dwi_fod_msmt_csd.dwi_fod_msmt_csd method)": [[149, "mia_processes.pipelines.preprocess.dwi_fod_msmt_csd.Dwi_fod_msmt_csd.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.dwi_preprocessing.dwi_preprocessing method)": [[149, "mia_processes.pipelines.preprocess.dwi_preprocessing.Dwi_preprocessing.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.spatial_mask.spatial_mask method)": [[149, "mia_processes.pipelines.preprocess.spatial_mask.Spatial_mask.pipeline_definition"]], "anat_mriqc (class in mia_processes.pipelines.qualitycontrol.anat_mriqc)": [[150, "mia_processes.pipelines.qualityControl.anat_mriqc.Anat_mriqc"]], "bold_mriqc (class in mia_processes.pipelines.qualitycontrol.bold_mriqc)": [[150, "mia_processes.pipelines.qualityControl.bold_mriqc.Bold_mriqc"]], "mia_processes.pipelines.qualitycontrol": [[150, "module-mia_processes.pipelines.qualityControl"]], "mia_processes.pipelines.qualitycontrol.anat_mriqc": [[150, "module-mia_processes.pipelines.qualityControl.anat_mriqc"]], "mia_processes.pipelines.qualitycontrol.bold_mriqc": [[150, "module-mia_processes.pipelines.qualityControl.bold_mriqc"]], "pipeline_definition() (mia_processes.pipelines.qualitycontrol.anat_mriqc.anat_mriqc method)": [[150, "mia_processes.pipelines.qualityControl.anat_mriqc.Anat_mriqc.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.qualitycontrol.bold_mriqc.bold_mriqc method)": [[150, "mia_processes.pipelines.qualityControl.bold_mriqc.Bold_mriqc.pipeline_definition"]], "bold_iqms (class in mia_processes.pipelines.reports.bold_iqms)": [[151, "mia_processes.pipelines.reports.bold_iqms.Bold_iqms"]], "extract_roi_param (class in mia_processes.pipelines.reports.extract_roi_param)": [[151, "mia_processes.pipelines.reports.extract_roi_param.Extract_roi_param"]], "mia_processes.pipelines.reports": [[151, "module-mia_processes.pipelines.reports"]], "mia_processes.pipelines.reports.bold_iqms": [[151, "module-mia_processes.pipelines.reports.bold_iqms"]], "mia_processes.pipelines.reports.extract_roi_param": [[151, "module-mia_processes.pipelines.reports.extract_roi_param"]], "pipeline_definition() (mia_processes.pipelines.reports.bold_iqms.bold_iqms method)": [[151, "mia_processes.pipelines.reports.bold_iqms.Bold_iqms.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.reports.extract_roi_param.extract_roi_param method)": [[151, "mia_processes.pipelines.reports.extract_roi_param.Extract_roi_param.pipeline_definition"]], "bold_stat_cvr (class in mia_processes.pipelines.stat.bold_stat_cvr)": [[152, "mia_processes.pipelines.stat.bold_stat_cvr.Bold_stat_cvr"]], "mia_processes.pipelines.stat": [[152, "module-mia_processes.pipelines.stat"]], "mia_processes.pipelines.stat.bold_stat_cvr": [[152, "module-mia_processes.pipelines.stat.bold_stat_cvr"]], "pipeline_definition() (mia_processes.pipelines.stat.bold_stat_cvr.bold_stat_cvr method)": [[152, "mia_processes.pipelines.stat.bold_stat_cvr.Bold_stat_cvr.pipeline_definition"]], "pagenumcanvas (class in mia_processes.utils.tools)": [[153, "mia_processes.utils.tools.PageNumCanvas"]], "report (class in mia_processes.utils.report)": [[153, "mia_processes.utils.report.Report"]], "reportline (class in mia_processes.utils.tools)": [[153, "mia_processes.utils.tools.ReportLine"]], "__init__() (mia_processes.utils.report.report method)": [[153, "mia_processes.utils.report.Report.__init__"]], "__init__() (mia_processes.utils.tools.pagenumcanvas method)": [[153, "mia_processes.utils.tools.PageNumCanvas.__init__"]], "__init__() (mia_processes.utils.tools.reportline method)": [[153, "mia_processes.utils.tools.ReportLine.__init__"]], "checkfileext() (in module mia_processes.utils.tools)": [[153, "mia_processes.utils.tools.checkFileExt"]], "co2_inhal_cvr_make_report() (mia_processes.utils.report.report method)": [[153, "mia_processes.utils.report.Report.co2_inhal_cvr_make_report"]], "del_dbfieldvalue() (in module mia_processes.utils.tools)": [[153, "mia_processes.utils.tools.del_dbFieldValue"]], "dict4runtime_update() (in module mia_processes.utils.tools)": [[153, "mia_processes.utils.tools.dict4runtime_update"]], "draw() (mia_processes.utils.tools.reportline method)": [[153, "mia_processes.utils.tools.ReportLine.draw"]], "draw_page_number() (mia_processes.utils.tools.pagenumcanvas method)": [[153, "mia_processes.utils.tools.PageNumCanvas.draw_page_number"]], "get_dbfieldvalue() (in module mia_processes.utils.tools)": [[153, "mia_processes.utils.tools.get_dbFieldValue"]], "get_iqms_data() (mia_processes.utils.report.report method)": [[153, "mia_processes.utils.report.Report.get_iqms_data"]], "mia_processes.utils": [[153, "module-mia_processes.utils"]], "mia_processes.utils.report": [[153, "module-mia_processes.utils.report"]], "mia_processes.utils.tools": [[153, "module-mia_processes.utils.tools"]], "mriqc_anat_make_report() (mia_processes.utils.report.report method)": [[153, "mia_processes.utils.report.Report.mriqc_anat_make_report"]], "mriqc_func_make_report() (mia_processes.utils.report.report method)": [[153, "mia_processes.utils.report.Report.mriqc_func_make_report"]], "mriqc_get_all_run() (in module mia_processes.utils.tools)": [[153, "mia_processes.utils.tools.mriqc_get_all_run"]], "mriqc_group_iqms_tsv() (in module mia_processes.utils.tools)": [[153, "mia_processes.utils.tools.mriqc_group_iqms_tsv"]], "mriqc_group_make_report() (mia_processes.utils.report.report method)": [[153, "mia_processes.utils.report.Report.mriqc_group_make_report"]], "plot_boxplot_points() (in module mia_processes.utils.tools)": [[153, "mia_processes.utils.tools.plot_boxplot_points"]], "plot_qi2() (in module mia_processes.utils.tools)": [[153, "mia_processes.utils.tools.plot_qi2"]], "plot_segmentation() (in module mia_processes.utils.tools)": [[153, "mia_processes.utils.tools.plot_segmentation"]], "plot_slice_planes() (in module mia_processes.utils.tools)": [[153, "mia_processes.utils.tools.plot_slice_planes"]], "save() (mia_processes.utils.tools.pagenumcanvas method)": [[153, "mia_processes.utils.tools.PageNumCanvas.save"]], "set_dbfieldvalue() (in module mia_processes.utils.tools)": [[153, "mia_processes.utils.tools.set_dbFieldValue"]], "showpage() (mia_processes.utils.tools.pagenumcanvas method)": [[153, "mia_processes.utils.tools.PageNumCanvas.showPage"]]}})