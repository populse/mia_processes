Search.setIndex({"docnames": ["documentation/bricks/preprocess/afni/Automask", "documentation/bricks/preprocess/afni/Calc", "documentation/bricks/preprocess/afni/CalcDropTRs", "documentation/bricks/preprocess/afni/Despike", "documentation/bricks/preprocess/afni/FWHMx", "documentation/bricks/preprocess/afni/GCOR", "documentation/bricks/preprocess/afni/OutlierCount", "documentation/bricks/preprocess/afni/QualityIndex", "documentation/bricks/preprocess/afni/RefitDeoblique", "documentation/bricks/preprocess/afni/SkullStrip", "documentation/bricks/preprocess/afni/TShift", "documentation/bricks/preprocess/afni/TStatMean", "documentation/bricks/preprocess/afni/Volreg", "documentation/bricks/preprocess/ants/AffineInitializer", "documentation/bricks/preprocess/ants/ApplyTransform", "documentation/bricks/preprocess/ants/N4BiasFieldCorrection", "documentation/bricks/preprocess/ants/Registration", "documentation/bricks/preprocess/dipy/ComputeDKI", "documentation/bricks/preprocess/dipy/Denoise", "documentation/bricks/preprocess/freesurfer/Binarize", "documentation/bricks/preprocess/freesurfer/SynthStrip", "documentation/bricks/preprocess/freesurfer/SynthStripMriqc", "documentation/bricks/preprocess/fsl/BetSurfacesExtraction", "documentation/bricks/preprocess/fsl/ConvertXFM", "documentation/bricks/preprocess/fsl/EpiReg", "documentation/bricks/preprocess/fsl/ExtractROI", "documentation/bricks/preprocess/fsl/FastSegment", "documentation/bricks/preprocess/fsl/Flirt", "documentation/bricks/preprocess/fsl/Smooth", "documentation/bricks/preprocess/matlab_wrap/ComputeBrainVolume", "documentation/bricks/preprocess/mrtrix/ConstrainedSphericalDeconvolution", "documentation/bricks/preprocess/mrtrix/DWIBiasCorrect", "documentation/bricks/preprocess/mrtrix/DWIBrainMask", "documentation/bricks/preprocess/mrtrix/DWICat", "documentation/bricks/preprocess/mrtrix/DWIDenoise", "documentation/bricks/preprocess/mrtrix/DWIExtract", "documentation/bricks/preprocess/mrtrix/DWIPreproc", "documentation/bricks/preprocess/mrtrix/EditingTrack", "documentation/bricks/preprocess/mrtrix/FilteringTrack", "documentation/bricks/preprocess/mrtrix/FitTensor", "documentation/bricks/preprocess/mrtrix/Generate5tt2gmwmi", "documentation/bricks/preprocess/mrtrix/Generate5ttfsl", "documentation/bricks/preprocess/mrtrix/MRCat", "documentation/bricks/preprocess/mrtrix/MRConvert", "documentation/bricks/preprocess/mrtrix/MRDeGibbs", "documentation/bricks/preprocess/mrtrix/MRMath", "documentation/bricks/preprocess/mrtrix/MRTransform", "documentation/bricks/preprocess/mrtrix/MTNormalise", "documentation/bricks/preprocess/mrtrix/ResponseSDDhollander", "documentation/bricks/preprocess/mrtrix/SphericalHarmonicExtraction", "documentation/bricks/preprocess/mrtrix/TensorMetrics", "documentation/bricks/preprocess/mrtrix/Tractography", "documentation/bricks/preprocess/mrtrix/TransformFSLConvert", "documentation/bricks/preprocess/others/ApplyBiasCorrection", "documentation/bricks/preprocess/others/ArtifactMask", "documentation/bricks/preprocess/others/Binarize", "documentation/bricks/preprocess/others/ConformImage", "documentation/bricks/preprocess/others/ConvROI", "documentation/bricks/preprocess/others/Enhance", "documentation/bricks/preprocess/others/EstimateSNR", "documentation/bricks/preprocess/others/ExtractROIbyLabel", "documentation/bricks/preprocess/others/ExtractSignalROI", "documentation/bricks/preprocess/others/GradientThreshold", "documentation/bricks/preprocess/others/Harmonize", "documentation/bricks/preprocess/others/IntensityClip", "documentation/bricks/preprocess/others/Mask", "documentation/bricks/preprocess/others/NonSteadyDetector", "documentation/bricks/preprocess/others/Resample1", "documentation/bricks/preprocess/others/Resample2", "documentation/bricks/preprocess/others/RotationMask", "documentation/bricks/preprocess/others/Sanitize", "documentation/bricks/preprocess/others/TSNR", "documentation/bricks/preprocess/others/TemplateFromTemplateFlow", "documentation/bricks/preprocess/others/Threshold", "documentation/bricks/preprocess/spm/Coregister", "documentation/bricks/preprocess/spm/GM_WM_Normalize", "documentation/bricks/preprocess/spm/NewSegment", "documentation/bricks/preprocess/spm/Normalize12", "documentation/bricks/preprocess/spm/Realign", "documentation/bricks/preprocess/spm/SliceTiming", "documentation/bricks/preprocess/spm/Smooth", "documentation/bricks/preprocess/volbrain/AssemblyNetDocker", "documentation/bricks/preprocess/volbrain/GetLabels", "documentation/bricks/preprocess/volbrain/LabelsCorrespondence", "documentation/bricks/reports/AnatIQMs", "documentation/bricks/reports/BoldIQMs", "documentation/bricks/reports/BoldIQMsPlot", "documentation/bricks/reports/CarpetParcellation", "documentation/bricks/reports/ComputeDVARS", "documentation/bricks/reports/FramewiseDisplacement", "documentation/bricks/reports/Mean_stdDev_calc", "documentation/bricks/reports/PlotSignalROI", "documentation/bricks/reports/ReportAnatMriqc", "documentation/bricks/reports/ReportCO2inhalCvr", "documentation/bricks/reports/ReportFuncMriqc", "documentation/bricks/reports/ReportGroupMriqc", "documentation/bricks/reports/Result_collector", "documentation/bricks/reports/Spikes", "documentation/bricks/stats/spm/EstimateContrast", "documentation/bricks/stats/spm/EstimateModel", "documentation/bricks/stats/spm/Level1Design", "documentation/bricks/stats/spm/MultipleRegressionDesign", "documentation/bricks/stats/spm/OneSampleTTestDesign", "documentation/bricks/stats/spm/PairedTTestDesign", "documentation/bricks/stats/spm/TwoSampleTTestDesign", "documentation/bricks/tools/Concat_to_list", "documentation/bricks/tools/Concat_to_list_of_list", "documentation/bricks/tools/Delete_data", "documentation/bricks/tools/Files_To_List", "documentation/bricks/tools/Filter_Files_List", "documentation/bricks/tools/Find_In_List", "documentation/bricks/tools/Get_Conditions_From_csv", "documentation/bricks/tools/Get_Patient_Name", "documentation/bricks/tools/Import_Data", "documentation/bricks/tools/Input_Filter", "documentation/bricks/tools/List_Duplicate", "documentation/bricks/tools/List_To_File", "documentation/bricks/tools/Make_A_List", "documentation/bricks/tools/Make_CVR_reg_physio", "documentation/documentation", "documentation/pipelines/CerebVascularReact/CO2_inhalation", "documentation/pipelines/DWITractography/DWI_whole_brain_tractograpy", "documentation/pipelines/preprocess/Anat_airmask", "documentation/pipelines/preprocess/Anat_headmask", "documentation/pipelines/preprocess/Anat_mni_tpms", "documentation/pipelines/preprocess/Anat_skullstrip", "documentation/pipelines/preprocess/Anat_skullstrip_synthstrip", "documentation/pipelines/preprocess/Anat_spatial_norm", "documentation/pipelines/preprocess/Bold_hmc", "documentation/pipelines/preprocess/Bold_mni_align", "documentation/pipelines/preprocess/Bold_spatial_preprocessing1", "documentation/pipelines/preprocess/Bold_spatial_preprocessing2", "documentation/pipelines/preprocess/Dwi_fod_msmt_csd", "documentation/pipelines/preprocess/Dwi_preprocessing", "documentation/pipelines/preprocess/Dwi_tissue_boundaries", "documentation/pipelines/preprocess/Spatial_mask", "documentation/pipelines/qualityControl/Anat_mriqc", "documentation/pipelines/qualityControl/Bold_mriqc", "documentation/pipelines/qualityControl/Bold_signals_roi", "documentation/pipelines/reports/Bold_iqms", "documentation/pipelines/reports/Extract_roi_param", "documentation/pipelines/stat/Bold_stat_cvr", "index", "mia_processes", "mia_processes.bricks", "mia_processes.bricks.preprocess", "mia_processes.bricks.preprocess.afni", "mia_processes.bricks.preprocess.ants", "mia_processes.bricks.preprocess.dipy", "mia_processes.bricks.preprocess.freesurfer", "mia_processes.bricks.preprocess.fsl", "mia_processes.bricks.preprocess.mrtrix", "mia_processes.bricks.preprocess.others", "mia_processes.bricks.preprocess.spm", "mia_processes.bricks.reports", "mia_processes.bricks.stat", "mia_processes.bricks.stat.spm", "mia_processes.bricks.tools", "mia_processes.pipelines", "mia_processes.pipelines.CerebVascularReact", "mia_processes.pipelines.DWITractography", "mia_processes.pipelines.preprocess", "mia_processes.pipelines.qualityControl", "mia_processes.pipelines.reports", "mia_processes.pipelines.stat", "mia_processes.utils", "modules"], "filenames": ["documentation/bricks/preprocess/afni/Automask.rst", "documentation/bricks/preprocess/afni/Calc.rst", "documentation/bricks/preprocess/afni/CalcDropTRs.rst", "documentation/bricks/preprocess/afni/Despike.rst", "documentation/bricks/preprocess/afni/FWHMx.rst", "documentation/bricks/preprocess/afni/GCOR.rst", "documentation/bricks/preprocess/afni/OutlierCount.rst", "documentation/bricks/preprocess/afni/QualityIndex.rst", "documentation/bricks/preprocess/afni/RefitDeoblique.rst", "documentation/bricks/preprocess/afni/SkullStrip.rst", "documentation/bricks/preprocess/afni/TShift.rst", "documentation/bricks/preprocess/afni/TStatMean.rst", "documentation/bricks/preprocess/afni/Volreg.rst", "documentation/bricks/preprocess/ants/AffineInitializer.rst", "documentation/bricks/preprocess/ants/ApplyTransform.rst", "documentation/bricks/preprocess/ants/N4BiasFieldCorrection.rst", "documentation/bricks/preprocess/ants/Registration.rst", "documentation/bricks/preprocess/dipy/ComputeDKI.rst", "documentation/bricks/preprocess/dipy/Denoise.rst", "documentation/bricks/preprocess/freesurfer/Binarize.rst", "documentation/bricks/preprocess/freesurfer/SynthStrip.rst", "documentation/bricks/preprocess/freesurfer/SynthStripMriqc.rst", "documentation/bricks/preprocess/fsl/BetSurfacesExtraction.rst", "documentation/bricks/preprocess/fsl/ConvertXFM.rst", "documentation/bricks/preprocess/fsl/EpiReg.rst", "documentation/bricks/preprocess/fsl/ExtractROI.rst", "documentation/bricks/preprocess/fsl/FastSegment.rst", "documentation/bricks/preprocess/fsl/Flirt.rst", "documentation/bricks/preprocess/fsl/Smooth.rst", "documentation/bricks/preprocess/matlab_wrap/ComputeBrainVolume.rst", "documentation/bricks/preprocess/mrtrix/ConstrainedSphericalDeconvolution.rst", "documentation/bricks/preprocess/mrtrix/DWIBiasCorrect.rst", "documentation/bricks/preprocess/mrtrix/DWIBrainMask.rst", "documentation/bricks/preprocess/mrtrix/DWICat.rst", "documentation/bricks/preprocess/mrtrix/DWIDenoise.rst", "documentation/bricks/preprocess/mrtrix/DWIExtract.rst", "documentation/bricks/preprocess/mrtrix/DWIPreproc.rst", "documentation/bricks/preprocess/mrtrix/EditingTrack.rst", "documentation/bricks/preprocess/mrtrix/FilteringTrack.rst", "documentation/bricks/preprocess/mrtrix/FitTensor.rst", "documentation/bricks/preprocess/mrtrix/Generate5tt2gmwmi.rst", "documentation/bricks/preprocess/mrtrix/Generate5ttfsl.rst", "documentation/bricks/preprocess/mrtrix/MRCat.rst", "documentation/bricks/preprocess/mrtrix/MRConvert.rst", "documentation/bricks/preprocess/mrtrix/MRDeGibbs.rst", "documentation/bricks/preprocess/mrtrix/MRMath.rst", "documentation/bricks/preprocess/mrtrix/MRTransform.rst", "documentation/bricks/preprocess/mrtrix/MTNormalise.rst", "documentation/bricks/preprocess/mrtrix/ResponseSDDhollander.rst", "documentation/bricks/preprocess/mrtrix/SphericalHarmonicExtraction.rst", "documentation/bricks/preprocess/mrtrix/TensorMetrics.rst", "documentation/bricks/preprocess/mrtrix/Tractography.rst", "documentation/bricks/preprocess/mrtrix/TransformFSLConvert.rst", "documentation/bricks/preprocess/others/ApplyBiasCorrection.rst", "documentation/bricks/preprocess/others/ArtifactMask.rst", "documentation/bricks/preprocess/others/Binarize.rst", "documentation/bricks/preprocess/others/ConformImage.rst", "documentation/bricks/preprocess/others/ConvROI.rst", "documentation/bricks/preprocess/others/Enhance.rst", "documentation/bricks/preprocess/others/EstimateSNR.rst", "documentation/bricks/preprocess/others/ExtractROIbyLabel.rst", "documentation/bricks/preprocess/others/ExtractSignalROI.rst", "documentation/bricks/preprocess/others/GradientThreshold.rst", "documentation/bricks/preprocess/others/Harmonize.rst", "documentation/bricks/preprocess/others/IntensityClip.rst", "documentation/bricks/preprocess/others/Mask.rst", "documentation/bricks/preprocess/others/NonSteadyDetector.rst", "documentation/bricks/preprocess/others/Resample1.rst", "documentation/bricks/preprocess/others/Resample2.rst", "documentation/bricks/preprocess/others/RotationMask.rst", "documentation/bricks/preprocess/others/Sanitize.rst", "documentation/bricks/preprocess/others/TSNR.rst", "documentation/bricks/preprocess/others/TemplateFromTemplateFlow.rst", "documentation/bricks/preprocess/others/Threshold.rst", "documentation/bricks/preprocess/spm/Coregister.rst", "documentation/bricks/preprocess/spm/GM_WM_Normalize.rst", "documentation/bricks/preprocess/spm/NewSegment.rst", "documentation/bricks/preprocess/spm/Normalize12.rst", "documentation/bricks/preprocess/spm/Realign.rst", "documentation/bricks/preprocess/spm/SliceTiming.rst", "documentation/bricks/preprocess/spm/Smooth.rst", "documentation/bricks/preprocess/volbrain/AssemblyNetDocker.rst", "documentation/bricks/preprocess/volbrain/GetLabels.rst", "documentation/bricks/preprocess/volbrain/LabelsCorrespondence.rst", "documentation/bricks/reports/AnatIQMs.rst", "documentation/bricks/reports/BoldIQMs.rst", "documentation/bricks/reports/BoldIQMsPlot.rst", "documentation/bricks/reports/CarpetParcellation.rst", "documentation/bricks/reports/ComputeDVARS.rst", "documentation/bricks/reports/FramewiseDisplacement.rst", "documentation/bricks/reports/Mean_stdDev_calc.rst", "documentation/bricks/reports/PlotSignalROI.rst", "documentation/bricks/reports/ReportAnatMriqc.rst", "documentation/bricks/reports/ReportCO2inhalCvr.rst", "documentation/bricks/reports/ReportFuncMriqc.rst", "documentation/bricks/reports/ReportGroupMriqc.rst", "documentation/bricks/reports/Result_collector.rst", "documentation/bricks/reports/Spikes.rst", "documentation/bricks/stats/spm/EstimateContrast.rst", "documentation/bricks/stats/spm/EstimateModel.rst", "documentation/bricks/stats/spm/Level1Design.rst", "documentation/bricks/stats/spm/MultipleRegressionDesign.rst", "documentation/bricks/stats/spm/OneSampleTTestDesign.rst", "documentation/bricks/stats/spm/PairedTTestDesign.rst", "documentation/bricks/stats/spm/TwoSampleTTestDesign.rst", "documentation/bricks/tools/Concat_to_list.rst", "documentation/bricks/tools/Concat_to_list_of_list.rst", "documentation/bricks/tools/Delete_data.rst", "documentation/bricks/tools/Files_To_List.rst", "documentation/bricks/tools/Filter_Files_List.rst", "documentation/bricks/tools/Find_In_List.rst", "documentation/bricks/tools/Get_Conditions_From_csv.rst", "documentation/bricks/tools/Get_Patient_Name.rst", "documentation/bricks/tools/Import_Data.rst", "documentation/bricks/tools/Input_Filter.rst", "documentation/bricks/tools/List_Duplicate.rst", "documentation/bricks/tools/List_To_File.rst", "documentation/bricks/tools/Make_A_List.rst", "documentation/bricks/tools/Make_CVR_reg_physio.rst", "documentation/documentation.rst", "documentation/pipelines/CerebVascularReact/CO2_inhalation.rst", "documentation/pipelines/DWITractography/DWI_whole_brain_tractograpy.rst", "documentation/pipelines/preprocess/Anat_airmask.rst", "documentation/pipelines/preprocess/Anat_headmask.rst", "documentation/pipelines/preprocess/Anat_mni_tpms.rst", "documentation/pipelines/preprocess/Anat_skullstrip.rst", "documentation/pipelines/preprocess/Anat_skullstrip_synthstrip.rst", "documentation/pipelines/preprocess/Anat_spatial_norm.rst", "documentation/pipelines/preprocess/Bold_hmc.rst", "documentation/pipelines/preprocess/Bold_mni_align.rst", "documentation/pipelines/preprocess/Bold_spatial_preprocessing1.rst", "documentation/pipelines/preprocess/Bold_spatial_preprocessing2.rst", "documentation/pipelines/preprocess/Dwi_fod_msmt_csd.rst", "documentation/pipelines/preprocess/Dwi_preprocessing.rst", "documentation/pipelines/preprocess/Dwi_tissue_boundaries.rst", "documentation/pipelines/preprocess/Spatial_mask.rst", "documentation/pipelines/qualityControl/Anat_mriqc.rst", "documentation/pipelines/qualityControl/Bold_mriqc.rst", "documentation/pipelines/qualityControl/Bold_signals_roi.rst", "documentation/pipelines/reports/Bold_iqms.rst", "documentation/pipelines/reports/Extract_roi_param.rst", "documentation/pipelines/stat/Bold_stat_cvr.rst", "index.rst", "mia_processes.rst", "mia_processes.bricks.rst", "mia_processes.bricks.preprocess.rst", "mia_processes.bricks.preprocess.afni.rst", "mia_processes.bricks.preprocess.ants.rst", "mia_processes.bricks.preprocess.dipy.rst", "mia_processes.bricks.preprocess.freesurfer.rst", "mia_processes.bricks.preprocess.fsl.rst", "mia_processes.bricks.preprocess.mrtrix.rst", "mia_processes.bricks.preprocess.others.rst", "mia_processes.bricks.preprocess.spm.rst", "mia_processes.bricks.reports.rst", "mia_processes.bricks.stat.rst", "mia_processes.bricks.stat.spm.rst", "mia_processes.bricks.tools.rst", "mia_processes.pipelines.rst", "mia_processes.pipelines.CerebVascularReact.rst", "mia_processes.pipelines.DWITractography.rst", "mia_processes.pipelines.preprocess.rst", "mia_processes.pipelines.qualityControl.rst", "mia_processes.pipelines.reports.rst", "mia_processes.pipelines.stat.rst", "mia_processes.utils.rst", "modules.rst"], "titles": ["Automask brick", "Calc brick", "CalcDropTRs brick", "Despike brick", "FWHMx brick", "GCOR brick", "OutlierCount brick", "QualityIndex brick", "RefitDeoblique brick", "SkullStrip brick", "TShift brick", "TStatMean brick", "Volreg brick", "AffineInitializer brick", "ApplyTransforms brick", "N4BiasFieldCorrection brick", "Registration brick", "ComputeDKI brick", "Denoise brick", "Binarize brick", "SynthStrip brick", "SynthStripMriqc brick", "BetSurfacesExtraction brick", "ConvertXFM brick", "EpiReg brick", "ExtractROI brick", "FastSegment brick", "Flirt brick", "Smooth brick", "ComputeBrainVolume brick", "ConstrainedSphericalDeconvolution brick", "DWIBiasCorrect brick", "DWIBrainMask brick", "DWICat brick", "DWIDenoise brick", "DWIExtract brick", "DWIPreproc brick", "EditingTrack brick", "FilteringTrack brick", "FitTensor brick", "Generate5tt2gmwmi brick", "Generate5ttfsl brick", "MRCat brick", "MRConvert brick", "MRDeGibbs brick", "MRMath brick", "MRTransform brick", "MTNormalise brick", "ResponseSDDhollander brick", "SphericalHarmonicExtraction brick", "TensorMetrics brick", "Tractography brick", "TransformFSLConvert brick", "ApplyBiasCorrection brick", "ArtifactMask brick", "Binarize brick", "ConformImage brick", "ConvROI brick", "Enhance brick", "EstimateSNR brick", "ExtractROIbyLabel brick", "ExtractSignalROI brick", "GradientThreshold brick", "Harmonize brick", "IntensityClip brick", "Mask brick", "NonSteadyDetector brick", "Resample1 brick", "Resample2 brick", "RotationMask brick", "Sanitize brick", "TSNR brick", "TemplateFromTemplateFlow brick", "Threshold brick", "Coregister brick", "GM_WM_Normalize brick", "NewSegment brick", "Normalize12 brick", "Realign brick", "SliceTiming brick", "Smooth brick", "AssemblyNetDocker brick", "GetLabels brick", "LabelsCorrespondence brick", "AnatIQMs brick", "BoldQMs brick", "BoldIQMsPlot brick", "CarpetParcellation brick", "ComputeDVARS brick", "FramewiseDisplacement brick", "Mean_stdDev_calc brick", "PlotSignalROI brick", "ReportAnatMriqc brick", "ReportCO2inhalCvr brick", "ReportFuncMriqc brick", "ReportGroupMriqc brick", "Result_collector brick", "Spikes brick", "EstimateConstrast brick", "EstimateModel brick", "Level1Design brick", "MultipleRegressionDesign brick", "OneSampleTTestDesign brick", "PairedTTestDesign brick", "TwoSampleTTestDesign brick", "Concat_to_list  brick", "Concat_to_list_of_list brick", "Delete_data brick", "Files_To_List brick", "Filter_Files_List brick", "Find_In_List brick", "Get_Conditions_From_csv brick", "Get_Patient_Name brick", "Import_Data  brick", "Input_Filter brick", "List_Duplicate brick", "List_To_File brick", "Make_a_list brick", "Make_CVR_reg_physio brick", "Mia_processes\u2019s documentation", "CO2_inhalation pipeline", "DWI_whole_brain_tractograpy pipeline", "Anat_airmask pipeline", "Anat_headmask pipeline", "Anat_mni_tpms pipeline", "Anat_skullstrip pipeline", "Anat_skullstrip_synthstrip pipeline", "Anat_spatial_norm pipeline", "Bold_hmc pipeline", "Bold_mni_align pipeline", "Bold_spatial_preprocessing1 pipeline", "Bold_spatial_preprocessing2 pipeline", "Dwi_fod_msmt_csd pipeline", "Dwi_preprocessing pipeline", "Dwi_tissue_boundaries pipeline", "Spatial_mask pipeline", "Anat_mriqc pipeline", "Bold_mriqc pipeline", "Bold_signals_roi pipeline", "Bold_iqms pipeline", "Extract_roi_param pipeline", "Bold_stat_cvr brick", "Purpose", "mia_processes package", "mia_processes.bricks package", "mia_processes.bricks.preprocess package", "mia_processes.bricks.preprocess.afni package", "mia_processes.bricks.preprocess.ants package", "mia_processes.bricks.preprocess.dipy package", "mia_processes.bricks.preprocess.freesurfer package", "mia_processes.bricks.preprocess.fsl package", "mia_processes.bricks.preprocess.mrtrix package", "mia_processes.bricks.preprocess.others package", "mia_processes.bricks.preprocess.spm package", "mia_processes.bricks.reports package", "mia_processes.bricks.stat package", "mia_processes.bricks.stat.spm package", "mia_processes.bricks.tools package", "mia_processes.pipelines package", "mia_processes.pipelines.CerebVascularReact package", "mia_processes.pipelines.DWITractography package", "mia_processes.pipelines.preprocess package", "mia_processes.pipelines.qualityControl package", "mia_processes.pipelines.reports package", "mia_processes.pipelines.stat package", "mia_processes.utils package", "mia_processes"], "terms": {"home": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141], "document": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165], "github": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 147, 149, 152, 153, 165], "3dcliplevel": 0, "algorithm": [0, 12, 15, 30, 39, 51, 76, 77, 121, 132, 151, 152, 154], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 58, 60, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 113, 116, 118, 120, 121, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 163, 165], "find": [0, 22, 49, 51, 74], "clip": [0, 6, 7, 16, 70, 93, 126, 152], "level": [0, 98, 99, 100, 101, 102, 103, 104, 114, 118, 120, 151, 157], "after": [0, 19, 46, 51, 55, 67, 73, 75, 79, 88, 90, 151, 152, 154], "an": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 110, 112, 115, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 165], "eros": [0, 19, 48], "dilat": [0, 19, 38, 154], "step": [0, 1, 5, 15, 34, 39, 43, 51, 54, 99, 121, 125, 128, 132, 133, 134, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 161], "largest": [0, 10, 26], "connect": [0, 154], "compon": [0, 47, 49, 121], "supra": 0, "threshold": [0, 15, 16, 19, 20, 21, 38, 48, 49, 64, 85, 86, 100, 101, 102, 103, 104, 119, 123, 135, 139, 145, 149, 151, 152], "voxel": [0, 6, 7, 10, 11, 12, 15, 19, 25, 26, 27, 28, 34, 38, 40, 43, 48, 51, 55, 58, 74, 77, 78, 80, 86, 88, 93, 99, 100, 101, 102, 103, 104, 121, 132, 141, 146, 151, 154], "ar": [0, 1, 10, 15, 16, 17, 18, 19, 22, 25, 26, 27, 30, 32, 33, 35, 36, 37, 39, 42, 43, 44, 45, 46, 47, 48, 51, 55, 56, 58, 63, 64, 65, 67, 68, 69, 73, 74, 76, 77, 78, 79, 80, 84, 85, 86, 90, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 107, 108, 110, 111, 118, 120, 121, 129, 130, 131, 132, 133, 134, 136, 137, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 165], "kept": [0, 73, 107], "Be": [0, 55, 56, 58, 63, 65, 69, 107], "carr": 0, "thi": [0, 1, 4, 10, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 57, 61, 68, 73, 74, 76, 78, 79, 81, 82, 83, 84, 85, 88, 89, 90, 96, 98, 99, 100, 101, 102, 103, 104, 107, 112, 113, 114, 120, 121, 132, 133, 134, 138, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164], "program": [0, 22, 49, 74, 78], "itself": [0, 15, 51, 154, 157], "doe": [0, 27, 48], "NOT": [0, 38, 41, 51], "do": [0, 5, 12, 24, 27, 36, 38, 41, 51, 97, 100, 101, 102, 103, 104, 146, 147, 148, 149, 150, 151, 152, 153, 156], "skull": [0, 9, 20, 126, 136, 149, 150, 154, 161], "strip": [0, 9, 20, 22, 126, 136, 149, 161], "mandatori": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 97, 98, 99, 101, 102, 103, 104, 107, 108, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 136, 137, 138, 139, 165], "input": [0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165], "in_fil": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 73, 78, 79, 80, 81, 88, 89, 91, 97, 101, 102, 107, 112, 122, 123, 125, 126, 128, 165], "string": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 110, 111, 112, 113, 115, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 157, 165], "repres": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 78, 79, 81, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 165], "exist": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 76, 77, 78, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 110, 111, 112, 115, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 152, 154, 165], "file": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 107, 111, 112, 113, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 149, 151, 152, 154, 156, 157, 165], "valid": [0, 1, 2, 3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 91, 92, 93, 94, 97, 110, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 157, 165], "extens": [0, 1, 2, 3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 97, 110, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 165], "nii": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 34, 36, 39, 40, 41, 42, 43, 45, 46, 47, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 165], "gz": [0, 1, 2, 3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 34, 36, 39, 40, 41, 42, 43, 45, 46, 47, 48, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 81, 84, 85, 86, 87, 88, 91, 92, 93, 94, 97, 121, 122, 123, 124, 125, 126, 127, 128, 129, 133, 134, 135, 136, 137, 138, 139, 165], "dataset": [0, 4, 11, 35, 146, 151, 154], "can": [0, 10, 15, 16, 17, 19, 26, 27, 46, 74, 75, 76, 77, 80, 96, 99, 100, 101, 102, 103, 104, 107, 118, 120, 142, 143, 147, 149, 154, 165], "4depi": 0, "anatom": [0, 38, 40, 41, 51, 54, 56, 58, 59, 62, 63, 69, 93, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 134, 152, 154, 161, 162], "ex": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 154, 157, 165], "usernam": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141], "data": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 97, 98, 99, 100, 101, 102, 103, 104, 108, 109, 110, 111, 112, 115, 116, 117, 118, 120, 121, 123, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 147, 151, 154, 156, 157, 161, 162, 163, 165], "raw_data": [0, 1, 2, 3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 90, 91, 92, 93, 94, 96, 97, 100, 108, 109, 113, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 157], "func": [0, 2, 3, 8, 10, 11, 12, 18, 28, 66, 70, 71, 74, 78, 79, 80, 85, 94, 95, 97, 108, 109, 114, 115, 116, 118, 120, 128, 130, 131, 135, 137, 138], "option": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 58, 60, 62, 63, 64, 65, 67, 69, 70, 71, 72, 73, 74, 78, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 114, 121, 128, 129, 132, 133, 138, 139, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 165], "default": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 58, 60, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 84, 85, 86, 87, 88, 89, 92, 93, 94, 97, 98, 99, 101, 102, 103, 104, 106, 107, 113, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 137, 138, 142, 157, 165], "valu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 58, 60, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 84, 85, 86, 87, 88, 89, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 113, 120, 121, 122, 124, 127, 128, 129, 131, 132, 133, 134, 137, 138, 141, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 163, 165], "clfrac": 0, "float": [0, 3, 5, 6, 10, 13, 14, 15, 16, 18, 19, 24, 27, 28, 30, 35, 36, 37, 43, 47, 48, 49, 51, 55, 59, 64, 73, 74, 76, 77, 78, 79, 80, 85, 86, 88, 89, 93, 97, 98, 99, 100, 101, 102, 103, 104, 111, 121, 129, 133, 136, 137, 139, 152, 154, 165], "0": [0, 1, 2, 5, 6, 10, 12, 13, 14, 15, 16, 18, 19, 24, 25, 26, 27, 28, 30, 32, 36, 37, 39, 43, 44, 45, 46, 47, 48, 51, 55, 64, 70, 73, 74, 76, 77, 78, 79, 80, 85, 86, 88, 89, 92, 94, 97, 98, 100, 101, 102, 103, 104, 109, 111, 116, 117, 121, 127, 129, 131, 133, 139, 149, 151, 152, 154, 157, 165], "5": [0, 1, 6, 7, 10, 14, 15, 16, 18, 19, 27, 34, 39, 43, 51, 76, 77, 78, 79, 82, 83, 92, 93, 94, 100, 101, 102, 103, 104, 121, 127, 134, 152, 154], "set": [0, 2, 10, 13, 15, 18, 19, 25, 26, 27, 30, 34, 36, 38, 39, 43, 46, 48, 49, 51, 55, 58, 74, 78, 79, 80, 88, 100, 113, 136, 137, 147, 151, 157], "fraction": [0, 6, 17, 26, 50, 154], "must": [0, 10, 16, 27, 36, 37, 51, 57, 64, 68, 73, 74, 78, 79, 90, 96, 100, 119, 134, 141, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157], "1": [0, 2, 6, 7, 12, 13, 14, 16, 18, 19, 20, 21, 25, 26, 27, 36, 43, 44, 45, 46, 51, 54, 55, 56, 66, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 93, 95, 98, 99, 100, 101, 102, 103, 104, 106, 113, 116, 121, 124, 127, 129, 136, 137, 141, 149, 152, 154, 157, 161, 165], "9": [0, 27, 39, 51, 64, 78, 79, 100], "A": [0, 9, 15, 16, 22, 26, 30, 33, 36, 38, 51, 55, 57, 67, 73, 74, 75, 76, 77, 78, 80, 81, 84, 85, 86, 90, 92, 93, 94, 95, 96, 100, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 118, 120, 121, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 143, 147, 152, 154], "small": [0, 6, 7, 27, 136, 137], "tend": [0, 121], "make": [0, 19, 79, 132, 152, 154, 157, 161, 165], "larger": 0, "out_brain_suffix": 0, "_mask": [0, 54, 65], "suffix": [0, 10, 19, 24, 25, 37, 38, 43, 49, 54, 55, 56, 58, 62, 63, 65, 67, 68, 69, 70, 71, 72, 73, 122, 124, 127, 129, 165], "output_typ": [0, 1, 2, 3, 9, 10, 11, 12, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "nifti": [0, 1, 2, 3, 9, 10, 11, 12, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 60, 77, 121, 133, 134, 165], "nifti_gz": [0, 1, 2, 3, 9, 10, 11, 12, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 43, 165], "format": [0, 1, 2, 3, 9, 10, 11, 12, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 81, 118, 120, 133, 134, 151, 154], "output": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165], "one": [0, 1, 2, 3, 4, 9, 10, 11, 12, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 35, 36, 37, 41, 50, 51, 55, 56, 58, 63, 64, 65, 69, 74, 76, 80, 91, 97, 99, 100, 101, 103, 104, 108, 111, 114, 115, 142, 146, 151, 152, 154, 156, 157, 165], "out_prefix": [0, 1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 28, 74, 77, 78, 79, 80, 87, 88, 89, 92, 94, 97], "prefix": [0, 1, 2, 3, 9, 10, 11, 12, 13, 14, 15, 16, 18, 55, 56, 57, 58, 62, 63, 65, 67, 69, 70, 71, 73, 74, 77, 78, 79, 80, 92, 94, 97], "automask_": 0, "integ": [0, 1, 2, 4, 5, 6, 7, 10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 25, 27, 29, 30, 34, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 51, 60, 61, 74, 77, 78, 79, 80, 82, 83, 85, 91, 92, 93, 94, 97, 99, 100, 109, 116, 129, 138, 139, 165], "outward": 0, "undefin": [0, 1, 5, 7, 10, 12, 14, 15, 16, 18, 19, 24, 35, 79, 86, 92, 93, 94, 96, 98, 99, 100, 108, 113, 130, 140], "ie": [0, 1, 5, 10, 12, 14, 15, 16, 18, 19, 35, 48, 51, 92, 93, 94], "erod": [0, 19, 48, 63, 154], "inward": 0, "out_brain": [0, 126], "derived_data": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 107, 112, 113, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141], "func_mask": 0, "out_fil": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 27, 28, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 53, 55, 56, 58, 60, 62, 63, 64, 65, 67, 69, 70, 73, 84, 85, 86, 87, 88, 89, 96, 97, 110, 115, 123, 125, 128, 154, 165], "automask_func": [0, 107], "useful": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 121, 122, 123, 124, 126, 127, 128, 129, 136, 137, 138, 139, 141], "link": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 121, 122, 123, 124, 126, 127, 128, 129, 136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157], "nipyp": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 22, 23, 24, 25, 26, 27, 29, 30, 31, 34, 35, 36, 39, 41, 42, 44, 45, 46, 48, 50, 51, 54, 66, 71, 74, 76, 77, 78, 79, 80, 88, 89, 98, 99, 100, 101, 102, 103, 104, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156], "assum": [1, 36, 79, 100, 101, 102, 103, 104], "comput": [1, 11, 14, 16, 17, 18, 19, 29, 30, 39, 44, 47, 49, 51, 59, 63, 86, 136, 137, 142, 146, 148, 151, 152, 153, 154, 161], "being": [1, 51, 74, 77, 78], "perform": [1, 15, 24, 27, 30, 34, 39, 42, 45, 46, 49, 74, 93, 100, 101, 102, 103, 104, 132, 134, 151, 154], "occupi": 1, "same": [1, 8, 10, 17, 19, 25, 27, 36, 41, 43, 74, 79, 80, 96, 100, 111, 136, 137, 153, 154, 157], "space": [1, 13, 14, 16, 22, 24, 25, 27, 44, 46, 54, 55, 56, 58, 63, 65, 69, 72, 74, 75, 76, 77, 78, 81, 84, 87, 121, 122, 127, 130, 139, 154, 161, 165], "have": [1, 15, 16, 26, 27, 30, 36, 38, 51, 57, 68, 74, 75, 76, 77, 78, 90, 91, 96, 100, 101, 102, 103, 104, 152, 154], "orient": [1, 38, 46, 48, 51, 100, 101, 102, 103, 104, 121, 151, 161, 165], "in_file_a": [1, 2], "first": [1, 5, 10, 14, 16, 19, 26, 27, 34, 36, 39, 43, 47, 51, 73, 78, 90, 92, 93, 94, 95, 96, 101, 102, 103, 104, 109, 110, 111, 116, 126, 132, 154], "img_1": 1, "expr": [1, 125], "b": [1, 15, 17, 30, 32, 36, 43, 74, 77, 78, 98, 105, 106, 121, 125, 132, 133, 134, 151, 154, 157], "express": [1, 88], "appli": [1, 14, 16, 18, 27, 30, 41, 47, 48, 51, 64, 73, 74, 75, 78, 79, 90, 100, 101, 102, 103, 104, 113, 114, 122, 124, 129, 134, 151, 152, 157], "between": [1, 6, 10, 13, 15, 16, 24, 36, 38, 51, 73, 74, 76, 77, 79, 82, 83, 88, 92, 93, 94, 95, 100, 101, 102, 103, 104, 109, 118, 132, 136, 137, 140, 146, 151, 152, 165], "c": [1, 98, 105, 106, 157], "allow": [1, 17, 19, 22, 27, 51, 74, 81, 100, 101, 102, 103, 104, 114, 134, 138, 140], "parenthes": 1, "It": [1, 16, 17, 20, 24, 25, 26, 27, 29, 46, 79, 96, 99, 118, 134], "also": [1, 10, 17, 24, 26, 27, 51, 74, 77, 78, 95, 96, 100, 107, 120, 121, 133, 140], "possibl": [1, 16, 24, 25, 26, 27, 36, 74, 78, 136, 137, 151], "built": [1, 30, 48, 90, 142, 161], "function": [1, 16, 17, 27, 30, 38, 46, 56, 59, 74, 88, 93, 97, 99, 100, 118, 120, 121, 128, 130, 131, 132, 135, 138, 141, 151, 152, 154, 157, 161, 162, 163, 165], "sin": 1, "co": [1, 118, 120, 121, 134], "sqrt": [1, 154], "mean": [1, 12, 16, 17, 45, 50, 76, 77, 78, 85, 88, 94, 96, 98, 101, 102, 103, 104, 120, 137, 139, 146, 148, 154, 161, 163, 165], "stdev": 1, "some": [1, 16, 24, 25, 43, 74, 84, 85, 98, 99, 100, 121, 134, 142, 146, 147, 148, 149, 150, 151, 153, 156], "design": [1, 36, 98, 99, 100, 111, 141, 156, 159], "help": [1, 132, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164], "implement": [1, 89, 99, 154], "logic": 1, "x": [1, 18, 24, 25, 27, 46, 49, 51, 74, 77, 78, 80, 100, 121, 135, 149, 154, 165], "For": [1, 10, 14, 16, 19, 24, 27, 43, 58, 60, 61, 62, 74, 75, 78, 96, 101, 102, 103, 104, 111, 161, 165], "more": [1, 3, 12, 16, 17, 30, 35, 36, 51, 55, 56, 58, 63, 64, 65, 69, 74, 78, 88, 100, 157], "exampl": [1, 10, 14, 16, 19, 24, 30, 40, 60, 61, 62, 72, 74, 75, 78, 91, 96, 165], "refer": [1, 13, 27, 47, 52, 74, 78, 84, 85, 100, 122, 147, 152, 157, 162], "imag": [1, 2, 3, 4, 5, 6, 7, 12, 13, 15, 17, 19, 20, 21, 22, 23, 26, 29, 30, 33, 34, 35, 38, 39, 44, 47, 48, 49, 50, 51, 52, 54, 59, 60, 61, 64, 71, 74, 76, 81, 86, 88, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 118, 120, 121, 122, 124, 126, 127, 130, 131, 132, 133, 134, 138, 140, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 161, 162, 165], "c_": 1, "in_file_b": 1, "second": [1, 10, 23, 27, 36, 39, 41, 43, 47, 51, 78, 79, 100, 101, 102, 103, 104, 109, 121, 126, 133], "img_2": 1, "in_file_c": 1, "third": [1, 43, 95, 119, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157], "img_3": 1, "single_idx": 1, "volum": [1, 4, 10, 26, 27, 29, 32, 36, 39, 43, 45, 46, 49, 66, 70, 77, 78, 79, 85, 88, 100, 121, 128, 133, 137, 139, 146, 149, 150, 151, 152, 153, 154, 165], "index": [1, 2, 10, 25, 76, 79, 85, 92, 93, 94, 96, 99, 109, 116, 139, 140, 142, 146, 163], "The": [1, 3, 7, 10, 12, 13, 16, 17, 18, 22, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 57, 58, 67, 68, 73, 74, 75, 76, 77, 78, 79, 86, 88, 90, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 107, 109, 110, 111, 113, 116, 118, 120, 121, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165], "onli": [1, 6, 7, 17, 18, 19, 26, 27, 30, 34, 36, 37, 38, 39, 40, 43, 47, 49, 51, 55, 56, 58, 63, 65, 69, 73, 76, 78, 80, 99, 100, 101, 102, 103, 104, 113, 118, 146, 154, 157, 165], "start_idx": [1, 2], "start": [1, 2, 45, 49, 134, 147, 165], "requir": [1, 15, 16, 29, 30, 31, 32, 33, 34, 35, 36, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 74, 76, 81, 96, 101, 102, 103, 104, 118, 121, 138, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157], "stop_idx": [1, 2], "stop": [1, 2, 51, 74], "35": [1, 79, 111], "out": [1, 2, 4, 5, 6, 7, 9, 10, 11, 13, 14, 15, 18, 19, 30, 33, 42, 43, 45, 51, 54, 84, 85, 86, 88, 89, 91, 97, 138, 139, 154, 161, 165], "c_img_1": 1, "current": [1, 18, 76, 78, 79, 96, 99, 101, 102, 103, 104, 133, 157, 165], "initi": [1, 5, 16, 27, 39, 48, 51, 142, 143], "mai": [1, 12, 27, 74, 75, 78, 100, 154], "crash": [1, 99], "execut": [1, 36, 38], "produc": [1, 76, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 163], "ani": [1, 19, 20, 21, 37, 38, 44, 51, 74, 77, 93, 96, 100, 101, 102, 103, 104, 117, 146], "result": [1, 15, 26, 27, 41, 51, 57, 67, 68, 74, 76, 77, 78, 90, 96, 108, 109, 113, 114, 116, 120, 136, 137, 140, 154, 157], "without": [1, 46, 51, 54, 76, 78, 92, 96, 154, 165], "error": [1, 35, 99, 136, 137, 154], "messag": [1, 165], "If": [2, 10, 15, 16, 17, 20, 21, 24, 27, 30, 33, 34, 36, 37, 39, 40, 43, 45, 46, 47, 51, 57, 68, 74, 76, 77, 78, 79, 80, 81, 90, 91, 96, 99, 100, 101, 102, 103, 104, 107, 108, 109, 113, 116, 121, 133, 136, 140, 152, 154, 157, 165], "none": [2, 16, 36, 50, 76, 77, 79, 100, 101, 102, 103, 104, 129, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165], "automat": [2, 17, 43, 79, 93, 99, 100, 113, 121, 133, 154], "length": [2, 37, 51, 56, 98, 99, 100, 152], "3d": [2, 4, 9, 11, 15, 19, 25, 51, 67, 78, 120, 130, 131, 146, 148, 150, 153, 154], "crop": [2, 41, 51], "cropped_": 2, "cannot": [2, 19, 84, 85], "lower": [2, 16, 64, 78, 93, 154], "than": [2, 10, 12, 17, 41, 46, 49, 55, 74, 76, 77, 93, 100, 120, 152], "equal": [2, 14, 19, 30, 39, 46, 78, 98, 104], "10": [2, 13, 25, 37, 59, 64, 76, 77, 79, 80, 93, 100, 111, 121, 129, 152, 154], "cropped_func": 2, "calc": [2, 119, 125, 145, 146], "replac": [3, 18, 27, 46], "someth": 3, "pleas": [3, 20, 21, 30, 31, 32, 33, 34, 35, 36, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 75, 78, 99, 100, 134, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164], "ey": [3, 72], "alwai": 3, "store": [3, 39, 74, 165], "boolean": [3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 19, 20, 21, 23, 24, 26, 27, 30, 31, 34, 35, 36, 37, 38, 39, 41, 43, 46, 47, 48, 49, 50, 51, 60, 63, 64, 70, 73, 74, 76, 78, 80, 82, 83, 88, 89, 96, 97, 98, 99, 101, 102, 103, 104, 113, 128, 139, 152, 165], "true": [3, 4, 5, 6, 7, 8, 14, 15, 16, 26, 27, 31, 34, 35, 50, 60, 63, 64, 73, 76, 78, 80, 82, 83, 88, 96, 97, 98, 99, 101, 102, 103, 104, 113, 126, 127, 128, 132, 134, 137, 138, 139, 152, 154, 165], "d": [3, 105, 152, 157], "d_": 3, "d_func": 3, "all": [4, 17, 19, 26, 27, 32, 33, 35, 36, 37, 38, 39, 43, 51, 55, 60, 74, 78, 79, 80, 84, 85, 88, 91, 95, 97, 100, 101, 102, 103, 104, 107, 121, 132, 139, 141, 142, 146, 154, 157, 165], "sub": [4, 41, 61, 91, 93, 101, 102, 103, 104, 107, 146, 157], "each": [4, 5, 10, 13, 16, 25, 26, 27, 30, 37, 38, 48, 51, 57, 58, 60, 61, 72, 74, 76, 78, 82, 83, 88, 90, 91, 93, 95, 98, 99, 100, 101, 102, 103, 104, 111, 113, 121, 132, 138, 141, 145, 146, 151, 152, 154, 157, 165], "tr": [4, 5, 10, 79, 86], "separ": [4, 10, 26, 48, 74, 78, 86, 146], "mean_reg_func_valid": [4, 5, 85, 94, 129, 139], "combin": [4, 5, 6, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141], "final": [4, 5, 6, 10, 15, 23, 27, 38, 48, 64, 90, 114, 130, 131, 132, 141, 154], "measur": [4, 5, 6, 17, 39, 76, 77, 84, 85, 100, 104, 118, 120, 154, 159, 162], "along": [4, 5, 6, 27, 42, 43, 151, 154], "axi": [4, 5, 6, 13, 27, 36, 42, 43, 51, 151, 154, 165], "detrend": [4, 6, 7, 10, 97], "specifi": [4, 6, 7, 10, 12, 14, 15, 19, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 42, 43, 44, 46, 47, 48, 49, 50, 51, 57, 74, 79, 80, 87, 88, 89, 93, 98, 99, 100, 101, 102, 103, 104, 116, 151, 157], "order": [4, 10, 12, 14, 15, 16, 22, 24, 30, 37, 47, 51, 76, 79, 99, 100, 111, 121, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157], "prepend": [4, 6, 7, 28, 57, 74, 80, 87, 88, 89], "filenam": [4, 6, 7, 28, 74, 78, 80, 87, 88, 89, 100, 113, 157], "fwhm_": 4, "arg": [4, 165], "add": [4, 10, 24, 38, 83, 98, 107, 143, 165], "showmeclassicfwhm": 4, "old": [4, 96, 154], "classic": [4, 16, 100, 147, 156], "method": [4, 10, 12, 24, 27, 44, 46, 51, 54, 63, 67, 69, 74, 77, 78, 99, 101, 102, 103, 104, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 165], "mask_fil": [4, 5, 6, 7, 65], "mask": [4, 6, 7, 12, 15, 16, 17, 18, 20, 21, 22, 27, 30, 31, 33, 34, 36, 37, 38, 39, 41, 47, 48, 49, 51, 57, 60, 61, 72, 74, 78, 80, 81, 84, 85, 88, 92, 93, 94, 96, 97, 99, 100, 101, 102, 103, 104, 119, 120, 121, 124, 125, 126, 127, 129, 132, 133, 134, 136, 137, 139, 141, 145, 146, 151, 152, 154, 161, 163], "automask_mean_reg_func_valid": [4, 5, 6, 7, 87, 88, 129, 139], "fwhm_mean_reg_func_valid": [4, 85], "no_demean": 5, "fals": [5, 6, 7, 10, 12, 13, 14, 15, 16, 19, 20, 21, 23, 24, 27, 30, 31, 35, 36, 37, 38, 39, 41, 43, 46, 47, 48, 49, 50, 51, 60, 64, 70, 74, 76, 78, 80, 82, 83, 89, 96, 97, 98, 99, 127, 128, 139, 149, 152, 165], "need": [5, 12, 22, 27, 56, 74, 76, 77, 78, 91, 99, 100, 114, 154, 157], "demean": [5, 154], "nfirst": 5, "number": [5, 12, 13, 15, 16, 19, 26, 27, 30, 37, 39, 43, 46, 47, 48, 49, 51, 66, 70, 76, 78, 79, 84, 85, 86, 92, 93, 94, 98, 99, 100, 121, 154, 157, 165], "ignor": [5, 10, 27, 100], "3": [5, 6, 7, 13, 14, 15, 16, 24, 25, 26, 27, 30, 39, 42, 43, 44, 45, 46, 47, 48, 49, 51, 73, 74, 76, 77, 78, 79, 80, 82, 83, 100, 101, 102, 103, 104, 111, 117, 121, 125, 126, 127, 129, 135, 139, 152, 154, 157], "global": [5, 16, 85, 100, 101, 102, 103, 104, 132, 143], "06123": 5, "reg_func_valid": [6, 7, 85, 88, 139], "autoclip": [6, 7], "off": [6, 7, 51, 78], "mutual": [6, 7, 10, 16, 27, 28, 74, 77, 98, 107], "exclus": [6, 7, 10, 16, 23, 27, 28, 29, 36, 37, 51, 77, 98, 118, 120, 121, 133], "automask": [6, 7, 119, 138, 145, 146], "interv": [6, 7], "write": [6, 7, 16, 23, 37, 74, 75, 76, 77, 78, 99, 131], "median": [6, 7, 45, 58, 64, 88, 95, 152, 154], "mad": [6, 7, 154], "count": [6, 7, 43, 139], "timepoint": [6, 7, 88, 97], "legendr": [6, 49, 51], "polynomi": [6, 7, 10, 12, 47, 49, 51, 100, 154], "outliers_": 6, "qthr": 6, "001": [6, 60, 74, 76, 77, 112], "indic": [6, 36, 41, 44, 45, 73, 78, 80, 88, 93, 96, 99, 109, 120, 154], "q": 6, "alpha": 6, "correl": [6, 7, 16, 27, 74, 85, 99, 100, 101, 102, 103, 104, 146, 154], "across": [6, 7, 20, 43, 45, 46, 72, 88, 154, 165], "polort": [6, 7], "timeseri": [6, 7], "outliers_reg_func_valid": [6, 7, 85, 86, 139], "1d": [7, 10, 12], "seri": [7, 10, 14, 36, 46, 51, 74, 86, 88, 93, 97, 100, 151, 152, 153], "outlier": [7, 64, 85, 86, 94, 139, 146, 152, 154], "qi": [7, 154], "qi_": 7, "quadrant": 7, "similar": [7, 16, 100, 118, 129], "spearman": 7, "minu": [7, 100], "coeffici": [7, 30, 38, 39, 46, 49, 50, 74, 93, 98, 99, 120, 140], "rank": 7, "e": [7, 15, 17, 30, 36, 37, 43, 44, 46, 51, 76, 77, 88, 93, 96, 99, 101, 102, 103, 104, 105, 109, 113, 116, 120, 134, 136, 137, 154, 157], "name": [8, 17, 24, 26, 33, 42, 43, 45, 72, 73, 74, 80, 82, 90, 93, 96, 98, 99, 100, 101, 102, 103, 104, 110, 111, 112, 113, 120, 129, 130, 131, 140, 143, 154, 156, 157, 165], "refit": 8, "t1w": [9, 13, 14, 15, 16, 19, 20, 21, 22, 24, 26, 27, 29, 41, 52, 53, 54, 55, 58, 59, 62, 63, 64, 65, 69, 72, 81, 84, 92, 112, 117, 121, 122, 123, 124, 125, 126, 127, 138, 152, 162], "ss": 9, "ss_": 9, "ss_t1w": [9, 123], "shift": [10, 12, 44, 154], "from": [10, 16, 17, 20, 21, 26, 27, 30, 39, 40, 43, 44, 45, 46, 48, 49, 51, 54, 55, 56, 57, 58, 59, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 76, 77, 79, 81, 84, 85, 88, 89, 90, 93, 95, 97, 98, 99, 100, 101, 102, 103, 104, 112, 113, 114, 118, 120, 124, 126, 127, 128, 129, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 161, 162, 165], "so": [10, 25, 29, 51, 74, 76, 77, 78, 79, 96, 100, 132, 154], "align": [10, 12, 13, 16, 27, 36, 76, 129, 137, 153], "tempor": [10, 153], "origin": [10, 12, 15, 16, 27, 46, 64, 74, 76, 78, 80, 113, 142, 149, 154, 157, 165], "you": [10, 14, 16, 17, 20, 21, 24, 25, 74, 78, 81, 99, 101, 102, 103, 104, 107, 136], "either": [10, 24, 26, 27, 46, 74, 79, 91, 99], "slice_tim": 10, "tpattern": 10, "neither": 10, "two": [10, 12, 23, 26, 27, 36, 39, 76, 96, 108, 109, 111, 113, 140, 142, 154, 156, 157], "defin": [10, 16, 37, 38, 46, 47, 51, 55, 56, 58, 63, 65, 69, 73, 77, 82, 83, 90, 98, 99, 100, 101, 102, 103, 104, 108, 113, 134, 138, 140, 141, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157], "process": [10, 15, 29, 30, 34, 35, 38, 51, 73, 76, 79, 93, 114, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 142, 143, 144, 145, 153, 156, 157, 159, 160, 161, 162, 163, 164], "return": [10, 116, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 165], "interpol": [10, 12, 14, 16, 27, 34, 44, 46, 74, 78, 101, 102, 103, 104, 122, 124, 127, 129, 138], "fourier": [10, 12, 99, 100, 137], "linear": [10, 12, 14, 16, 36, 46, 50, 67, 93, 100, 118, 124, 129, 133, 150], "cubic": [10, 12, 46], "quintic": [10, 12], "heptic": [10, 12], "differ": [10, 12, 26, 27, 76, 77, 78, 79, 100, 121, 132, 134, 151, 153, 154], "most": [10, 12, 49, 78], "accur": [10, 12, 78], "slowest": [10, 12], "1st": [10, 12, 93, 100], "least": [10, 12, 27, 30, 37, 39, 51, 77, 101, 102, 104, 132], "3rd": [10, 12, 74, 78, 100], "lagrang": [10, 12], "5th": [10, 12, 100], "7th": [10, 12, 74, 78], "st_corr": 10, "st_corr_": 10, "rlt": 10, "befor": [10, 16, 34, 37, 44, 46, 75, 77, 78, 90, 93, 133], "remov": [10, 38, 56, 64, 88, 90, 100, 107, 133, 146, 151, 154], "trend": 10, "rltplu": 10, "later": [10, 96, 120, 163], "put": [10, 16, 39, 165], "back": [10, 74, 78, 153], "slice_encoding_dir": 10, "k": [10, 99, 140, 154], "direct": [10, 24, 27, 30, 36, 38, 46, 49, 51, 74, 78, 80, 121, 133, 154], "which": [10, 16, 17, 18, 19, 26, 27, 30, 33, 35, 36, 37, 42, 43, 44, 45, 47, 48, 49, 64, 67, 68, 70, 73, 74, 76, 77, 78, 79, 80, 83, 84, 85, 89, 90, 91, 93, 95, 98, 99, 100, 101, 102, 103, 104, 110, 111, 120, 121, 129, 130, 131, 132, 133, 138, 141, 152, 154, 165], "neg": [10, 15, 30, 38], "revers": [10, 14, 36, 46, 161], "entri": [10, 47, 57, 68, 90, 96, 108, 152, 154], "correspond": [10, 30, 43, 49, 55, 74, 82, 83, 84, 85, 86, 90, 96, 108, 109, 114, 115, 116, 121, 130, 140, 145, 154, 156, 157, 165], "zero": [10, 15, 17, 19, 38, 51, 74, 78, 88, 101, 102, 103, 104, 154], "point": [10, 13, 25, 27, 46, 51, 74, 76, 77, 78, 99, 136, 137, 152, 165], "ii": 10, "unchang": [10, 43], "thei": [10, 15, 37, 51, 74, 77, 78, 100, 165], "2": [10, 12, 13, 14, 15, 16, 18, 26, 27, 28, 36, 37, 39, 43, 44, 45, 46, 48, 49, 51, 72, 74, 76, 77, 78, 79, 80, 82, 83, 85, 86, 99, 100, 101, 102, 103, 104, 106, 109, 111, 113, 118, 120, 121, 127, 129, 133, 139, 149, 154, 157], "list": [10, 14, 15, 16, 19, 26, 27, 30, 33, 35, 37, 42, 43, 44, 46, 47, 48, 55, 57, 58, 60, 61, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 90, 91, 96, 98, 99, 100, 101, 102, 103, 104, 107, 111, 113, 114, 120, 124, 129, 130, 131, 138, 140, 141, 154, 156, 157, 165], "offset": [10, 12], "acquisit": [10, 20, 36, 43, 79, 100, 153, 154], "onset": [10, 100, 111, 157], "alt": 10, "z": [10, 24, 25, 27, 46, 49, 51, 74, 77, 78, 80, 97, 121, 135, 152, 154], "altplu": 10, "z2": 10, "altminu": 10, "seq": 10, "seqplu": 10, "seqminu": 10, "pattern": [10, 74, 78, 157], "rather": [10, 41, 46], "header": [10, 15, 36, 43, 46, 74, 78, 152], "One": [10, 74, 77, 78, 100, 111, 141, 142], "manual": [10, 18, 41, 141], "": [10, 16, 24, 26, 27, 28, 37, 50, 58, 74, 78, 80, 81, 89, 100, 120, 121, 133, 134, 141, 149, 151, 153, 157], "m": [10, 79, 93, 96, 121, 134, 157], "millisecond": 10, "tslice": 10, "given": [10, 16, 24, 38, 51, 64, 100, 101, 102, 103, 104, 109, 138, 143, 146, 152], "tzero": 10, "minimum": [10, 19, 25, 27, 37, 51, 93], "maximum": [10, 19, 25, 28, 30, 37, 47, 48, 51, 73, 76, 77, 80, 88, 93, 154, 156], "note": [10, 15, 25, 27, 30, 31, 32, 33, 34, 35, 36, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 76, 98, 99, 101, 102, 103, 104, 114, 116, 121, 134, 135, 157, 165], "when": [10, 12, 16, 46, 51, 67, 74, 76, 77, 78, 90, 134, 136, 137], "averag": [10, 11, 18, 74, 88, 91, 118, 133, 134, 138, 146], "st_corr_func": 10, "time": [11, 12, 14, 25, 36, 51, 74, 86, 93, 97, 100, 101, 102, 103, 104, 121, 131, 133, 146, 152, 153, 157, 165], "mean_": 11, "mean_func": [11, 94], "tstat": 11, "copyorigin": 12, "copi": [12, 15, 78], "coord": [12, 43], "reg": [12, 76, 77], "reg_": 12, "save_oned_matrix": 12, "save": [12, 15, 19, 27, 60, 76, 84, 85, 143, 154, 165], "transform": [12, 16, 24, 27, 74, 76, 77, 78, 81, 122, 124, 127, 129, 147, 149, 150, 151], "matrix": [12, 27, 46, 81, 100, 101, 102, 103, 104, 141, 151, 156], "oned": 12, "save_md1d_fil": 12, "max": [12, 15, 19, 27, 45, 51, 154], "displac": [12, 139, 154], "outputfil": 12, "md1d": 12, "timeshift": 12, "slice": [12, 19, 27, 36, 43, 74, 86, 92, 93, 94, 97, 100, 131, 146, 153, 154, 157, 165], "twopass": [12, 137], "pass": [12, 48, 100, 165], "registr": [12, 24, 36, 54, 74, 76, 77, 119, 121, 127, 128, 134, 137, 145, 147, 150, 161], "smooth": [12, 15, 16, 34, 74, 76, 77, 78, 119, 130, 131, 135, 145, 150, 153], "get": [12, 16, 22, 24, 30, 34, 37, 39, 48, 51, 111, 112, 122, 127, 129, 138, 152, 153, 157, 161, 162, 165], "crude": [12, 48], "fine": [12, 27, 74], "high": [12, 51, 100, 165], "resolut": [12, 20, 72, 99, 122, 124, 127, 129, 135, 140, 141, 152, 157, 161], "move": [12, 13, 16, 46, 74, 127, 147], "few": 12, "zpad": 12, "4": [12, 14, 15, 16, 19, 27, 51, 74, 76, 78, 79, 80, 82, 83, 100, 101, 102, 103, 104, 109, 121, 126, 127, 129, 131, 134, 154, 165], "zeropad": 12, "around": [12, 13, 27, 74, 78, 86, 120, 154], "edg": [12, 19, 24, 86], "n": [12, 78, 100, 121, 134, 154], "dure": [12, 15, 30, 35, 36, 46, 51, 93, 99, 100, 113, 118, 120, 130, 131], "rotat": [12, 13, 27, 54, 78, 84, 93, 130, 131, 152, 154, 161], "in_weight_volum": 12, "tupl": [12, 14, 15, 16, 34, 37, 43, 49, 51, 76, 129, 165], "weight": [12, 15, 16, 21, 24, 27, 32, 35, 37, 38, 39, 41, 43, 51, 78, 98, 134, 146, 151], "md1d_file": 12, "aff12": 12, "reg_func_md": 12, "oned_fil": [12, 128], "movement": [12, 74, 89, 128, 133, 139], "txt": [12, 19, 27, 30, 37, 38, 43, 46, 48, 52, 78, 81, 89, 90, 93, 96, 100, 109, 118, 120, 128, 130, 131, 139, 141, 154], "reg_func_on": 12, "oned_matrix": 12, "reg_func_oned_matrix": 12, "reg_func": 12, "moving_imag": [13, 16, 127], "map": [13, 15, 20, 26, 27, 31, 34, 38, 46, 50, 62, 72, 75, 76, 84, 93, 130, 133, 141, 153, 154, 161, 165], "fix": [13, 16, 23, 51, 75, 147], "fixed_imag": [13, 16], "t1w_templat": 13, "dimens": [13, 14, 15, 16, 19, 27, 41, 43, 46, 76, 77, 100, 125, 126, 129, 135, 154, 165], "local_search": 13, "determin": [13, 27, 39, 46, 51, 64, 78, 93], "local": [13, 44, 148], "optim": [13, 20, 147, 151], "run": [13, 24, 36, 44, 81, 95, 114, 136, 137, 138, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 165, 166], "search": [13, 27, 74, 78, 140, 142], "iter": [13, 15, 16, 38, 39, 47, 74, 157], "affinetransform": 13, "affinetransform_": 13, "principal_ax": 13, "whether": [13, 27, 46, 64, 78, 101, 102, 103, 104, 154, 165], "princip": 13, "radian_fract": 13, "arc": 13, "ax": [13, 43, 44, 45, 46, 56, 154], "search_factor": 13, "15": [13, 16, 46, 47, 48, 51, 79, 111, 127], "increment": 13, "degre": [13, 17, 27, 30, 48, 74, 77, 78, 154], "mat": [13, 14, 16, 23, 24, 27, 52, 76, 93, 98, 99, 100, 101, 102, 103, 104, 118, 141], "affinetransform_t1w": 13, "input_imag": 14, "reference_imag": [14, 67, 68, 152], "wish": [14, 78], "warp": [14, 16, 46, 76, 77, 153], "ref_t1w": 14, "multipl": [14, 16, 49, 100, 136, 137, 141, 151, 156, 165], "last": [14, 19, 143], "post_n4c_t1w_clipped_masked_inversecomposit": 14, "h5": [14, 16, 122, 124, 127, 129], "default_valu": [14, 165], "forc": [14, 27, 35, 140], "treat": 14, "dimension": [14, 99, 134], "instead": [14, 16, 19, 39], "doubl": [14, 16, 27, 80], "input_image_typ": 14, "type": [14, 20, 26, 27, 38, 48, 51, 76, 79, 80, 82, 83, 96, 100, 101, 102, 103, 104, 111, 117, 121, 132, 134, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164], "scalar": [14, 37], "vector": [14, 49, 74, 101, 102, 103, 104, 121, 156, 157], "tensor": [14, 151], "nearestneighbor": [14, 16, 129], "cosinewindowedsinc": [14, 16, 129], "welchwindowedsinc": [14, 16, 129], "hammingwindowedsinc": [14, 16, 129], "lanczoswindowedsinc": [14, 16, 127, 129], "multilabel": [14, 16, 122, 129], "gaussian": [14, 15, 16, 17, 18, 74, 76, 77, 78, 129, 150, 153, 157], "bspline": [14, 15, 16, 129], "model": [14, 15, 16, 18, 20, 21, 27, 38, 51, 93, 98, 101, 102, 103, 104, 118, 120, 141, 144, 149, 155], "t": [14, 25, 76, 77, 93, 98, 99, 120, 121, 134, 140, 141, 154, 156, 157], "t_": 14, "print_out_composite_warp_fil": 14, "composit": [14, 16, 122, 124, 127, 129], "interpolation_paramet": [14, 16], "form": [14, 15, 16, 34, 36, 37, 43, 49, 51, 76, 77, 129, 165], "sigma": [14, 16, 28, 154], "alphaparamet": [14, 16], "invert_transform_flag": 14, "invert": [14, 19, 23, 46, 64], "flag": 14, "ants_warp": 14, "tran": [14, 16, 154], "follinw": 14, "trnasform": 14, "t_t1w": 14, "variant": 15, "popular": 15, "n3": 15, "nonparameter": 15, "nonuniform": 15, "normal": [15, 27, 51, 81, 88, 89, 120, 121, 130, 132, 154, 161], "retrospect": 15, "base": [15, 19, 24, 27, 30, 36, 37, 38, 39, 44, 51, 73, 76, 81, 99, 100, 121, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165], "assumpt": 15, "corrupt": [15, 118, 154], "low": [15, 27, 154, 157, 165], "frequenc": 15, "convolut": [15, 81, 140, 149, 152, 157], "intens": [15, 16, 24, 26, 27, 33, 39, 43, 46, 70, 76, 77, 86, 88, 93, 100, 121, 132, 151, 152, 154], "histogram": [15, 16, 27, 74, 152], "basic": [15, 99, 100, 121, 143, 152, 157], "protocol": [15, 36, 81, 82, 83, 154], "deconvolv": [15, 48], "remap": 15, "spatial": [15, 43, 45, 72, 74, 78, 93, 130, 133, 134, 136, 151, 153, 161], "spline": [15, 27, 74, 77, 78], "2d": [15, 19, 27], "4d": [15, 25, 33, 46, 51, 67, 76, 78, 120, 130, 131, 152, 165], "thera": 15, "close": [15, 18, 49, 86, 88, 154], "prior": 15, "copy_head": 15, "optionn": [15, 28, 88, 89], "n4c": [15, 107], "n4c_": 15, "rescale_intens": [15, 126], "rescal": [15, 27, 43], "min": [15, 19, 27, 45, 51, 137], "rang": [15, 16, 19, 20, 26, 27, 93, 95, 152, 154, 165], "theorigin": 15, "within": [15, 17, 30, 33, 34, 38, 39, 49, 51, 74, 88, 100, 101, 102, 103, 104, 120, 141, 154], "user": [15, 79, 100, 101, 102, 103, 104, 140], "save_bia": 15, "estim": [15, 16, 17, 31, 34, 36, 38, 49, 74, 76, 77, 78, 93, 100, 101, 102, 103, 104, 121, 123, 130, 131, 133, 140, 151, 152, 154, 156], "bspline_fitting_dist": 15, "fit": [15, 17, 39, 47, 64, 78, 99, 154], "distanc": [15, 20, 21, 74, 76, 77, 78, 152], "300": [15, 30, 46], "bspline_ord": 15, "convergence_threshold": [15, 16, 127, 129], "converg": [15, 16], "n_iter": [15, 126], "1e": [15, 16, 127, 129], "6": [15, 27, 28, 46, 51, 76, 79, 80, 82, 83, 97, 100, 101, 102, 103, 104, 111, 134, 139, 149, 152, 154, 157], "histogram_sharpen": 15, "three": [15, 26, 30, 43, 45, 46, 50, 80, 101, 102, 103, 104, 132], "sharpen": 15, "fwhm": [15, 28, 74, 76, 77, 78, 80, 84, 85, 146], "wienernos": 15, "numberofhistogrambin": 15, "These": [15, 17, 74, 78, 99, 136, 137], "describ": [15, 54, 63, 69, 72, 74, 76, 77, 154, 165], "deconvolut": [15, 30, 51, 121, 132, 151], "been": [15, 36, 41, 51, 74, 75, 78, 91, 100, 114, 136, 137, 154], "shown": 15, "work": [15, 57, 68, 90, 96, 121, 134, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157], "fairli": 15, "well": 15, "12": [15, 25, 27, 39, 74, 79, 100, 154], "02": [15, 74], "200": [15, 51], "mask_imag": [15, 99, 100], "region": [15, 16, 37, 51, 54, 60, 61, 78, 86, 90, 118, 120, 150, 152, 154, 157], "t1w_mask": [15, 65], "50": [15, 77, 79, 89, 126, 139], "30": [15, 16, 49, 77, 79, 129, 131], "20": [15, 16, 44, 76, 79, 100, 111, 127, 129], "shrink_factor": [15, 16, 127, 129], "shrink": [15, 16], "factor": [15, 16, 47, 100, 101, 102, 103, 104, 154, 157], "weight_imag": [15, 24], "rel": [15, 77, 101, 102, 103, 104, 154], "g": [15, 46, 76, 77, 88, 93, 96, 113, 120, 136, 137, 157], "probabl": [15, 74, 75, 76, 77, 78, 130, 161], "white": [15, 24, 26, 27, 30, 51, 55, 56, 58, 65, 69, 76, 86, 121, 124, 132, 134, 135, 151, 152, 153, 154, 161], "matter": [15, 24, 26, 27, 30, 41, 51, 73, 76, 86, 121, 124, 132, 134, 141, 151, 152, 153, 154, 161, 163], "t1w_pve_0": [15, 26], "bias_imag": [15, 53, 125, 126, 129], "t1w_bia": [15, 53], "negative_valu": 15, "present": [15, 26, 35, 96, 108, 154], "otherwis": [15, 79, 113, 118, 152], "n4c_t1w": [15, 125], "regist": [16, 22, 27, 77, 84, 87, 121, 127, 128, 130, 134, 146, 147, 150, 161], "predefin": 16, "sequenc": [16, 120, 130, 131, 154], "cost": [16, 27, 38], "oper": [16, 45, 113, 143, 151, 157], "metric": [16, 86, 127, 129, 151, 154, 162], "both": [16, 22, 27, 32, 64, 108], "non": [16, 17, 26, 30, 35, 46, 70, 76, 77, 137, 148, 152, 154], "usual": [16, 73, 136, 137, 145], "done": [16, 19, 39, 78, 101, 102, 103, 104, 121, 128, 132, 133, 134, 149, 154], "stage": [16, 99, 130, 131, 144, 161], "affin": [16, 76, 77, 127, 129, 147, 150], "rigid": [16, 24, 27, 127, 129], "ultim": 16, "syn": [16, 129], "see": [16, 24, 27, 51, 75, 78, 99, 100, 129, 139, 141, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164], "transform_paramet": [16, 127, 129], "initil": [16, 127, 129], "initial_moving_transform": 16, "alreadi": [16, 27, 41, 74, 78], "warpfield": [16, 24], "correct": [16, 24, 35, 36, 44, 79, 85, 88, 100, 121, 126, 129, 130, 132, 133, 139, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 161], "geometr": 16, "distort": [16, 24, 36, 121, 133, 151], "epi": [16, 27, 36, 121, 133, 150, 154, 161], "want": [16, 17, 83, 136], "structur": [16, 27, 60, 61, 78, 81, 82, 83, 138, 150, 154, 161, 162], "could": [16, 30, 31, 32, 33, 34, 35, 36, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 74, 76, 91, 96, 121, 130], "intial_moving_transform": 16, "here": [16, 51, 107, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157], "found": [16, 110, 121, 133, 142, 143, 147, 149, 152, 154], "fmriprep": [16, 129, 147], "mriqc": [16, 54, 56, 58, 59, 62, 63, 69, 87, 88, 89, 97, 122, 123, 124, 126, 127, 128, 129, 139, 147, 149, 152, 154, 161, 162, 165], "niworkflow": [16, 55, 64, 65, 70, 86, 87, 147, 152, 154], "should": [16, 17, 23, 24, 30, 31, 32, 33, 34, 35, 36, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 60, 61, 74, 76, 77, 78, 84, 85, 98, 99, 101, 102, 103, 104, 107, 111, 112, 121, 132, 133, 136, 137, 154], "templat": [16, 46, 54, 67, 68, 77, 84, 87, 122, 129, 139, 152, 153, 161], "collapse_output_transform": 16, "collaps": 16, "initialize_transforms_per_stag": 16, "previou": [16, 39, 75], "genericlabel": [16, 129], "item": [16, 19, 26, 28, 30, 33, 35, 37, 42, 43, 44, 47, 48, 55, 67, 68, 73, 74, 76, 77, 78, 79, 80, 84, 98, 99, 100, 101, 102, 103, 104, 110, 120, 129, 130, 131, 141], "cc": [16, 129], "meansquar": [16, 129], "demon": [16, 129], "gc": [16, 129], "mi": [16, 74, 129], "matt": [16, 127, 129], "avail": [16, 24, 36, 100, 113, 136, 137, 158], "cross": [16, 51, 74, 132], "squar": [16, 27, 39, 43, 46, 98, 100], "inform": [16, 26, 27, 74, 84, 85, 88, 93, 96, 99, 100, 111, 121, 140, 143, 151, 157, 165], "metric_weight": [16, 127, 129], "sum": [16, 45, 47, 76, 77, 154], "per": [16, 26, 38, 47, 51, 76, 79, 93, 99, 100, 101, 102, 103, 104], "output_inverse_warped_imag": 16, "inverse_warped_imag": 16, "w": [16, 77, 154], "w_": 16, "radius_bins_item_trait": 16, "radiu": [16, 51, 89, 154], "bin": [16, 27, 100], "signa_unit": 16, "vox": [16, 38, 43, 77], "mm": [16, 20, 21, 28, 37, 43, 51, 74, 76, 77, 78, 80, 89, 124, 154, 161], "len": 16, "unit": [16, 27, 79, 88, 100, 165], "smoothing_sigma": [16, 127, 129], "compositeaffin": [16, 129], "translat": [16, 78, 93, 129, 130, 131], "gaussiandisplacementfield": [16, 129], "timevaryingvelocityfield": [16, 129], "timevaryingbsplinevelocityfield": [16, 129], "bsplinesyn": [16, 129], "exponenti": [16, 129], "bsplineexponenti": [16, 129], "01": [16, 74], "08": [16, 127, 129], "use_estimate_learning_rate_onc": 16, "learn": [16, 20], "rate": [16, 73, 120], "use_histogram_match": [16, 127], "match": [16, 19, 33, 38, 46, 49, 74, 100, 107, 121, 149, 151], "winsorize_lower_quantil": 16, "005": 16, "quantil": 16, "winsorize_upper_quantil": 16, "995": 16, "upper": [16, 64], "write_composite_transform": 16, "number_of_iter": [16, 39, 127, 129], "07": [16, 127], "8": [16, 30, 39, 58, 76, 79, 80, 99, 100, 101, 102, 103, 104, 111, 120, 129], "convergence_window_s": [16, 127, 129], "window": [16, 27, 34, 44, 100], "size": [16, 18, 25, 27, 34, 41, 43, 51, 57, 74, 77, 78, 90, 93, 100, 101, 102, 103, 104, 152, 154], "fixed_image_mask": 16, "null": [16, 51], "limit": [16, 25], "sampl": [16, 27, 46, 51, 74, 76, 77, 78, 136, 137, 156], "omit": [16, 30, 37, 101, 102, 103, 104], "template_desc": 16, "brain_mask": [16, 20, 21, 49, 87, 92, 94, 127, 132, 133], "initial_moving_transform_com": 16, "center": [16, 18, 101, 102, 103, 104, 154, 156], "invert_initial_moving_transform": 16, "indicatewheth": 16, "invers": [16, 37, 46, 75, 76, 122, 124, 127, 129, 134], "moving_image_mask": 16, "t1w_desc": [16, 19, 20, 21, 127], "10000": [16, 129], "1000": [16, 30, 51, 88, 129, 139, 154], "100": [16, 19, 51, 77, 129], "500": [16, 37, 129], "250": [16, 129], "radius_or_number_of_bin": [16, 127, 129], "other": [16, 18, 51, 55, 74, 76, 77, 79, 100, 101, 102, 103, 104, 107, 114, 119, 120, 121, 142, 144, 145, 146, 154, 157, 161], "56": [16, 93, 111, 127, 129], "random_se": 16, "seed": [16, 49, 51, 121, 134, 151], "random": [16, 51, 58, 127, 129, 136, 137], "gener": [16, 22, 30, 36, 50, 51, 74, 77, 78, 99, 100, 120, 134, 143, 144, 151, 152, 154, 156, 157, 163, 165], "sampling_percentag": [16, 127, 129], "percentag": 16, "strategi": [16, 20], "sampling_strategi": [16, 127, 129], "regular": [16, 129], "composite_transform": [16, 127, 129], "t1w_composit": 16, "inverse_composite_transform": [16, 122, 124, 127, 129], "t1w_inversecomposit": 16, "w_inverse_t1w": 16, "warped_imag": [16, 127], "w_t1w": 16, "dki": [17, 39, 148], "expans": [17, 100], "dti": [17, 39], "quantif": 17, "water": 17, "biolog": [17, 121, 134], "tissu": [17, 30, 32, 38, 51, 60, 61, 62, 76, 77, 81, 82, 83, 84, 121, 132, 138, 146, 150, 151, 154, 161], "us": [17, 19, 20, 24, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 54, 57, 74, 75, 76, 77, 78, 79, 82, 83, 86, 88, 90, 92, 94, 96, 98, 100, 101, 102, 103, 104, 107, 111, 113, 118, 119, 120, 121, 122, 124, 125, 129, 130, 132, 134, 135, 139, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165], "propos": [17, 44, 161], "dipi": [17, 18, 119, 144, 145, 161], "sinc": [17, 27, 43, 46, 84, 85], "standard": [17, 18, 22, 28, 46, 72, 76, 77, 94, 101, 102, 103, 104, 118, 120, 152, 154, 163], "statist": [17, 36, 38, 93, 120, 140, 141, 144, 151, 152, 155, 156, 164], "anisotropi": [17, 50], "fa": [17, 48, 50, 51], "md": 17, "axial": [17, 44, 50, 97, 165], "ad": [17, 43, 50, 75, 165], "radial": [17, 50], "rd": [17, 50], "In": [17, 30, 31, 32, 33, 34, 35, 36, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 78, 82, 83, 99, 100, 121, 132, 133, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157], "addit": [17, 36, 38, 41, 75, 78, 100, 101, 102, 103, 104], "mk": 17, "ak": 17, "rk": 17, "mkt": 17, "kfa": 17, "depend": [17, 27, 82, 83, 104, 120], "in_dwi": [17, 43, 121, 132, 133, 134], "multi": [17, 30, 48, 100, 121, 147, 151], "shell": [17, 30, 48, 121, 151], "acquir": [17, 36, 44, 100, 120, 153], "dwi": [17, 30, 36, 39, 43, 44, 45, 46, 48, 51, 52, 121, 151, 160, 161], "dwi_bvec": 17, "bvec": [17, 30, 31, 32, 33, 34, 35, 36, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 121, 133], "suppli": [17, 27, 43, 47, 118, 121, 133], "wil": [17, 43], "dwi_bval": 17, "bval": [17, 30, 31, 32, 33, 34, 35, 36, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 121, 133], "in_mask": [17, 18, 30, 31, 33, 34, 39, 40, 41, 48, 85, 88, 122, 154], "brain": [17, 18, 19, 20, 21, 24, 29, 30, 38, 39, 40, 41, 48, 49, 60, 61, 72, 78, 85, 86, 87, 88, 91, 92, 93, 101, 102, 103, 104, 120, 127, 129, 132, 133, 139, 146, 150, 151, 154, 160, 161], "dwi_brainmask": [17, 30, 31, 32, 34, 37, 39, 47, 48], "out_fa": 17, "dwi_dki_fa": 17, "out_md": 17, "dwi_dki_md": 17, "out_rd": 17, "dwi_dki_rd": 17, "out_ad": 17, "dwi_dki_ad": 17, "out_mk": 17, "dwi_dki_mk": 17, "out_rk": 17, "dwi_dki_rk": 17, "out_ak": 17, "dwi_dki_ak": 17, "out_mkt": 17, "dwi_dki_mkt": 17, "out_kfa": 17, "dwi_dki_kfa": 17, "jensen": 17, "jh": 17, "2005": 17, "pixel": [18, 154], "specif": [18, 20, 51, 98, 99, 101, 102, 103, 104, 141, 149, 152, 156], "patch": 18, "contrast": [18, 20, 24, 64, 90, 96, 99, 100, 101, 102, 104, 141, 154, 156], "interest": [18, 27, 37, 51, 90, 93, 118, 120, 150, 154, 156, 157], "block_radiu": 18, "block": [18, 100, 149], "noise_model": 18, "rician": 18, "nois": [18, 34, 133, 151, 154, 165], "distribut": [18, 38, 46, 48, 51, 64, 99, 121, 151, 154, 161], "denoise_": 18, "patch_radiu": 18, "func_brain_mask": 18, "noise_mask": 18, "signal": [18, 20, 30, 39, 48, 58, 86, 93, 100, 120, 132, 138, 152, 154], "signal_mask": 18, "deviat": [18, 28, 94, 120, 152, 154, 163], "snr": [18, 123, 144, 152, 154], "ratio": [18, 27, 38], "260": [18, 111], "denoise_func": 18, "articl": 18, "rmin": 19, "rmax": 19, "binval": 19, "binvalnot": 19, "By": [19, 26, 39, 43, 48, 88, 142], "ab": 19, "take": [19, 25, 26, 51, 75, 109, 140], "absolut": [19, 101, 102, 103, 104, 152, 165], "unsign": [19, 80], "bin_col_nul": 19, "its": [19, 30, 41, 78, 79, 100, 110, 140, 142, 154], "column": [19, 92, 93, 94, 100, 111, 141, 165], "get_count_fil": 19, "hit": 19, "ascii": [19, 46], "ntotvox": 19, "pct": 19, "four": 19, "nhit": 19, "total": [19, 36, 44, 46, 99, 121, 133, 165], "nvoxtot": 19, "percent": 19, "out_suffix": 19, "_thresh": 19, "mgz": [19, 20, 21], "zero_edg": 19, "plane": [19, 44, 92, 93, 94, 100], "sure": [19, 74, 78, 79], "zero_slice_edg": 19, "erode2d": 19, "frame_no": 19, "frame": [19, 76, 97, 139], "extract": [19, 20, 21, 24, 91, 118, 121, 133, 134, 138, 146, 150, 151, 152, 161, 163], "label": [19, 72, 81, 124, 138, 152, 154, 165], "globalmean": 19, "count_fil": 19, "pathlik": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 67, 68, 76, 77, 78, 79, 81, 91, 92, 98, 99, 100, 101, 102, 103, 104, 130, 131, 132, 135, 141], "object": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 67, 68, 74, 76, 77, 78, 79, 81, 91, 92, 98, 99, 100, 101, 102, 103, 104, 130, 131, 132, 135, 141, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 161, 165], "contain": [19, 24, 26, 30, 36, 37, 38, 51, 73, 74, 77, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 111, 120, 132, 135, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 163, 164, 165], "t1w_binarize_count_fil": 19, "freesurf": [19, 20, 119, 136, 144, 145, 161], "tool": [20, 27, 119, 143, 144, 151, 166], "mri_synthstrip": [20, 149], "landscap": 20, "modal": [20, 95, 150, 153, 165], "subject": [20, 27, 74, 84, 87, 95, 101, 102, 103, 104, 132, 153, 154, 161], "popul": 20, "leverag": 20, "deep": [20, 86], "synthes": 20, "arbitrari": 20, "train": [20, 149], "segment": [20, 24, 27, 38, 40, 54, 75, 77, 83, 84, 86, 87, 92, 123, 136, 137, 139, 150, 152, 153, 154, 165], "robust": 20, "agnost": 20, "your": [20, 21, 101, 102, 103, 104, 107, 136], "analysi": [20, 21, 93, 99, 101, 102, 103, 104, 118, 120, 156, 160, 161], "cite": [20, 21, 81], "border_mm": [20, 21], "border": [20, 21, 44], "control": [20, 21, 25, 76, 77, 98, 99, 120, 152, 162], "boundari": [20, 21, 24, 27, 40, 121], "no_csf": 20, "exclud": [20, 21, 27, 35, 37, 51, 101, 102, 103, 104], "csf": [20, 21, 24, 26, 30, 32, 48, 52, 72, 76, 82, 83, 124, 132, 134, 161], "out_mask": [20, 21, 125, 126], "binari": [20, 21, 26, 30, 33, 38, 39, 49, 60, 61, 87, 133, 152, 154], "adapt": [21, 54, 55, 56, 58, 59, 62, 63, 64, 65, 66, 69, 70, 71, 84, 85, 87, 88, 89, 97, 122, 123, 124, 126, 127, 128, 129, 152, 154, 157, 161, 165], "mriqc_1": 21, "mriqc_2": 21, "freeesurfer_path": 21, "pt": 21, "altern": 21, "gpu": 21, "cli": [21, 149], "bet2": 22, "betsurf": 22, "scalp": 22, "creat": [22, 25, 30, 57, 67, 68, 77, 78, 90, 96, 99, 118, 121, 141, 146, 152, 154, 156, 161, 165], "involv": [22, 74, 76, 77, 120], "mesh": [22, 51], "vtk": 22, "inskull_mask_fil": 22, "t1w_brain_inskull_mask": 22, "inskull_mesh_fil": 22, "t1w_brain_inskull_mesh": 22, "skullstrip": [22, 119, 125, 145, 146], "t1w_brain": [22, 24], "outskin_mask_fil": 22, "t1w_brain_outskin_mask": [22, 92], "outskin_mesh_fil": 22, "t1w_brain_outskin_mesh": 22, "outskull_mask_fil": 22, "t1w_brain_outskull_mask": 22, "outskull_mesh_fil": 22, "t1w_brain_outskull_mesh": 22, "skull_mask_fil": 22, "t1w_brain_skull_mask": 22, "fast": [22, 24, 31, 41, 49, 100, 136, 150], "in_transfo": 23, "epi2struct": [23, 24], "invert_xfm": 23, "fix_scale_skew": 23, "concat_xfm": 23, "joint": [23, 74], "matric": [23, 150], "in_trasfo_2": 23, "secondari": 23, "scale": [23, 33, 36, 43, 47, 100, 101, 102, 103, 104, 151], "skew": 23, "in_transfo_2": 23, "struc2mni": 23, "epi2struct_concate_struc2mni": 23, "epi_reg": [24, 150], "script": [24, 29, 36, 41, 143, 145, 150], "fsl": [24, 28, 31, 43, 62, 89, 119, 121, 134, 136, 144, 145, 151, 152], "To": [24, 57, 64, 68, 76, 90, 96, 98, 100, 119, 132, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157], "good": [24, 77, 154], "grei": [24, 26, 30, 41, 51, 73, 76, 124, 140, 141, 151, 153, 161], "fiedmap": 24, "simultan": 24, "provid": [24, 27, 29, 33, 37, 38, 40, 41, 43, 45, 48, 49, 51, 74, 78, 121, 133, 136, 137, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 161], "fmap": 24, "fmapmag": 24, "fmapmagbrain": 24, "informatio": 24, "about": [24, 74, 84, 85, 93, 96, 140], "echospac": [24, 27], "pedir": [24, 27], "in_epi": [24, 85], "bold": [24, 85, 86, 88, 90, 96, 97, 120, 129, 138, 146, 152, 154, 161, 165], "in_t1": 24, "obtain": [24, 27, 32, 75, 82, 83, 91, 120, 136, 140, 154, 165], "betsurfacesextract": [24, 119, 138, 145, 150], "no_clean": 24, "clean": 24, "up": [24, 30, 79, 96], "intermedi": [24, 36], "no_fmapreg": 24, "t1": [24, 26, 41, 48, 81, 120, 130, 131, 134, 146], "wmseg": 24, "t1w_wmseg": 24, "weight_spac": 24, "fieldmap": [24, 27], "rad": [24, 27, 154], "magnitud": [24, 50, 152], "wholehead": 24, "fmap_mag": 24, "y": [24, 25, 27, 46, 49, 51, 74, 77, 78, 80, 121, 135, 154, 165], "phase": [24, 27, 36, 74, 78, 121, 154], "encod": [24, 27, 36, 74, 78, 121, 149, 154], "effect": [24, 76, 77, 93, 96, 98, 99, 100, 101, 102, 103, 104, 120, 154], "echo": [24, 27, 36, 120, 130, 131, 154], "unwarp": 24, "coregist": [24, 119, 121, 130, 131, 134, 145, 153], "epi2str_ma": 24, "epi2str_inv": 24, "epi2struct_inv": 24, "out_1vol": 24, "epi2struct_1vol": 24, "fmap2epi_mat": 24, "epi2struct_fieldmaprads2epi": 24, "fmap2str_mat": 24, "epi2struct_fieldmap2str": 24, "fmap_epi": 24, "fmap_str": 24, "epi2struct_fieldmaprads2str": 24, "fmapmag_str": 24, "fullwarp": 24, "epi2struct_warp": 24, "shiftmap": 24, "epi2struct_fieldmaprads2epi_shift": 24, "seg": [24, 129, 154], "grai": [24, 86, 121, 132, 134, 154, 163], "epi2struct_fast_seg": 24, "wmedg": 24, "visual": [24, 26], "epi2struct_fast_wmedg": 24, "wmseg_out": 24, "flirt": [24, 52, 119, 121, 134, 138, 145, 150], "bbr": [24, 27], "epi2struct_fast_wmseg": 24, "taken": [25, 78], "new": [25, 96, 98, 154], "just": 25, "argument": [25, 27, 51, 165], "inclus": [25, 37, 51], "would": [25, 78, 96, 100], "t1w_5tt": [25, 40, 41, 51], "t_min": 25, "mininum": 25, "t_size": 25, "x_min": 25, "x_size": 25, "y_min": 25, "y_size": 25, "z_min": 25, "z_size": 25, "roi_fil": 25, "5tt_roi": 25, "class": [26, 62, 76, 77, 78, 97, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165], "t2": [26, 41, 118, 120, 130, 131], "pd": 26, "chang": [26, 27, 43, 88, 99, 100, 120, 143, 149], "img_typ": 26, "int": [26, 27, 46, 66, 70, 72, 78, 80, 86, 100, 101, 102, 103, 104, 154], "aid": 26, "identifi": 26, "mixeltyp": 26, "classif": 26, "mixtur": [26, 120], "That": 26, "again": 26, "those": [26, 34, 37, 40, 49, 76, 77, 100, 107, 154], "t1w_mixeltyp": 26, "partial_volume_fil": 26, "partial": [26, 154], "where": [26, 27, 46, 74, 78, 96, 99, 101, 102, 103, 104, 134, 140, 154, 165], "proport": [26, 100, 101, 102, 103, 104, 154], "t1w_pve_1": 26, "t1w_pve_2": 26, "partial_volume_map": 26, "pveseg": 26, "best": [26, 74, 153, 165], "hard": 26, "follow": [26, 39, 74, 75, 76, 96, 100, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 149, 154, 156, 161], "quick": 26, "assess": [26, 118, 120, 154], "t1w_pveseg": 26, "tissue_class_fil": 26, "t1w_seg_0": 26, "t1w_seg_1": 26, "t1w_seg_2": 26, "tissue_class_map": 26, "classifi": [26, 152], "singl": [26, 27, 30, 35, 36, 48, 76, 80, 96, 100, 151, 154], "necessari": [26, 74, 90, 99, 100, 132, 134, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157], "etc": [26, 27, 46, 51, 76, 96, 100, 120, 135, 152, 154, 157], "t1w_seg": [26, 62, 63], "fmrib": 27, "calcul": [27, 40, 64, 74, 79, 88, 90, 96, 101, 102, 103, 104, 140, 143, 144, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 162, 164], "get_registered_fil": 27, "apply_xfm": [27, 138], "apply_isoxfm": 27, "still": 27, "field": [27, 36, 46, 47, 72, 75, 76, 77, 120, 121, 125, 126, 129, 130, 131, 133, 135, 147, 151, 152, 165], "view": 27, "fov": 27, "b0mean": 27, "in_refer": 27, "in_matrix_fil": 27, "isotrop": [27, 74, 78], "resampl": [27, 57, 58, 68, 77, 100, 149, 152], "4x4": [27, 46], "matrix_struct_to_diff": 27, "angle_rep": 27, "euler": 27, "quaternion": 27, "represent": [27, 101, 102, 103, 104], "angl": [27, 51], "bbrslope": 27, "slope": 27, "bbrtype": 27, "sign": [27, 80], "global_ab": 27, "local_abl": 27, "bgvalu": 27, "background": [27, 54, 76, 154, 165], "outsid": [27, 37, 74, 78, 154], "256": [27, 74, 111], "coarse_search": 27, "60": [27, 49, 51, 76, 77, 111], "coars": [27, 74], "delta": 27, "mutualinfo": 27, "corratio": 27, "normcor": 27, "normi": 27, "leastsq": 27, "labeldiff": 27, "There": [27, 101, 102, 103, 104], "main": [27, 47, 99, 100, 120, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157], "normalis": [27, 74, 77, 92, 93, 94, 100, 101, 102, 103, 104, 130, 131, 136, 151, 153], "recommend": [27, 74, 78, 99], "try": [27, 49, 76, 77, 165], "cost_func": 27, "searchcost": 27, "data_typ": [27, 80], "char": [27, 80], "short": [27, 80], "dof": [27, 134], "7": [27, 47, 48, 74, 76, 77, 78, 79, 82, 83, 100, 101, 102, 103, 104, 149], "freedom": 27, "larg": [27, 81], "appropri": [27, 51, 151], "scanner": [27, 120, 154], "rigid2d": 27, "fine_search": 27, "18": [27, 79], "field_map_regist": 27, "fieldmapmask": 27, "field_map_registered_mask": 27, "force_sc": 27, "even": 27, "re": [27, 72, 74], "interp": [27, 67, 74, 77, 78, 134], "trilinear": [27, 74, 77, 78], "nearestneighbour": [27, 134, 138], "reslic": [27, 74, 78, 151], "applyxfm": 27, "in_weight": 27, "ref_weight": 27, "area": 27, "increas": [27, 76, 77, 120, 134], "import": [27, 76, 157], "ventricl": 27, "introduc": [27, 100], "artifici": 27, "wherea": [27, 78], "min_sampl": 27, "no_clamp": 27, "clampinp": 27, "no_resampl": 27, "no_resample_blur": 27, "blur": [27, 154], "downsampl": [27, 51], "no_search": 27, "angular": [27, 38, 89], "padding_s": 27, "mode": 27, "bodi": 27, "save_log": 27, "log": [27, 39, 118, 120, 151, 154], "schedul": 27, "what": [27, 84, 85], "how": [27, 29, 50, 152], "optimis": [27, 49], "fsldir": 27, "flirtsch": 27, "sch2d_6dof": 27, "searchr_x": 27, "90": [27, 77], "searchr_i": 27, "searchr_z": 27, "sinc_width": 27, "full": [27, 28, 76, 77, 80, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164], "width": [27, 28, 46, 76, 77, 78, 80, 100, 165], "sinc_window": 27, "rectangular": 27, "han": [27, 100], "blackman": 27, "use_qform": 27, "sform": 27, "qform": 27, "wm_seg": 27, "wmcoord": 27, "coordin": [27, 43, 51], "wm_coor": 27, "wmnorm": 27, "wm_norm": 27, "b0mean_registered_with_t1w": 27, "out_log": 27, "b0mean_flirt_log": 27, "out_matrix": 27, "b0mean_t1w_flirt": 27, "faq": 27, "nput": [28, 32], "uncompress": [28, 74, 77, 78, 79, 80, 90, 92, 110, 118, 120, 130, 131], "img": [28, 68, 74, 76, 77, 78, 80, 110, 118, 120, 130, 135, 154], "hdr": [28, 68, 74, 76, 77, 78, 80, 110, 118, 120, 130, 135], "half": [28, 36, 46, 76, 77, 80], "kernel": [28, 74, 78, 80, 132], "Will": 28, "convert": [28, 30, 31, 32, 33, 34, 35, 36, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 134, 151], "intern": [28, 113, 157], "approxim": [28, 49, 76, 77], "355": 28, "s_": 28, "filter": [28, 34, 40, 64, 73, 75, 81, 100, 107, 109, 113, 116, 121, 151, 154, 156, 157], "55": [28, 51], "s_func": 28, "matlab": [29, 143, 145, 157], "licens": [29, 81], "disclaim": [29, 136, 137], "proof": 29, "concept": 29, "develop": [29, 78, 96], "show": [29, 48, 86, 132, 154, 165], "wrap": [29, 74, 78, 145], "mia": [29, 99, 136, 137], "absenc": 29, "better": [29, 74, 78, 154], "solut": 29, "mcr": 29, "4929083": 29, "fiber": [30, 48, 51, 121, 161], "densiti": [30, 38, 46, 51, 121, 151], "basi": [30, 47, 100], "responsesddholland": [30, 119, 145, 151], "aim": [30, 48, 58, 101, 102, 103, 104, 121, 132, 133, 134], "amount": [30, 46, 100], "diffus": [30, 31, 32, 33, 34, 35, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 121, 132, 133, 134, 151, 160], "orthogon": 30, "spheric": [30, 38, 46, 50, 51, 121, 132, 151], "mrtrix": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 119, 134, 144, 145], "dwi2fod": [30, 151], "command": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 146, 151], "mia_process": [30, 31, 32, 33, 34, 35, 36, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 74, 75, 76, 77, 78, 79, 80, 100, 101, 102, 103, 104, 136, 137, 142], "mif": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 121, 132, 133, 134], "mrconvert": [30, 31, 32, 33, 34, 35, 36, 39, 42, 44, 45, 46, 47, 48, 49, 50, 51, 119, 145, 151], "case": [30, 31, 32, 33, 34, 35, 36, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 96, 99, 154], "wm_txt": 30, "wm": [30, 48, 51, 72, 75, 76, 82, 83, 124, 132, 154, 161], "respons": [30, 52, 99, 100, 118, 121, 132, 151, 157], "text": [30, 36, 37, 38, 43, 48, 52, 120, 154], "csd": [30, 121, 132], "row": [30, 86, 111, 154, 165], "msmt_csd": [30, 132], "dwi_response_wm": [30, 48], "uniqu": [30, 132], "comparti": 30, "get_predicted_sign": [30, 39, 132], "predict": [30, 39, 132], "csf_txt": 30, "cerebrospin": [30, 86, 124, 132, 161], "fluid": [30, 86, 132], "dwi_response_csf": [30, 48], "gm_txt": 30, "gm": [30, 38, 48, 51, 72, 75, 76, 82, 83, 101, 102, 103, 104, 124, 132, 154, 161], "dwi_response_gm": [30, 48], "in_direct": 30, "az": 30, "el": 30, "pair": [30, 36, 88, 133], "over": [30, 46, 51, 100, 140, 146], "constraint": 30, "max_sh": [30, 48], "harmon": [30, 38, 46, 48, 69, 84, 119, 121, 136, 145, 151, 152], "lmax": 30, "3000": [30, 35, 86], "wm_odf": 30, "odf": 30, "dwi_wm_odf": 30, "gm_odf": 30, "dwi_gm_odf": 30, "csf_odf": 30, "dwi_csf_odf": 30, "predicted_signal_fil": [30, 39, 132], "dwi_odf_predicted_sign": 30, "use_fsl": 31, "configur": [31, 36], "populs": [31, 36, 142, 147, 149, 152, 153], "use_an": 31, "ant": [31, 119, 125, 126, 129, 144, 145, 152], "n4": [31, 147], "bia": [31, 35, 77, 84, 121, 126, 129, 130, 133, 147, 152, 153, 161], "dwi_unbia": 31, "bias_field_map": 31, "dwi_bias_field_map": 31, "includ": [32, 35, 36, 37, 51, 72, 78, 93, 98, 99, 100, 101, 102, 103, 104, 118, 120, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157], "dwi2mask": [32, 36, 151], "dwi1": [33, 42], "dwi2": [33, 42], "brainmask": [33, 40, 41, 139], "out_nam": [33, 165], "concat_filename1_filenam": 33, "new_concate_imag": 33, "concat_dwi1_dwi2": 33, "marchenko": 34, "pastur": 34, "pca": [34, 151], "pipelin": [34, 74, 107, 114, 119, 141, 142, 143, 154, 157, 166], "extend": [34, 95], "dwi_denois": 34, "noise_map": 34, "dwi_noise_map": 34, "certain": [35, 119, 151], "bzero": 35, "nobzero": 35, "singleshel": 35, "enforc": 35, "presenc": [35, 38], "no_bzero": 35, "them": [35, 38, 76, 77, 161, 165], "gradient": [35, 43, 123, 152], "dwi_bzero": 35, "inhomogen": [36, 121, 133, 151, 154], "dwifslpreproc": [36, 151], "rpe_opt": [36, 133], "rpe_non": 36, "rpe_al": 36, "oppos": [36, 121, 133], "parametr": [36, 76, 100, 165], "fill": [36, 57, 68, 90, 96, 101, 102, 103, 104, 112, 152, 154], "concaten": [36, 45, 60, 113, 133, 151, 157], "rpe_pair": 36, "typic": [36, 74, 76, 78, 100, 120], "ha": [36, 41, 51, 74, 100, 114, 136, 137], "se_epi_corr": 36, "consist": [36, 55, 56, 58, 63, 65, 69, 76], "spin": 36, "part": [36, 73, 118], "rpe_air": 36, "se": 36, "possess": 36, "while": [36, 51, 74, 76, 77, 108, 120], "opposit": [36, 121, 133], "ident": [36, 46, 74, 78, 99, 136, 137, 149], "readout": [36, 121, 133, 154], "dwi_b0_inverse_phas": 36, "pe_dir": 36, "ap": [36, 121, 133], "pa": [36, 121, 133], "lr": [36, 121, 133], "rl": [36, 121, 133], "anterior": [36, 77, 121, 133, 154], "posterior": [36, 121, 133, 154], "left": [36, 44, 96, 121, 133, 138, 154], "right": [36, 44, 96, 114, 121, 133, 138, 154], "toleft": [36, 121, 133], "align_seepi": 36, "achiev": [36, 120], "eddyqc_al": 36, "keep": [36, 41, 51], "eddy_qc": 36, "instal": [36, 119, 136], "eddyqc_text": 36, "variou": [36, 120, 143, 144, 151, 158, 161, 163], "nocleanup": 36, "delet": [36, 67, 68, 90, 152, 157, 165], "scratch": 36, "directori": [36, 57, 68, 90, 96, 101, 102, 103, 104, 113, 143, 152, 154, 157, 165], "complet": [36, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164], "ro_tim": 36, "eddy_mask": 36, "automaticcali": 36, "dwi_brain_mask": 36, "eddy_opt": [36, 133], "line": [36, 92, 93, 94, 95, 165], "slm": [36, 133], "repol": 36, "data_is_shel": [36, 133], "eddy_slspec": 36, "group": [36, 104, 132, 154, 165], "topup_opt": 36, "preprocess": [36, 119, 121, 132, 134, 141, 143, 144, 154, 158], "dwi_fslpreproc": 36, "tckedit": [37, 151], "in_track": [37, 38], "tck": [37, 38, 51, 121], "select": [37, 38, 43, 48, 50, 51, 74, 75, 76, 78, 100, 113, 114, 132, 135, 151, 157], "streamlin": [37, 38, 121, 134, 151], "criteria": [37, 51], "fail": 37, "criterion": [37, 154], "vertic": 37, "written": [37, 74, 77, 78, 101, 102, 103, 104, 112, 113, 157], "ends_onli": 37, "test": [37, 99, 100, 156], "end": [37, 56, 64, 118, 120, 121, 134, 154], "against": 37, "roi": [37, 51, 82, 83, 90, 96, 113, 138, 150, 152, 154, 157, 163], "get_tck_weights_out_desc": 37, "roi_excl": [37, 51], "enter": [37, 51, 80, 101, 102, 103, 104, 120], "discard": [37, 51, 66, 139], "roi_incl": [37, 51], "travers": [37, 51], "accept": [37, 51, 74, 118, 165], "roi_incl_ord": [37, 51], "inclusion_ord": [37, 51], "roi_mask": [37, 51], "exit": [37, 51, 101, 102, 103, 104, 143], "truncat": [37, 51], "maxlength": 37, "26": [37, 79, 100, 111, 154], "minlength": 37, "desir": [37, 51, 96], "propag": [37, 51], "20000": 37, "skip": [37, 97], "commenc": 37, "maxweight": 37, "minweight": 37, "tck_weights_in": 37, "tck_weight": 37, "tracks_out": [37, 38], "tracks_edit": 37, "tck_weights_out": 37, "tracks_tck_weight": 37, "whole": [38, 40, 48, 74, 78, 91, 113, 121, 151, 160], "fibr": [38, 46, 48, 121, 132, 151], "fod": [38, 46, 51, 121, 151], "lobe": [38, 81, 82, 83, 121, 138, 151], "integr": [38, 51, 121, 151], "tcksift": [38, 151], "in_fod": 38, "wm_fod_norm": 38, "sift": [38, 51, 121], "fd_scale_gm": 38, "conjunct": 38, "act": [38, 41, 51, 121, 134, 151], "heurist": 38, "downsiz": 38, "no_dilate_lut": 38, "lookup": [38, 49], "tabl": [38, 49], "precis": [38, 51, 70, 78, 136, 137], "tangent": 38, "li": 38, "spread": [38, 46], "make_null_lob": 38, "cover": [38, 165], "amplitud": [38, 49, 51], "remove_untrack": 38, "attribut": [38, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157], "get_csv_fil": 38, "csv": [38, 61, 81, 91, 111, 118, 120, 157], "get_mu_fil": 38, "get_out_selection_fil": 38, "proc_mask": 38, "act_imag": [38, 51], "five": [38, 51], "deriv": [38, 41, 50, 93, 98, 99, 100, 120, 149], "5tt_coreg": [38, 134], "fd_thresh_valu": 38, "term_ratio_valu": 38, "termin": [38, 51, 121], "reduct": 38, "term_mu_valu": 38, "onc": [38, 51, 64], "proportion": 38, "reach": [38, 51], "tracks_sift": [38, 121], "csv_file_out": 38, "tracks_tcksift_stat": 38, "mu_file_out": 38, "mu": 38, "tracks_tcksift_mu": 38, "selection_file_out": 38, "tracks_tcksift_select": 38, "defaul": [39, 138], "kurtosi": [39, 154], "wl": 39, "empir": 39, "ordinari": 39, "ol": 39, "ols_opt": 39, "iwl": 39, "numbr": 39, "choos": [39, 43, 51, 74, 82, 83, 95, 101, 102, 103, 104, 121], "dwi2tensor": [39, 151], "estimate_dkt": 39, "get_output_b0": 39, "b0": [39, 134, 161], "contribut": [39, 93], "number_of_it": 39, "reweight": 39, "ma": 39, "d11": 39, "d22": 39, "d33": 39, "d12": 39, "d13": 39, "d23": 39, "dwi_dti": [39, 50], "out_dkt": 39, "w1111": 39, "w2222": 39, "w3333": 39, "w1112": 39, "w1113": 39, "w1222": 39, "w1333": 39, "w2223": 39, "w2333": 39, "11": [39, 79, 111, 154], "w1122": 39, "w1133": 39, "w2233": 39, "14": [39, 79, 100], "w1123": 39, "w1223": 39, "w1233": 39, "dwi_dki": 39, "out_b0": 39, "dwi_b0": 39, "dwi_dti_predicted_sign": 39, "5tt2gmwmi": [40, 151], "5tt": [40, 51, 134, 151], "generate5ttfsl": [40, 119, 145, 151], "accord": [40, 73, 79, 81, 147], "lie": 40, "upon": 40, "t1w_5tt_gmwmseed": 40, "suitabl": [41, 74, 78, 151], "constrain": [41, 51, 121, 132, 134], "tractographi": [41, 119, 134, 145, 151, 160], "5ttgen": [41, 151], "no_crop": 41, "reduc": [41, 51, 121], "sgm_amyg_hipp": 41, "amygdala": 41, "hippocampi": 41, "cortic": [41, 82, 83, 86, 134], "premask": 41, "fasl": 41, "t2_imag": 41, "out_file_nam": [42, 45], "out_file_format": 43, "export_bvec_bv": 43, "export": [43, 114], "retain": [43, 73], "fourth": [43, 99], "begin": [43, 90, 97, 113, 152], "24": [43, 79, 100], "report": [43, 81, 119, 120, 136, 137, 143, 144, 158, 166], "25": [43, 51, 79, 129], "0mm": 43, "5mm": 43, "respect": [43, 165], "leav": 43, "bval_scal": 43, "ye": 43, "enabl": [43, 74, 78], "disabl": [43, 88], "dw": 43, "norm": [43, 45, 127, 152], "grad_fil": 43, "scheme": 43, "diff_mrtrix_format": 43, "in_bvec": 43, "in_bval": 43, "bavl": 43, "out_bvec": 43, "out_bval": 43, "artefact": [44, 133], "mri": [44, 74, 76, 77, 78, 120, 146, 154, 162], "subvoxel": 44, "kellner": 44, "et": [44, 88, 154], "al": [44, 88, 154], "motion": [44, 74, 78, 85, 86, 88, 89, 120, 121, 133, 139, 154, 161], "dwipreproc": [44, 119, 145, 151], "wa": [44, 74, 78, 113, 114, 143, 157], "coron": 44, "sagitt": 44, "maxw": 44, "variat": [44, 76, 77, 118, 120, 136, 137], "tv": 44, "minw": 44, "nshift": 44, "discret": 44, "subpixel": 44, "unring": [44, 121, 133], "dwi_unring": 44, "product": [45, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157], "rm": 45, "var": 45, "std": [45, 71, 90], "absmax": 45, "magmax": 45, "sdt": 45, "absmin": 45, "thu": [45, 73], "oerat": 45, "mean_along_axis3": 45, "dwi_mean": 45, "modifi": [46, 100, 150, 152], "reorient": 46, "apodis": 46, "4th": [46, 51, 76, 100], "antipod": 46, "symmetr": 46, "28": [46, 79, 100], "fod_reori": 46, "nearest": [46, 67, 74, 77, 78, 101, 102, 103, 104], "root": 46, "midway_spac": 46, "midwai": 46, "template_imag": 46, "warp_imag": 46, "linear_transform": 46, "3x4": 46, "convent": 46, "flix_ax": 46, "flip": 46, "replace_fil": 46, "oversample_factor": 46, "target": [46, 74, 149], "deform": [46, 75, 76, 130, 135], "deformation_field": [46, 77], "warp_full_imag": 46, "5d": 46, "mrregist": 46, "deformation_field_5d": 46, "fod_modul": 46, "jac": 46, "modul": [46, 50, 76, 100, 142, 144, 145, 155, 158, 166], "preserv": [46, 80], "appar": [46, 50], "bundl": 46, "jacobian": 46, "fod_direction_fil": 46, "dwi_transform": 46, "dwi_wmfod": 47, "dwi_gmfod": 47, "dwi_csffod": 47, "order_numb": 47, "niter_numb": 47, "potenti": [47, 120], "loop": 47, "inner": 47, "updat": [47, 165], "balanc": 47, "reference_numb": 47, "282095": 47, "posit": [47, 51, 64, 78, 109, 116], "compart": [47, 132], "balanced_numb": 47, "incorpor": 47, "nomalis": 47, "dwi_wmfod_norm": 47, "dwi_gmfod_norm": 47, "dwi_csffod_norm": 47, "unsupervis": 48, "decompos": 48, "smaller": [48, 78], "individu": [48, 99, 118, 165], "dwi2respons": [48, 151], "fa_thresh": 48, "versu": [48, 78], "get_final_voxel": 48, "were": [48, 99, 100], "construct": [48, 96], "basu": 48, "tisuu": 48, "40": [48, 77, 79, 111], "wm_algo": 48, "tax": 48, "tournier": 48, "extern": 48, "2019": 48, "csf_file": 48, "wm_file": 48, "gm_file": 48, "voxels_imag": 48, "dwi_response_voxel": 48, "sh2peak": [49, 151], "in_sh_coeff": 49, "sh": 49, "wm_fod": 49, "num": 49, "associ": [49, 60, 61, 93, 99, 100, 113, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157], "faster": [49, 76, 77, 78], "phi": 49, "theta": 49, "peaks_imag": 49, "thresh_valu": 49, "greater": [49, 152], "consid": [49, 88], "seeds_fil": 49, "restart": 49, "output_imag": 49, "turn": [49, 121], "wm_fod_peak": 49, "adc": 50, "planar": [50, 120, 130, 131], "eigenvalu": 50, "eigenvector": 50, "tensor2metr": [50, 151], "eigval": 50, "get_ad": 50, "get_adc": 50, "get_cl": 50, "westin": 50, "shape": [50, 56, 154, 157], "get_cp": 50, "get_c": 50, "get_fa": 50, "get_rd": 50, "get_valu": 50, "get_vector": 50, "computeth": 50, "ad_fil": 50, "dwi_dti_ad": 50, "adc_fil": 50, "dwi_dti_adc": 50, "cl_file": 50, "dwi_dti_cl": 50, "cp_file": 50, "dwi_dti_cp": 50, "cs_file": 50, "dwi_dti_c": 50, "fa_fil": 50, "dwi_dti_fa": 50, "rd_file": 50, "dwi_dti_rd": 50, "value_fil": 50, "dwi_dti_valu": 50, "vector_fil": 50, "dwi_dti_vector": 50, "tckgen": [51, 151], "At": 51, "mechan": 51, "ifod2": 51, "fact": [51, 100, 121], "ifod1": 51, "nulldist": 51, "sd_stream": 51, "tensor_det": 51, "tensor_prob": 51, "assign": [51, 143], "continu": [51, 67, 120], "track": [51, 121, 134, 151], "sd": 51, "determinist": 51, "probabilist": 51, "cutoff": [51, 76, 77], "nopreselectcompt": 51, "pre": [51, 118, 144, 151, 152, 161], "use_rk4": 51, "rung": 51, "kutta": 51, "tracto_seed_unidirect": 51, "tracto_get_output_se": 51, "locat": [51, 86], "success": [51, 74, 142, 143], "backtrack": 51, "crop_at_gmwmi": 51, "endpoint": 51, "interfac": [51, 76, 142, 151, 152], "nulldist1": 51, "45": [51, 79], "nulldist2": 51, "downsample_factor": 51, "max_lenght": 51, "voxels": 51, "min_lenght": 51, "step_siz": 51, "rk4": 51, "32": [51, 79, 100, 111, 157], "trial": [51, 100], "5000": 51, "seed_dynam": 51, "dynam": [51, 99, 118], "improv": [51, 78, 121], "reconstruct": [51, 154], "substitut": 51, "seed_gmwmi": 51, "framework": 51, "gmwmseed_coreg": [51, 134], "seed_grid_voxel": 51, "place": 51, "grid": [51, 149], "grid_siz": 51, "27": [51, 79, 100], "mesh_grid": 51, "seed_imag": 51, "entir": 51, "seed_reject": 51, "reject": [51, 121], "seed_rnd_voxel": 51, "placement": 51, "seed_spher": 51, "xyz": 51, "r": [51, 74, 78, 96, 105, 106, 113, 141, 154], "95": [51, 154], "tracto_seeds_numb": 51, "attempt": 51, "until": 51, "OR": 51, "request": 51, "2000": 51, "tracto_max_attempts_per_seed_numb": 51, "enough": 51, "ensur": [51, 118, 120], "actual": [51, 73, 84, 85, 109, 116], "plausibl": [51, 121, 134], "prematur": 51, "unabl": 51, "tracto_seed_cutoff": 51, "cut": 51, "tracto_seed_direct": 51, "Of": 51, "ifod_pow": 51, "ifod": 51, "rais": 51, "power": [51, 88, 154], "nsampl": 51, "ifod2_n_sampl": 51, "2nd": [51, 74, 77, 78, 100], "dwi_tracto": 51, "dwi__tracto_out_se": 51, "transformconvert": [52, 151], "in_transform": 52, "diff2struct_fsl": 52, "out_transform": 52, "t1w_inu": 53, "paper": [54, 63, 69], "mortamet": [54, 63, 69], "colleagu": [54, 63, 69], "workflow": [54, 56, 58, 59, 62, 63, 69, 97, 122, 123, 124, 127, 152, 161, 162], "head_mask": [54, 92, 122], "head": [54, 74, 78, 79, 84, 88, 122, 125, 126, 136, 139, 154, 161], "t1w_outskin_mask": 54, "nasion_post_mask": 54, "t_tpl": [54, 87, 129, 139], "mni152nlin2009casym_r": [54, 72, 84, 86, 87, 124, 129, 137, 139], "01_desc": [54, 86, 87, 129, 137, 139], "rot_mask": 54, "t1w_rotmask": [54, 69, 84], "out_art_mask": [54, 122], "art_t1w_mask": [54, 84, 92, 122], "out_hat_mask": [54, 122], "hat": [54, 84, 92, 154, 161], "hat_t1w_mask": [54, 84, 122], "out_air_mask": [54, 122], "air": [54, 76, 84, 92, 124, 136, 152, 154, 161], "air_t1w_mask": [54, 84, 92, 122], "carreful": [55, 56, 58, 63, 65, 69, 107], "overwritten": [55, 56, 57, 58, 63, 65, 69, 90, 98, 99, 101, 102, 103, 104, 154], "element": [55, 76, 77, 90, 96, 99, 100, 113, 115, 116, 152, 154, 156, 157], "path": [55, 57, 62, 63, 64, 65, 69, 70, 71, 72, 73, 76, 79, 108, 113, 115, 143, 154, 165], "_bin": 55, "thresh_low": 55, "applic": [55, 73], "t1w_bin": 55, "nibabel": [56, 152, 165], "squeeze_imag": 56, "reorder": 56, "closest": 56, "canon": [56, 100, 118], "as_closest_canon": 56, "images_to_convolv": [57, 152], "convolve_with": [57, 152], "Then": [57, 152], "convolv": [57, 90, 100, 118, 152, 154], "resiz": [57, 90, 152, 154], "patientname_data": [57, 90, 96, 113, 152, 154, 157], "roi_data": [57, 68, 90, 113, 140, 152, 154, 157], "convroi_bold": [57, 140, 152], "receiv": [57, 68, 90, 96, 152, 154], "runtim": [57, 68, 90, 96, 152, 154], "correctli": [57, 68, 90, 96, 152, 154], "databas": [57, 68, 79, 86, 90, 96, 99, 100, 112, 113, 140, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 165], "patientnam": [57, 68, 90, 96, 112, 113, 140, 152, 154, 157], "tag": [57, 68, 90, 96, 112, 113, 140, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 165], "aca_l": [57, 113], "aca_r": [57, 113], "acm_l": [57, 113], "acm_r": [57, 113], "out_imag": [57, 68], "conv": [57, 90], "patient": [57, 68, 90, 93, 96, 112, 113, 120, 140, 154, 157], "name_data": [57, 68, 90, 96, 113, 140], "convaca_l": [57, 68, 90, 140], "convaca_r": [57, 68, 90, 140], "convacm_l": [57, 68, 90, 140], "convacm_r": [57, 68, 90, 140], "excess": 58, "superior": [58, 154], "99": [58, 64, 154], "among": [58, 101, 102, 103, 104], "_enh": 58, "t1w_enh": 58, "seg_fil": [59, 62, 123], "out_snr": 59, "96": [59, 100, 111], "_estimate_snr": 59, "native_structures_sub": [60, 61, 91], "47": [60, 61, 79, 91, 111, 138], "48": [60, 61, 79, 91, 138], "save_each_roi": 60, "save_concate_roi": 60, "extrat": 60, "001_47": 60, "001_48": 60, "out_conc": 60, "001_concate_47_48": 60, "001_bold": [61, 91], "in_seg": 61, "001_bold_spac": 61, "001_bold_extracted_signals_47_48": [61, 91], "nilearn": [61, 152], "niftilabelsmask": 61, "fastseg": [62, 119, 145, 150], "_grad": 62, "scan": [62, 73, 76, 78, 79, 85, 86, 100, 101, 102, 104, 118, 120, 153, 157], "t1w_grad": 62, "As": [63, 69, 101, 102, 103, 104], "decrib": [63, 69], "arfifact": [63, 69], "wm_mask": 63, "whith": 63, "erodemask": 63, "_harmon": 63, "t1w_harmon": 63, "dtype": [64, 80], "robustli": 64, "spike": [64, 85, 86, 88, 92, 94, 119, 139, 144, 146, 154], "denois": [64, 119, 121, 133, 145, 148, 151, 161], "thrown": 64, "awai": 64, "int16": [64, 80], "float32": [64, 70, 80], "uint8": [64, 80], "datatyp": 64, "nonneg": 64, "p_max": 64, "bound": [64, 77], "p_min": 64, "xtension": 64, "t1w_clip": 64, "niworflow": [64, 65, 70], "confound": [66, 71, 120, 152], "n_volumes_to_discard": [66, 70], "confund": [66, 71], "nonsteadystatedetector": [66, 145, 152], "files_to_resampl": [67, 68], "t1w_002": 67, "_003": 67, "suffix_to_delet": 67, "_002": [67, 73], "reprsent": 67, "t1w_003": 67, "_data": 68, "convroi_bold2": [68, 152], "_2": [68, 154], "convaca_l_2": 68, "convaca_r_2": 68, "convacm_l_2": 68, "convacm_r_2": 68, "_rotmask": 69, "max_32bit": 70, "cast": 70, "higher": [70, 74, 78, 88, 93, 98, 100, 120, 154, 157], "encount": 70, "steadi": [70, 137, 152], "state": [70, 137, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157], "_valid": 70, "func_valid": [70, 86, 139], "sanitizeimag": 70, "prefix_stddev": 71, "stddev": 71, "prefix_tsnr": 71, "suffix_stddev": 71, "_stddev": 71, "dev": 71, "suffix_tnsr": 71, "_tsnr": 71, "out_tsnr_fil": 71, "func_tsnr": 71, "out_stddev_fil": 71, "func_stddev": 71, "repositori": 72, "neuroimag": [72, 81, 118, 120, 154], "tempalt": 72, "mni152nlin2009casym": [72, 122, 124, 129, 161], "mnicolin27": 72, "mnipediatricasym": 72, "sever": [72, 100, 121, 132, 138, 151, 157, 165], "entiti": 72, "atla": [72, 153], "particular": [72, 78, 80], "difumo": 72, "scahefer2018": 72, "desc": [72, 107, 122, 127, 129], "descript": [72, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165], "256dimens": 72, "in_templ": [72, 122, 124, 127, 129], "t2w": [72, 122, 123, 124, 125, 126, 127, 162], "probseg": [72, 124], "t2map": 72, "cach": 72, "tpl": 72, "02_t1w": 72, "c1anat": [73, 76, 130, 135], "c2anat": [73, 76, 130, 135], "c3anat": [73, 76, 130, 135], "c4anat": [73, 76, 130, 135], "c5anat": [73, 76, 130, 135], "gm_filter": 73, "c1": [73, 75, 135], "spm": [73, 75, 89, 93, 98, 99, 100, 119, 135, 144, 145, 152, 154, 155], "syntax": [73, 74, 75, 76, 77, 78, 79, 80, 100, 101, 102, 103, 104, 135], "everyth": 73, "abov": 73, "becom": 73, "below": [73, 79], "multipli": [73, 88], "c1anat_002": 73, "thinsp": [74, 75, 76, 77, 78, 108, 109, 110, 113, 114, 115, 116, 120, 130], "emsp": [74, 75, 76, 77, 78, 108, 109, 110, 113, 114, 115, 116, 120, 130], "ensp": [74, 75, 76, 77, 78, 108, 109, 110, 113, 114, 115, 116, 120, 130], "nbsp": [74, 75, 76, 77, 78, 108, 109, 110, 113, 114, 115, 116, 120, 130], "ref": 74, "remain": [74, 78, 154], "stationari": 74, "sourc": [74, 89, 130, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165], "downloaded_data": [74, 77, 111, 118, 120], "meanfunc": [74, 78, 109, 130], "jiggl": 74, "anat": [74, 76, 77, 84, 92, 95, 108, 109, 113, 114, 116, 120, 130, 131, 136, 138, 165], "apply_to_fil": [74, 75, 77], "jobtyp": [74, 75, 77, 78, 131], "estwrit": [74, 77, 78, 131], "except": [74, 100, 107], "procedur": [74, 154], "coregistered_sourc": [74, 130], "coregistered_fil": 74, "whose": [74, 96, 140], "rewritten": [74, 78], "subsequ": 74, "filter_files_list": [74, 119, 144, 157], "librari": [74, 75, 113, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161], "cost_funct": 74, "eoption": [74, 77, 78], "cost_fun": 74, "nmi": 74, "ecc": 74, "ncc": 74, "maximis": 74, "minimis": 74, "inter": [74, 95, 150], "entropi": [74, 154], "sep": [74, 78], "increasingli": 74, "ones": 74, "toler": 74, "tol": 74, "param": [74, 96, 100, 150, 151, 154, 157, 165], "less": 74, "write_interp": [74, 75, 77, 78, 131], "roption": [74, 78], "long": [74, 77, 78, 80], "neighbour": [74, 77, 78, 101, 102, 103, 104], "fastest": [74, 78], "realign": [74, 77, 119, 130, 131, 145, 153], "ok": [74, 77, 78, 165], "pet": [74, 77, 78, 101, 102, 103, 104], "fmri": [74, 77, 78, 88, 93, 118, 120, 141, 154, 156], "becaus": [74, 76, 77, 78], "give": [74, 76, 77, 78, 105, 106, 113, 136, 137, 157], "although": [74, 78], "slower": [74, 78], "write_wrap": [74, 78], "check": [74, 78, 81, 107, 134, 161, 165], "nose": [74, 78], "poke": [74, 78], "No": [74, 76, 77, 78, 100, 101, 102, 103, 104], "realli": [74, 78], "un": [74, 78], "write_mask": [74, 78], "like": [74, 78, 90, 96, 149, 154], "With": [74, 78, 101, 102, 103, 104], "through": [74, 78, 120], "look": [74, 78, 79, 110], "occur": [74, 76, 77, 78, 100], "coregisterd": 74, "capsul": 74, "spm12": [74, 76, 77, 78, 79, 80, 100, 141, 157], "equival": 75, "normalize12": [75, 119, 130, 131, 145, 153], "in_filt": 75, "nativ": [75, 76, 81, 130, 136, 137, 161], "deformation_fil": [75, 77, 135], "therefor": [75, 79, 140], "togeth": [75, 120, 153, 165], "write_bounding_box": [75, 77], "write_voxel_s": [75, 77], "normalized_fil": [75, 77], "made": [75, 96, 100, 114, 135, 136, 137], "c2": [75, 135], "channel_fil": 76, "channel": 76, "vol": [76, 77], "channel_info": 76, "biasreg": [76, 77], "biasfwhm": [76, 77], "reguralis": 76, "goal": [76, 77], "aris": [76, 77, 154], "due": [76, 77, 88, 100], "artifact": [76, 77, 78, 84, 92, 151, 152, 154, 161], "physic": [76, 77], "veri": [76, 77], "littl": [76, 77], "uniform": [76, 77], "tell": [76, 77], "doesn": [76, 77], "regularis": [76, 77], "00001": [76, 77], "extrem": [76, 77, 86, 154], "light": [76, 77], "heavi": [76, 77], "infin": 76, "smoother": [76, 77], "fewer": [76, 77], "150": [76, 77, 111], "version": [76, 99, 143], "noth": [76, 143], "0001": [76, 77, 131], "tpm": [76, 77], "ngau": 76, "bone": 76, "soft": 76, "dartel": 76, "unmodul": 76, "inf": [76, 77], "ci": 76, "toobox": [76, 143], "rci": 76, "mcwi": 76, "wci": 76, "warping_regular": [76, 77], "rough": [76, 77], "latter": [76, 108], "05": [76, 77, 111, 129], "affine_regular": 76, "affreg": [76, 77], "mni": [76, 77, 81, 122, 124, 130, 161], "eastern": 76, "subj": [76, 77], "sampling_dist": [76, 77], "samp": [76, 77], "write_deformation_field": 76, "disk": 76, "util": [76, 143, 166], "forward": [76, 130, 149], "bias_corrected_imag": [76, 130], "manat": [76, 130], "bias_field_imag": [76, 130], "biasfield_anat": 76, "native_class_imag": [76, 130, 135], "dartel_input_imag": 76, "toolbox": [76, 157], "rc1anat": 76, "rc2anat": 76, "rc3anat": 76, "rc4anat": 76, "rc5anat": 76, "modulated_class_imag": 76, "mwc1anat": 76, "mwc2anat": 76, "mwc3anat": 76, "mwc4anat": 76, "homeusernam": 76, "mwc5anat": 76, "normalized_class_imag": 76, "wc1anat": 76, "wc2anat": 76, "wc3anat": 76, "wc4anat": 76, "wc5anat": 76, "inverse_deformation_field": 76, "surfac": [76, 149, 150], "gifti": 76, "iy_anat": 76, "forward_deformation_field": [76, 130], "y_anat": [76, 77, 130, 135], "transformation_mat": 76, "anat_seg8": 76, "support": 76, "mrf": 76, "cleanup": 76, "image_to_align": 77, "def": 77, "y_": [77, 135], "est": 77, "come": [77, 152], "normalized_imag": 77, "bias_regular": [77, 131], "bias_fwhm": [77, 131], "70": 77, "80": 77, "110": 77, "120": 77, "130": [77, 111], "140": [77, 154], "affine_regularization_typ": 77, "woption": 77, "bb": 77, "box": [77, 95], "commissur": 77, "78": [77, 111], "112": [77, 111], "76": [77, 111], "85": [77, 111], "7nd": 77, "wanat": [77, 93, 130, 131], "code": [78, 120, 157], "contact": 78, "team": [78, 142], "realignment_paramet": [78, 93, 130, 131], "modified_in_fil": 78, "write_which": 78, "realigned_fil": 78, "mean_imag": 78, "qualiti": [78, 146, 152, 154, 162], "speed": 78, "trade": 78, "highest": 78, "register_to_mean": 78, "rtm": 78, "weight_img": 78, "lot": 78, "extra": 78, "seriou": 78, "account": [78, 100, 118, 120], "rfunc": 78, "rp_func": [78, 93, 109, 130, 131, 141], "compat": [79, 88, 99], "verif": 79, "sequenti": [79, 142], "ascend": 79, "descend": 79, "interleav": 79, "middl": 79, "top": 79, "bottom": 79, "down": 79, "foot": 79, "num_slic": 79, "nslice": 79, "initialis": [79, 100, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157], "53": [79, 100], "repetit": [79, 118], "retriev": [79, 100, 113, 157, 165], "000002": 79, "ta": [79, 81], "slice_ord": 79, "ref_slic": 79, "9433981886792453": 79, "13": [79, 93, 111], "16": [79, 100, 149, 152, 154, 157], "17": [79, 100, 111], "19": [79, 100, 154], "21": [79, 100], "22": [79, 111, 127, 128, 129, 136, 137, 139, 149, 152, 161], "23": [79, 100], "29": [79, 111], "31": [79, 100, 111], "33": [79, 111], "34": [79, 100], "36": [79, 100], "37": 79, "38": 79, "39": [79, 100], "41": [79, 100], "42": [79, 100, 111, 154], "43": [79, 100], "44": [79, 111], "46": 79, "49": [79, 100, 111], "51": [79, 111], "52": [79, 100, 111], "refslic": 79, "chosen": [79, 95, 99, 101, 102, 103, 104], "_undefin": 79, "timed_fil": 79, "afunc": 79, "int32": 80, "prec": 80, "float64": 80, "implicit_mask": 80, "im": 80, "impli": [80, 101, 102, 103, 104], "implicit": [80, 101, 102, 103, 104], "smoothed_fil": 80, "sfunc": 80, "docker": [81, 138], "ensembl": 81, "neural": 81, "network": [81, 154], "133": 81, "braincolor": [81, 82, 83], "pierrick": 81, "coup\u00e9": 81, "bori": [81, 152], "mansenc": 81, "micha\u00ebl": 81, "cl\u00e9ment": 81, "r\u00e9mi": 81, "giraud": 81, "baudouin": 81, "deni": 81, "de": 81, "sennevil": 81, "vinh": 81, "thong": 81, "vincent": 81, "lepetit": 81, "jos\u00e9": 81, "v": [81, 98], "manjon": 81, "cnn": 81, "elsevi": 81, "2020": 81, "219": 81, "pp": 81, "117026": 81, "native_t1": 81, "native_t1_t1w": 81, "mni_t1": 81, "mni_t1_t1w": 81, "native_mask": 81, "intracrani": 81, "caviti": 81, "native_mask_t1w": 81, "mni_mask": 81, "mni_masks_t1w": 81, "native_structur": 81, "native_structures_t1w": 81, "mni_structur": 81, "mni_structures_t1w": 81, "native_macrostructur": 81, "macrostructur": [81, 82, 83, 138], "native_macrostructures_t1w": 81, "mni_macrostructur": 81, "mni_macrostructures_t1w": 81, "native_lob": 81, "native_lobes_t1w": 81, "mni_lob": 81, "mni_lobes_t1w": 81, "native_tissu": 81, "native_tissues_t1w": 81, "mni_tissu": 81, "mni_tissues_t1w": 81, "matrix_affin": 81, "itk": 81, "matrix_affine_native_to_mni_t1w": 81, "report_pdf": [81, 95], "volumetri": 81, "pdf": [81, 92, 93, 94, 95, 107, 120, 136, 137, 165], "report_t1w": 81, "report_csv": 81, "cerebrum": [82, 83], "subcortoc": [82, 83], "cerebellum": [82, 83, 86], "brainstem": [82, 83], "volbrain": [82, 83, 119, 138, 145], "labl": 83, "labels_nam": 83, "ex2": 83, "aspect": [84, 85], "compar": [84, 85, 121, 132, 154], "ground": [84, 85], "truth": [84, 85], "json": [84, 85, 92, 94, 107, 139, 165], "in_ra": [84, 124], "airmask": [84, 154], "artmask": [84, 154], "hatmask": 84, "headmask": [84, 154], "n4c_t1w_clipped_brain_outskin_mask": 84, "in_fwhm": 84, "fwhm_t1w": 84, "in_inu": 84, "n4c_t1w_clipped_bia": [84, 126], "in_noinu": 84, "n4c_t1w_clipped_harmon": 84, "mni_tpm": [84, 124], "csf_tpl": [84, 124], "01_label": [84, 124], "csf_probseg": [84, 124], "gm_tpl": [84, 124], "gm_probseg": [84, 124], "wm_tpl": [84, 124], "wm_probseg": [84, 124], "pvm": [84, 154], "probal": 84, "ss_n4c_t1w_clippep_pve_0": 84, "ss_n4c_t1w_clippep_pve_1": 84, "ss_n4c_t1w_clippep_pve_2": 84, "rotmask": [84, 154], "ss_n4c_t1w_clippep_seg": [84, 92], "t1w_anat_qc": [84, 92], "qc": [84, 85], "in_fd_thresh": 85, "fd": [85, 86, 94, 154], "in_dummy_tr": 85, "dummi": [85, 86], "in_dvars_fil": [85, 86], "dvar": [85, 86, 94, 139, 154], "dvars_reg_func_valid": [85, 86, 88, 139], "in_fd_fil": [85, 86], "fd_reg_func_valid_on": [85, 86, 89, 139], "in_fwhm_fil": 85, "in_gcor": 85, "0612": 85, "in_hmc": 85, "automask_reg_func_valid": 85, "in_outliers_fil": [85, 86], "in_qi_fil": 85, "qi_reg_func_valid": 85, "in_spikes_fil": [85, 86], "spikes_reg_func_valid": [85, 86], "in_tsnr": 85, "tsnr": [85, 119, 137, 139, 145, 152], "reg_func_valid_tsnr": [85, 139], "mean_reg_func_valid_functional_qc": 85, "plot": [86, 92, 93, 94, 120, 137, 138, 154, 165], "figur": [86, 94, 154, 165], "wise": [86, 139, 154], "identif": [86, 154], "carpetplot": [86, 154], "carpet": [86, 87, 94, 107, 129, 137, 139], "voxelwis": 86, "crown": [86, 154], "band": 86, "fmriplot": 86, "in_func": 86, "drop_tr": 86, "drop": 86, "fd_thresh": [86, 139], "carpet_seg": [86, 137, 139], "cseg_t_tpl": [86, 87, 137, 139], "carpet_dseg": [86, 87, 129, 137, 139], "repet": 86, "func_valid_fmriplot": [86, 94], "png": [86, 91, 94, 138, 165], "subtract": [87, 154], "cseg": 87, "cseg_": 87, "parcelatt": 87, "dramat": 88, "cofund": [88, 89], "intensity_norm": 88, "divid": 88, "x10": 88, "2012": 88, "altogeth": 88, "dvars_": 88, "remove_zero_vari": 88, "variance_tol": 88, "0000001000": 88, "purpos": [88, 121, 133, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 163], "iqm": [88, 89, 92, 94, 95, 154, 162, 163, 165], "reproduc": [89, 154], "fsl_motion_outli": [89, 154], "reg_func_valid_on": 89, "fd_": 89, "parameter_sourc": 89, "afni": [89, 119, 125, 139, 144, 145, 161, 162], "fsfast": 89, "nipi": [89, 142, 152], "rois_fil": [90, 91, 113, 154], "parametric_map": [90, 154], "next": [90, 100, 154], "roi_analysi": [90, 154], "_": [90, 96, 149, 152, 154], "deduct": 90, "prefix_to_delet": 90, "underscor": [90, 113], "contrast_typ": 90, "spmt_0001": [90, 93, 98, 140, 141], "beta_0001": [90, 93, 98, 99, 140, 141], "deduc": 90, "mean_out_fil": 90, "std_out_fil": 90, "aca_l_mean_spmt_bold": [90, 96], "aca_r_mean_spmt_bold": [90, 96], "acm_l_mean_spmt_bold": [90, 96], "acm_r_mean_spmt_bold": [90, 96], "aca_l_mean_beta_bold": 90, "aca_r_mean_beta_bold": 90, "acm_l_mean_beta_bold": 90, "acm_r_mean_beta_bold": 90, "aca_l_std_spmt_bold": 90, "aca_r_std_spmt_bold": 90, "acm_l_std_spmt_bold": 90, "acm_r_std_spmt_bold": 90, "aca_l_std_beta_bold": 90, "aca_r_std_beta_bold": 90, "acm_l_std_beta_bold": 90, "acm_r_std_beta_bold": 90, "001_bold_space_concate_47_48": 91, "001_bold_space_47": 91, "001_bold_space_48": 91, "001_bold_space_1": 91, "signals_whole_brain": 91, "001_bold_space_47_48": 91, "out_png": 91, "iqms_fil": [92, 94, 165], "art_mask": 92, "air_mask": 92, "pre_n4c_t1w_clipped_desc": 92, "outskin": [92, 150], "anat_fig_col": 92, "anat_fig_row": 92, "spikes_": [92, 94, 97], "norm_anat": [92, 93], "norm_anat_fig_col": [92, 93], "norm_anat_fig_row": [92, 93], "anat_inf_slice_start": 92, "displai": [92, 93, 94, 143, 165], "anat_slices_gap": 92, "gap": [92, 93, 94, 165], "norm_anat_inf_slice_start": [92, 93], "norm_anat_slices_gap": [92, 93], "t1w_ref_anatomical_mriqcreport_2023_03_31_11_42_10_75": [92, 136], "v22": [92, 94, 124, 126, 161, 162], "06": [92, 94, 100, 124, 126, 127, 128, 129, 139, 149, 161, 162], "norm_anat_cmap": 93, "color": [93, 165], "greys_r": [93, 165], "norm_anat_vmin": 93, "colormap": 93, "vmin": 93, "norm_anat_vmax": 93, "vmax": 93, "norm_func": [93, 94], "wrfunc": [93, 130], "norm_func_fig_row": [93, 94], "norm_func_fig_col": [93, 94], "norm_func_inf_slice_start": [93, 94], "norm_func_slices_gap": [93, 94], "norm_func_cmap": 93, "norm_func_vmin": 93, "norm_func_vmax": 93, "record": [93, 96, 118], "regressor_physio": 93, "physiolog": [93, 120, 157], "etco2": [93, 118, 120], "thought": 93, "patient_ref_data": 93, "cvr_physio_reg": [93, 118], "beta_imag": [93, 98, 99, 140, 141], "regress": [93, 98, 99, 100, 140, 154, 156], "predictor": [93, 141], "condit": [93, 98, 99, 100, 111, 157], "regressor": [93, 100, 101, 102, 103, 104, 120, 141, 157], "glm": [93, 118, 120, 156, 164], "activ": [93, 100, 101, 102, 103, 104, 120, 149], "deactiv": 93, "beta_cmap": 93, "beta": [93, 120, 141, 163], "rainbow": [93, 165], "beta_vmin": 93, "beta_vmax": 93, "spmt_imag": [93, 98, 99, 140, 141], "strength": 93, "spmt_cmap": 93, "spmt": [93, 96, 154, 163], "spmt_vmin": 93, "spmt_vmax": 93, "patient_info": [93, 96, 120, 140], "dictionari": [93, 96, 99, 100, 120, 140, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 165], "kei": [93, 96, 99, 100, 140, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 165], "patientref": [93, 120], "pathologi": [93, 96, 120, 140], "ag": [93, 96, 120, 140], "sex": [93, 96, 120, 140], "mr": [93, 96, 120, 140, 154], "ga": [93, 96, 120, 140], "gasadmin": [93, 96, 120, 140], "acmd": [93, 96, 120], "3t": [93, 96, 120], "bactal": [93, 96, 120], "1_co2_inhal_cvr_report_2024_01_24_09_34_58_08": 93, "func_func_qc": 94, "func_fig_col": 94, "func_fig_row": 94, "automask_mean_func_valid": 94, "func_inf_slice_start": 94, "func_slices_gap": 94, "iqms_plot": 94, "w_n4c_mean_reg_func_valid": [94, 129], "stddev_func": 94, "reg_func_valid_stddev": 94, "func_ref_functional_mriqcreport_2023_03_31_11_42_10_75": [94, 137], "gerer": 95, "boxplot": [95, 165], "quartil": 95, "q1": 95, "q3": 95, "whisker": 95, "5x": 95, "iqr": 95, "tsv": [95, 165], "out_tsv": [95, 165], "matplotlib": 95, "parameter_fil": [96, 154], "results_aggreg": [96, 120, 140, 154], "overwrit": [96, 154], "doublet": 96, "hemispher": [96, 140, 154], "letter": 96, "l": [96, 105, 106, 113, 154], "apath": 96, "apat": 96, "collect": [96, 154], "territori": [96, 120], "notion": 96, "cours": [96, 152], "todo": 96, "asap": 96, "exactli": [96, 154], "hemi": [96, 154], "aca": [96, 105, 106, 113, 154], "laterality_index": 96, "ablair": 96, "64": [96, 100, 111, 149], "xml": 96, "bold_std_beta": [96, 120, 140], "xl": [96, 120, 140], "bold_il_mean_spmt": [96, 120, 140], "bold_mean_spmt": [96, 120, 140], "spikes_mask": [97, 154], "no_zscor": 97, "zscore": [97, 152], "skip_fram": 97, "spike_thresh": [97, 154], "score": [97, 152], "call": 97, "spki": [97, 139], "detect": [97, 137, 139, 152, 154], "spikes_func": [97, 139], "t_contrast_nam": 98, "t_condition_nam": 98, "t_contrast_weight": 98, "session": [98, 100, 111, 165], "f": [98, 99, 120, 152, 154], "f_contrast_nam": 98, "f_contrast_t_nam": 98, "spm_mat_fil": [98, 99, 100], "beta_0002": [98, 99, 140, 141], "beta_0003": [98, 99, 140, 141], "beta_0004": [98, 99, 140, 141], "beta_0005": [98, 99, 140, 141], "beta_0006": [98, 99, 140, 141], "beta_0007": [98, 99, 140, 141], "beta_0008": [98, 99, 140, 141], "residual_imag": [98, 99], "residu": [98, 99], "resm": [98, 99], "task": [98, 154], "baselin": 98, "r1_1": 98, "use_deriv": 98, "group_contrast": 98, "elsewher": 98, "positif": 98, "out_spm_mat_fil": [98, 99, 101, 102, 103, 104, 141], "smp_mat_fil": [98, 99, 101, 102, 103, 104], "con_imag": [98, 99], "con_0001": 98, "con_0002": 98, "con_0003": 98, "con_0004": 98, "stat": [98, 99, 119, 143, 144, 154, 158], "spmt_0002": 98, "spmt_0003": 98, "spmt_0004": 98, "ess_imag": [98, 99], "ess_0001": [98, 99], "ess_0002": [98, 99], "ess_0003": [98, 99], "ess_0004": [98, 99], "spmf_imag": [98, 99], "spmf_0001": [98, 99], "spmf_0002": [98, 99], "spmf_0003": [98, 99], "spmf_0004": [98, 99], "estimatecontrast": [98, 119, 140, 141, 155, 156], "\u03b2": 99, "bayesian": 99, "open": [99, 114, 142], "ticket": [99, 136, 137], "v2": 99, "risk": 99, "strongli": 99, "v1": 99, "prefer": 99, "spmmat": 99, "estimation_method": 99, "independ": [99, 100, 104], "iid": 99, "yet": 99, "write_residu": 99, "dynamiqu": 99, "tot_reg_num": 99, "factor_info": [99, 100], "level1design": [99, 111, 119, 141, 155, 156, 157], "factori": [99, 100], "interact": [99, 100, 101, 102, 103, 104, 156], "factor1": [99, 100], "factor2": [99, 100], "hrf": [99, 100, 118, 157], "fourier_han": [99, 100], "gamma": [99, 100, 157], "fir": [99, 100, 157], "hemodynam": [99, 100, 118, 157], "beta_000k": [99, 140], "kth": [99, 140], "varianc": [99, 104], "res_000k": 99, "fuction": 99, "res_0001": 99, "res_0002": 99, "res_0003": 99, "res_0238": 99, "res_0239": 99, "res_0240": 99, "rpvimag": 99, "rpv": 99, "con_0005": 99, "con_0006": 99, "con_0007": 99, "con_0008": 99, "spmt_0005": 99, "spmt_0006": 99, "spmt_0007": 99, "spmt_0008": 99, "timing_unit": 100, "event": [100, 111], "sec": 100, "interscan_interv": 100, "rt": [100, 157], "microtime_resolut": 100, "fmri_t": 100, "build": [100, 157, 159, 160, 161, 162, 163, 164], "previous": [100, 114, 140, 141], "microtime_onset": 100, "fmri_t0": 100, "coincid": [100, 101, 102, 103, 104], "sess_scan": 100, "sess": 100, "wai": 100, "sess_1_scanpath_1": 100, "sess_2_scanpath_2": 100, "sess_n_scanpath_n": 100, "func_1": 100, "func_2": 100, "sess_cond_nam": 100, "cond": 100, "sess_1_condname_1": 100, "sess_1_condname_2": 100, "sess_1_condname_n": 100, "sess_2_condname_1": 100, "sess_2_condname_2": 100, "sess_2_condname_n": 100, "sess_n_condname_1": 100, "sess_n_condname_2": 100, "sess_n_condname_n": 100, "cond1": 100, "cond2": 100, "sess_cond_onset": 100, "epoch": 100, "sess_1_cond_1_onset_1": 100, "sess_1_cond_1_onset_2": 100, "sess_1_cond_1_onset_n": 100, "sess_1_cond_2_onset_1": 100, "sess_1_cond_2_onset_2": 100, "sess_1_cond_2_onset_n": 100, "sess_1_cond_n_onset_1": 100, "sess_1_cond_n_onset_2": 100, "sess_1_cond_n_onset_n": 100, "sess_2_cond_1_onset_1": 100, "sess_2_cond_1_onset_2": 100, "sess_2_cond_1_onset_n": 100, "sess_2_cond_2_onset_1": 100, "sess_2_cond_2_onset_2": 100, "sess_2_cond_2_onset_n": 100, "sess_2_cond_n_onset_1": 100, "sess_2_cond_n_onset_2": 100, "sess_2_cond_n_onset_n": 100, "sess_n_cond_1_onset_1": 100, "sess_n_cond_1_onset_2": 100, "sess_n_cond_1_onset_n": 100, "sess_n_cond_2_onset_1": 100, "sess_n_cond_2_onset_2": 100, "sess_n_cond_2_onset_n": 100, "sess_n_cond_n_onset_1": 100, "sess_n_cond_n_onset_2": 100, "sess_n_cond_n_onset_n": 100, "72": 100, "117": 100, "152": [100, 111], "59": [100, 154], "225": 100, "98": [100, 111, 154], "206": 100, "282": 100, "sess_cond_dur": 100, "durat": [100, 111, 157], "compli": 100, "sess_1_cond_1_duration_1": 100, "sess_1_cond_1_duration_2": 100, "sess_1_cond_1_duration_n": 100, "sess_1_cond_2_duration_1": 100, "sess_1_cond_2_duration_2": 100, "sess_1_cond_2_duration_n": 100, "sess_1_cond_n_duration_1": 100, "sess_1_cond_n_duration_2": 100, "sess_1_cond_n_duration_n": 100, "sess_2_cond_1_duration_1": 100, "sess_2_cond_1_duration_2": 100, "sess_2_cond_1_duration_n": 100, "sess_2_cond_2_duration_1": 100, "sess_2_cond_2_duration_2": 100, "sess_2_cond_2_duration_n": 100, "sess_2_cond_n_duration_1": 100, "sess_2_cond_n_duration_2": 100, "sess_2_cond_n_duration_n": 100, "sess_n_cond_1_duration_1": 100, "sess_n_cond_1_duration_2": 100, "sess_n_cond_1_duration_n": 100, "sess_n_cond_2_duration_1": 100, "sess_n_cond_2_duration_2": 100, "sess_n_cond_2_duration_n": 100, "sess_n_cond_n_duration_1": 100, "sess_n_cond_n_duration_2": 100, "sess_n_cond_n_duration_n": 100, "54": 100, "81": 100, "sess_cond_tmod": 100, "tmod": 100, "characteris": 100, "nonlinear": 100, "6th": 100, "sess_1_cond_1_tmod": 100, "sess_1_cond_2_tmod": 100, "sess_1_cond_n_tmod": 100, "sess_2_cond_1_tmod": 100, "sess_2_cond_2_tmod": 100, "sess2_cond_n_tmod": 100, "sess_n_cond_1_tmod": 100, "sess_n_cond_2_tmod": 100, "sess_n_cond_n_tmod": 100, "sess_cond_pmod_nam": 100, "pmod": 100, "relat": [100, 111, 154, 156], "sess_1_cond_1_pmodname_1": 100, "sess_1_cond_1_pmodname_2": 100, "sess_1_cond_1_pmodname_n": 100, "sess_1_cond_2_pmodname_1": 100, "sess_1_cond_2_pmodname_2": 100, "sess_1_cond_2_pmodname_n": 100, "sess_1_cond_n_pmodname_1": 100, "sess_1_cond_n_pmodname_2": 100, "sess_1_cond_n_pmodname_n": 100, "sess_2_cond_1_pmodname_1": 100, "sess_2_cond_1_pmodname_2": 100, "sess_2_cond_1_pmodname_n": 100, "sess_2_cond_2_pmodname_1": 100, "sess_2_cond_2_pmodname_2": 100, "sess_2_cond_2_pmodname_n": 100, "sess_2_cond_n_pmodname_1": 100, "sess_2_cond_n_pmodname_2": 100, "sess_2_cond_n_pmodname_n": 100, "sess_n_cond_1_pmodname_1": 100, "sess_n_cond_1_pmodname_2": 100, "sess_n_cond_1_pmodname_n": 100, "sess_n_cond_2_pmodname_1": 100, "sess_n_cond_2_pmodname_2": 100, "sess_n_cond_2_pmodname_n": 100, "sess_n_cond_n_pmodname_1": 100, "sess_n_cond_n_pmodname_2": 100, "sess_n_cond_n_pmodname_n": 100, "pmod1": 100, "pmod2": 100, "sess_cond_pmod_valu": 100, "sess_1_cond_1_pmod_1_val_1": 100, "sess_1_cond_1_pmod_1_val_2": 100, "sess_1_cond_1_pmod_1_val_n": 100, "sess_1_cond_1_pmod_2_val_1": 100, "sess_1_cond_1_pmod_2_val_2": 100, "sess_1_cond_1_pmod_2_val_n": 100, "sess_1_cond_1_pmod_n_val_1": 100, "sess_1_cond_1_pmod_n_val_2": 100, "sess_1_cond_1_pmod_n_val_n": 100, "sess_1_cond_2_pmod_1_val_1": 100, "sess_1_cond_2_pmod_1_val_2": 100, "sess_1_cond_2_pmod_1_val_n": 100, "sess_1_cond_2_pmod_2_val_1": 100, "sess_1_cond_2_pmod_2_val_2": 100, "sess_1_cond_2_pmod_2_val_n": 100, "sess_1_cond_2_pmod_n_val_1": 100, "sess_1_cond_2_pmod_n_val_2": 100, "sess_1_cond_2_pmod_n_val_n": 100, "sess_1_cond_n_pmod_1_val_1": 100, "sess_1_cond_n_pmod_1_val_2": 100, "sess_1_cond_n_pmod_1_val_n": 100, "sess_1_cond_n_pmod_2_val_1": 100, "sess_1_cond_n_pmod_2_val_2": 100, "sess_1_cond_n_pmod_2_val_n": 100, "sess_1_cond_n_pmod_n_val_1": 100, "sess_1_cond_n_pmod_n_val_2": 100, "sess_1_cond_n_pmod_n_val_n": 100, "sess_2_cond_1_pmod_1_val_1": 100, "sess_2_cond_1_pmod_1_val_2": 100, "sess_2_cond_1_pmod_1_val_n": 100, "sess_2_cond_1_pmod_2_val_1": 100, "sess_2_cond_1_pmod_2_val_2": 100, "sess_2_cond_1_pmod_2_val_n": 100, "sess_2_cond_1_pmod_n_val_1": 100, "sess_2_cond_1_pmod_n_val_2": 100, "sess_2_cond_1_pmod_n_val_n": 100, "sess_2_cond_2_pmod_1_val_1": 100, "sess_2_cond_2_pmod_1_val_2": 100, "sess_2_cond_2_pmod_1_val_n": 100, "sess_2_cond_2_pmod_2_val_1": 100, "sess_2_cond_2_pmod_2_val_2": 100, "sess_2_cond_2_pmod_2_val_n": 100, "sess_2_cond_2_pmod_n_val_1": 100, "sess_2_cond_2_pmod_n_val_2": 100, "sess_2_cond_2_pmod_n_val_n": 100, "sess_2_cond_n_pmod_1_val_1": 100, "sess_2_cond_n_pmod_1_val_2": 100, "sess_2_cond_n_pmod_1_val_n": 100, "sess_2_cond_n_pmod_2_val_1": 100, "sess_2_cond_n_pmod_2_val_2": 100, "sess_2_cond_n_pmod_2_val_n": 100, "sess_2_cond_n_pmod_n_val_1": 100, "sess_2_cond_n_pmod_n_val_2": 100, "sess_2_cond_n_pmod_n_val_n": 100, "sess_n_cond_1_pmod_1_val_1": 100, "sess_n_cond_1_pmod_1_val_2": 100, "sess_n_cond_1_pmod_1_val_n": 100, "sess_n_cond_1_pmod_2_val_1": 100, "sess_n_cond_1_pmod_2_val_2": 100, "sess_n_cond_1_pmod_2_val_n": 100, "sess_n_cond_1_pmod_n_val_1": 100, "sess_n_cond_1_pmod_n_val_2": 100, "sess_n_cond_1_pmod_n_val_n": 100, "sess_n_cond_2_pmod_1_val_1": 100, "sess_n_cond_2_pmod_1_val_2": 100, "sess_n_cond_2_pmod_1_val_n": 100, "sess_n_cond_2_pmod_2_val_1": 100, "sess_n_cond_2_pmod_2_val_2": 100, "sess_n_cond_2_pmod_2_val_n": 100, "sess_n_cond_2_pmod_n_val_1": 100, "sess_n_cond_2_pmod_n_val_2": 100, "sess_n_cond_2_pmod_n_val_n": 100, "sess_n_cond_n_pmod_1_val_1": 100, "sess_n_cond_n_pmod_1_val_2": 100, "sess_n_cond_n_pmod_1_val_n": 100, "sess_n_cond_n_pmod_2_val_1": 100, "sess_n_cond_n_pmod_2_val_2": 100, "sess_n_cond_n_pmod_2_val_n": 100, "sess_n_cond_n_pmod_n_val_1": 100, "sess_n_cond_n_pmod_n_val_2": 100, "sess_n_cond_n_pmod_n_val_n": 100, "61": 100, "105": [100, 111], "178": 100, "65": [100, 111], "221": 100, "sess_cond_pmod_poli": 100, "poli": 100, "stick": 100, "height": [100, 165], "further": [100, 136, 137, 141], "cube": 100, "sess_1_cond_1_pmod_1_poli": 100, "sess_1_cond_1_pmod_2_poli": 100, "sess_1_cond_1_pmod_n_poli": 100, "sess_1_cond_2_pmod_1_poli": 100, "sess_1_cond_2_pmod_2_poli": 100, "sess_1_cond_2_pmod_n_poli": 100, "sess_1_cond_n_pmod_1_poli": 100, "sess_1_cond_n_pmod_2_poli": 100, "sess_1_cond_n_pmod_n_poli": 100, "sess_2_cond_1_pmod_1_poli": 100, "sess_2_cond_1_pmod_2_poli": 100, "sess_2_cond_1_pmod_n_poli": 100, "sess_2_cond_2_pmod_1_poli": 100, "sess_2_cond_2_pmod_2_poli": 100, "sess_2_cond_2_pmod_n_poli": 100, "sess_2_cond_n_pmod_1_poli": 100, "sess_2_cond_n_pmod_2_poli": 100, "sess_2_cond_n_pmod_n_poli": 100, "sess_n_cond_1_pmod_1_poli": 100, "sess_n_cond_1_pmod_2_poli": 100, "sess_n_cond_1_pmod_n_poli": 100, "sess_n_cond_2_pmod_1_poli": 100, "sess_n_cond_2_pmod_2_poli": 100, "sess_n_cond_2_pmod_n_poli": 100, "sess_n_cond_n_pmod_1_poli": 100, "sess_n_cond_n_pmod_2_poli": 100, "sess_n_cond_n_pmod_n_poli": 100, "sess_cond_orth": 100, "orth": 100, "orthogonalis": 100, "othogonalis": 100, "sess_1_cond_1_orth": 100, "sess_1_cond_2_orth": 100, "sess_1_cond_n_orth": 100, "sess_2_cond_1_orth": 100, "sess_2_cond_2_orth": 100, "sess2_cond_n_orth": 100, "sess_n_cond_1_orth": 100, "sess_n_cond_2_orth": 100, "sess_n_cond_n_orth": 100, "sess_multi": 100, "detail": [100, 141], "experiment": [100, 101, 102, 103, 104], "cell": 100, "arrai": [100, 152, 154], "load": [100, 113], "go": 100, "sess_1_multi": 100, "sess_2_multi": 100, "sess_n_multi": 100, "sess_regress": 100, "haemodynam": 100, "val": 100, "sess_1_dict_1": 100, "sess_1_dict_2": 100, "sess_1_dict_n": 100, "sess_2_dict_1": 100, "sess_2_dict_2": 100, "sess_2_dict_n": 100, "sess_n_dict_1": 100, "sess_n_dict_2": 100, "sess_n_dict_n": 100, "reg1": 100, "79": 100, "585": 100, "805": 100, "155": [100, 111], "66": 100, "195": 100, "045": 100, "82": 100, "765": 100, "67": [100, 111], "955": 100, "935": 100, "865": 100, "reg2": 100, "58": 100, "09": 100, "91": [100, 154], "87": 100, "73": 100, "sess_multi_reg": 100, "multi_reg": 100, "sess_1_file_1": 100, "sess_1_file_2": 100, "sess_1_file_n": 100, "sess_2_file_1": 100, "sess_2_file_2": 100, "sess_2_file_n": 100, "sess_n_file_1": 100, "sess_n_file_2": 100, "sess_n_file_n": 100, "file1": [100, 108], "file2": [100, 108], "sess_hpf": 100, "hpf": 100, "slow": 100, "drift": 100, "period": 100, "longer": [100, 121], "128": 100, "427": 100, "major": 100, "variabl": [100, 101, 102, 103, 104, 120, 136, 137, 143], "subdivis": 100, "peak": [100, 121, 151], "vari": [100, 133], "plu": 100, "dispers": 100, "finit": 100, "impuls": 100, "post": 100, "stimulu": 100, "span": 100, "volterra_expansion_ord": 100, "volt": 100, "volterra": 100, "formul": 100, "global_intensity_norm": 100, "mask_threshold": 100, "mthresh": 100, "explicitli": 100, "analys": [100, 133, 161], "mask_swc1anat": 100, "model_serial_correl": 100, "cvi": 100, "serial": 100, "alias": 100, "biorhythm": 100, "unmodel": 100, "neuron": 100, "autoregress": 100, "reml": [100, 156], "001_data": [101, 102, 103, 104], "con_001": [101, 102, 104], "002_data": [101, 102, 103, 104], "out_dir_nam": [101, 102, 103, 104], "spm_stat_2ndlevel": [101, 102, 103, 104], "directoti": [101, 102, 103, 104], "folder": [101, 102, 103, 104], "project": [101, 102, 103, 104, 154, 165], "include_intercept": 101, "intercept": 101, "threshold_mask": [101, 102, 103, 104], "exce": [101, 102, 103, 104], "absoult": [101, 102, 103, 104], "threshold_mask_valu": [101, 102, 103, 104], "use_implicit_mask": [101, 102, 103, 104], "nan": [101, 102, 103, 104], "global_calc": [101, 102, 103, 104], "vbm": [101, 102, 103, 104], "own": [101, 102, 103, 104], "global_calc_valu": [101, 102, 103, 104], "fullmean": [101, 102, 103, 104], "no_grand_mean_sc": [101, 102, 103, 104], "overal": [101, 102, 103, 104], "grand": [101, 102, 103, 104], "scall": [101, 102, 103, 104], "ancova": [101, 102, 103, 104], "user_covariates_nam": 101, "covari": [101, 102, 103, 104, 156], "user_covariates_vector": 101, "user_covariates_cent": 101, "aslo": [101, 102, 103, 104], "reaction": [101, 102, 103, 104], "usercovariates_cent": 101, "covariates_nam": [101, 102, 103, 104], "nuissanc": [101, 102, 103, 104], "examin": [101, 102, 103, 104], "additionl": [101, 102, 103, 104], "covariates_vector": [101, 102, 103, 104], "covariates_interact": [101, 102, 103, 104], "covariates_cent": [101, 102, 103, 104], "interc": [101, 102, 103, 104], "opportun": [101, 102, 103, 104], "facto": [101, 102, 103, 104], "explicit_mask_fil": [101, 102, 103, 104], "explicit": [101, 102, 103, 104], "calculaion": [101, 102, 103, 104], "cacul": [101, 102, 103, 104, 154], "paired_fil": 103, "beta_001": 103, "beta_002": 103, "onesamplettestdesign": [103, 104, 119, 155, 156], "group1_fil": 104, "grouop": 104, "group2_fil": 104, "con_002": 104, "unequal_vari": 104, "unequ": 104, "acm": [105, 106, 113], "out_list": [105, 115], "acp": 106, "pica": 106, "roi_c": 106, "roi_fron": 106, "roi_insula": 106, "roi_occ": 106, "roi_par": 106, "roi_str": 106, "roi_temp": 106, "roi_tha": 106, "sca": 106, "listoflist": 106, "histori": 107, "to_keep_filt": 107, "regex": 107, "to_remove_filt": 107, "to_remove_fil": 107, "01_anatomical_mriqcreport_2023_05_12_16_26_12_58": 107, "_qc": 107, "exclusif": 107, "files_remov": 107, "file3": 108, "file_list": [108, 116], "in_list": [109, 110], "index_filt": [109, 116], "python": [109, 116], "filtered_list": 109, "pars": 110, "anat1_001": 110, "anat1_002": 110, "anat1_003": 110, "anat2_002": 110, "002": 110, "bloc": 111, "csv_file": 111, "conten": 111, "mia_project": [111, 112], "sess01_bloc_onset": 111, "sess02_event_onset": 111, "design_typ": 111, "cond_nam": 111, "inc": 111, "con": 111, "n1": 111, "n2": 111, "f1": 111, "f2": 111, "cond_onset": 111, "88": 111, "144": 111, "174": 111, "236": 111, "248": 111, "274": 111, "102": 111, "116": 111, "154": 111, "164": 111, "184": 111, "196": 111, "208": 111, "222": 111, "74996667": 111, "99996667": 111, "24996667": 111, "49996667": 111, "74": 111, "92": 111, "119": 111, "123": 111, "125": 111, "137": 111, "141": 111, "143": 111, "146": 111, "159": 111, "161": 111, "204": 111, "238": 111, "89": 111, "94": 111, "134": 111, "148": 111, "191": 111, "202": 111, "215": 111, "233": 111, "242": 111, "245": 111, "281": 111, "290": 111, "303": 111, "310": 111, "319": 111, "339": 111, "341": 111, "33333333e": 111, "2499667": 111, "4999667": 111, "9999667": 111, "7499667": 111, "62": 111, "101": 111, "249967": 111, "103": 111, "499967": 111, "999967": 111, "749967": 111, "170": 111, "188": 111, "227": 111, "265": 111, "283": 111, "285": 111, "287": 111, "344": 111, "157": 111, "168": 111, "177": 111, "179": 111, "182": 111, "197": 111, "240": 111, "254": 111, "267": 111, "269": 111, "294": 111, "299": 111, "301": 111, "314": 111, "317": 111, "326": 111, "332": 111, "335": 111, "337": 111, "346": 111, "cond_dur": 111, "tha": 112, "patient_nam": 112, "rois_list": [113, 157], "lib_dir": [113, 157], "roi_list": [113, 157], "caract": 113, "foo": [113, 157], "faa": [113, 157], "foo_1": [113, 157], "faa_2": [113, 157], "miaresourc": [113, 157], "file_in_db": [113, 157], "output_directori": [113, 152, 157, 165], "resourc": [113, 154], "catch": 113, "starts_with": 113, "properli": [114, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157], "node": 114, "hand": [114, 142], "databrows": 114, "send": 114, "manag": [114, 142], "button": 114, "click": 114, "database_scan": 114, "file_nam": [115, 152, 165], "obj1": 117, "obj2": 117, "obj_list": 117, "tidal": [118, 120], "carbon": 118, "dioxid": 118, "relationship": 118, "cerebr": [118, 120], "blood": [118, 120], "flow": [118, 120], "magdata": 118, "coolterm": 118, "trigger": [118, 120], "func_fil": [118, 120, 130, 131, 137], "magnet": [118, 120, 154], "reson": [118, 120, 154], "experi": [118, 120], "hypercapn": 118, "challeng": [118, 159, 165], "metadata": 118, "trigger_data": [118, 120], "synchron": [118, 120], "vaso_trigger_tim": 118, "physio_data": [118, 120], "cvr_reg": 118, "brick": [119, 120, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 142, 143, 161, 162, 163, 165, 166], "atom": [119, 142, 143, 146, 147, 148, 149, 150, 152, 153, 161, 162], "parti": [119, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157], "softwar": [119, 145], "calcdroptr": [119, 145, 146], "despik": [119, 128, 145, 146], "fwhmx": [119, 136, 139, 145, 146], "gcor": [119, 139, 145, 146], "outlierscount": 119, "qualityindex": [119, 145, 146], "refitdeobliqu": [119, 145, 146], "tshift": [119, 145, 146], "tstatmean": [119, 145, 146], "volreg": [119, 145, 146], "affineiniti": [119, 145, 147], "applytransform": [119, 122, 124, 145, 147], "n4biasfieldcorrect": [119, 125, 126, 129, 145, 147], "computedki": [119, 145, 148], "binar": [119, 125, 145, 149, 152], "synthstrip": [119, 136, 145, 149, 161], "synthstripmriqc": [119, 145, 149], "convertxfm": [119, 138, 145, 150], "epireg": [119, 138, 145, 150], "extractroi": [119, 145, 150], "matlab_wrap": [119, 145], "computebrainvolum": 119, "constrainedsphericaldeconvolut": [119, 145, 151], "dwibiascorrect": [119, 145, 151], "dwibrainmask": [119, 145, 151], "dwicat": [119, 145, 151], "dwidenois": [119, 145, 151], "dwiextract": [119, 145, 151], "editingtrack": [119, 145, 151], "filteringtrack": [119, 145, 151], "fittensor": [119, 145, 151], "generate5tt2gmwmi": [119, 145, 151], "mrcat": [119, 145, 151], "mrdegibb": [119, 145, 151], "mrmath": [119, 145, 151], "mrtransform": [119, 145, 151], "mtnormalis": [119, 145, 151], "sphericalharmonicextract": [119, 145, 151], "tensormetr": [119, 145, 151], "transformfslconvert": [119, 145, 151], "applybiascorrect": [119, 145, 152], "artifactmask": [119, 145, 152], "conformimag": [119, 136, 145, 152], "convroi": [119, 140, 145, 152], "enhanc": [119, 123, 145, 152], "estimatesnr": [119, 145, 152], "extractroibylabel": [119, 138, 145, 152], "extractsignalroi": [119, 138, 145, 152], "gradientthreshold": [119, 145, 152], "intensityclip": [119, 145, 152], "nonsteadydetector": 119, "resample1": [119, 135, 145, 152], "resample2": [119, 145, 152], "rotationmask": [119, 145, 152], "sanit": [119, 137, 145, 152], "templatefromtemplateflow": [119, 145, 152], "gm_wm_normal": [119, 135, 145, 153], "newseg": [119, 130, 145, 153], "slicetim": [119, 145, 153], "assemblynetdock": [119, 138], "getlabel": [119, 138], "labelscorrespond": [119, 138], "anatiqm": [119, 144, 154], "boldiqm": [119, 144, 154], "boldiqmsplot": [119, 144, 154], "carpetparcel": [119, 144, 154], "computedvar": [119, 144, 154], "framewisedisplac": [119, 144, 154], "mean_stddev_calc": [119, 140, 144, 154], "plotsignalroi": [119, 138, 144, 154], "reportanatmriqc": [119, 144, 154], "reportco2inhalcvr": [119, 120, 144, 154], "reportfuncmriqc": [119, 144, 154], "reportgroupmriqc": [119, 144, 154], "result_collector": [119, 140, 144, 154], "estimatemodel": [119, 140, 141, 155, 156], "multipleregressiondesign": [119, 155, 156], "pairedttestdesign": [119, 155, 156], "twosamplettestdesign": [119, 155, 156], "concat_to_list": [119, 140, 144, 157], "concat_to_list_of_list": [119, 140, 144, 157], "delete_data": [119, 144, 157], "files_to_list": [119, 120, 140, 144, 157], "find_in_list": [119, 140, 144, 157], "get_conditions_from_csv": [119, 144, 157], "get_patient_nam": [119, 144, 157], "import_data": [119, 140, 144, 157], "input_filt": [119, 144, 157], "list_dupl": [119, 130, 144, 157], "list_to_fil": [119, 120, 136, 144, 157], "make_a_list": [119, 141, 144, 157], "make_cvr_reg_physio": [119, 120, 144, 157], "cerebvascularreact": [119, 143, 158], "co2_inhal": [119, 143, 158], "dwitractographi": [119, 143, 158], "dwi_whole_brain_tractograpi": 119, "anat_airmask": [119, 143, 158], "anat_headmask": [119, 143, 158], "anat_mni_tpm": [119, 136, 143, 158], "anat_skullstrip": [119, 143, 158], "anat_skullstrip_synthstrip": [119, 143, 158], "anat_spatial_norm": [119, 143, 158], "bold_hmc": [119, 143, 158], "bold_mni_align": [119, 143, 158], "bold_spatial_preprocessing1": [119, 120, 143, 158], "bold_spatial_preprocessing2": [119, 143, 158], "dwi_fod_msmt_csd": [119, 143, 158], "dwi_preprocess": [119, 158, 161], "dwi_tissue_boundari": 119, "spatial_mask": [119, 120, 140, 141, 143, 158], "qualitycontrol": [119, 143, 158], "anat_mriqc": [119, 143, 158], "bold_mri_qc": 119, "bold_signals_roi": 119, "bold_iqm": [119, 143, 158], "extract_roi_param": [119, 120, 143, 158], "bold_stat_cvr": [119, 120, 143, 158], "hypercapnia": [120, 159], "induc": [120, 154], "administ": 120, "deliveri": 120, "system": [120, 154], "particip": 120, "breath": 120, "respiratori": 120, "apparatu": 120, "captur": 120, "oxygen": 120, "reflect": 120, "throughout": 120, "heart": 120, "monitor": 120, "induct": 120, "analyz": 120, "approach": [120, 154], "insight": [120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141], "anat_fil": [120, 130, 131, 136, 165], "turbo": [120, 130, 131], "trigger_tim": 120, "stimul": 120, "carbogen": 120, "variocap": 120, "administr": 120, "cannula": 120, "bob_01": 120, "57": 120, "xls_file": [120, 140], "tab": [120, 157], "delimit": 120, "summari": [120, 136, 137, 139, 151], "patientref_data": 120, "bold_il_std_beta": [120, 140], "bold_mean_beta": [120, 140], "bold_il_mean_beta": [120, 140], "bold_std_spmt": [120, 140], "bold_il_std_spmt": [120, 140], "patientref_co2_inhal_cvr_report_2024_03_19_11_01_15_04": 120, "tractogram": 121, "multishel": [121, 133], "implaus": 121, "overestim": 121, "msmtt": 121, "exploit": 121, "sensit": 121, "prepar": [121, 132, 134], "atc": 121, "coregistr": [121, 134], "million": 121, "randomli": 121, "subset": [121, 151], "200k": 121, "10k": 121, "shorter": 121, "softawr": 121, "tractseg": 121, "tutori": [121, 134], "andi": 121, "book": 121, "suggest": [121, 134], "howev": [121, 134], "seem": [121, 134], "perfectli": [121, 134], "edit": [121, 151], "in_dwi_pe_dir": [121, 133], "in_diw": [121, 133], "in_dwi_ro_tim": [121, 133], "in_b0_revers": [121, 133], "topup": [121, 133, 151], "b0_revers": [121, 133], "in_t1w": [121, 134], "sh_peak": 121, "dwi_denoised_unringed_dwifslpreproc_unbias_wm_odf_norm_peak": 121, "tracks_10mio": 121, "dwi_denoised_unringed_dwifslpreproc_unbias_wm_odf_norm_tracto": 121, "tracks_200k": 121, "dwi_denoised_unringed_dwifslpreproc_unbias_wm_odf_norm_tracto_200k": 121, "tracks_10k": 121, "dwi_denoised_unringed_dwifslpreproc_unbias_wm_odf_norm_tracto_10k": 121, "dwi_denoised_unringed_dwifslpreproc_unbias_wm_odf_norm_tracto_sift": 121, "tracks_sift_10k": 121, "t1w_coreg": [121, 134], "t1w_transform": [121, 134], "advanc": 121, "neurophil": 121, "templateflow": [122, 124, 127, 129, 152], "t1w_brain_outskin": 122, "t1w_masked_inversecomposit": [122, 124, 127], "t1w_brain_mask": 122, "out_rot_mask": 122, "rot_t1w_mask": 122, "ss_t1w_seg": 123, "denoise_ss_t1w_enh_grad": 123, "bias_correct": 125, "n4c_t1w_bia": 125, "ss_orig_t1w": 125, "ss_orig_t1w_bin": 125, "intes": 126, "out_correct": 126, "n4c_t1w_clip": 126, "ss_n4c_t1w_clip": 126, "pre_n4c_t1w_clipped_desc_brain_mask": 126, "moving_mask": 127, "t1w_masked_composit": 127, "w_t1w_mask": 127, "mric": 127, "hcm": 128, "bold_hcm": 128, "deobliqu": [128, 146], "deobliq": 128, "reg_d_func_on": [128, 139], "reg_d_func": 128, "mriq": [128, 129], "hmc": 128, "boldref": 129, "dseg": 129, "epi_mask": 129, "epi_mean": [129, 139], "reg_convergence_threshold": 129, "reg_convergence_window_s": 129, "reg_interpol": 129, "reg_metr": 129, "reg_metric_weight": 129, "reg_number_of_iter": 129, "reg_radius_or_number_of_bin": 129, "reg_sampling_percentag": 129, "reg_sampling_strategi": 129, "reg_shrink_factor": 129, "reg_smoothing_sigma": 129, "reg_transform_paramet": 129, "reg_transform": 129, "seg_template_r": 129, "template_r": 129, "n4c_mean_reg_func_valid_composit": 129, "n4c_mean_reg_func_valid_bia": 129, "epi_mni": 129, "epi_parc": [129, 139], "n4c_mean_reg_func_valid_inversecomposit": 129, "normalized_anat": [130, 131], "smoothed_func": [130, 131, 135, 141], "swrfunc": [130, 131, 141], "normalized_func": 130, "sush": 131, "rf": 132, "we": 132, "everi": [132, 146, 153], "studi": [132, 154], "dwi_denoised_unringed_dwifslpreproc_unbia": [132, 133, 134], "dwi_denoised_unringed_dwifslpreproc_unbias_brain_mask": [132, 133], "voxel_fin": 132, "dwi_denoised_unringed_dwifslpreproc_unbias_response_voxel": 132, "dwi_denoised_unringed_dwifslpreproc_unbias_odf_predicted_sign": 132, "wm_odf_norm": 132, "dwi_denoised_unringed_dwifslpreproc_unbias_wm_odf_norm": 132, "gm_odf_norm": 132, "dwi_denoised_unringed_dwifslpreproc_unbias_gm_odf_norm": 132, "csf_odf_norm": 132, "dwi_denoised_unringed_dwifslpreproc_unbias_csf_odf_norm": 132, "gibb": [133, 151], "ring": [133, 151], "distrort": 133, "eddi": [133, 151], "convers": [133, 134, 151], "distorst": 133, "preproc_dwi": 133, "creation": 134, "subcort": 134, "patholog": 134, "transfom": 134, "t1w_5tt_transform": 134, "t1w_5tt_transformed_gmwmse": 134, "c6anat": 135, "mask_003": [135, 140, 141], "mask_swc1anat_003": 135, "special": [136, 137, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157], "effort": [136, 137], "much": [136, 137], "sought": [136, 137], "environ": [136, 137, 142], "ants_random_se": [136, 137], "bare": 136, "metal": 136, "itk_global_default_number_of_thread": 136, "omp_num_thread": 136, "discuss": [136, 137], "bet": [136, 150], "anat_report": 136, "nterpol": 137, "func_report": 137, "assemblynet": 138, "labels_structur": 138, "correpond": 138, "le": 138, "hippocampu": 138, "out_png_tissu": 138, "func_extracted_signals_tissu": 138, "out_png_lob": 138, "func_extracted_signals_lob": 138, "out_png_macrostructur": 138, "func_extracted_signals_macrostructur": 138, "out_png_structur": 138, "func_extracted_signals_47_48": 138, "bold_mriqc": [139, 143, 158], "parcel": [139, 154], "hmc_motion": 139, "ras_epi": 139, "dummy_tr": 139, "interg": 139, "dvars_intensity_norm": 139, "dvars_remove_zero_vari": 139, "epi_tsnr": 139, "fd_normal": 139, "fd_parameter_sourc": 139, "fd_radiu": 139, "fwhm_combin": 139, "fwhm_detrend": 139, "hmc_epi": 139, "quality_index_automask": 139, "outlier_fract": 139, "spikes_detrend": 139, "spikes_no_zscor": 139, "spikes_skip_fram": 139, "spikes_skipe_thresh": 139, "boldqc_out_fil": 139, "mean_reg_func_valid_bold_qc": 139, "dvars_fil": 139, "fd_file": 139, "framewis": [139, 154], "outliercount_fil": 139, "spike_fil": 139, "mask_anat_002": [140, 141], "preced": 140, "il": 140, "conv_roi_mak": 140, "roi_dat": 140, "convacp_l": 140, "convacp_r": 140, "convpica_l": 140, "convpica_r": 140, "cing_l": 140, "cing_r": 140, "fron_l": 140, "fron_r": 140, "insula_l": 140, "insula_r": 140, "occ_l": 140, "occ_r": 140, "par_l": 140, "par_r": 140, "str_l": 140, "str_r": 140, "temp_l": 140, "temp_r": 140, "tha_l": 140, "tha_r": 140, "convsca_l": 140, "convsca_r": 140, "directli": [141, 142, 146, 147, 148, 149, 150, 151, 153, 156], "explan": 141, "regressor_physio_etco2_ctl": 141, "populse_mia": [142, 143, 146, 147, 148, 149, 150, 151, 153, 156], "ergonom": 142, "easili": 142, "offer": 142, "known": [142, 154, 165], "commun": 142, "under": [142, 159, 165], "umbrella": 142, "websit": [142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164], "On": [142, 165], "inherit": 142, "page": [142, 165], "offici": 143, "dwi_whole_brain_tractographi": [143, 158], "dwipreprocess": [143, 158], "__init__": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 165, 166], "co2_inhal_cvr_make_report": [143, 165], "get_iqms_data": [143, 165], "mriqc_anat_make_report": [143, 165], "mriqc_func_make_report": [143, 165], "mriqc_group_make_report": [143, 165], "pagenumcanva": [143, 165], "draw_page_numb": [143, 165], "showpag": [143, 165], "reportlin": [143, 165], "draw": [143, 165], "checkfileext": [143, 165], "check_orient": [143, 165], "del_dbfieldvalu": [143, 165], "dict4runtime_upd": [143, 165], "get_dbfieldvalu": [143, 165], "mriqc_get_all_run": [143, 165], "mriqc_group_iqms_tsv": [143, 165], "plot_boxplot_point": [143, 165], "plot_qi2": [143, 165], "plot_segment": [143, 165], "plot_slice_plan": [143, 165], "set_dbfieldvalu": [143, 165], "dedic": [143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 162, 163, 165], "py": [143, 149, 152, 165], "mainli": 143, "setup": 143, "get_gitvers": [143, 166], "commit": 143, "git": 143, "launch": [143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157], "processmatlab": [143, 166], "processmia": [143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157], "overrid": 143, "get_input_spec": [143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164], "trait": [143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164], "get_output_spec": [143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164], "add_exit": [143, 166], "add_path": [143, 166], "change_directori": [143, 166], "display_paramet": [143, 166], "parameter_nam": 143, "set_global_vari": [143, 166], "variable_nam": 143, "set_vari": [143, 166], "treatment": [144, 161], "submodul": [144, 145, 155, 158, 166], "spatial_preprocess": [144, 145], "list_output": [144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 165], "run_process_mia": [144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 165], "art_qi1": [144, 154], "art_qi2": [144, 154], "cjv": [144, 154], "cnr": [144, 154], "efc": [144, 154], "fber": [144, 154], "find_peak": [144, 154], "find_spik": [144, 154], "fuzzy_jaccard": [144, 154], "gsr": [144, 154], "image_binary_dil": [144, 154], "normalize_mc_param": [144, 154], "regress_poli": [144, 154], "rpve": [144, 154], "snr_dietrich": [144, 154], "summary_stat": [144, 154], "volume_fract": [144, 154], "wm2max": [144, 154], "gaussfir": [144, 157], "gfb_conv": [144, 157], "spm_hrf": [144, 157], "encapsul": 145, "mrtrix3": [145, 151], "homemad": 145, "outliercount": [145, 146], "convblock": [145, 149], "stripmodel": [145, 149], "conform": [145, 149, 152], "resample_lik": [145, 149], "artifact_mask": [145, 152], "is_outli": [145, 152], "customis": [146, 147, 148, 149, 150, 151, 153, 156], "thing": [146, 147, 148, 149, 150, 151, 153, 156], "3dautomask": 146, "instanti": [146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157], "plug": [146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157], "self": [146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 165], "is_plug": [146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157], "inheritance_d": [146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157], "notindb": [146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157], "make_initresult": [146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157], "inheritance_dict": [146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157], "arithmet": 146, "droptr": 146, "3dcalc": 146, "surround": [146, 154], "3dtstat": 146, "3dvolreg": [146, 161], "http": [147, 149, 152, 153, 165], "io": [147, 149, 152, 153], "html": [147, 149, 152, 153], "com": [147, 149, 152, 165], "niprep": [147, 149, 152, 165], "tree": 147, "master": 147, "mri_binar": 149, "statement": 149, "OF": 149, "blob": [149, 152, 165], "2995ded957961a7f3704de57eee88eb6cc30d52d": 149, "ndim": 149, "in_channel": 149, "out_channel": 149, "stride": 149, "leaki": 149, "leakyrelu": 149, "unet": 149, "blabla": [149, 154, 163], "bool": [149, 154], "nb_featur": 149, "nb_level": 149, "feat_mult": 149, "max_featur": 149, "nb_conv_per_level": 149, "max_pool": 149, "return_mask": 149, "input_nii": 149, "output_dtyp": 149, "cval": 149, "via": 149, "inskul": 150, "outskul": 150, "convert_xfm": 150, "fslroi": 150, "intra": 150, "b1": 151, "domain": 151, "dholland": 151, "applymask": 152, "e021008da0a2ef1c48e882baf932139a673349f9": 152, "l301": 152, "45ab13e1bf6fdbf5e29c90cef44055b0b9cf391b": 152, "l92": 152, "common": 152, "conform_imag": 152, "l75": 152, "l974": 152, "l970": 152, "l1039": 152, "l405": 152, "prescrib": 152, "percentil": [152, 154], "l474": 152, "f662acfce8def4717e0c3414618f3a5de5913b31": 152, "resample_to_img": 152, "l448": 152, "l394": 152, "l899": 152, "imdata": 152, "airdata": 152, "thresh": 152, "nparrai": 152, "numobserv": 152, "numdimens": 152, "numpi": [152, 154, 157], "observ": 152, "bolean": 152, "iglewicz": 152, "david": 152, "hoaglin": 152, "1993": 152, "handl": 152, "asqc": 152, "techniqu": 152, "edward": 152, "mykytka": 152, "ph": 152, "editor": 152, "_ar_est_yw": 154, "_flatten_dict": 154, "_prepare_mask": 154, "_robust_zscor": 154, "atkinson1997": 154, "atkinson": 154, "focu": 154, "ieee": 154, "med": 154, "903": 154, "910": 154, "1997": 154, "doi": 154, "1109": 154, "650886": 154, "dietrich2007": 154, "dietrich": 154, "influenc": 154, "multichannel": 154, "coil": 154, "parallel": 154, "jmri": 154, "375": 154, "385": 154, "2007": 154, "1002": 154, "20969": 154, "ganzetti2016": 154, "ganzetti": 154, "driven": 154, "front": 154, "neuroinform": 154, "2016": 154, "3389": 154, "fninf": 154, "00010": 154, "giannelli2010": 154, "giannelli": 154, "character": 154, "nyquist": 154, "ghost": 154, "clinic": 154, "bandwidth": [154, 157], "j": 154, "app": 154, "clin": 154, "phy": 154, "2010": 154, "1120": 154, "jacmp": 154, "v11i4": 154, "3237": 154, "magnota2006": 154, "magnotta": 154, "va": 154, "friedman": 154, "fbirn": 154, "multicent": 154, "dig": 154, "147": 154, "2006": 154, "1007": 154, "s10278": 154, "006": 154, "0264": 154, "shehzad2015": 154, "shehzad": 154, "connectom": 154, "neurosci": 154, "confer": 154, "abstract": 154, "neuroinformat": 154, "2015": 154, "conf": 154, "fnin": 154, "00047": 154, "union": 154, "power2012": 154, "spuriou": 154, "systemat": 154, "xlm": 154, "mortamet2009": [154, 161], "_1": 154, "frac": 154, "limits_": 154, "x_": 154, "art": 154, "ndarrai": [154, 157], "min_voxel": 154, "max_voxel": 154, "300000": 154, "chi": 154, "onto": 154, "artifactu": 154, "2_n": 154, "2n": 154, "mu_wm": 154, "mu_gm": 154, "sigma_wm": 154, "sigma_gm": 154, "proxi": 154, "inu": 154, "sigma_": 154, "mu_": 154, "sigma_air": 154, "sigma_b": 154, "framemask": 154, "shannon": 154, "energi": 154, "concentr": 154, "sum_": 154, "x_j": 154, "ln": 154, "2_j": 154, "equat": 154, "empti": [154, 165], "insert": 154, "skin": 154, "in_tpm": 154, "in_mni_tpm": 154, "epi_data": 154, "ref_fil": 154, "circl": 154, "intersect": 154, "str": 154, "ball": 154, "footprint": 154, "inferior": 154, "rx": 154, "pitch": 154, "ry": 154, "roll": 154, "rz": 154, "yaw": 154, "remove_mean": 154, "failure_mod": 154, "p": [154, 157], "k_i": 154, "p_": 154, "mu_fg": 154, "sigma_fg": 154, "foreground": 154, "mu_f": 154, "sigma_f": 154, "mad_air": 154, "eq": 154, "rayleigh": 154, "pi": 154, "sometim": 154, "bg": 154, "icv": 154, "sum_i": 154, "cvr": [154, 157, 159, 161, 164, 165], "co2": [154, 165], "inhal": 154, "get_covari": [155, 156], "restrict": 156, "likelihood": 156, "manipul": 157, "list1": 157, "list2": 157, "1rst": 157, "browser": 157, "anoth": 157, "bt": 157, "nt": 157, "tap": 157, "oversampl": 157, "subsect": 157, "section": 157, "repeat": 157, "microtim": 157, "pipeline_definit": [158, 159, 160, 161, 162, 163, 164], "cerebrovascular": [159, 161], "reactiv": 159, "evalu": [159, 164], "autoexport_nodes_paramet": [159, 160, 161, 162, 163, 164], "kwarg": [159, 160, 161, 162, 163, 164, 165], "reserv": 161, "anat_mriqc_pipelin": 162, "irm": 163, "bold_stat": 164, "report_fil": 165, "dict4runtim": 165, "mriqc_group": 165, "canva": 165, "footer": 165, "constructor": 165, "page_count": 165, "break": 165, "flowabl": 165, "ext_dic": 165, "ext": 165, "valid_bool": 165, "in_ext": 165, "verbos": 165, "statu": 165, "tags2del": 165, "db": 165, "tag_to_del": 165, "db_filenam": 165, "dict": 165, "recov": 165, "raw": 165, "files_nam": 165, "sting": 165, "datafram": 165, "panda": 165, "titl": 165, "ylabel": 165, "tabular": 165, "x_grid": 165, "ref_pdf": 165, "fit_pdf": 165, "ref_data": 165, "cutoff_idx": 165, "bla": 165, "out_dir": 165, "5a0f0408bd0c176dbc46088c6ffe279269180f3f": 165, "viz": 165, "l550": 165, "data_1": 165, "data_2": 165, "fig_row": 165, "fig_col": 165, "slice_start": 165, "slice_step": 165, "dyn": 165, "cmap_1": 165, "vmin_1": 165, "vmax_1": 165, "cmap_2": 165, "vmin_2": 165, "vmax_2": 165, "only_nois": 165, "mosaic": 165, "overlaid": 165, "superimpos": 165, "panel": 165, "rgb": 165, "255": 165, "cmap": 165, "gist_rainbow": 165, "rdylbu": 165, "spectral": 165, "rainbow_r": 165, "jet_r": 165, "seismic_r": 165, "bwr_r": 165, "tag_to_add": 165, "field_typ": 165, "visibl": 165, "packag": 166, "subpackag": 166, "info": 166, "process_matlab": 166}, "objects": {"": [[143, 0, 0, "-", "mia_processes"]], "mia_processes": [[144, 0, 0, "-", "bricks"], [143, 0, 0, "-", "info"], [158, 0, 0, "-", "pipelines"], [143, 0, 0, "-", "process_matlab"], [165, 0, 0, "-", "utils"]], "mia_processes.bricks": [[145, 0, 0, "-", "preprocess"], [154, 0, 0, "-", "reports"], [155, 0, 0, "-", "stat"], [157, 0, 0, "-", "tools"]], "mia_processes.bricks.preprocess": [[146, 0, 0, "-", "afni"], [147, 0, 0, "-", "ants"], [148, 0, 0, "-", "dipy"], [149, 0, 0, "-", "freesurfer"], [150, 0, 0, "-", "fsl"], [151, 0, 0, "-", "mrtrix"], [152, 0, 0, "-", "others"], [153, 0, 0, "-", "spm"]], "mia_processes.bricks.preprocess.afni": [[146, 0, 0, "-", "processes"]], "mia_processes.bricks.preprocess.afni.processes": [[146, 1, 1, "", "Automask"], [146, 1, 1, "", "Calc"], [146, 1, 1, "", "CalcDropTRs"], [146, 1, 1, "", "Despike"], [146, 1, 1, "", "FWHMx"], [146, 1, 1, "", "GCOR"], [146, 1, 1, "", "OutlierCount"], [146, 1, 1, "", "QualityIndex"], [146, 1, 1, "", "RefitDeoblique"], [146, 1, 1, "", "SkullStrip"], [146, 1, 1, "", "TShift"], [146, 1, 1, "", "TStatMean"], [146, 1, 1, "", "Volreg"]], "mia_processes.bricks.preprocess.afni.processes.Automask": [[146, 2, 1, "", "__init__"], [146, 2, 1, "", "list_outputs"], [146, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.Calc": [[146, 2, 1, "", "__init__"], [146, 2, 1, "", "list_outputs"], [146, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.CalcDropTRs": [[146, 2, 1, "", "__init__"], [146, 2, 1, "", "list_outputs"], [146, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.Despike": [[146, 2, 1, "", "__init__"], [146, 2, 1, "", "list_outputs"], [146, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.FWHMx": [[146, 2, 1, "", "__init__"], [146, 2, 1, "", "list_outputs"], [146, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.GCOR": [[146, 2, 1, "", "__init__"], [146, 2, 1, "", "list_outputs"], [146, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.OutlierCount": [[146, 2, 1, "", "__init__"], [146, 2, 1, "", "list_outputs"], [146, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.QualityIndex": [[146, 2, 1, "", "__init__"], [146, 2, 1, "", "list_outputs"], [146, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.RefitDeoblique": [[146, 2, 1, "", "__init__"], [146, 2, 1, "", "list_outputs"], [146, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.SkullStrip": [[146, 2, 1, "", "__init__"], [146, 2, 1, "", "list_outputs"], [146, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.TShift": [[146, 2, 1, "", "__init__"], [146, 2, 1, "", "list_outputs"], [146, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.TStatMean": [[146, 2, 1, "", "__init__"], [146, 2, 1, "", "list_outputs"], [146, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.afni.processes.Volreg": [[146, 2, 1, "", "__init__"], [146, 2, 1, "", "list_outputs"], [146, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.ants": [[147, 0, 0, "-", "processes"]], "mia_processes.bricks.preprocess.ants.processes": [[147, 1, 1, "", "AffineInitializer"], [147, 1, 1, "", "ApplyTransforms"], [147, 1, 1, "", "N4BiasFieldCorrection"], [147, 1, 1, "", "Registration"]], "mia_processes.bricks.preprocess.ants.processes.AffineInitializer": [[147, 2, 1, "", "__init__"], [147, 2, 1, "", "list_outputs"], [147, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.ants.processes.ApplyTransforms": [[147, 2, 1, "", "__init__"], [147, 2, 1, "", "list_outputs"], [147, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.ants.processes.N4BiasFieldCorrection": [[147, 2, 1, "", "__init__"], [147, 2, 1, "", "list_outputs"], [147, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.ants.processes.Registration": [[147, 2, 1, "", "__init__"], [147, 2, 1, "", "list_outputs"], [147, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.dipy": [[148, 0, 0, "-", "processes"]], "mia_processes.bricks.preprocess.dipy.processes": [[148, 1, 1, "", "ComputeDKI"], [148, 1, 1, "", "Denoise"]], "mia_processes.bricks.preprocess.dipy.processes.ComputeDKI": [[148, 2, 1, "", "__init__"], [148, 2, 1, "", "list_outputs"], [148, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.dipy.processes.Denoise": [[148, 2, 1, "", "__init__"], [148, 2, 1, "", "list_outputs"], [148, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.freesurfer": [[149, 0, 0, "-", "processes"]], "mia_processes.bricks.preprocess.freesurfer.processes": [[149, 1, 1, "", "Binarize"], [149, 1, 1, "", "SynthStrip"], [149, 1, 1, "", "SynthStripMriqc"]], "mia_processes.bricks.preprocess.freesurfer.processes.Binarize": [[149, 2, 1, "", "__init__"], [149, 2, 1, "", "list_outputs"], [149, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.freesurfer.processes.SynthStrip": [[149, 2, 1, "", "__init__"], [149, 2, 1, "", "list_outputs"], [149, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc": [[149, 1, 1, "", "ConvBlock"], [149, 1, 1, "", "StripModel"], [149, 2, 1, "", "__init__"], [149, 2, 1, "", "conform"], [149, 2, 1, "", "list_outputs"], [149, 2, 1, "", "resample_like"], [149, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.ConvBlock": [[149, 2, 1, "", "__init__"], [149, 2, 1, "", "forward"], [149, 3, 1, "", "training"]], "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.StripModel": [[149, 2, 1, "", "__init__"], [149, 2, 1, "", "forward"], [149, 3, 1, "", "training"]], "mia_processes.bricks.preprocess.fsl": [[150, 0, 0, "-", "processes"]], "mia_processes.bricks.preprocess.fsl.processes": [[150, 1, 1, "", "BetSurfacesExtraction"], [150, 1, 1, "", "ConvertXFM"], [150, 1, 1, "", "EpiReg"], [150, 1, 1, "", "ExtractROI"], [150, 1, 1, "", "FastSegment"], [150, 1, 1, "", "Flirt"], [150, 1, 1, "", "Smooth"]], "mia_processes.bricks.preprocess.fsl.processes.BetSurfacesExtraction": [[150, 2, 1, "", "__init__"], [150, 2, 1, "", "list_outputs"], [150, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.fsl.processes.ConvertXFM": [[150, 2, 1, "", "__init__"], [150, 2, 1, "", "list_outputs"], [150, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.fsl.processes.EpiReg": [[150, 2, 1, "", "__init__"], [150, 2, 1, "", "list_outputs"], [150, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.fsl.processes.ExtractROI": [[150, 2, 1, "", "__init__"], [150, 2, 1, "", "list_outputs"], [150, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.fsl.processes.FastSegment": [[150, 2, 1, "", "__init__"], [150, 2, 1, "", "list_outputs"], [150, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.fsl.processes.Flirt": [[150, 2, 1, "", "__init__"], [150, 2, 1, "", "list_outputs"], [150, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.fsl.processes.Smooth": [[150, 2, 1, "", "__init__"], [150, 2, 1, "", "list_outputs"], [150, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix": [[151, 0, 0, "-", "processes"]], "mia_processes.bricks.preprocess.mrtrix.processes": [[151, 1, 1, "", "ConstrainedSphericalDeconvolution"], [151, 1, 1, "", "DWIBiasCorrect"], [151, 1, 1, "", "DWIBrainMask"], [151, 1, 1, "", "DWICat"], [151, 1, 1, "", "DWIDenoise"], [151, 1, 1, "", "DWIExtract"], [151, 1, 1, "", "DWIPreproc"], [151, 1, 1, "", "EditingTrack"], [151, 1, 1, "", "FilteringTrack"], [151, 1, 1, "", "FitTensor"], [151, 1, 1, "", "Generate5tt2gmwmi"], [151, 1, 1, "", "Generate5ttfsl"], [151, 1, 1, "", "MRCat"], [151, 1, 1, "", "MRConvert"], [151, 1, 1, "", "MRDeGibbs"], [151, 1, 1, "", "MRMath"], [151, 1, 1, "", "MRTransform"], [151, 1, 1, "", "MTNormalise"], [151, 1, 1, "", "ResponseSDDhollander"], [151, 1, 1, "", "SphericalHarmonicExtraction"], [151, 1, 1, "", "TensorMetrics"], [151, 1, 1, "", "Tractography"], [151, 1, 1, "", "TransformFSLConvert"]], "mia_processes.bricks.preprocess.mrtrix.processes.ConstrainedSphericalDeconvolution": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "list_outputs"], [151, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.DWIBiasCorrect": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "list_outputs"], [151, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.DWIBrainMask": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "list_outputs"], [151, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.DWICat": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "list_outputs"], [151, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.DWIDenoise": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "list_outputs"], [151, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.DWIExtract": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "list_outputs"], [151, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.DWIPreproc": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "list_outputs"], [151, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.EditingTrack": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "list_outputs"], [151, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.FilteringTrack": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "list_outputs"], [151, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.FitTensor": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "list_outputs"], [151, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.Generate5tt2gmwmi": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "list_outputs"], [151, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.Generate5ttfsl": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "list_outputs"], [151, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.MRCat": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "list_outputs"], [151, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.MRConvert": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "list_outputs"], [151, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.MRDeGibbs": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "list_outputs"], [151, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.MRMath": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "list_outputs"], [151, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.MRTransform": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "list_outputs"], [151, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.MTNormalise": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "list_outputs"], [151, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.ResponseSDDhollander": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "list_outputs"], [151, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.SphericalHarmonicExtraction": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "list_outputs"], [151, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.TensorMetrics": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "list_outputs"], [151, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.Tractography": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "list_outputs"], [151, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.mrtrix.processes.TransformFSLConvert": [[151, 2, 1, "", "__init__"], [151, 2, 1, "", "list_outputs"], [151, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others": [[152, 0, 0, "-", "processing"]], "mia_processes.bricks.preprocess.others.processing": [[152, 1, 1, "", "ApplyBiasCorrection"], [152, 1, 1, "", "ArtifactMask"], [152, 1, 1, "", "Binarize"], [152, 1, 1, "", "ConformImage"], [152, 1, 1, "", "ConvROI"], [152, 1, 1, "", "Enhance"], [152, 1, 1, "", "EstimateSNR"], [152, 1, 1, "", "ExtractROIbyLabel"], [152, 1, 1, "", "ExtractSignalROI"], [152, 1, 1, "", "GradientThreshold"], [152, 1, 1, "", "Harmonize"], [152, 1, 1, "", "IntensityClip"], [152, 1, 1, "", "Mask"], [152, 1, 1, "", "NonSteadyStateDetector"], [152, 1, 1, "", "Resample1"], [152, 1, 1, "", "Resample2"], [152, 1, 1, "", "RotationMask"], [152, 1, 1, "", "Sanitize"], [152, 1, 1, "", "TSNR"], [152, 1, 1, "", "TemplateFromTemplateFlow"], [152, 1, 1, "", "Threshold"], [152, 4, 1, "", "artifact_mask"], [152, 4, 1, "", "is_outlier"], [152, 4, 1, "", "threshold"]], "mia_processes.bricks.preprocess.others.processing.ApplyBiasCorrection": [[152, 2, 1, "", "__init__"], [152, 2, 1, "", "list_outputs"], [152, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.ArtifactMask": [[152, 2, 1, "", "__init__"], [152, 2, 1, "", "list_outputs"], [152, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.Binarize": [[152, 2, 1, "", "__init__"], [152, 2, 1, "", "list_outputs"], [152, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.ConformImage": [[152, 2, 1, "", "__init__"], [152, 2, 1, "", "list_outputs"], [152, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.ConvROI": [[152, 2, 1, "", "__init__"], [152, 2, 1, "", "list_outputs"], [152, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.Enhance": [[152, 2, 1, "", "__init__"], [152, 2, 1, "", "list_outputs"], [152, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.EstimateSNR": [[152, 2, 1, "", "__init__"], [152, 2, 1, "", "list_outputs"], [152, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.ExtractROIbyLabel": [[152, 2, 1, "", "__init__"], [152, 2, 1, "", "list_outputs"], [152, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.ExtractSignalROI": [[152, 2, 1, "", "__init__"], [152, 2, 1, "", "list_outputs"], [152, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.GradientThreshold": [[152, 2, 1, "", "__init__"], [152, 2, 1, "", "list_outputs"], [152, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.Harmonize": [[152, 2, 1, "", "__init__"], [152, 2, 1, "", "list_outputs"], [152, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.IntensityClip": [[152, 2, 1, "", "__init__"], [152, 2, 1, "", "list_outputs"], [152, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.Mask": [[152, 2, 1, "", "__init__"], [152, 2, 1, "", "list_outputs"], [152, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.NonSteadyStateDetector": [[152, 2, 1, "", "__init__"], [152, 2, 1, "", "list_outputs"], [152, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.Resample1": [[152, 2, 1, "", "__init__"], [152, 2, 1, "", "list_outputs"], [152, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.Resample2": [[152, 2, 1, "", "__init__"], [152, 2, 1, "", "list_outputs"], [152, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.RotationMask": [[152, 2, 1, "", "__init__"], [152, 2, 1, "", "list_outputs"], [152, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.Sanitize": [[152, 2, 1, "", "__init__"], [152, 2, 1, "", "list_outputs"], [152, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.TSNR": [[152, 2, 1, "", "__init__"], [152, 2, 1, "", "list_outputs"], [152, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.TemplateFromTemplateFlow": [[152, 2, 1, "", "__init__"], [152, 2, 1, "", "list_outputs"], [152, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.others.processing.Threshold": [[152, 2, 1, "", "__init__"], [152, 2, 1, "", "list_outputs"], [152, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.spm": [[153, 0, 0, "-", "spatial_preprocessing"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing": [[153, 1, 1, "", "Coregister"], [153, 1, 1, "", "GM_WM_Normalize"], [153, 1, 1, "", "NewSegment"], [153, 1, 1, "", "Normalize12"], [153, 1, 1, "", "Realign"], [153, 1, 1, "", "SliceTiming"], [153, 1, 1, "", "Smooth"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Coregister": [[153, 2, 1, "", "__init__"], [153, 2, 1, "", "list_outputs"], [153, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing.GM_WM_Normalize": [[153, 2, 1, "", "__init__"], [153, 2, 1, "", "list_outputs"], [153, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing.NewSegment": [[153, 2, 1, "", "__init__"], [153, 2, 1, "", "list_outputs"], [153, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Normalize12": [[153, 2, 1, "", "__init__"], [153, 2, 1, "", "list_outputs"], [153, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Realign": [[153, 2, 1, "", "__init__"], [153, 2, 1, "", "list_outputs"], [153, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing.SliceTiming": [[153, 2, 1, "", "__init__"], [153, 2, 1, "", "list_outputs"], [153, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Smooth": [[153, 2, 1, "", "__init__"], [153, 2, 1, "", "list_outputs"], [153, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports": [[154, 0, 0, "-", "processes"], [154, 0, 0, "-", "reporting"]], "mia_processes.bricks.reports.processes": [[154, 1, 1, "", "AnatIQMs"], [154, 1, 1, "", "BoldIQMs"], [154, 1, 1, "", "BoldIQMsPlot"], [154, 1, 1, "", "CarpetParcellation"], [154, 1, 1, "", "ComputeDVARS"], [154, 1, 1, "", "FramewiseDisplacement"], [154, 1, 1, "", "Mean_stdDev_calc"], [154, 1, 1, "", "PlotSignalROI"], [154, 1, 1, "", "Result_collector"], [154, 1, 1, "", "Spikes"], [154, 4, 1, "", "art_qi1"], [154, 4, 1, "", "art_qi2"], [154, 4, 1, "", "cjv"], [154, 4, 1, "", "cnr"], [154, 4, 1, "", "efc"], [154, 4, 1, "", "fber"], [154, 4, 1, "", "find_peaks"], [154, 4, 1, "", "find_spikes"], [154, 4, 1, "", "fuzzy_jaccard"], [154, 4, 1, "", "gsr"], [154, 4, 1, "", "image_binary_dilation"], [154, 4, 1, "", "normalize_mc_params"], [154, 4, 1, "", "regress_poly"], [154, 4, 1, "", "rpve"], [154, 4, 1, "", "snr"], [154, 4, 1, "", "snr_dietrich"], [154, 4, 1, "", "summary_stats"], [154, 4, 1, "", "volume_fraction"], [154, 4, 1, "", "wm2max"]], "mia_processes.bricks.reports.processes.AnatIQMs": [[154, 2, 1, "", "__init__"], [154, 2, 1, "", "list_outputs"], [154, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.processes.BoldIQMs": [[154, 2, 1, "", "__init__"], [154, 2, 1, "", "list_outputs"], [154, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.processes.BoldIQMsPlot": [[154, 2, 1, "", "__init__"], [154, 2, 1, "", "list_outputs"], [154, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.processes.CarpetParcellation": [[154, 2, 1, "", "__init__"], [154, 2, 1, "", "list_outputs"], [154, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.processes.ComputeDVARS": [[154, 2, 1, "", "__init__"], [154, 2, 1, "", "list_outputs"], [154, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.processes.FramewiseDisplacement": [[154, 2, 1, "", "__init__"], [154, 2, 1, "", "list_outputs"], [154, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.processes.Mean_stdDev_calc": [[154, 2, 1, "", "__init__"], [154, 2, 1, "", "list_outputs"], [154, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.processes.PlotSignalROI": [[154, 2, 1, "", "__init__"], [154, 2, 1, "", "list_outputs"], [154, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.processes.Result_collector": [[154, 2, 1, "", "__init__"], [154, 2, 1, "", "list_outputs"], [154, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.processes.Spikes": [[154, 2, 1, "", "__init__"], [154, 2, 1, "", "list_outputs"], [154, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.reporting": [[154, 1, 1, "", "ReportAnatMriqc"], [154, 1, 1, "", "ReportCO2inhalCvr"], [154, 1, 1, "", "ReportFuncMriqc"], [154, 1, 1, "", "ReportGroupMriqc"]], "mia_processes.bricks.reports.reporting.ReportAnatMriqc": [[154, 2, 1, "", "__init__"], [154, 2, 1, "", "list_outputs"], [154, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.reporting.ReportCO2inhalCvr": [[154, 2, 1, "", "__init__"], [154, 2, 1, "", "list_outputs"], [154, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.reporting.ReportFuncMriqc": [[154, 2, 1, "", "__init__"], [154, 2, 1, "", "list_outputs"], [154, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.reports.reporting.ReportGroupMriqc": [[154, 2, 1, "", "__init__"], [154, 2, 1, "", "list_outputs"], [154, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.stat": [[156, 0, 0, "-", "spm"]], "mia_processes.bricks.stat.spm": [[156, 0, 0, "-", "model"]], "mia_processes.bricks.stat.spm.model": [[156, 1, 1, "", "EstimateContrast"], [156, 1, 1, "", "EstimateModel"], [156, 1, 1, "", "Level1Design"], [156, 1, 1, "", "MultipleRegressionDesign"], [156, 1, 1, "", "OneSampleTTestDesign"], [156, 1, 1, "", "PairedTTestDesign"], [156, 1, 1, "", "TwoSampleTTestDesign"], [156, 4, 1, "", "get_covariates"]], "mia_processes.bricks.stat.spm.model.EstimateContrast": [[156, 2, 1, "", "__init__"], [156, 2, 1, "", "list_outputs"], [156, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.stat.spm.model.EstimateModel": [[156, 2, 1, "", "__init__"], [156, 2, 1, "", "list_outputs"], [156, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.stat.spm.model.Level1Design": [[156, 2, 1, "", "__init__"], [156, 2, 1, "", "list_outputs"], [156, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.stat.spm.model.MultipleRegressionDesign": [[156, 2, 1, "", "__init__"], [156, 2, 1, "", "list_outputs"], [156, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.stat.spm.model.OneSampleTTestDesign": [[156, 2, 1, "", "__init__"], [156, 2, 1, "", "list_outputs"], [156, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.stat.spm.model.PairedTTestDesign": [[156, 2, 1, "", "__init__"], [156, 2, 1, "", "list_outputs"], [156, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.stat.spm.model.TwoSampleTTestDesign": [[156, 2, 1, "", "__init__"], [156, 2, 1, "", "list_outputs"], [156, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools": [[157, 0, 0, "-", "tools"]], "mia_processes.bricks.tools.tools": [[157, 1, 1, "", "Concat_to_list"], [157, 1, 1, "", "Concat_to_list_of_list"], [157, 1, 1, "", "Delete_data"], [157, 1, 1, "", "Files_To_List"], [157, 1, 1, "", "Filter_Files_List"], [157, 1, 1, "", "Find_In_List"], [157, 1, 1, "", "Get_Conditions_From_csv"], [157, 1, 1, "", "Get_Patient_Name"], [157, 1, 1, "", "Import_Data"], [157, 1, 1, "", "Input_Filter"], [157, 1, 1, "", "List_Duplicate"], [157, 1, 1, "", "List_To_File"], [157, 1, 1, "", "Make_A_List"], [157, 1, 1, "", "Make_CVR_reg_physio"]], "mia_processes.bricks.tools.tools.Concat_to_list": [[157, 2, 1, "", "__init__"], [157, 2, 1, "", "list_outputs"], [157, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Concat_to_list_of_list": [[157, 2, 1, "", "__init__"], [157, 2, 1, "", "list_outputs"], [157, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Delete_data": [[157, 2, 1, "", "__init__"], [157, 2, 1, "", "list_outputs"], [157, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Files_To_List": [[157, 2, 1, "", "__init__"], [157, 2, 1, "", "list_outputs"], [157, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Filter_Files_List": [[157, 2, 1, "", "__init__"], [157, 2, 1, "", "list_outputs"], [157, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Find_In_List": [[157, 2, 1, "", "__init__"], [157, 2, 1, "", "list_outputs"], [157, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Get_Conditions_From_csv": [[157, 2, 1, "", "__init__"], [157, 2, 1, "", "list_outputs"], [157, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Get_Patient_Name": [[157, 2, 1, "", "__init__"], [157, 2, 1, "", "list_outputs"], [157, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Import_Data": [[157, 2, 1, "", "__init__"], [157, 2, 1, "", "list_outputs"], [157, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Input_Filter": [[157, 2, 1, "", "__init__"], [157, 2, 1, "", "list_outputs"], [157, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.List_Duplicate": [[157, 2, 1, "", "__init__"], [157, 2, 1, "", "list_outputs"], [157, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.List_To_File": [[157, 2, 1, "", "__init__"], [157, 2, 1, "", "list_outputs"], [157, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Make_A_List": [[157, 2, 1, "", "__init__"], [157, 2, 1, "", "list_outputs"], [157, 2, 1, "", "run_process_mia"]], "mia_processes.bricks.tools.tools.Make_CVR_reg_physio": [[157, 2, 1, "", "__init__"], [157, 2, 1, "", "gaussfir"], [157, 2, 1, "", "gfb_conv"], [157, 2, 1, "", "list_outputs"], [157, 2, 1, "", "run_process_mia"], [157, 2, 1, "", "spm_hrf"]], "mia_processes.info": [[143, 4, 1, "", "get_gitversion"]], "mia_processes.pipelines": [[159, 0, 0, "-", "CerebVascularReact"], [160, 0, 0, "-", "DWITractography"], [161, 0, 0, "-", "preprocess"], [162, 0, 0, "-", "qualityControl"], [163, 0, 0, "-", "reports"], [164, 0, 0, "-", "stat"]], "mia_processes.pipelines.CerebVascularReact": [[159, 0, 0, "-", "co2_inhalation"]], "mia_processes.pipelines.CerebVascularReact.co2_inhalation": [[159, 1, 1, "", "CO2_inhalation"]], "mia_processes.pipelines.CerebVascularReact.co2_inhalation.CO2_inhalation": [[159, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.DWITractography": [[160, 0, 0, "-", "dwi_whole_brain_tractography"]], "mia_processes.pipelines.DWITractography.dwi_whole_brain_tractography": [[160, 1, 1, "", "Dwi_whole_brain_tractography"]], "mia_processes.pipelines.DWITractography.dwi_whole_brain_tractography.Dwi_whole_brain_tractography": [[160, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess": [[161, 0, 0, "-", "anat_airmask"], [161, 0, 0, "-", "anat_headmask"], [161, 0, 0, "-", "anat_mni_tpms"], [161, 0, 0, "-", "anat_skullstrip"], [161, 0, 0, "-", "anat_skullstrip_synthstrip"], [161, 0, 0, "-", "anat_spatial_norm"], [161, 0, 0, "-", "bold_hmc"], [161, 0, 0, "-", "bold_mni_align"], [161, 0, 0, "-", "bold_spatial_preprocessing1"], [161, 0, 0, "-", "bold_spatial_preprocessing2"], [161, 0, 0, "-", "dwi_fod_msmt_csd"], [161, 0, 0, "-", "dwi_preprocessing"], [161, 0, 0, "-", "spatial_mask"]], "mia_processes.pipelines.preprocess.anat_airmask": [[161, 1, 1, "", "Anat_airmask"]], "mia_processes.pipelines.preprocess.anat_airmask.Anat_airmask": [[161, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.anat_headmask": [[161, 1, 1, "", "Anat_headmask"]], "mia_processes.pipelines.preprocess.anat_headmask.Anat_headmask": [[161, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.anat_mni_tpms": [[161, 1, 1, "", "Anat_mni_tpms"]], "mia_processes.pipelines.preprocess.anat_mni_tpms.Anat_mni_tpms": [[161, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.anat_skullstrip": [[161, 1, 1, "", "Anat_skullstrip"]], "mia_processes.pipelines.preprocess.anat_skullstrip.Anat_skullstrip": [[161, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip": [[161, 1, 1, "", "Anat_skullstrip_synthstrip"]], "mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip.Anat_skullstrip_synthstrip": [[161, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.anat_spatial_norm": [[161, 1, 1, "", "Anat_spatial_norm"]], "mia_processes.pipelines.preprocess.anat_spatial_norm.Anat_spatial_norm": [[161, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.bold_hmc": [[161, 1, 1, "", "Bold_hmc"]], "mia_processes.pipelines.preprocess.bold_hmc.Bold_hmc": [[161, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.bold_mni_align": [[161, 1, 1, "", "Bold_mni_align"]], "mia_processes.pipelines.preprocess.bold_mni_align.Bold_mni_align": [[161, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.bold_spatial_preprocessing1": [[161, 1, 1, "", "Bold_spatial_preprocessing1"]], "mia_processes.pipelines.preprocess.bold_spatial_preprocessing1.Bold_spatial_preprocessing1": [[161, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.bold_spatial_preprocessing2": [[161, 1, 1, "", "Bold_spatial_preprocessing2"]], "mia_processes.pipelines.preprocess.bold_spatial_preprocessing2.Bold_spatial_preprocessing2": [[161, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.dwi_fod_msmt_csd": [[161, 1, 1, "", "Dwi_fod_msmt_csd"]], "mia_processes.pipelines.preprocess.dwi_fod_msmt_csd.Dwi_fod_msmt_csd": [[161, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.dwi_preprocessing": [[161, 1, 1, "", "Dwi_preprocessing"]], "mia_processes.pipelines.preprocess.dwi_preprocessing.Dwi_preprocessing": [[161, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.preprocess.spatial_mask": [[161, 1, 1, "", "Spatial_mask"]], "mia_processes.pipelines.preprocess.spatial_mask.Spatial_mask": [[161, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.qualityControl": [[162, 0, 0, "-", "anat_mriqc"], [162, 0, 0, "-", "bold_mriqc"]], "mia_processes.pipelines.qualityControl.anat_mriqc": [[162, 1, 1, "", "Anat_mriqc"]], "mia_processes.pipelines.qualityControl.anat_mriqc.Anat_mriqc": [[162, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.qualityControl.bold_mriqc": [[162, 1, 1, "", "Bold_mriqc"]], "mia_processes.pipelines.qualityControl.bold_mriqc.Bold_mriqc": [[162, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.reports": [[163, 0, 0, "-", "bold_iqms"], [163, 0, 0, "-", "extract_roi_param"]], "mia_processes.pipelines.reports.bold_iqms": [[163, 1, 1, "", "Bold_iqms"]], "mia_processes.pipelines.reports.bold_iqms.Bold_iqms": [[163, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.reports.extract_roi_param": [[163, 1, 1, "", "Extract_roi_param"]], "mia_processes.pipelines.reports.extract_roi_param.Extract_roi_param": [[163, 2, 1, "", "pipeline_definition"]], "mia_processes.pipelines.stat": [[164, 0, 0, "-", "bold_stat_cvr"]], "mia_processes.pipelines.stat.bold_stat_cvr": [[164, 1, 1, "", "Bold_stat_cvr"]], "mia_processes.pipelines.stat.bold_stat_cvr.Bold_stat_cvr": [[164, 2, 1, "", "pipeline_definition"]], "mia_processes.process_matlab": [[143, 1, 1, "", "ProcessMatlab"]], "mia_processes.process_matlab.ProcessMatlab": [[143, 2, 1, "", "__init__"], [143, 2, 1, "", "add_exit"], [143, 2, 1, "", "add_path"], [143, 2, 1, "", "change_directory"], [143, 2, 1, "", "display_parameter"], [143, 2, 1, "", "run"], [143, 2, 1, "", "set_global_variable"], [143, 2, 1, "", "set_variable"]], "mia_processes.utils": [[165, 0, 0, "-", "report"], [165, 0, 0, "-", "tools"]], "mia_processes.utils.report": [[165, 1, 1, "", "Report"]], "mia_processes.utils.report.Report": [[165, 2, 1, "", "__init__"], [165, 2, 1, "", "co2_inhal_cvr_make_report"], [165, 2, 1, "", "get_iqms_data"], [165, 2, 1, "", "mriqc_anat_make_report"], [165, 2, 1, "", "mriqc_func_make_report"], [165, 2, 1, "", "mriqc_group_make_report"]], "mia_processes.utils.tools": [[165, 1, 1, "", "PageNumCanvas"], [165, 1, 1, "", "ReportLine"], [165, 4, 1, "", "checkFileExt"], [165, 4, 1, "", "check_orientations"], [165, 4, 1, "", "del_dbFieldValue"], [165, 4, 1, "", "dict4runtime_update"], [165, 4, 1, "", "get_dbFieldValue"], [165, 4, 1, "", "mriqc_get_all_run"], [165, 4, 1, "", "mriqc_group_iqms_tsv"], [165, 4, 1, "", "plot_boxplot_points"], [165, 4, 1, "", "plot_qi2"], [165, 4, 1, "", "plot_segmentation"], [165, 4, 1, "", "plot_slice_planes"], [165, 4, 1, "", "set_dbFieldValue"]], "mia_processes.utils.tools.PageNumCanvas": [[165, 2, 1, "", "__init__"], [165, 2, 1, "", "draw_page_number"], [165, 2, 1, "", "save"], [165, 2, 1, "", "showPage"]], "mia_processes.utils.tools.ReportLine": [[165, 2, 1, "", "__init__"], [165, 2, 1, "", "draw"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"]}, "titleterms": {"automask": 0, "brick": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157], "creat": [0, 101, 102, 103, 104, 126, 134], "brain": [0, 9, 26, 27, 32, 81, 121, 126], "onli": [0, 75], "mask": [0, 5, 32, 40, 54, 63, 65, 69, 73, 87, 122, 123, 135, 140], "imag": [0, 9, 10, 11, 14, 16, 18, 24, 25, 27, 28, 31, 32, 36, 40, 41, 42, 43, 45, 46, 53, 55, 56, 57, 58, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 75, 77, 78, 79, 80, 84, 85, 123, 125, 128, 129, 135, 136, 137, 139], "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 22, 23, 25, 26, 27, 36, 48, 53, 59, 60, 61, 62, 63, 67, 68, 81, 91, 93, 99, 123, 126, 127, 133, 136, 137, 141], "afni": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 146], "3dautomask": 0, "calc": 1, "voxel": [1, 5, 49], "arithmet": 1, "3d": [1, 3, 6, 7, 12, 28, 80, 81], "dataset": [1, 2, 3, 6, 7, 8, 12], "1": [1, 122], "3dcalc": [1, 2], "calcdroptr": 2, "drop": 2, "volum": [2, 6, 7, 12, 19, 28, 35, 80], "bold": [2, 10, 11, 66, 70, 79, 128, 137, 139], "despik": 3, "remov": [3, 44], "spike": [3, 97], "from": [3, 8, 9, 12, 25, 32, 35, 50, 60, 61, 62, 72, 75, 78, 83, 87, 91, 107, 108, 109, 110, 115, 116, 117, 122, 123, 135, 136, 137, 139], "time": [3, 7, 10, 71, 78, 79], "input": [3, 6, 12, 14, 19, 43, 53, 55, 62, 63, 70, 106], "3ddespik": 3, "fwhmx": 4, "comput": [4, 5, 6, 7, 45, 50, 54, 62, 69, 71, 77, 84, 85, 88, 97, 122, 123, 139], "fwhm": 4, "gcor": 5, "averag": 5, "correl": 5, "between": [5, 43, 52], "everi": [5, 79], "other": [5, 152], "over": 5, "ani": 5, "given": [5, 55, 73], "outliercount": 6, "3dtoutcount": 6, "outlier": 6, "all": [6, 76, 108, 117], "sub": [6, 7], "each": [6, 7, 12, 49, 96, 106], "tr": [6, 7], "qualityindex": 7, "qualiti": [7, 84, 85, 136, 137, 139], "index": 7, "3dtqual": 7, "refitdeobliqu": 8, "deobliqu": 8, "ie": 8, "transform": [8, 13, 14, 23, 46, 52], "obliqu": 8, "cardin": 8, "3drefit": 8, "skullstrip": 9, "3dskullstrip": 9, "t1": 9, "weight": 9, "mri": [9, 81], "extract": [9, 22, 25, 35, 43, 49, 60, 61, 126], "surround": 9, "tissu": [9, 26, 41, 47, 124, 134], "tshift": 10, "slice": [10, 79, 109], "correct": [10, 15, 31, 53, 76, 125, 128], "mean": [10, 11, 18, 90, 129, 140], "option": [10, 11, 43], "3dtshift": 10, "tstatmean": 11, "3dtstat": 11, "volreg": 12, "regist": [12, 24, 124, 129], "base": [12, 141], "3dvolreg": 12, "affineiniti": 13, "initi": 13, "an": [13, 14, 19, 25, 53, 65, 67, 77, 105, 106, 130, 131], "affin": [13, 27], "ant": [13, 14, 15, 16, 147], "affineinit": 13, "applytransform": 14, "accord": 14, "refer": [14, 67, 68, 79, 113, 136, 137, 139, 154], "set": [14, 68, 75], "n4biasfieldcorrect": 15, "n4": 15, "bia": [15, 53, 76, 125], "field": [15, 31, 53], "registr": [16, 27, 129], "computedki": 17, "reconstruct": 17, "diffus": [17, 36, 39], "signal": [17, 61, 91], "kurtosi": 17, "tensor": [17, 39, 50], "model": [17, 76, 77, 99, 100, 156], "denois": [18, 34, 123], "non": [18, 66], "local": 18, "algorithm": [18, 48], "nlmean": 18, "binar": [19, 55], "encod": [19, 133], "surfac": [19, 22], "file": [19, 37, 43, 53, 59, 60, 61, 91, 96, 108, 110, 115, 116], "synthstrip": [20, 21, 126], "synthstripmriqc": 21, "skull": [21, 22, 123, 125], "strip": [21, 123, 125], "tool": [21, 36, 157, 165], "mri_synthstrip": 21, "freesurf": [21, 126, 149], "done": 21, "mriqc": [21, 84, 85, 92, 94, 95, 136, 137], "v22": [21, 84, 85, 136, 137], "06": [21, 84, 85, 136, 137], "betsurfacesextract": 22, "inskul": 22, "outskul": 22, "outskin": 22, "bet": 22, "fsl": [22, 23, 25, 26, 27, 36, 41, 52, 150], "convertxfm": 23, "modifi": 23, "matrix": [23, 52], "convert_xfm": 23, "epireg": 24, "epi": [24, 87, 129], "structur": [24, 122, 123, 125, 136], "extractroi": 25, "region": [25, 96], "interest": [25, 96, 98], "roi": [25, 60, 61, 91, 140], "fslroi": 25, "fastseg": 26, "segment": [26, 41, 59, 60, 61, 62, 76, 81, 82, 91, 135], "fast": 26, "flirt": 27, "linear": 27, "intra": 27, "inter": 27, "modal": [27, 74], "smooth": [28, 80], "gaussian": [28, 80], "computebrainvolum": 29, "constrainedsphericaldeconvolut": 30, "estim": [30, 39, 48, 59, 98, 99, 132], "fibr": 30, "orient": [30, 132], "distribut": [30, 132], "fod": [30, 132], "dwibiascorrect": 31, "perform": [31, 36, 37, 43, 51, 52], "b1": 31, "inhomogen": 31, "dwi": [31, 32, 33, 34, 35, 132, 133, 134], "dwibrainmask": 32, "gener": [32, 40, 41, 87, 92, 93, 94, 95, 96, 108, 115, 116, 117, 118], "whole": [32, 81], "dwicat": 33, "concaten": [33, 42, 105], "multipl": [33, 101], "seri": [33, 71, 78], "dwidenois": 34, "data": [34, 35, 38, 92, 94, 96, 107, 113, 114, 122, 130, 131, 136, 137], "dwiextract": 35, "shell": 35, "b": 35, "0": 35, "dwipreproc": 36, "pre": [36, 130, 131], "process": [36, 130, 131, 146, 147, 148, 149, 150, 151, 152, 154], "": [36, 48, 52, 119], "topup": 36, "eddi": 36, "editingtrack": 37, "variou": [37, 140], "edit": 37, "oper": 37, "track": [37, 38], "filteringtrack": 38, "filter": [38, 114], "fittensor": 39, "generate5tt2gmwmi": 40, "appropri": 40, "seed": 40, "streamlin": [40, 51], "grei": [40, 75, 135], "matter": [40, 63, 75, 135, 140], "white": [40, 63, 75], "interfac": 40, "generate5ttfsl": 41, "five": 41, "type": [41, 43], "5tt": 41, "mrcat": 42, "sever": 42, "one": [42, 57, 102, 109], "mrconvert": 43, "convers": [43, 52], "differ": [43, 74], "subset": 43, "mrdegibb": 44, "gibb": 44, "ring": 44, "artifact": [44, 54, 122], "mrmath": 45, "summari": [45, 96], "statist": 45, "intens": [45, 47, 64], "along": 45, "specifi": 45, "axi": 45, "singl": [45, 116], "mrtransform": 46, "appli": [46, 53, 55, 65, 77], "spatial": [46, 76, 77, 127], "reslic": 46, "mtnormalis": 47, "multi": 47, "inform": 47, "log": 47, "domain": 47, "normalis": [47, 75, 76], "responsesddholland": 48, "respons": 48, "function": [48, 49, 85, 94, 129, 137, 139], "spheric": [48, 49], "deconvolut": 48, "dholland": 48, "sphericalharmonicextract": 49, "peak": 49, "harmon": [49, 63], "tensormetr": 50, "metric": [50, 84, 85, 136, 137, 139], "tractographi": [51, 121], "transformfslconvert": 52, "format": 52, "mrtrix3": 52, "applybiascorrect": 53, "artifactmask": 54, "lower": 55, "threshold": [55, 62, 73], "conformimag": 56, "conform": 56, "t1w": [56, 134, 136], "convroi": 57, "convolut": 57, "enhanc": 58, "estimatesnr": 59, "snr": [59, 71], "extractroibylabel": 60, "specif": [60, 100], "label": [60, 61, 82, 83, 91], "extractsignalroi": 61, "gradientthreshold": 62, "histogram": 62, "magnitud": 62, "gradient": 62, "intensityclip": 64, "clip": 64, "rang": 64, "prescrib": 64, "percentil": 64, "binari": [65, 73], "nonsteadydetector": 66, "detect": 66, "steadi": 66, "state": 66, "begin": 66, "4d": 66, "resample1": 67, "resampl": 67, "resolut": [67, 68], "nilearn": [67, 68], "resample_to_img": [67, 68], "resample2": 68, "rotationmask": 69, "rotat": [69, 122], "sanit": 70, "tsnr": 71, "cours": 71, "templatefromtemplateflow": 72, "get": [72, 82, 83, 124, 136, 137], "templat": [72, 124, 127], "templateflow": 72, "make": [73, 90, 105, 106], "coregist": 74, "align": [74, 77], "togeth": 74, "scan": 74, "gm_wm_normal": 75, "newseg": 76, "same": [76, 78], "normalize12": 77, "deform": 77, "best": 77, "atla": 77, "necessari": 77, "thi": [77, 115], "normal": [77, 127], "realign": 78, "acquir": 78, "subject": [78, 124], "slicetim": 79, "bring": 79, "back": 79, "assemblynetdock": 81, "assemblynet": [81, 82, 83], "volbrain": 81, "getlabel": 82, "labelscorrespond": 83, "name": [83, 108, 115], "anatiqm": 84, "anatom": [84, 92, 136], "iqm": [84, 85, 136, 137, 139], "defin": [84, 85], "boldqm": 85, "boldiqmsplot": 86, "carpetparcel": 87, "dilat": 87, "brainmask": 87, "substract": 87, "itself": [87, 115], "union": 87, "obtain": 87, "crown": 87, "parcel": 87, "computedvar": 88, "dvar": 88, "deriv": 88, "varianc": 88, "framewisedisplac": 89, "calcul": 89, "fd": 89, "framewis": 89, "displac": 89, "power2012": 89, "mean_stddev_calc": 90, "standard": [90, 140], "deviat": [90, 140], "parametr": 90, "map": [90, 124], "plotsignalroi": 91, "plot": 91, "reportanatmriqc": 92, "report": [92, 93, 94, 95, 154, 163, 165], "pipelin": [92, 93, 94, 95, 113, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 158, 159, 160, 161, 162, 163, 164], "reportco2inhalcvr": 93, "cvr": [93, 120, 141], "evalu": [93, 118, 120, 141], "hypercapnia": 93, "challeng": [93, 120], "reportfuncmriqc": 94, "reportgroupmriqc": 95, "group": 95, "result_collector": 96, "contain": [96, 106, 108, 110, 115, 117], "number": 97, "estimateconstrast": 98, "contrast": 98, "spm12": [98, 99, 101, 102, 103, 104], "fmri": [98, 99, 100, 101, 102, 103, 104, 130, 131], "manag": 98, "estimatemodel": 99, "classic": 99, "reml": 99, "restrict": 99, "maximum": 99, "likelihood": 99, "procedur": 99, "level1design": 100, "glm": [100, 141], "analysi": [100, 141], "multipleregressiondesign": 101, "spm": [101, 102, 103, 104, 141, 153, 156], "design": [101, 102, 103, 104], "regress": 101, "factori": [101, 102, 103, 104], "onesamplettestdesign": 102, "sampl": [102, 104], "t": [102, 103, 104], "test": [102, 103, 104], "pairedttestdesign": 103, "pair": 103, "twosamplettestdesign": 104, "two": 104, "concat_to_list": 105, "output": [105, 106, 114], "list": [105, 106, 108, 109, 110, 115, 116, 117, 135], "correspond": 105, "list1": [105, 106], "list2": [105, 106], "concat_to_list_of_list": 106, "iter": 106, "element": [106, 109, 110], "delete_data": 107, "delet": 107, "databas": 107, "files_to_list": 108, "3": 108, "theses": 108, "filter_files_list": 109, "select": [109, 110], "more": 109, "find_in_list": 110, "1rst": 110, "pattern": 110, "get_conditions_from_csv": 111, "get_patient_nam": 112, "import_data": 113, "import": 113, "current": 113, "input_filt": 114, "To": 114, "content": 114, "browser": 114, "tab": 114, "anoth": 114, "list_dupl": 115, "list_to_fil": 116, "make_a_list": 117, "2": 117, "object": 117, "make_cvr_reg_physio": 118, "physiolog": 118, "regressor": 118, "cerebrovascular": [118, 120], "reactiv": [118, 120], "mia_process": [119, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166], "document": 119, "co2_inhal": [120, 159], "under": 120, "co2": 120, "dwi_whole_brain_tractograpi": 121, "mrtrix": [121, 151], "anat_airmask": [122, 161], "air": 122, "hat": 122, "follow": 122, "step": 122, "mortamet2009": 122, "anat_headmask": [123, 161], "head": [123, 128], "dipi": [123, 148], "anat_mni_tpm": [124, 161], "probabl": 124, "them": 124, "space": [124, 129, 134], "anat_skullstrip": [125, 161], "anat_skullstrip_synthstrip": [126, 161], "workflow": [126, 136, 137], "anat_spatial_norm": [127, 161], "mni": [127, 129], "mni152nlin2009casym": 127, "bold_hmc": [128, 161], "motion": 128, "bold_mni_align": [129, 161], "check": 129, "out": 129, "bold_spatial_preprocessing1": [130, 161], "exampl": [130, 131], "bold_spatial_preprocessing2": [131, 161], "dwi_fod_msmt_csd": [132, 161], "fiber": 132, "dwi_preprocess": 133, "preprocess": [133, 145, 146, 147, 148, 149, 150, 151, 152, 153, 161], "revers": 133, "phase": 133, "b0": 133, "dwi_tissue_boundari": 134, "boundari": 134, "registratiojn": 134, "spatial_mask": [135, 161], "result": 135, "previou": 135, "produc": [135, 140], "anat_mriqc": [136, 162], "t2w": 136, "bold_mriqc": [137, 162], "bold_signals_roi": 138, "bold_iqm": [139, 163], "extract_roi_param": [140, 163], "grai": 140, "later": 140, "indic": [140, 142], "beta": 140, "spmt": 140, "valu": 140, "bold_stat_cvr": [141, 164], "first": 141, "level": 141, "purpos": 142, "tabl": 142, "develop": 142, "packag": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165], "subpackag": [143, 144, 145, 155, 158], "submodul": [143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165], "info": 143, "modul": [143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165], "process_matlab": 143, "spatial_preprocess": 153, "stat": [155, 156, 164], "cerebvascularreact": 159, "dwitractographi": 160, "dwi_whole_brain_tractographi": 160, "dwipreprocess": 161, "qualitycontrol": 162, "util": 165}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Automask brick": [[0, "automask-brick"]], "Create a brain-only mask of the image using AFNI 3dAutomask": [[0, "create-a-brain-only-mask-of-the-image-using-afni-3dautomask"]], "Calc brick": [[1, "calc-brick"]], "Voxel-by-voxel arithmetic on 3D datasets 1, using AFNI 3dcalc": [[1, "voxel-by-voxel-arithmetic-on-3d-datasets-using-afni-3dcalc"]], "CalcDropTRs brick": [[2, "calcdroptrs-brick"]], "Drop volumes of bold datasets, using AFNI 3dcalc": [[2, "drop-volumes-of-bold-datasets-using-afni-3dcalc"]], "Despike brick": [[3, "despike-brick"]], "Removes spikes from the 3D+time input dataset using AFNI 3dDespike": [[3, "removes-spikes-from-the-3d-time-input-dataset-using-afni-3ddespike"]], "FWHMx brick": [[4, "fwhmx-brick"]], "Computes FWHMs using AFNI FWHMx": [[4, "computes-fwhms-using-afni-fwhmx"]], "GCOR brick": [[5, "gcor-brick"]], "Using AFNI GCOR, computes the average correlation between every voxel and every other voxel, over any given mask": [[5, "using-afni-gcor-computes-the-average-correlation-between-every-voxel-and-every-other-voxel-over-any-given-mask"]], "OutlierCount brick": [[6, "outliercount-brick"]], "Using AFNI 3dToutcount, computes outliers for all sub-bricks (3D volumes for each TR) in the input dataset": [[6, "using-afni-3dtoutcount-computes-outliers-for-all-sub-bricks-3d-volumes-for-each-tr-in-the-input-dataset"]], "QualityIndex brick": [[7, "qualityindex-brick"]], "Computes a quality index for each sub-brick (3D volumes for each TR) in a 3D+time dataset using AFNI 3dTqual": [[7, "computes-a-quality-index-for-each-sub-brick-3d-volumes-for-each-tr-in-a-3d-time-dataset-using-afni-3dtqual"]], "RefitDeoblique brick": [[8, "refitdeoblique-brick"]], "Deoblique dataset (ie transform dataset from oblique to cardinal) using AFNI 3drefit": [[8, "deoblique-dataset-ie-transform-dataset-from-oblique-to-cardinal-using-afni-3drefit"]], "SkullStrip brick": [[9, "skullstrip-brick"]], "Using AFNI 3dSkullStrip, from T1-weighted MRI images, extract the brain from surrounding tissue": [[9, "using-afni-3dskullstrip-from-t1-weighted-mri-images-extract-the-brain-from-surrounding-tissue"]], "TShift brick": [[10, "tshift-brick"]], "Slice-time correction of bold images (using mean option of the AFNI 3dTshift)": [[10, "slice-time-correction-of-bold-images-using-mean-option-of-the-afni-3dtshift"]], "TStatMean brick": [[11, "tstatmean-brick"]], "Mean of bold images (using mean option of the AFNI 3dTstat)": [[11, "mean-of-bold-images-using-mean-option-of-the-afni-3dtstat"]], "Volreg brick": [[12, "volreg-brick"]], "Registers each 3D volume from the input dataset to the base volume using AFNI 3dvolreg": [[12, "registers-each-3d-volume-from-the-input-dataset-to-the-base-volume-using-afni-3dvolreg"]], "AffineInitializer brick": [[13, "affineinitializer-brick"]], "Initialize an affine transform using ANTs AffineInitizer": [[13, "initialize-an-affine-transform-using-ants-affineinitizer"]], "ApplyTransforms brick": [[14, "applytransforms-brick"]], "Using ANTs ApplyTransforms, transforms an input image according to a reference image and a transform (or a set of transforms)": [[14, "using-ants-applytransforms-transforms-an-input-image-according-to-a-reference-image-and-a-transform-or-a-set-of-transforms"]], "N4BiasFieldCorrection brick": [[15, "n4biasfieldcorrection-brick"]], "N4 Bias field correction using ANTs N4BiasFieldCorrection": [[15, "n4-bias-field-correction-using-ants-n4biasfieldcorrection"]], "Registration brick": [[16, "registration-brick"]], "Image registration using ANTs Registration": [[16, "image-registration-using-ants-registration"]], "ComputeDKI brick": [[17, "computedki-brick"]], "Reconstruction of the diffusion signal with the kurtosis tensor model": [[17, "reconstruction-of-the-diffusion-signal-with-the-kurtosis-tensor-model"]], "Denoise brick": [[18, "denoise-brick"]], "Denoise image using Non-Local Means algorithm (NLMEANS)": [[18, "denoise-image-using-non-local-means-algorithm-nlmeans"]], "Binarize brick": [[19, "binarize-brick"], [55, "binarize-brick"]], "Binarize an input volume (or volume-encoded surface file)": [[19, "binarize-an-input-volume-or-volume-encoded-surface-file"]], "SynthStrip brick": [[20, "synthstrip-brick"]], "SynthStripMriqc brick": [[21, "synthstripmriqc-brick"]], "Skull-stripping using SynthStrip tool (mri_synthstrip in FreeSurfer) as done in mriqc v22.06": [[21, "skull-stripping-using-synthstrip-tool-mri-synthstrip-in-freesurfer-as-done-in-mriqc-v22-06"]], "BetSurfacesExtraction brick": [[22, "betsurfacesextraction-brick"]], "Surfaces (skull, inskull, outskull, outskin) extraction using BET (FSL)": [[22, "surfaces-skull-inskull-outskull-outskin-extraction-using-bet-fsl"]], "ConvertXFM brick": [[23, "convertxfm-brick"]], "Modify transformation matrix using convert_xfm (FSL)": [[23, "modify-transformation-matrix-using-convert-xfm-fsl"]], "EpiReg brick": [[24, "epireg-brick"]], "Register EPI images to structural images": [[24, "register-epi-images-to-structural-images"]], "ExtractROI brick": [[25, "extractroi-brick"]], "Extract region of interest (ROI) from an image using fslroi (FSL)": [[25, "extract-region-of-interest-roi-from-an-image-using-fslroi-fsl"]], "FastSegment brick": [[26, "fastsegment-brick"]], "Brain tissue segmentation using FAST (FSL)": [[26, "brain-tissue-segmentation-using-fast-fsl"]], "Flirt brick": [[27, "flirt-brick"]], "Linear (affine) intra- and inter-modal brain image registration using FLIRT (FSL)": [[27, "linear-affine-intra-and-inter-modal-brain-image-registration-using-flirt-fsl"]], "Smooth brick": [[28, "smooth-brick"], [80, "smooth-brick"]], "3D Gaussian smoothing of image volumes": [[28, "d-gaussian-smoothing-of-image-volumes"], [80, "d-gaussian-smoothing-of-image-volumes"]], "ComputeBrainVolume brick": [[29, "computebrainvolume-brick"]], "ConstrainedSphericalDeconvolution brick": [[30, "constrainedsphericaldeconvolution-brick"]], "Estimate fibre orientation distributions (FOD)": [[30, "estimate-fibre-orientation-distributions-fod"]], "DWIBiasCorrect brick": [[31, "dwibiascorrect-brick"]], "Perform B1 field inhomogeneity correction for a DWI image": [[31, "perform-b1-field-inhomogeneity-correction-for-a-dwi-image"]], "DWIBrainMask brick": [[32, "dwibrainmask-brick"]], "Generates a whole brain mask from a DWI image.": [[32, "generates-a-whole-brain-mask-from-a-dwi-image"]], "DWICat brick": [[33, "dwicat-brick"]], "Concatenating multiple DWI series": [[33, "concatenating-multiple-dwi-series"]], "DWIDenoise brick": [[34, "dwidenoise-brick"]], "Denoise DWI data": [[34, "denoise-dwi-data"]], "DWIExtract brick": [[35, "dwiextract-brick"]], "Extract shell or b=0 volumes from DWI data": [[35, "extract-shell-or-b-0-volumes-from-dwi-data"]], "DWIPreproc brick": [[36, "dwipreproc-brick"]], "Perform diffusion image pre-processing using FSL\u2019s topup and eddy tool": [[36, "perform-diffusion-image-pre-processing-using-fsls-topup-and-eddy-tool"]], "EditingTrack brick": [[37, "editingtrack-brick"]], "Perform various editing operations on track files": [[37, "perform-various-editing-operations-on-track-files"]], "FilteringTrack brick": [[38, "filteringtrack-brick"]], "Filter tracking data": [[38, "filter-tracking-data"]], "FitTensor brick": [[39, "fittensor-brick"]], "Diffusion tensor estimation": [[39, "diffusion-tensor-estimation"]], "Generate5tt2gmwmi brick": [[40, "generate5tt2gmwmi-brick"]], "Generate a mask image appropriate for seeding streamlines on the grey matter-white matter interface": [[40, "generate-a-mask-image-appropriate-for-seeding-streamlines-on-the-grey-matter-white-matter-interface"]], "Generate5ttfsl brick": [[41, "generate5ttfsl-brick"]], "Generate a five-tissues-type (5TT) segmented tissue image with FSL": [[41, "generate-a-five-tissues-type-5tt-segmented-tissue-image-with-fsl"]], "MRCat brick": [[42, "mrcat-brick"]], "Concatenate several images into one": [[42, "concatenate-several-images-into-one"]], "MRConvert brick": [[43, "mrconvert-brick"]], "Perform conversion between different file types and optionally extract a subset of the input image": [[43, "perform-conversion-between-different-file-types-and-optionally-extract-a-subset-of-the-input-image"]], "MRDeGibbs brick": [[44, "mrdegibbs-brick"]], "Remove Gibbs ringing artifacts": [[44, "remove-gibbs-ringing-artifacts"]], "MRMath brick": [[45, "mrmath-brick"]], "Compute summary statistic on image intensities along a specified axis of a single image": [[45, "compute-summary-statistic-on-image-intensities-along-a-specified-axis-of-a-single-image"]], "MRTransform brick": [[46, "mrtransform-brick"]], "Apply spatial transformations or reslice images": [[46, "apply-spatial-transformations-or-reslice-images"]], "MTNormalise brick": [[47, "mtnormalise-brick"]], "Multi-tissue informed log-domain intensity normalisation": [[47, "multi-tissue-informed-log-domain-intensity-normalisation"]], "ResponseSDDhollander brick": [[48, "responsesddhollander-brick"]], "Estimate response function(s) for spherical deconvolution using the Dhollander algorithm": [[48, "estimate-response-function-s-for-spherical-deconvolution-using-the-dhollander-algorithm"]], "SphericalHarmonicExtraction brick": [[49, "sphericalharmonicextraction-brick"]], "Extract the peaks of a spherical harmonic function in each voxel": [[49, "extract-the-peaks-of-a-spherical-harmonic-function-in-each-voxel"]], "TensorMetrics brick": [[50, "tensormetrics-brick"]], "Compute metrics from tensors": [[50, "compute-metrics-from-tensors"]], "Tractography brick": [[51, "tractography-brick"]], "Performs streamlines tractography": [[51, "performs-streamlines-tractography"]], "TransformFSLConvert brick": [[52, "transformfslconvert-brick"]], "Perform conversion between FSL\u2019s transformation matrix format to mrtrix3\u2019s": [[52, "perform-conversion-between-fsls-transformation-matrix-format-to-mrtrix3s"]], "ApplyBiasCorrection brick": [[53, "applybiascorrection-brick"]], "Apply bias field correction to an input file using the bias image": [[53, "apply-bias-field-correction-to-an-input-file-using-the-bias-image"]], "ArtifactMask brick": [[54, "artifactmask-brick"]], "Computes artifact mask": [[54, "computes-artifact-mask"]], "Binarizes the input image applying the given lower threshold": [[55, "binarizes-the-input-image-applying-the-given-lower-threshold"]], "ConformImage brick": [[56, "conformimage-brick"]], "Conform T1w image": [[56, "conform-t1w-image"]], "ConvROI brick": [[57, "convroi-brick"]], "Image convolution with one image": [[57, "image-convolution-with-one-image"]], "Enhance brick": [[58, "enhance-brick"]], "Image enhancing": [[58, "image-enhancing"]], "EstimateSNR brick": [[59, "estimatesnr-brick"]], "Estimate SNR using a segmentation file": [[59, "estimate-snr-using-a-segmentation-file"]], "ExtractROIbyLabel brick": [[60, "extractroibylabel-brick"]], "Extract a specific ROI from a segmentation file using labels": [[60, "extract-a-specific-roi-from-a-segmentation-file-using-labels"]], "ExtractSignalROI brick": [[61, "extractsignalroi-brick"]], "Extract signals from ROI using a segmentation file with label": [[61, "extract-signals-from-roi-using-a-segmentation-file-with-label"]], "GradientThreshold brick": [[62, "gradientthreshold-brick"]], "Computes a threshold from the histogram of the magnitude gradient image using a segmentation of the input image": [[62, "computes-a-threshold-from-the-histogram-of-the-magnitude-gradient-image-using-a-segmentation-of-the-input-image"]], "Harmonize brick": [[63, "harmonize-brick"]], "Harmonize input image using a white matter mask": [[63, "harmonize-input-image-using-a-white-matter-mask"]], "IntensityClip brick": [[64, "intensityclip-brick"]], "Clip the intensity range as prescribed by the percentiles": [[64, "clip-the-intensity-range-as-prescribed-by-the-percentiles"]], "Mask brick": [[65, "mask-brick"]], "Apply a binary mask to an image": [[65, "apply-a-binary-mask-to-an-image"]], "NonSteadyDetector brick": [[66, "nonsteadydetector-brick"]], "Detect non-steady-state at the beginning of a bold 4D image": [[66, "detect-non-steady-state-at-the-beginning-of-a-bold-4d-image"]], "Resample1 brick": [[67, "resample1-brick"]], "Resamples an image to the resolution of a reference image using nilearn.image.resample_to_img()": [[67, "resamples-an-image-to-the-resolution-of-a-reference-image-using-nilearn-image-resample-to-img"]], "Resample2 brick": [[68, "resample2-brick"]], "Sets images to the resolution of a reference image using using nilearn.image.resample_to_img()": [[68, "sets-images-to-the-resolution-of-a-reference-image-using-using-nilearn-image-resample-to-img"]], "RotationMask brick": [[69, "rotationmask-brick"]], "Compute the rotation mask image": [[69, "compute-the-rotation-mask-image"]], "Sanitize brick": [[70, "sanitize-brick"]], "Sanitize input bold image": [[70, "sanitize-input-bold-image"]], "TSNR brick": [[71, "tsnr-brick"]], "Computes the time-course SNR for a time series": [[71, "computes-the-time-course-snr-for-a-time-series"]], "TemplateFromTemplateFlow brick": [[72, "templatefromtemplateflow-brick"]], "Get template image from TemplateFlow": [[72, "get-template-image-from-templateflow"]], "Threshold brick": [[73, "threshold-brick"]], "Makes a binary mask image at a given threshold": [[73, "makes-a-binary-mask-image-at-a-given-threshold"]], "Coregister brick": [[74, "coregister-brick"]], "Align together scans of different modalities": [[74, "align-together-scans-of-different-modalities"]], "GM_WM_Normalize brick": [[75, "gm-wm-normalize-brick"]], "Normalises only the grey or/and white matter from a set of images": [[75, "normalises-only-the-grey-or-and-white-matter-from-a-set-of-images"]], "NewSegment brick": [[76, "newsegment-brick"]], "Segments,  bias  corrects  and  spatially normalises - all in the same model": [[76, "segments-bias-corrects-and-spatially-normalises-all-in-the-same-model"]], "Normalize12 brick": [[77, "normalize12-brick"]], "Computes the deformation that best aligns the model (atlas) with an image, then if necessary, apply this deformation to spatially normalize images": [[77, "computes-the-deformation-that-best-aligns-the-model-atlas-with-an-image-then-if-necessary-apply-this-deformation-to-spatially-normalize-images"]], "Realign brick": [[78, "realign-brick"]], "Realigns a time-series of images acquired from the same subject": [[78, "realigns-a-time-series-of-images-acquired-from-the-same-subject"]], "SliceTiming brick": [[79, "slicetiming-brick"]], "Bring back every slice of a BOLD image to the reference slice time.": [[79, "bring-back-every-slice-of-a-bold-image-to-the-reference-slice-time"]], "AssemblyNetDocker brick": [[81, "assemblynetdocker-brick"]], "3D Whole Brain MRI Segmentation using AssemblyNet (volBrain)": [[81, "d-whole-brain-mri-segmentation-using-assemblynet-volbrain"]], "GetLabels brick": [[82, "getlabels-brick"]], "Get Assemblynet segmentation labels": [[82, "get-assemblynet-segmentation-labels"]], "LabelsCorrespondence brick": [[83, "labelscorrespondence-brick"]], "Get AssemblyNet labels names or get labels from names": [[83, "get-assemblynet-labels-names-or-get-labels-from-names"]], "AnatIQMs brick": [[84, "anatiqms-brick"]], "Computes the anatomical Image Quality Metrics (IQMs) as defined in mriqc v22.06": [[84, "computes-the-anatomical-image-quality-metrics-iqms-as-defined-in-mriqc-v22-06"]], "BoldQMs brick": [[85, "boldqms-brick"]], "Computes the functional Image Quality Metrics (IQMs) as defined in mriqc v22.06": [[85, "computes-the-functional-image-quality-metrics-iqms-as-defined-in-mriqc-v22-06"]], "BoldIQMsPlot brick": [[86, "boldiqmsplot-brick"]], "CarpetParcellation brick": [[87, "carpetparcellation-brick"]], "Dilate brainmask, substract from itself then generate the union of obtained crown mask and epi parcellation": [[87, "dilate-brainmask-substract-from-itself-then-generate-the-union-of-obtained-crown-mask-and-epi-parcellation"]], "ComputeDVARS brick": [[88, "computedvars-brick"]], "Computes DVARS (derivative of variance)": [[88, "computes-dvars-derivative-of-variance"]], "FramewiseDisplacement brick": [[89, "framewisedisplacement-brick"]], "Calculate the FD (framewise displacement) as in [Power2012]": [[89, "calculate-the-fd-framewise-displacement-as-in-power2012"]], "Mean_stdDev_calc brick": [[90, "mean-stddev-calc-brick"]], "Makes the mean and standard deviation of parametric maps": [[90, "makes-the-mean-and-standard-deviation-of-parametric-maps"]], "PlotSignalROI brick": [[91, "plotsignalroi-brick"]], "Plot signals from ROI using a segmentation file with label": [[91, "plot-signals-from-roi-using-a-segmentation-file-with-label"]], "ReportAnatMriqc brick": [[92, "reportanatmriqc-brick"]], "Generates the report for anatomical data in mriqc pipeline": [[92, "generates-the-report-for-anatomical-data-in-mriqc-pipeline"]], "ReportCO2inhalCvr brick": [[93, "reportco2inhalcvr-brick"]], "Generates the report for CVR evaluation using hypercapnia challenge pipeline": [[93, "generates-the-report-for-cvr-evaluation-using-hypercapnia-challenge-pipeline"]], "ReportFuncMriqc brick": [[94, "reportfuncmriqc-brick"]], "Generates the report for functional data in mriqc pipeline": [[94, "generates-the-report-for-functional-data-in-mriqc-pipeline"]], "ReportGroupMriqc brick": [[95, "reportgroupmriqc-brick"]], "Generate a group report for mriqc pipeline": [[95, "generate-a-group-report-for-mriqc-pipeline"]], "Result_collector brick": [[96, "result-collector-brick"]], "Generates files containing summary data for each region of interest": [[96, "generates-files-containing-summary-data-for-each-region-of-interest"]], "Spikes brick": [[97, "spikes-brick"]], "Computes the number of spikes": [[97, "computes-the-number-of-spikes"]], "EstimateConstrast brick": [[98, "estimateconstrast-brick"]], "Estimate contrasts of interest (SPM12 fMRI contrast manager)": [[98, "estimate-contrasts-of-interest-spm12-fmri-contrast-manager"]], "EstimateModel brick": [[99, "estimatemodel-brick"]], "Model Estimation using classical (ReML - Restricted Maximum Likelihood) procedure (SPM12 fMRI model estimation)": [[99, "model-estimation-using-classical-reml-restricted-maximum-likelihood-procedure-spm12-fmri-model-estimation"]], "Level1Design brick": [[100, "level1design-brick"]], "fMRI model specification for GLM analysis.": [[100, "fmri-model-specification-for-glm-analysis"]], "MultipleRegressionDesign brick": [[101, "multipleregressiondesign-brick"]], "Create SPM design for multiple regression (SPM12 fMRI factorial Design)": [[101, "create-spm-design-for-multiple-regression-spm12-fmri-factorial-design"]], "OneSampleTTestDesign brick": [[102, "onesamplettestdesign-brick"]], "Create SPM design for one sample t-test (SPM12 fMRI factorial Design)": [[102, "create-spm-design-for-one-sample-t-test-spm12-fmri-factorial-design"]], "PairedTTestDesign brick": [[103, "pairedttestdesign-brick"]], "Create SPM design for paired t-test (SPM12 fMRI factorial Design)": [[103, "create-spm-design-for-paired-t-test-spm12-fmri-factorial-design"]], "TwoSampleTTestDesign brick": [[104, "twosamplettestdesign-brick"]], "Create SPM design for two sample t-test (SPM12 fMRI factorial Design)": [[104, "create-spm-design-for-two-sample-t-test-spm12-fmri-factorial-design"]], "Concat_to_list  brick": [[105, "concat-to-list-brick"]], "Make an output list corresponding to the concatenation of list1 and list2": [[105, "make-an-output-list-corresponding-to-the-concatenation-of-list1-and-list2"]], "Concat_to_list_of_list brick": [[106, "concat-to-list-of-list-brick"]], "Make an output list of list containing the iteration of the input list1 with each element of the input list2": [[106, "make-an-output-list-of-list-containing-the-iteration-of-the-input-list1-with-each-element-of-the-input-list2"]], "Delete_data brick": [[107, "delete-data-brick"]], "Delete data from database": [[107, "delete-data-from-database"]], "Files_To_List brick": [[108, "files-to-list-brick"]], "From 3 file names, generating a list containing all theses file names": [[108, "from-3-file-names-generating-a-list-containing-all-theses-file-names"]], "Filter_Files_List brick": [[109, "filter-files-list-brick"]], "Selects one or more (slicing) elements from a list": [[109, "selects-one-or-more-slicing-elements-from-a-list"]], "Find_In_List brick": [[110, "find-in-list-brick"]], "From a list of files, select the 1rst element that contains a pattern": [[110, "from-a-list-of-files-select-the-1rst-element-that-contains-a-pattern"]], "Get_Conditions_From_csv brick": [[111, "get-conditions-from-csv-brick"]], "Get_Patient_Name brick": [[112, "get-patient-name-brick"]], "Import_Data  brick": [[113, "import-data-brick"]], "Import reference data into the current pipeline": [[113, "import-reference-data-into-the-current-pipeline"]], "Input_Filter brick": [[114, "input-filter-brick"]], "To filter the content of the Data Browser tab or the output data of another brick": [[114, "to-filter-the-content-of-the-data-browser-tab-or-the-output-data-of-another-brick"]], "List_Duplicate brick": [[115, "list-duplicate-brick"]], "From a file name, generating a list containing this file name and the file name itself": [[115, "from-a-file-name-generating-a-list-containing-this-file-name-and-the-file-name-itself"]], "List_To_File brick": [[116, "list-to-file-brick"]], "From a list of files, generation of a single file": [[116, "from-a-list-of-files-generation-of-a-single-file"]], "Make_a_list brick": [[117, "make-a-list-brick"]], "From 2 objects, generating a list containing all these objects": [[117, "from-2-objects-generating-a-list-containing-all-these-objects"]], "Make_CVR_reg_physio brick": [[118, "make-cvr-reg-physio-brick"]], "Generate the physiological regressor for cerebrovascular reactivity evaluation": [[118, "generate-the-physiological-regressor-for-cerebrovascular-reactivity-evaluation"]], "Mia_processes\u2019s documentation": [[119, "mia-processes-s-documentation"]], "CO2_inhalation pipeline": [[120, "co2-inhalation-pipeline"]], "Cerebrovascular reactivity (CVR) evaluation under CO2 challenge": [[120, "cerebrovascular-reactivity-cvr-evaluation-under-co2-challenge"]], "DWI_whole_brain_tractograpy pipeline": [[121, "dwi-whole-brain-tractograpy-pipeline"]], "Brain Tractography with MRTrix": [[121, "brain-tractography-with-mrtrix"]], "Anat_airmask pipeline": [[122, "anat-airmask-pipeline"]], "Compute rotation mask, air mask, artifact mask and hat mask for structural data following step 1 from [Mortamet2009]": [[122, "compute-rotation-mask-air-mask-artifact-mask-and-hat-mask-for-structural-data-following-step-1-from-mortamet2009"]], "Anat_headmask pipeline": [[123, "anat-headmask-pipeline"]], "Compute head mask from skull stripped structural image using Denoise from Dipy": [[123, "compute-head-mask-from-skull-stripped-structural-image-using-denoise-from-dipy"]], "Anat_mni_tpms pipeline": [[124, "anat-mni-tpms-pipeline"]], "Get templates tissues probability map and register them in subject space": [[124, "get-templates-tissues-probability-map-and-register-them-in-subject-space"]], "Anat_skullstrip pipeline": [[125, "anat-skullstrip-pipeline"]], "Bias correction and skull stripping of a structural image": [[125, "bias-correction-and-skull-stripping-of-a-structural-image"]], "Anat_skullstrip_synthstrip pipeline": [[126, "anat-skullstrip-synthstrip-pipeline"]], "Create a brain-extraction workflow using SynthStrip (Freesurfer)": [[126, "create-a-brain-extraction-workflow-using-synthstrip-freesurfer"]], "Anat_spatial_norm pipeline": [[127, "anat-spatial-norm-pipeline"]], "Spatial normalization to MNI (using MNI152NLin2009cAsym template)": [[127, "spatial-normalization-to-mni-using-mni152nlin2009casym-template"]], "Bold_hmc pipeline": [[128, "bold-hmc-pipeline"]], "Head motion correction of a bold image": [[128, "head-motion-correction-of-a-bold-image"]], "Bold_mni_align pipeline": [[129, "bold-mni-align-pipeline"]], "Register a mean functional image EPI in MNI space (for checking out registration)": [[129, "register-a-mean-functional-image-epi-in-mni-space-for-checking-out-registration"]], "Bold_spatial_preprocessing1 pipeline": [[130, "bold-spatial-preprocessing1-pipeline"]], "An example of fMRI data pre-processing": [[130, "an-example-of-fmri-data-pre-processing"], [131, "an-example-of-fmri-data-pre-processing"]], "Bold_spatial_preprocessing2 pipeline": [[131, "bold-spatial-preprocessing2-pipeline"]], "Dwi_fod_msmt_csd pipeline": [[132, "dwi-fod-msmt-csd-pipeline"]], "Estimate DWI fiber orientation distribution (FOD)": [[132, "estimate-dwi-fiber-orientation-distribution-fod"]], "Dwi_preprocessing pipeline": [[133, "dwi-preprocessing-pipeline"]], "DWI preprocessing using a reverse-phase encoded b0": [[133, "dwi-preprocessing-using-a-reverse-phase-encoded-b0"]], "Dwi_tissue_boundaries pipeline": [[134, "dwi-tissue-boundaries-pipeline"]], "Create tissue boundaries with a T1w and registratiojn in DWI space": [[134, "create-tissue-boundaries-with-a-t1w-and-registratiojn-in-dwi-space"]], "Spatial_mask pipeline": [[135, "spatial-mask-pipeline"]], "From a list of images resulting from a previous segmentation, produces a grey matter mask": [[135, "from-a-list-of-images-resulting-from-a-previous-segmentation-produces-a-grey-matter-mask"]], "Anat_mriqc pipeline": [[136, "anat-mriqc-pipeline"]], "Get no-reference IQMs (image quality metrics) from structural (T1w and T2w) data using mriqc anatomical workflow (mriqc v22.06)": [[136, "get-no-reference-iqms-image-quality-metrics-from-structural-t1w-and-t2w-data-using-mriqc-anatomical-workflow-mriqc-v22-06"]], "Bold_mriqc pipeline": [[137, "bold-mriqc-pipeline"]], "Get no-reference IQMs (image quality metrics) from functional (BOLD) data using mriqc functional workflow (mriqc v22.06)": [[137, "get-no-reference-iqms-image-quality-metrics-from-functional-bold-data-using-mriqc-functional-workflow-mriqc-v22-06"]], "Bold_signals_roi pipeline": [[138, "bold-signals-roi-pipeline"]], "Bold_iqms pipeline": [[139, "bold-iqms-pipeline"]], "Compute no-reference IQMs (image quality metrics) from functional (BOLD)": [[139, "compute-no-reference-iqms-image-quality-metrics-from-functional-bold"]], "Extract_roi_param pipeline": [[140, "extract-roi-param-pipeline"]], "Produces gray matter masks for various ROIs and means, standard deviations, laterality indices for beta and spmT values in these ROIs": [[140, "produces-gray-matter-masks-for-various-rois-and-means-standard-deviations-laterality-indices-for-beta-and-spmt-values-in-these-rois"]], "Bold_stat_cvr brick": [[141, "bold-stat-cvr-brick"]], "SPM-based first level GLM analysis used in the CVR evaluation": [[141, "spm-based-first-level-glm-analysis-used-in-the-cvr-evaluation"]], "Purpose": [[142, "purpose"]], "Indices and tables for developers": [[142, "indices-and-tables-for-developers"]], "mia_processes package": [[143, "module-mia_processes"]], "Subpackages": [[143, "subpackages"], [144, "subpackages"], [145, "subpackages"], [155, "subpackages"], [158, "subpackages"]], "Submodules": [[143, "submodules"], [146, "submodules"], [147, "submodules"], [148, "submodules"], [149, "submodules"], [150, "submodules"], [151, "submodules"], [152, "submodules"], [153, "submodules"], [154, "submodules"], [156, "submodules"], [157, "submodules"], [159, "submodules"], [160, "submodules"], [161, "submodules"], [162, "submodules"], [163, "submodules"], [164, "submodules"], [165, "submodules"]], "mia_processes.info module": [[143, "module-mia_processes.info"]], "mia_processes.process_matlab module": [[143, "module-mia_processes.process_matlab"]], "mia_processes.bricks package": [[144, "module-mia_processes.bricks"]], "mia_processes.bricks.preprocess package": [[145, "module-mia_processes.bricks.preprocess"]], "mia_processes.bricks.preprocess.afni package": [[146, "module-mia_processes.bricks.preprocess.afni"]], "mia_processes.bricks.preprocess.afni.processes module": [[146, "module-mia_processes.bricks.preprocess.afni.processes"]], "mia_processes.bricks.preprocess.ants package": [[147, "module-mia_processes.bricks.preprocess.ants"]], "mia_processes.bricks.preprocess.ants.processes module": [[147, "module-mia_processes.bricks.preprocess.ants.processes"]], "mia_processes.bricks.preprocess.dipy package": [[148, "module-mia_processes.bricks.preprocess.dipy"]], "mia_processes.bricks.preprocess.dipy.processes module": [[148, "module-mia_processes.bricks.preprocess.dipy.processes"]], "mia_processes.bricks.preprocess.freesurfer package": [[149, "module-mia_processes.bricks.preprocess.freesurfer"]], "mia_processes.bricks.preprocess.freesurfer.processes module": [[149, "module-mia_processes.bricks.preprocess.freesurfer.processes"]], "mia_processes.bricks.preprocess.fsl package": [[150, "module-mia_processes.bricks.preprocess.fsl"]], "mia_processes.bricks.preprocess.fsl.processes module": [[150, "module-mia_processes.bricks.preprocess.fsl.processes"]], "mia_processes.bricks.preprocess.mrtrix package": [[151, "module-mia_processes.bricks.preprocess.mrtrix"]], "mia_processes.bricks.preprocess.mrtrix.processes module": [[151, "module-mia_processes.bricks.preprocess.mrtrix.processes"]], "mia_processes.bricks.preprocess.others package": [[152, "module-mia_processes.bricks.preprocess.others"]], "mia_processes.bricks.preprocess.others.processing module": [[152, "module-mia_processes.bricks.preprocess.others.processing"]], "mia_processes.bricks.preprocess.spm package": [[153, "module-mia_processes.bricks.preprocess.spm"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing module": [[153, "module-mia_processes.bricks.preprocess.spm.spatial_preprocessing"]], "mia_processes.bricks.reports package": [[154, "module-mia_processes.bricks.reports"]], "mia_processes.bricks.reports.processes module": [[154, "module-mia_processes.bricks.reports.processes"]], "References": [[154, null]], "mia_processes.bricks.reports.reporting module": [[154, "module-mia_processes.bricks.reports.reporting"]], "mia_processes.bricks.stat package": [[155, "module-mia_processes.bricks.stat"]], "mia_processes.bricks.stat.spm package": [[156, "module-mia_processes.bricks.stat.spm"]], "mia_processes.bricks.stat.spm.model module": [[156, "module-mia_processes.bricks.stat.spm.model"]], "mia_processes.bricks.tools package": [[157, "module-mia_processes.bricks.tools"]], "mia_processes.bricks.tools.tools module": [[157, "module-mia_processes.bricks.tools.tools"]], "mia_processes.pipelines package": [[158, "module-mia_processes.pipelines"]], "mia_processes.pipelines.CerebVascularReact package": [[159, "module-mia_processes.pipelines.CerebVascularReact"]], "mia_processes.pipelines.CerebVascularReact.co2_inhalation module": [[159, "module-mia_processes.pipelines.CerebVascularReact.co2_inhalation"]], "mia_processes.pipelines.DWITractography package": [[160, "module-mia_processes.pipelines.DWITractography"]], "mia_processes.pipelines.DWITractography.dwi_whole_brain_tractography module": [[160, "module-mia_processes.pipelines.DWITractography.dwi_whole_brain_tractography"]], "mia_processes.pipelines.preprocess package": [[161, "module-mia_processes.pipelines.preprocess"]], "mia_processes.pipelines.preprocess.anat_airmask module": [[161, "module-mia_processes.pipelines.preprocess.anat_airmask"]], "mia_processes.pipelines.preprocess.anat_headmask module": [[161, "module-mia_processes.pipelines.preprocess.anat_headmask"]], "mia_processes.pipelines.preprocess.anat_mni_tpms module": [[161, "module-mia_processes.pipelines.preprocess.anat_mni_tpms"]], "mia_processes.pipelines.preprocess.anat_skullstrip module": [[161, "module-mia_processes.pipelines.preprocess.anat_skullstrip"]], "mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip module": [[161, "module-mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip"]], "mia_processes.pipelines.preprocess.anat_spatial_norm module": [[161, "module-mia_processes.pipelines.preprocess.anat_spatial_norm"]], "mia_processes.pipelines.preprocess.bold_hmc module": [[161, "module-mia_processes.pipelines.preprocess.bold_hmc"]], "mia_processes.pipelines.preprocess.bold_mni_align module": [[161, "module-mia_processes.pipelines.preprocess.bold_mni_align"]], "mia_processes.pipelines.preprocess.bold_spatial_preprocessing1 module": [[161, "module-mia_processes.pipelines.preprocess.bold_spatial_preprocessing1"]], "mia_processes.pipelines.preprocess.bold_spatial_preprocessing2 module": [[161, "module-mia_processes.pipelines.preprocess.bold_spatial_preprocessing2"]], "mia_processes.pipelines.preprocess.dwi_fod_msmt_csd module": [[161, "module-mia_processes.pipelines.preprocess.dwi_fod_msmt_csd"]], "mia_processes.pipelines.preprocess.dwipreprocessing module": [[161, "module-mia_processes.pipelines.preprocess.dwi_preprocessing"]], "mia_processes.pipelines.preprocess.spatial_mask module": [[161, "module-mia_processes.pipelines.preprocess.spatial_mask"]], "mia_processes.pipelines.qualityControl package": [[162, "module-mia_processes.pipelines.qualityControl"]], "mia_processes.pipelines.qualityControl.anat_mriqc module": [[162, "module-mia_processes.pipelines.qualityControl.anat_mriqc"]], "mia_processes.pipelines.qualityControl.bold_mriqc module": [[162, "module-mia_processes.pipelines.qualityControl.bold_mriqc"]], "mia_processes.pipelines.reports package": [[163, "module-mia_processes.pipelines.reports"]], "mia_processes.pipelines.reports.bold_iqms module": [[163, "module-mia_processes.pipelines.reports.bold_iqms"]], "mia_processes.pipelines.reports.extract_roi_param module": [[163, "module-mia_processes.pipelines.reports.extract_roi_param"]], "mia_processes.pipelines.stat package": [[164, "module-mia_processes.pipelines.stat"]], "mia_processes.pipelines.stat.bold_stat_cvr module": [[164, "module-mia_processes.pipelines.stat.bold_stat_cvr"]], "mia_processes.utils package": [[165, "module-mia_processes.utils"]], "mia_processes.utils.report module": [[165, "module-mia_processes.utils.report"]], "mia_processes.utils.tools module": [[165, "module-mia_processes.utils.tools"]], "mia_processes": [[166, "mia-processes"]]}, "indexentries": {"processmatlab (class in mia_processes.process_matlab)": [[143, "mia_processes.process_matlab.ProcessMatlab"]], "__init__() (mia_processes.process_matlab.processmatlab method)": [[143, "mia_processes.process_matlab.ProcessMatlab.__init__"]], "add_exit() (mia_processes.process_matlab.processmatlab method)": [[143, "mia_processes.process_matlab.ProcessMatlab.add_exit"]], "add_path() (mia_processes.process_matlab.processmatlab method)": [[143, "mia_processes.process_matlab.ProcessMatlab.add_path"]], "change_directory() (mia_processes.process_matlab.processmatlab method)": [[143, "mia_processes.process_matlab.ProcessMatlab.change_directory"]], "display_parameter() (mia_processes.process_matlab.processmatlab method)": [[143, "mia_processes.process_matlab.ProcessMatlab.display_parameter"]], "get_gitversion() (in module mia_processes.info)": [[143, "mia_processes.info.get_gitversion"]], "mia_processes": [[143, "module-mia_processes"]], "mia_processes.info": [[143, "module-mia_processes.info"]], "mia_processes.process_matlab": [[143, "module-mia_processes.process_matlab"]], "module": [[143, "module-mia_processes"], [143, "module-mia_processes.info"], [143, "module-mia_processes.process_matlab"], [144, "module-mia_processes.bricks"], [145, "module-mia_processes.bricks.preprocess"], [146, "module-mia_processes.bricks.preprocess.afni"], [146, "module-mia_processes.bricks.preprocess.afni.processes"], [147, "module-mia_processes.bricks.preprocess.ants"], [147, "module-mia_processes.bricks.preprocess.ants.processes"], [148, "module-mia_processes.bricks.preprocess.dipy"], [148, "module-mia_processes.bricks.preprocess.dipy.processes"], [149, "module-mia_processes.bricks.preprocess.freesurfer"], [149, "module-mia_processes.bricks.preprocess.freesurfer.processes"], [150, "module-mia_processes.bricks.preprocess.fsl"], [150, "module-mia_processes.bricks.preprocess.fsl.processes"], [151, "module-mia_processes.bricks.preprocess.mrtrix"], [151, "module-mia_processes.bricks.preprocess.mrtrix.processes"], [152, "module-mia_processes.bricks.preprocess.others"], [152, "module-mia_processes.bricks.preprocess.others.processing"], [153, "module-mia_processes.bricks.preprocess.spm"], [153, "module-mia_processes.bricks.preprocess.spm.spatial_preprocessing"], [154, "module-mia_processes.bricks.reports"], [154, "module-mia_processes.bricks.reports.processes"], [154, "module-mia_processes.bricks.reports.reporting"], [155, "module-mia_processes.bricks.stat"], [156, "module-mia_processes.bricks.stat.spm"], [156, "module-mia_processes.bricks.stat.spm.model"], [157, "module-mia_processes.bricks.tools"], [157, "module-mia_processes.bricks.tools.tools"], [158, "module-mia_processes.pipelines"], [159, "module-mia_processes.pipelines.CerebVascularReact"], [159, "module-mia_processes.pipelines.CerebVascularReact.co2_inhalation"], [160, "module-mia_processes.pipelines.DWITractography"], [160, "module-mia_processes.pipelines.DWITractography.dwi_whole_brain_tractography"], [161, "module-mia_processes.pipelines.preprocess"], [161, "module-mia_processes.pipelines.preprocess.anat_airmask"], [161, "module-mia_processes.pipelines.preprocess.anat_headmask"], [161, "module-mia_processes.pipelines.preprocess.anat_mni_tpms"], [161, "module-mia_processes.pipelines.preprocess.anat_skullstrip"], [161, "module-mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip"], [161, "module-mia_processes.pipelines.preprocess.anat_spatial_norm"], [161, "module-mia_processes.pipelines.preprocess.bold_hmc"], [161, "module-mia_processes.pipelines.preprocess.bold_mni_align"], [161, "module-mia_processes.pipelines.preprocess.bold_spatial_preprocessing1"], [161, "module-mia_processes.pipelines.preprocess.bold_spatial_preprocessing2"], [161, "module-mia_processes.pipelines.preprocess.dwi_fod_msmt_csd"], [161, "module-mia_processes.pipelines.preprocess.dwi_preprocessing"], [161, "module-mia_processes.pipelines.preprocess.spatial_mask"], [162, "module-mia_processes.pipelines.qualityControl"], [162, "module-mia_processes.pipelines.qualityControl.anat_mriqc"], [162, "module-mia_processes.pipelines.qualityControl.bold_mriqc"], [163, "module-mia_processes.pipelines.reports"], [163, "module-mia_processes.pipelines.reports.bold_iqms"], [163, "module-mia_processes.pipelines.reports.extract_roi_param"], [164, "module-mia_processes.pipelines.stat"], [164, "module-mia_processes.pipelines.stat.bold_stat_cvr"], [165, "module-mia_processes.utils"], [165, "module-mia_processes.utils.report"], [165, "module-mia_processes.utils.tools"]], "run() (mia_processes.process_matlab.processmatlab method)": [[143, "mia_processes.process_matlab.ProcessMatlab.run"]], "set_global_variable() (mia_processes.process_matlab.processmatlab method)": [[143, "mia_processes.process_matlab.ProcessMatlab.set_global_variable"]], "set_variable() (mia_processes.process_matlab.processmatlab method)": [[143, "mia_processes.process_matlab.ProcessMatlab.set_variable"]], "mia_processes.bricks": [[144, "module-mia_processes.bricks"]], "mia_processes.bricks.preprocess": [[145, "module-mia_processes.bricks.preprocess"]], "automask (class in mia_processes.bricks.preprocess.afni.processes)": [[146, "mia_processes.bricks.preprocess.afni.processes.Automask"]], "calc (class in mia_processes.bricks.preprocess.afni.processes)": [[146, "mia_processes.bricks.preprocess.afni.processes.Calc"]], "calcdroptrs (class in mia_processes.bricks.preprocess.afni.processes)": [[146, "mia_processes.bricks.preprocess.afni.processes.CalcDropTRs"]], "despike (class in mia_processes.bricks.preprocess.afni.processes)": [[146, "mia_processes.bricks.preprocess.afni.processes.Despike"]], "fwhmx (class in mia_processes.bricks.preprocess.afni.processes)": [[146, "mia_processes.bricks.preprocess.afni.processes.FWHMx"]], "gcor (class in mia_processes.bricks.preprocess.afni.processes)": [[146, "mia_processes.bricks.preprocess.afni.processes.GCOR"]], "outliercount (class in mia_processes.bricks.preprocess.afni.processes)": [[146, "mia_processes.bricks.preprocess.afni.processes.OutlierCount"]], "qualityindex (class in mia_processes.bricks.preprocess.afni.processes)": [[146, "mia_processes.bricks.preprocess.afni.processes.QualityIndex"]], "refitdeoblique (class in mia_processes.bricks.preprocess.afni.processes)": [[146, "mia_processes.bricks.preprocess.afni.processes.RefitDeoblique"]], "skullstrip (class in mia_processes.bricks.preprocess.afni.processes)": [[146, "mia_processes.bricks.preprocess.afni.processes.SkullStrip"]], "tshift (class in mia_processes.bricks.preprocess.afni.processes)": [[146, "mia_processes.bricks.preprocess.afni.processes.TShift"]], "tstatmean (class in mia_processes.bricks.preprocess.afni.processes)": [[146, "mia_processes.bricks.preprocess.afni.processes.TStatMean"]], "volreg (class in mia_processes.bricks.preprocess.afni.processes)": [[146, "mia_processes.bricks.preprocess.afni.processes.Volreg"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.automask method)": [[146, "mia_processes.bricks.preprocess.afni.processes.Automask.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.calc method)": [[146, "mia_processes.bricks.preprocess.afni.processes.Calc.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.calcdroptrs method)": [[146, "mia_processes.bricks.preprocess.afni.processes.CalcDropTRs.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.despike method)": [[146, "mia_processes.bricks.preprocess.afni.processes.Despike.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.fwhmx method)": [[146, "mia_processes.bricks.preprocess.afni.processes.FWHMx.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.gcor method)": [[146, "mia_processes.bricks.preprocess.afni.processes.GCOR.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.outliercount method)": [[146, "mia_processes.bricks.preprocess.afni.processes.OutlierCount.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.qualityindex method)": [[146, "mia_processes.bricks.preprocess.afni.processes.QualityIndex.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.refitdeoblique method)": [[146, "mia_processes.bricks.preprocess.afni.processes.RefitDeoblique.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.skullstrip method)": [[146, "mia_processes.bricks.preprocess.afni.processes.SkullStrip.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.tshift method)": [[146, "mia_processes.bricks.preprocess.afni.processes.TShift.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.tstatmean method)": [[146, "mia_processes.bricks.preprocess.afni.processes.TStatMean.__init__"]], "__init__() (mia_processes.bricks.preprocess.afni.processes.volreg method)": [[146, "mia_processes.bricks.preprocess.afni.processes.Volreg.__init__"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.automask method)": [[146, "mia_processes.bricks.preprocess.afni.processes.Automask.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.calc method)": [[146, "mia_processes.bricks.preprocess.afni.processes.Calc.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.calcdroptrs method)": [[146, "mia_processes.bricks.preprocess.afni.processes.CalcDropTRs.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.despike method)": [[146, "mia_processes.bricks.preprocess.afni.processes.Despike.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.fwhmx method)": [[146, "mia_processes.bricks.preprocess.afni.processes.FWHMx.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.gcor method)": [[146, "mia_processes.bricks.preprocess.afni.processes.GCOR.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.outliercount method)": [[146, "mia_processes.bricks.preprocess.afni.processes.OutlierCount.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.qualityindex method)": [[146, "mia_processes.bricks.preprocess.afni.processes.QualityIndex.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.refitdeoblique method)": [[146, "mia_processes.bricks.preprocess.afni.processes.RefitDeoblique.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.skullstrip method)": [[146, "mia_processes.bricks.preprocess.afni.processes.SkullStrip.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.tshift method)": [[146, "mia_processes.bricks.preprocess.afni.processes.TShift.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.tstatmean method)": [[146, "mia_processes.bricks.preprocess.afni.processes.TStatMean.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.afni.processes.volreg method)": [[146, "mia_processes.bricks.preprocess.afni.processes.Volreg.list_outputs"]], "mia_processes.bricks.preprocess.afni": [[146, "module-mia_processes.bricks.preprocess.afni"]], "mia_processes.bricks.preprocess.afni.processes": [[146, "module-mia_processes.bricks.preprocess.afni.processes"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.automask method)": [[146, "mia_processes.bricks.preprocess.afni.processes.Automask.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.calc method)": [[146, "mia_processes.bricks.preprocess.afni.processes.Calc.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.calcdroptrs method)": [[146, "mia_processes.bricks.preprocess.afni.processes.CalcDropTRs.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.despike method)": [[146, "mia_processes.bricks.preprocess.afni.processes.Despike.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.fwhmx method)": [[146, "mia_processes.bricks.preprocess.afni.processes.FWHMx.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.gcor method)": [[146, "mia_processes.bricks.preprocess.afni.processes.GCOR.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.outliercount method)": [[146, "mia_processes.bricks.preprocess.afni.processes.OutlierCount.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.qualityindex method)": [[146, "mia_processes.bricks.preprocess.afni.processes.QualityIndex.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.refitdeoblique method)": [[146, "mia_processes.bricks.preprocess.afni.processes.RefitDeoblique.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.skullstrip method)": [[146, "mia_processes.bricks.preprocess.afni.processes.SkullStrip.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.tshift method)": [[146, "mia_processes.bricks.preprocess.afni.processes.TShift.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.tstatmean method)": [[146, "mia_processes.bricks.preprocess.afni.processes.TStatMean.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.afni.processes.volreg method)": [[146, "mia_processes.bricks.preprocess.afni.processes.Volreg.run_process_mia"]], "affineinitializer (class in mia_processes.bricks.preprocess.ants.processes)": [[147, "mia_processes.bricks.preprocess.ants.processes.AffineInitializer"]], "applytransforms (class in mia_processes.bricks.preprocess.ants.processes)": [[147, "mia_processes.bricks.preprocess.ants.processes.ApplyTransforms"]], "n4biasfieldcorrection (class in mia_processes.bricks.preprocess.ants.processes)": [[147, "mia_processes.bricks.preprocess.ants.processes.N4BiasFieldCorrection"]], "registration (class in mia_processes.bricks.preprocess.ants.processes)": [[147, "mia_processes.bricks.preprocess.ants.processes.Registration"]], "__init__() (mia_processes.bricks.preprocess.ants.processes.affineinitializer method)": [[147, "mia_processes.bricks.preprocess.ants.processes.AffineInitializer.__init__"]], "__init__() (mia_processes.bricks.preprocess.ants.processes.applytransforms method)": [[147, "mia_processes.bricks.preprocess.ants.processes.ApplyTransforms.__init__"]], "__init__() (mia_processes.bricks.preprocess.ants.processes.n4biasfieldcorrection method)": [[147, "mia_processes.bricks.preprocess.ants.processes.N4BiasFieldCorrection.__init__"]], "__init__() (mia_processes.bricks.preprocess.ants.processes.registration method)": [[147, "mia_processes.bricks.preprocess.ants.processes.Registration.__init__"]], "list_outputs() (mia_processes.bricks.preprocess.ants.processes.affineinitializer method)": [[147, "mia_processes.bricks.preprocess.ants.processes.AffineInitializer.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.ants.processes.applytransforms method)": [[147, "mia_processes.bricks.preprocess.ants.processes.ApplyTransforms.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.ants.processes.n4biasfieldcorrection method)": [[147, "mia_processes.bricks.preprocess.ants.processes.N4BiasFieldCorrection.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.ants.processes.registration method)": [[147, "mia_processes.bricks.preprocess.ants.processes.Registration.list_outputs"]], "mia_processes.bricks.preprocess.ants": [[147, "module-mia_processes.bricks.preprocess.ants"]], "mia_processes.bricks.preprocess.ants.processes": [[147, "module-mia_processes.bricks.preprocess.ants.processes"]], "run_process_mia() (mia_processes.bricks.preprocess.ants.processes.affineinitializer method)": [[147, "mia_processes.bricks.preprocess.ants.processes.AffineInitializer.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.ants.processes.applytransforms method)": [[147, "mia_processes.bricks.preprocess.ants.processes.ApplyTransforms.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.ants.processes.n4biasfieldcorrection method)": [[147, "mia_processes.bricks.preprocess.ants.processes.N4BiasFieldCorrection.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.ants.processes.registration method)": [[147, "mia_processes.bricks.preprocess.ants.processes.Registration.run_process_mia"]], "computedki (class in mia_processes.bricks.preprocess.dipy.processes)": [[148, "mia_processes.bricks.preprocess.dipy.processes.ComputeDKI"]], "denoise (class in mia_processes.bricks.preprocess.dipy.processes)": [[148, "mia_processes.bricks.preprocess.dipy.processes.Denoise"]], "__init__() (mia_processes.bricks.preprocess.dipy.processes.computedki method)": [[148, "mia_processes.bricks.preprocess.dipy.processes.ComputeDKI.__init__"]], "__init__() (mia_processes.bricks.preprocess.dipy.processes.denoise method)": [[148, "mia_processes.bricks.preprocess.dipy.processes.Denoise.__init__"]], "list_outputs() (mia_processes.bricks.preprocess.dipy.processes.computedki method)": [[148, "mia_processes.bricks.preprocess.dipy.processes.ComputeDKI.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.dipy.processes.denoise method)": [[148, "mia_processes.bricks.preprocess.dipy.processes.Denoise.list_outputs"]], "mia_processes.bricks.preprocess.dipy": [[148, "module-mia_processes.bricks.preprocess.dipy"]], "mia_processes.bricks.preprocess.dipy.processes": [[148, "module-mia_processes.bricks.preprocess.dipy.processes"]], "run_process_mia() (mia_processes.bricks.preprocess.dipy.processes.computedki method)": [[148, "mia_processes.bricks.preprocess.dipy.processes.ComputeDKI.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.dipy.processes.denoise method)": [[148, "mia_processes.bricks.preprocess.dipy.processes.Denoise.run_process_mia"]], "binarize (class in mia_processes.bricks.preprocess.freesurfer.processes)": [[149, "mia_processes.bricks.preprocess.freesurfer.processes.Binarize"]], "synthstrip (class in mia_processes.bricks.preprocess.freesurfer.processes)": [[149, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStrip"]], "synthstripmriqc (class in mia_processes.bricks.preprocess.freesurfer.processes)": [[149, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc"]], "synthstripmriqc.convblock (class in mia_processes.bricks.preprocess.freesurfer.processes)": [[149, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.ConvBlock"]], "synthstripmriqc.stripmodel (class in mia_processes.bricks.preprocess.freesurfer.processes)": [[149, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.StripModel"]], "__init__() (mia_processes.bricks.preprocess.freesurfer.processes.binarize method)": [[149, "mia_processes.bricks.preprocess.freesurfer.processes.Binarize.__init__"]], "__init__() (mia_processes.bricks.preprocess.freesurfer.processes.synthstrip method)": [[149, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStrip.__init__"]], "__init__() (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc method)": [[149, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.__init__"]], "__init__() (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc.convblock method)": [[149, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.ConvBlock.__init__"]], "__init__() (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc.stripmodel method)": [[149, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.StripModel.__init__"]], "conform() (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc method)": [[149, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.conform"]], "forward() (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc.convblock method)": [[149, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.ConvBlock.forward"]], "forward() (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc.stripmodel method)": [[149, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.StripModel.forward"]], "list_outputs() (mia_processes.bricks.preprocess.freesurfer.processes.binarize method)": [[149, "mia_processes.bricks.preprocess.freesurfer.processes.Binarize.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.freesurfer.processes.synthstrip method)": [[149, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStrip.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc method)": [[149, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.list_outputs"]], "mia_processes.bricks.preprocess.freesurfer": [[149, "module-mia_processes.bricks.preprocess.freesurfer"]], "mia_processes.bricks.preprocess.freesurfer.processes": [[149, "module-mia_processes.bricks.preprocess.freesurfer.processes"]], "resample_like() (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc method)": [[149, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.resample_like"]], "run_process_mia() (mia_processes.bricks.preprocess.freesurfer.processes.binarize method)": [[149, "mia_processes.bricks.preprocess.freesurfer.processes.Binarize.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.freesurfer.processes.synthstrip method)": [[149, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStrip.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc method)": [[149, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.run_process_mia"]], "training (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc.convblock attribute)": [[149, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.ConvBlock.training"]], "training (mia_processes.bricks.preprocess.freesurfer.processes.synthstripmriqc.stripmodel attribute)": [[149, "mia_processes.bricks.preprocess.freesurfer.processes.SynthStripMriqc.StripModel.training"]], "betsurfacesextraction (class in mia_processes.bricks.preprocess.fsl.processes)": [[150, "mia_processes.bricks.preprocess.fsl.processes.BetSurfacesExtraction"]], "convertxfm (class in mia_processes.bricks.preprocess.fsl.processes)": [[150, "mia_processes.bricks.preprocess.fsl.processes.ConvertXFM"]], "epireg (class in mia_processes.bricks.preprocess.fsl.processes)": [[150, "mia_processes.bricks.preprocess.fsl.processes.EpiReg"]], "extractroi (class in mia_processes.bricks.preprocess.fsl.processes)": [[150, "mia_processes.bricks.preprocess.fsl.processes.ExtractROI"]], "fastsegment (class in mia_processes.bricks.preprocess.fsl.processes)": [[150, "mia_processes.bricks.preprocess.fsl.processes.FastSegment"]], "flirt (class in mia_processes.bricks.preprocess.fsl.processes)": [[150, "mia_processes.bricks.preprocess.fsl.processes.Flirt"]], "smooth (class in mia_processes.bricks.preprocess.fsl.processes)": [[150, "mia_processes.bricks.preprocess.fsl.processes.Smooth"]], "__init__() (mia_processes.bricks.preprocess.fsl.processes.betsurfacesextraction method)": [[150, "mia_processes.bricks.preprocess.fsl.processes.BetSurfacesExtraction.__init__"]], "__init__() (mia_processes.bricks.preprocess.fsl.processes.convertxfm method)": [[150, "mia_processes.bricks.preprocess.fsl.processes.ConvertXFM.__init__"]], "__init__() (mia_processes.bricks.preprocess.fsl.processes.epireg method)": [[150, "mia_processes.bricks.preprocess.fsl.processes.EpiReg.__init__"]], "__init__() (mia_processes.bricks.preprocess.fsl.processes.extractroi method)": [[150, "mia_processes.bricks.preprocess.fsl.processes.ExtractROI.__init__"]], "__init__() (mia_processes.bricks.preprocess.fsl.processes.fastsegment method)": [[150, "mia_processes.bricks.preprocess.fsl.processes.FastSegment.__init__"]], "__init__() (mia_processes.bricks.preprocess.fsl.processes.flirt method)": [[150, "mia_processes.bricks.preprocess.fsl.processes.Flirt.__init__"]], "__init__() (mia_processes.bricks.preprocess.fsl.processes.smooth method)": [[150, "mia_processes.bricks.preprocess.fsl.processes.Smooth.__init__"]], "list_outputs() (mia_processes.bricks.preprocess.fsl.processes.betsurfacesextraction method)": [[150, "mia_processes.bricks.preprocess.fsl.processes.BetSurfacesExtraction.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.fsl.processes.convertxfm method)": [[150, "mia_processes.bricks.preprocess.fsl.processes.ConvertXFM.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.fsl.processes.epireg method)": [[150, "mia_processes.bricks.preprocess.fsl.processes.EpiReg.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.fsl.processes.extractroi method)": [[150, "mia_processes.bricks.preprocess.fsl.processes.ExtractROI.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.fsl.processes.fastsegment method)": [[150, "mia_processes.bricks.preprocess.fsl.processes.FastSegment.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.fsl.processes.flirt method)": [[150, "mia_processes.bricks.preprocess.fsl.processes.Flirt.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.fsl.processes.smooth method)": [[150, "mia_processes.bricks.preprocess.fsl.processes.Smooth.list_outputs"]], "mia_processes.bricks.preprocess.fsl": [[150, "module-mia_processes.bricks.preprocess.fsl"]], "mia_processes.bricks.preprocess.fsl.processes": [[150, "module-mia_processes.bricks.preprocess.fsl.processes"]], "run_process_mia() (mia_processes.bricks.preprocess.fsl.processes.betsurfacesextraction method)": [[150, "mia_processes.bricks.preprocess.fsl.processes.BetSurfacesExtraction.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.fsl.processes.convertxfm method)": [[150, "mia_processes.bricks.preprocess.fsl.processes.ConvertXFM.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.fsl.processes.epireg method)": [[150, "mia_processes.bricks.preprocess.fsl.processes.EpiReg.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.fsl.processes.extractroi method)": [[150, "mia_processes.bricks.preprocess.fsl.processes.ExtractROI.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.fsl.processes.fastsegment method)": [[150, "mia_processes.bricks.preprocess.fsl.processes.FastSegment.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.fsl.processes.flirt method)": [[150, "mia_processes.bricks.preprocess.fsl.processes.Flirt.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.fsl.processes.smooth method)": [[150, "mia_processes.bricks.preprocess.fsl.processes.Smooth.run_process_mia"]], "constrainedsphericaldeconvolution (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.ConstrainedSphericalDeconvolution"]], "dwibiascorrect (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.DWIBiasCorrect"]], "dwibrainmask (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.DWIBrainMask"]], "dwicat (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.DWICat"]], "dwidenoise (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.DWIDenoise"]], "dwiextract (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.DWIExtract"]], "dwipreproc (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.DWIPreproc"]], "editingtrack (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.EditingTrack"]], "filteringtrack (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.FilteringTrack"]], "fittensor (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.FitTensor"]], "generate5tt2gmwmi (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.Generate5tt2gmwmi"]], "generate5ttfsl (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.Generate5ttfsl"]], "mrcat (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.MRCat"]], "mrconvert (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.MRConvert"]], "mrdegibbs (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.MRDeGibbs"]], "mrmath (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.MRMath"]], "mrtransform (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.MRTransform"]], "mtnormalise (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.MTNormalise"]], "responsesddhollander (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.ResponseSDDhollander"]], "sphericalharmonicextraction (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.SphericalHarmonicExtraction"]], "tensormetrics (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.TensorMetrics"]], "tractography (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.Tractography"]], "transformfslconvert (class in mia_processes.bricks.preprocess.mrtrix.processes)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.TransformFSLConvert"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.constrainedsphericaldeconvolution method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.ConstrainedSphericalDeconvolution.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.dwibiascorrect method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.DWIBiasCorrect.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.dwibrainmask method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.DWIBrainMask.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.dwicat method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.DWICat.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.dwidenoise method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.DWIDenoise.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.dwiextract method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.DWIExtract.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.dwipreproc method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.DWIPreproc.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.editingtrack method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.EditingTrack.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.filteringtrack method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.FilteringTrack.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.fittensor method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.FitTensor.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.generate5tt2gmwmi method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.Generate5tt2gmwmi.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.generate5ttfsl method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.Generate5ttfsl.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.mrcat method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.MRCat.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.mrconvert method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.MRConvert.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.mrdegibbs method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.MRDeGibbs.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.mrmath method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.MRMath.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.mrtransform method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.MRTransform.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.mtnormalise method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.MTNormalise.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.responsesddhollander method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.ResponseSDDhollander.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.sphericalharmonicextraction method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.SphericalHarmonicExtraction.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.tensormetrics method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.TensorMetrics.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.tractography method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.Tractography.__init__"]], "__init__() (mia_processes.bricks.preprocess.mrtrix.processes.transformfslconvert method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.TransformFSLConvert.__init__"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.constrainedsphericaldeconvolution method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.ConstrainedSphericalDeconvolution.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.dwibiascorrect method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.DWIBiasCorrect.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.dwibrainmask method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.DWIBrainMask.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.dwicat method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.DWICat.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.dwidenoise method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.DWIDenoise.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.dwiextract method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.DWIExtract.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.dwipreproc method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.DWIPreproc.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.editingtrack method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.EditingTrack.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.filteringtrack method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.FilteringTrack.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.fittensor method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.FitTensor.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.generate5tt2gmwmi method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.Generate5tt2gmwmi.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.generate5ttfsl method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.Generate5ttfsl.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.mrcat method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.MRCat.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.mrconvert method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.MRConvert.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.mrdegibbs method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.MRDeGibbs.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.mrmath method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.MRMath.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.mrtransform method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.MRTransform.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.mtnormalise method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.MTNormalise.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.responsesddhollander method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.ResponseSDDhollander.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.sphericalharmonicextraction method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.SphericalHarmonicExtraction.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.tensormetrics method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.TensorMetrics.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.tractography method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.Tractography.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.mrtrix.processes.transformfslconvert method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.TransformFSLConvert.list_outputs"]], "mia_processes.bricks.preprocess.mrtrix": [[151, "module-mia_processes.bricks.preprocess.mrtrix"]], "mia_processes.bricks.preprocess.mrtrix.processes": [[151, "module-mia_processes.bricks.preprocess.mrtrix.processes"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.constrainedsphericaldeconvolution method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.ConstrainedSphericalDeconvolution.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.dwibiascorrect method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.DWIBiasCorrect.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.dwibrainmask method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.DWIBrainMask.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.dwicat method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.DWICat.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.dwidenoise method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.DWIDenoise.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.dwiextract method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.DWIExtract.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.dwipreproc method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.DWIPreproc.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.editingtrack method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.EditingTrack.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.filteringtrack method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.FilteringTrack.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.fittensor method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.FitTensor.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.generate5tt2gmwmi method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.Generate5tt2gmwmi.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.generate5ttfsl method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.Generate5ttfsl.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.mrcat method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.MRCat.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.mrconvert method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.MRConvert.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.mrdegibbs method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.MRDeGibbs.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.mrmath method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.MRMath.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.mrtransform method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.MRTransform.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.mtnormalise method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.MTNormalise.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.responsesddhollander method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.ResponseSDDhollander.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.sphericalharmonicextraction method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.SphericalHarmonicExtraction.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.tensormetrics method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.TensorMetrics.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.tractography method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.Tractography.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.mrtrix.processes.transformfslconvert method)": [[151, "mia_processes.bricks.preprocess.mrtrix.processes.TransformFSLConvert.run_process_mia"]], "applybiascorrection (class in mia_processes.bricks.preprocess.others.processing)": [[152, "mia_processes.bricks.preprocess.others.processing.ApplyBiasCorrection"]], "artifactmask (class in mia_processes.bricks.preprocess.others.processing)": [[152, "mia_processes.bricks.preprocess.others.processing.ArtifactMask"]], "binarize (class in mia_processes.bricks.preprocess.others.processing)": [[152, "mia_processes.bricks.preprocess.others.processing.Binarize"]], "conformimage (class in mia_processes.bricks.preprocess.others.processing)": [[152, "mia_processes.bricks.preprocess.others.processing.ConformImage"]], "convroi (class in mia_processes.bricks.preprocess.others.processing)": [[152, "mia_processes.bricks.preprocess.others.processing.ConvROI"]], "enhance (class in mia_processes.bricks.preprocess.others.processing)": [[152, "mia_processes.bricks.preprocess.others.processing.Enhance"]], "estimatesnr (class in mia_processes.bricks.preprocess.others.processing)": [[152, "mia_processes.bricks.preprocess.others.processing.EstimateSNR"]], "extractroibylabel (class in mia_processes.bricks.preprocess.others.processing)": [[152, "mia_processes.bricks.preprocess.others.processing.ExtractROIbyLabel"]], "extractsignalroi (class in mia_processes.bricks.preprocess.others.processing)": [[152, "mia_processes.bricks.preprocess.others.processing.ExtractSignalROI"]], "gradientthreshold (class in mia_processes.bricks.preprocess.others.processing)": [[152, "mia_processes.bricks.preprocess.others.processing.GradientThreshold"]], "harmonize (class in mia_processes.bricks.preprocess.others.processing)": [[152, "mia_processes.bricks.preprocess.others.processing.Harmonize"]], "intensityclip (class in mia_processes.bricks.preprocess.others.processing)": [[152, "mia_processes.bricks.preprocess.others.processing.IntensityClip"]], "mask (class in mia_processes.bricks.preprocess.others.processing)": [[152, "mia_processes.bricks.preprocess.others.processing.Mask"]], "nonsteadystatedetector (class in mia_processes.bricks.preprocess.others.processing)": [[152, "mia_processes.bricks.preprocess.others.processing.NonSteadyStateDetector"]], "resample1 (class in mia_processes.bricks.preprocess.others.processing)": [[152, "mia_processes.bricks.preprocess.others.processing.Resample1"]], "resample2 (class in mia_processes.bricks.preprocess.others.processing)": [[152, "mia_processes.bricks.preprocess.others.processing.Resample2"]], "rotationmask (class in mia_processes.bricks.preprocess.others.processing)": [[152, "mia_processes.bricks.preprocess.others.processing.RotationMask"]], "sanitize (class in mia_processes.bricks.preprocess.others.processing)": [[152, "mia_processes.bricks.preprocess.others.processing.Sanitize"]], "tsnr (class in mia_processes.bricks.preprocess.others.processing)": [[152, "mia_processes.bricks.preprocess.others.processing.TSNR"]], "templatefromtemplateflow (class in mia_processes.bricks.preprocess.others.processing)": [[152, "mia_processes.bricks.preprocess.others.processing.TemplateFromTemplateFlow"]], "threshold (class in mia_processes.bricks.preprocess.others.processing)": [[152, "mia_processes.bricks.preprocess.others.processing.Threshold"]], "__init__() (mia_processes.bricks.preprocess.others.processing.applybiascorrection method)": [[152, "mia_processes.bricks.preprocess.others.processing.ApplyBiasCorrection.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.artifactmask method)": [[152, "mia_processes.bricks.preprocess.others.processing.ArtifactMask.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.binarize method)": [[152, "mia_processes.bricks.preprocess.others.processing.Binarize.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.conformimage method)": [[152, "mia_processes.bricks.preprocess.others.processing.ConformImage.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.convroi method)": [[152, "mia_processes.bricks.preprocess.others.processing.ConvROI.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.enhance method)": [[152, "mia_processes.bricks.preprocess.others.processing.Enhance.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.estimatesnr method)": [[152, "mia_processes.bricks.preprocess.others.processing.EstimateSNR.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.extractroibylabel method)": [[152, "mia_processes.bricks.preprocess.others.processing.ExtractROIbyLabel.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.extractsignalroi method)": [[152, "mia_processes.bricks.preprocess.others.processing.ExtractSignalROI.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.gradientthreshold method)": [[152, "mia_processes.bricks.preprocess.others.processing.GradientThreshold.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.harmonize method)": [[152, "mia_processes.bricks.preprocess.others.processing.Harmonize.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.intensityclip method)": [[152, "mia_processes.bricks.preprocess.others.processing.IntensityClip.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.mask method)": [[152, "mia_processes.bricks.preprocess.others.processing.Mask.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.nonsteadystatedetector method)": [[152, "mia_processes.bricks.preprocess.others.processing.NonSteadyStateDetector.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.resample1 method)": [[152, "mia_processes.bricks.preprocess.others.processing.Resample1.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.resample2 method)": [[152, "mia_processes.bricks.preprocess.others.processing.Resample2.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.rotationmask method)": [[152, "mia_processes.bricks.preprocess.others.processing.RotationMask.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.sanitize method)": [[152, "mia_processes.bricks.preprocess.others.processing.Sanitize.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.tsnr method)": [[152, "mia_processes.bricks.preprocess.others.processing.TSNR.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.templatefromtemplateflow method)": [[152, "mia_processes.bricks.preprocess.others.processing.TemplateFromTemplateFlow.__init__"]], "__init__() (mia_processes.bricks.preprocess.others.processing.threshold method)": [[152, "mia_processes.bricks.preprocess.others.processing.Threshold.__init__"]], "artifact_mask() (in module mia_processes.bricks.preprocess.others.processing)": [[152, "mia_processes.bricks.preprocess.others.processing.artifact_mask"]], "is_outlier() (in module mia_processes.bricks.preprocess.others.processing)": [[152, "mia_processes.bricks.preprocess.others.processing.is_outlier"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.applybiascorrection method)": [[152, "mia_processes.bricks.preprocess.others.processing.ApplyBiasCorrection.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.artifactmask method)": [[152, "mia_processes.bricks.preprocess.others.processing.ArtifactMask.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.binarize method)": [[152, "mia_processes.bricks.preprocess.others.processing.Binarize.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.conformimage method)": [[152, "mia_processes.bricks.preprocess.others.processing.ConformImage.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.convroi method)": [[152, "mia_processes.bricks.preprocess.others.processing.ConvROI.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.enhance method)": [[152, "mia_processes.bricks.preprocess.others.processing.Enhance.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.estimatesnr method)": [[152, "mia_processes.bricks.preprocess.others.processing.EstimateSNR.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.extractroibylabel method)": [[152, "mia_processes.bricks.preprocess.others.processing.ExtractROIbyLabel.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.extractsignalroi method)": [[152, "mia_processes.bricks.preprocess.others.processing.ExtractSignalROI.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.gradientthreshold method)": [[152, "mia_processes.bricks.preprocess.others.processing.GradientThreshold.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.harmonize method)": [[152, "mia_processes.bricks.preprocess.others.processing.Harmonize.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.intensityclip method)": [[152, "mia_processes.bricks.preprocess.others.processing.IntensityClip.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.mask method)": [[152, "mia_processes.bricks.preprocess.others.processing.Mask.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.nonsteadystatedetector method)": [[152, "mia_processes.bricks.preprocess.others.processing.NonSteadyStateDetector.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.resample1 method)": [[152, "mia_processes.bricks.preprocess.others.processing.Resample1.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.resample2 method)": [[152, "mia_processes.bricks.preprocess.others.processing.Resample2.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.rotationmask method)": [[152, "mia_processes.bricks.preprocess.others.processing.RotationMask.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.sanitize method)": [[152, "mia_processes.bricks.preprocess.others.processing.Sanitize.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.tsnr method)": [[152, "mia_processes.bricks.preprocess.others.processing.TSNR.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.templatefromtemplateflow method)": [[152, "mia_processes.bricks.preprocess.others.processing.TemplateFromTemplateFlow.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.others.processing.threshold method)": [[152, "mia_processes.bricks.preprocess.others.processing.Threshold.list_outputs"]], "mia_processes.bricks.preprocess.others": [[152, "module-mia_processes.bricks.preprocess.others"]], "mia_processes.bricks.preprocess.others.processing": [[152, "module-mia_processes.bricks.preprocess.others.processing"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.applybiascorrection method)": [[152, "mia_processes.bricks.preprocess.others.processing.ApplyBiasCorrection.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.artifactmask method)": [[152, "mia_processes.bricks.preprocess.others.processing.ArtifactMask.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.binarize method)": [[152, "mia_processes.bricks.preprocess.others.processing.Binarize.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.conformimage method)": [[152, "mia_processes.bricks.preprocess.others.processing.ConformImage.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.convroi method)": [[152, "mia_processes.bricks.preprocess.others.processing.ConvROI.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.enhance method)": [[152, "mia_processes.bricks.preprocess.others.processing.Enhance.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.estimatesnr method)": [[152, "mia_processes.bricks.preprocess.others.processing.EstimateSNR.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.extractroibylabel method)": [[152, "mia_processes.bricks.preprocess.others.processing.ExtractROIbyLabel.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.extractsignalroi method)": [[152, "mia_processes.bricks.preprocess.others.processing.ExtractSignalROI.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.gradientthreshold method)": [[152, "mia_processes.bricks.preprocess.others.processing.GradientThreshold.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.harmonize method)": [[152, "mia_processes.bricks.preprocess.others.processing.Harmonize.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.intensityclip method)": [[152, "mia_processes.bricks.preprocess.others.processing.IntensityClip.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.mask method)": [[152, "mia_processes.bricks.preprocess.others.processing.Mask.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.nonsteadystatedetector method)": [[152, "mia_processes.bricks.preprocess.others.processing.NonSteadyStateDetector.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.resample1 method)": [[152, "mia_processes.bricks.preprocess.others.processing.Resample1.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.resample2 method)": [[152, "mia_processes.bricks.preprocess.others.processing.Resample2.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.rotationmask method)": [[152, "mia_processes.bricks.preprocess.others.processing.RotationMask.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.sanitize method)": [[152, "mia_processes.bricks.preprocess.others.processing.Sanitize.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.tsnr method)": [[152, "mia_processes.bricks.preprocess.others.processing.TSNR.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.templatefromtemplateflow method)": [[152, "mia_processes.bricks.preprocess.others.processing.TemplateFromTemplateFlow.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.others.processing.threshold method)": [[152, "mia_processes.bricks.preprocess.others.processing.Threshold.run_process_mia"]], "threshold() (in module mia_processes.bricks.preprocess.others.processing)": [[152, "mia_processes.bricks.preprocess.others.processing.threshold"]], "coregister (class in mia_processes.bricks.preprocess.spm.spatial_preprocessing)": [[153, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Coregister"]], "gm_wm_normalize (class in mia_processes.bricks.preprocess.spm.spatial_preprocessing)": [[153, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.GM_WM_Normalize"]], "newsegment (class in mia_processes.bricks.preprocess.spm.spatial_preprocessing)": [[153, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.NewSegment"]], "normalize12 (class in mia_processes.bricks.preprocess.spm.spatial_preprocessing)": [[153, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Normalize12"]], "realign (class in mia_processes.bricks.preprocess.spm.spatial_preprocessing)": [[153, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Realign"]], "slicetiming (class in mia_processes.bricks.preprocess.spm.spatial_preprocessing)": [[153, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.SliceTiming"]], "smooth (class in mia_processes.bricks.preprocess.spm.spatial_preprocessing)": [[153, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Smooth"]], "__init__() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.coregister method)": [[153, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Coregister.__init__"]], "__init__() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.gm_wm_normalize method)": [[153, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.GM_WM_Normalize.__init__"]], "__init__() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.newsegment method)": [[153, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.NewSegment.__init__"]], "__init__() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.normalize12 method)": [[153, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Normalize12.__init__"]], "__init__() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.realign method)": [[153, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Realign.__init__"]], "__init__() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.slicetiming method)": [[153, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.SliceTiming.__init__"]], "__init__() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.smooth method)": [[153, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Smooth.__init__"]], "list_outputs() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.coregister method)": [[153, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Coregister.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.gm_wm_normalize method)": [[153, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.GM_WM_Normalize.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.newsegment method)": [[153, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.NewSegment.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.normalize12 method)": [[153, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Normalize12.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.realign method)": [[153, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Realign.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.slicetiming method)": [[153, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.SliceTiming.list_outputs"]], "list_outputs() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.smooth method)": [[153, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Smooth.list_outputs"]], "mia_processes.bricks.preprocess.spm": [[153, "module-mia_processes.bricks.preprocess.spm"]], "mia_processes.bricks.preprocess.spm.spatial_preprocessing": [[153, "module-mia_processes.bricks.preprocess.spm.spatial_preprocessing"]], "run_process_mia() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.coregister method)": [[153, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Coregister.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.gm_wm_normalize method)": [[153, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.GM_WM_Normalize.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.newsegment method)": [[153, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.NewSegment.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.normalize12 method)": [[153, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Normalize12.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.realign method)": [[153, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Realign.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.slicetiming method)": [[153, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.SliceTiming.run_process_mia"]], "run_process_mia() (mia_processes.bricks.preprocess.spm.spatial_preprocessing.smooth method)": [[153, "mia_processes.bricks.preprocess.spm.spatial_preprocessing.Smooth.run_process_mia"]], "anatiqms (class in mia_processes.bricks.reports.processes)": [[154, "mia_processes.bricks.reports.processes.AnatIQMs"]], "boldiqms (class in mia_processes.bricks.reports.processes)": [[154, "mia_processes.bricks.reports.processes.BoldIQMs"]], "boldiqmsplot (class in mia_processes.bricks.reports.processes)": [[154, "mia_processes.bricks.reports.processes.BoldIQMsPlot"]], "carpetparcellation (class in mia_processes.bricks.reports.processes)": [[154, "mia_processes.bricks.reports.processes.CarpetParcellation"]], "computedvars (class in mia_processes.bricks.reports.processes)": [[154, "mia_processes.bricks.reports.processes.ComputeDVARS"]], "framewisedisplacement (class in mia_processes.bricks.reports.processes)": [[154, "mia_processes.bricks.reports.processes.FramewiseDisplacement"]], "mean_stddev_calc (class in mia_processes.bricks.reports.processes)": [[154, "mia_processes.bricks.reports.processes.Mean_stdDev_calc"]], "plotsignalroi (class in mia_processes.bricks.reports.processes)": [[154, "mia_processes.bricks.reports.processes.PlotSignalROI"]], "reportanatmriqc (class in mia_processes.bricks.reports.reporting)": [[154, "mia_processes.bricks.reports.reporting.ReportAnatMriqc"]], "reportco2inhalcvr (class in mia_processes.bricks.reports.reporting)": [[154, "mia_processes.bricks.reports.reporting.ReportCO2inhalCvr"]], "reportfuncmriqc (class in mia_processes.bricks.reports.reporting)": [[154, "mia_processes.bricks.reports.reporting.ReportFuncMriqc"]], "reportgroupmriqc (class in mia_processes.bricks.reports.reporting)": [[154, "mia_processes.bricks.reports.reporting.ReportGroupMriqc"]], "result_collector (class in mia_processes.bricks.reports.processes)": [[154, "mia_processes.bricks.reports.processes.Result_collector"]], "spikes (class in mia_processes.bricks.reports.processes)": [[154, "mia_processes.bricks.reports.processes.Spikes"]], "__init__() (mia_processes.bricks.reports.processes.anatiqms method)": [[154, "mia_processes.bricks.reports.processes.AnatIQMs.__init__"]], "__init__() (mia_processes.bricks.reports.processes.boldiqms method)": [[154, "mia_processes.bricks.reports.processes.BoldIQMs.__init__"]], "__init__() (mia_processes.bricks.reports.processes.boldiqmsplot method)": [[154, "mia_processes.bricks.reports.processes.BoldIQMsPlot.__init__"]], "__init__() (mia_processes.bricks.reports.processes.carpetparcellation method)": [[154, "mia_processes.bricks.reports.processes.CarpetParcellation.__init__"]], "__init__() (mia_processes.bricks.reports.processes.computedvars method)": [[154, "mia_processes.bricks.reports.processes.ComputeDVARS.__init__"]], "__init__() (mia_processes.bricks.reports.processes.framewisedisplacement method)": [[154, "mia_processes.bricks.reports.processes.FramewiseDisplacement.__init__"]], "__init__() (mia_processes.bricks.reports.processes.mean_stddev_calc method)": [[154, "mia_processes.bricks.reports.processes.Mean_stdDev_calc.__init__"]], "__init__() (mia_processes.bricks.reports.processes.plotsignalroi method)": [[154, "mia_processes.bricks.reports.processes.PlotSignalROI.__init__"]], "__init__() (mia_processes.bricks.reports.processes.result_collector method)": [[154, "mia_processes.bricks.reports.processes.Result_collector.__init__"]], "__init__() (mia_processes.bricks.reports.processes.spikes method)": [[154, "mia_processes.bricks.reports.processes.Spikes.__init__"]], "__init__() (mia_processes.bricks.reports.reporting.reportanatmriqc method)": [[154, "mia_processes.bricks.reports.reporting.ReportAnatMriqc.__init__"]], "__init__() (mia_processes.bricks.reports.reporting.reportco2inhalcvr method)": [[154, "mia_processes.bricks.reports.reporting.ReportCO2inhalCvr.__init__"]], "__init__() (mia_processes.bricks.reports.reporting.reportfuncmriqc method)": [[154, "mia_processes.bricks.reports.reporting.ReportFuncMriqc.__init__"]], "__init__() (mia_processes.bricks.reports.reporting.reportgroupmriqc method)": [[154, "mia_processes.bricks.reports.reporting.ReportGroupMriqc.__init__"]], "art_qi1() (in module mia_processes.bricks.reports.processes)": [[154, "mia_processes.bricks.reports.processes.art_qi1"]], "art_qi2() (in module mia_processes.bricks.reports.processes)": [[154, "mia_processes.bricks.reports.processes.art_qi2"]], "cjv() (in module mia_processes.bricks.reports.processes)": [[154, "mia_processes.bricks.reports.processes.cjv"]], "cnr() (in module mia_processes.bricks.reports.processes)": [[154, "mia_processes.bricks.reports.processes.cnr"]], "efc() (in module mia_processes.bricks.reports.processes)": [[154, "mia_processes.bricks.reports.processes.efc"]], "fber() (in module mia_processes.bricks.reports.processes)": [[154, "mia_processes.bricks.reports.processes.fber"]], "find_peaks() (in module mia_processes.bricks.reports.processes)": [[154, "mia_processes.bricks.reports.processes.find_peaks"]], "find_spikes() (in module mia_processes.bricks.reports.processes)": [[154, "mia_processes.bricks.reports.processes.find_spikes"]], "fuzzy_jaccard() (in module mia_processes.bricks.reports.processes)": [[154, "mia_processes.bricks.reports.processes.fuzzy_jaccard"]], "gsr() (in module mia_processes.bricks.reports.processes)": [[154, "mia_processes.bricks.reports.processes.gsr"]], "image_binary_dilation() (in module mia_processes.bricks.reports.processes)": [[154, "mia_processes.bricks.reports.processes.image_binary_dilation"]], "list_outputs() (mia_processes.bricks.reports.processes.anatiqms method)": [[154, "mia_processes.bricks.reports.processes.AnatIQMs.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.processes.boldiqms method)": [[154, "mia_processes.bricks.reports.processes.BoldIQMs.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.processes.boldiqmsplot method)": [[154, "mia_processes.bricks.reports.processes.BoldIQMsPlot.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.processes.carpetparcellation method)": [[154, "mia_processes.bricks.reports.processes.CarpetParcellation.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.processes.computedvars method)": [[154, "mia_processes.bricks.reports.processes.ComputeDVARS.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.processes.framewisedisplacement method)": [[154, "mia_processes.bricks.reports.processes.FramewiseDisplacement.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.processes.mean_stddev_calc method)": [[154, "mia_processes.bricks.reports.processes.Mean_stdDev_calc.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.processes.plotsignalroi method)": [[154, "mia_processes.bricks.reports.processes.PlotSignalROI.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.processes.result_collector method)": [[154, "mia_processes.bricks.reports.processes.Result_collector.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.processes.spikes method)": [[154, "mia_processes.bricks.reports.processes.Spikes.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.reporting.reportanatmriqc method)": [[154, "mia_processes.bricks.reports.reporting.ReportAnatMriqc.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.reporting.reportco2inhalcvr method)": [[154, "mia_processes.bricks.reports.reporting.ReportCO2inhalCvr.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.reporting.reportfuncmriqc method)": [[154, "mia_processes.bricks.reports.reporting.ReportFuncMriqc.list_outputs"]], "list_outputs() (mia_processes.bricks.reports.reporting.reportgroupmriqc method)": [[154, "mia_processes.bricks.reports.reporting.ReportGroupMriqc.list_outputs"]], "mia_processes.bricks.reports": [[154, "module-mia_processes.bricks.reports"]], "mia_processes.bricks.reports.processes": [[154, "module-mia_processes.bricks.reports.processes"]], "mia_processes.bricks.reports.reporting": [[154, "module-mia_processes.bricks.reports.reporting"]], "normalize_mc_params() (in module mia_processes.bricks.reports.processes)": [[154, "mia_processes.bricks.reports.processes.normalize_mc_params"]], "regress_poly() (in module mia_processes.bricks.reports.processes)": [[154, "mia_processes.bricks.reports.processes.regress_poly"]], "rpve() (in module mia_processes.bricks.reports.processes)": [[154, "mia_processes.bricks.reports.processes.rpve"]], "run_process_mia() (mia_processes.bricks.reports.processes.anatiqms method)": [[154, "mia_processes.bricks.reports.processes.AnatIQMs.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.processes.boldiqms method)": [[154, "mia_processes.bricks.reports.processes.BoldIQMs.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.processes.boldiqmsplot method)": [[154, "mia_processes.bricks.reports.processes.BoldIQMsPlot.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.processes.carpetparcellation method)": [[154, "mia_processes.bricks.reports.processes.CarpetParcellation.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.processes.computedvars method)": [[154, "mia_processes.bricks.reports.processes.ComputeDVARS.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.processes.framewisedisplacement method)": [[154, "mia_processes.bricks.reports.processes.FramewiseDisplacement.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.processes.mean_stddev_calc method)": [[154, "mia_processes.bricks.reports.processes.Mean_stdDev_calc.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.processes.plotsignalroi method)": [[154, "mia_processes.bricks.reports.processes.PlotSignalROI.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.processes.result_collector method)": [[154, "mia_processes.bricks.reports.processes.Result_collector.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.processes.spikes method)": [[154, "mia_processes.bricks.reports.processes.Spikes.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.reporting.reportanatmriqc method)": [[154, "mia_processes.bricks.reports.reporting.ReportAnatMriqc.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.reporting.reportco2inhalcvr method)": [[154, "mia_processes.bricks.reports.reporting.ReportCO2inhalCvr.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.reporting.reportfuncmriqc method)": [[154, "mia_processes.bricks.reports.reporting.ReportFuncMriqc.run_process_mia"]], "run_process_mia() (mia_processes.bricks.reports.reporting.reportgroupmriqc method)": [[154, "mia_processes.bricks.reports.reporting.ReportGroupMriqc.run_process_mia"]], "snr() (in module mia_processes.bricks.reports.processes)": [[154, "mia_processes.bricks.reports.processes.snr"]], "snr_dietrich() (in module mia_processes.bricks.reports.processes)": [[154, "mia_processes.bricks.reports.processes.snr_dietrich"]], "summary_stats() (in module mia_processes.bricks.reports.processes)": [[154, "mia_processes.bricks.reports.processes.summary_stats"]], "volume_fraction() (in module mia_processes.bricks.reports.processes)": [[154, "mia_processes.bricks.reports.processes.volume_fraction"]], "wm2max() (in module mia_processes.bricks.reports.processes)": [[154, "mia_processes.bricks.reports.processes.wm2max"]], "mia_processes.bricks.stat": [[155, "module-mia_processes.bricks.stat"]], "estimatecontrast (class in mia_processes.bricks.stat.spm.model)": [[156, "mia_processes.bricks.stat.spm.model.EstimateContrast"]], "estimatemodel (class in mia_processes.bricks.stat.spm.model)": [[156, "mia_processes.bricks.stat.spm.model.EstimateModel"]], "level1design (class in mia_processes.bricks.stat.spm.model)": [[156, "mia_processes.bricks.stat.spm.model.Level1Design"]], "multipleregressiondesign (class in mia_processes.bricks.stat.spm.model)": [[156, "mia_processes.bricks.stat.spm.model.MultipleRegressionDesign"]], "onesamplettestdesign (class in mia_processes.bricks.stat.spm.model)": [[156, "mia_processes.bricks.stat.spm.model.OneSampleTTestDesign"]], "pairedttestdesign (class in mia_processes.bricks.stat.spm.model)": [[156, "mia_processes.bricks.stat.spm.model.PairedTTestDesign"]], "twosamplettestdesign (class in mia_processes.bricks.stat.spm.model)": [[156, "mia_processes.bricks.stat.spm.model.TwoSampleTTestDesign"]], "__init__() (mia_processes.bricks.stat.spm.model.estimatecontrast method)": [[156, "mia_processes.bricks.stat.spm.model.EstimateContrast.__init__"]], "__init__() (mia_processes.bricks.stat.spm.model.estimatemodel method)": [[156, "mia_processes.bricks.stat.spm.model.EstimateModel.__init__"]], "__init__() (mia_processes.bricks.stat.spm.model.level1design method)": [[156, "mia_processes.bricks.stat.spm.model.Level1Design.__init__"]], "__init__() (mia_processes.bricks.stat.spm.model.multipleregressiondesign method)": [[156, "mia_processes.bricks.stat.spm.model.MultipleRegressionDesign.__init__"]], "__init__() (mia_processes.bricks.stat.spm.model.onesamplettestdesign method)": [[156, "mia_processes.bricks.stat.spm.model.OneSampleTTestDesign.__init__"]], "__init__() (mia_processes.bricks.stat.spm.model.pairedttestdesign method)": [[156, "mia_processes.bricks.stat.spm.model.PairedTTestDesign.__init__"]], "__init__() (mia_processes.bricks.stat.spm.model.twosamplettestdesign method)": [[156, "mia_processes.bricks.stat.spm.model.TwoSampleTTestDesign.__init__"]], "get_covariates() (in module mia_processes.bricks.stat.spm.model)": [[156, "mia_processes.bricks.stat.spm.model.get_covariates"]], "list_outputs() (mia_processes.bricks.stat.spm.model.estimatecontrast method)": [[156, "mia_processes.bricks.stat.spm.model.EstimateContrast.list_outputs"]], "list_outputs() (mia_processes.bricks.stat.spm.model.estimatemodel method)": [[156, "mia_processes.bricks.stat.spm.model.EstimateModel.list_outputs"]], "list_outputs() (mia_processes.bricks.stat.spm.model.level1design method)": [[156, "mia_processes.bricks.stat.spm.model.Level1Design.list_outputs"]], "list_outputs() (mia_processes.bricks.stat.spm.model.multipleregressiondesign method)": [[156, "mia_processes.bricks.stat.spm.model.MultipleRegressionDesign.list_outputs"]], "list_outputs() (mia_processes.bricks.stat.spm.model.onesamplettestdesign method)": [[156, "mia_processes.bricks.stat.spm.model.OneSampleTTestDesign.list_outputs"]], "list_outputs() (mia_processes.bricks.stat.spm.model.pairedttestdesign method)": [[156, "mia_processes.bricks.stat.spm.model.PairedTTestDesign.list_outputs"]], "list_outputs() (mia_processes.bricks.stat.spm.model.twosamplettestdesign method)": [[156, "mia_processes.bricks.stat.spm.model.TwoSampleTTestDesign.list_outputs"]], "mia_processes.bricks.stat.spm": [[156, "module-mia_processes.bricks.stat.spm"]], "mia_processes.bricks.stat.spm.model": [[156, "module-mia_processes.bricks.stat.spm.model"]], "run_process_mia() (mia_processes.bricks.stat.spm.model.estimatecontrast method)": [[156, "mia_processes.bricks.stat.spm.model.EstimateContrast.run_process_mia"]], "run_process_mia() (mia_processes.bricks.stat.spm.model.estimatemodel method)": [[156, "mia_processes.bricks.stat.spm.model.EstimateModel.run_process_mia"]], "run_process_mia() (mia_processes.bricks.stat.spm.model.level1design method)": [[156, "mia_processes.bricks.stat.spm.model.Level1Design.run_process_mia"]], "run_process_mia() (mia_processes.bricks.stat.spm.model.multipleregressiondesign method)": [[156, "mia_processes.bricks.stat.spm.model.MultipleRegressionDesign.run_process_mia"]], "run_process_mia() (mia_processes.bricks.stat.spm.model.onesamplettestdesign method)": [[156, "mia_processes.bricks.stat.spm.model.OneSampleTTestDesign.run_process_mia"]], "run_process_mia() (mia_processes.bricks.stat.spm.model.pairedttestdesign method)": [[156, "mia_processes.bricks.stat.spm.model.PairedTTestDesign.run_process_mia"]], "run_process_mia() (mia_processes.bricks.stat.spm.model.twosamplettestdesign method)": [[156, "mia_processes.bricks.stat.spm.model.TwoSampleTTestDesign.run_process_mia"]], "concat_to_list (class in mia_processes.bricks.tools.tools)": [[157, "mia_processes.bricks.tools.tools.Concat_to_list"]], "concat_to_list_of_list (class in mia_processes.bricks.tools.tools)": [[157, "mia_processes.bricks.tools.tools.Concat_to_list_of_list"]], "delete_data (class in mia_processes.bricks.tools.tools)": [[157, "mia_processes.bricks.tools.tools.Delete_data"]], "files_to_list (class in mia_processes.bricks.tools.tools)": [[157, "mia_processes.bricks.tools.tools.Files_To_List"]], "filter_files_list (class in mia_processes.bricks.tools.tools)": [[157, "mia_processes.bricks.tools.tools.Filter_Files_List"]], "find_in_list (class in mia_processes.bricks.tools.tools)": [[157, "mia_processes.bricks.tools.tools.Find_In_List"]], "get_conditions_from_csv (class in mia_processes.bricks.tools.tools)": [[157, "mia_processes.bricks.tools.tools.Get_Conditions_From_csv"]], "get_patient_name (class in mia_processes.bricks.tools.tools)": [[157, "mia_processes.bricks.tools.tools.Get_Patient_Name"]], "import_data (class in mia_processes.bricks.tools.tools)": [[157, "mia_processes.bricks.tools.tools.Import_Data"]], "input_filter (class in mia_processes.bricks.tools.tools)": [[157, "mia_processes.bricks.tools.tools.Input_Filter"]], "list_duplicate (class in mia_processes.bricks.tools.tools)": [[157, "mia_processes.bricks.tools.tools.List_Duplicate"]], "list_to_file (class in mia_processes.bricks.tools.tools)": [[157, "mia_processes.bricks.tools.tools.List_To_File"]], "make_a_list (class in mia_processes.bricks.tools.tools)": [[157, "mia_processes.bricks.tools.tools.Make_A_List"]], "make_cvr_reg_physio (class in mia_processes.bricks.tools.tools)": [[157, "mia_processes.bricks.tools.tools.Make_CVR_reg_physio"]], "__init__() (mia_processes.bricks.tools.tools.concat_to_list method)": [[157, "mia_processes.bricks.tools.tools.Concat_to_list.__init__"]], "__init__() (mia_processes.bricks.tools.tools.concat_to_list_of_list method)": [[157, "mia_processes.bricks.tools.tools.Concat_to_list_of_list.__init__"]], "__init__() (mia_processes.bricks.tools.tools.delete_data method)": [[157, "mia_processes.bricks.tools.tools.Delete_data.__init__"]], "__init__() (mia_processes.bricks.tools.tools.files_to_list method)": [[157, "mia_processes.bricks.tools.tools.Files_To_List.__init__"]], "__init__() (mia_processes.bricks.tools.tools.filter_files_list method)": [[157, "mia_processes.bricks.tools.tools.Filter_Files_List.__init__"]], "__init__() (mia_processes.bricks.tools.tools.find_in_list method)": [[157, "mia_processes.bricks.tools.tools.Find_In_List.__init__"]], "__init__() (mia_processes.bricks.tools.tools.get_conditions_from_csv method)": [[157, "mia_processes.bricks.tools.tools.Get_Conditions_From_csv.__init__"]], "__init__() (mia_processes.bricks.tools.tools.get_patient_name method)": [[157, "mia_processes.bricks.tools.tools.Get_Patient_Name.__init__"]], "__init__() (mia_processes.bricks.tools.tools.import_data method)": [[157, "mia_processes.bricks.tools.tools.Import_Data.__init__"]], "__init__() (mia_processes.bricks.tools.tools.input_filter method)": [[157, "mia_processes.bricks.tools.tools.Input_Filter.__init__"]], "__init__() (mia_processes.bricks.tools.tools.list_duplicate method)": [[157, "mia_processes.bricks.tools.tools.List_Duplicate.__init__"]], "__init__() (mia_processes.bricks.tools.tools.list_to_file method)": [[157, "mia_processes.bricks.tools.tools.List_To_File.__init__"]], "__init__() (mia_processes.bricks.tools.tools.make_a_list method)": [[157, "mia_processes.bricks.tools.tools.Make_A_List.__init__"]], "__init__() (mia_processes.bricks.tools.tools.make_cvr_reg_physio method)": [[157, "mia_processes.bricks.tools.tools.Make_CVR_reg_physio.__init__"]], "gaussfir() (mia_processes.bricks.tools.tools.make_cvr_reg_physio method)": [[157, "mia_processes.bricks.tools.tools.Make_CVR_reg_physio.gaussfir"]], "gfb_conv() (mia_processes.bricks.tools.tools.make_cvr_reg_physio method)": [[157, "mia_processes.bricks.tools.tools.Make_CVR_reg_physio.gfb_conv"]], "list_outputs() (mia_processes.bricks.tools.tools.concat_to_list method)": [[157, "mia_processes.bricks.tools.tools.Concat_to_list.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.concat_to_list_of_list method)": [[157, "mia_processes.bricks.tools.tools.Concat_to_list_of_list.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.delete_data method)": [[157, "mia_processes.bricks.tools.tools.Delete_data.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.files_to_list method)": [[157, "mia_processes.bricks.tools.tools.Files_To_List.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.filter_files_list method)": [[157, "mia_processes.bricks.tools.tools.Filter_Files_List.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.find_in_list method)": [[157, "mia_processes.bricks.tools.tools.Find_In_List.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.get_conditions_from_csv method)": [[157, "mia_processes.bricks.tools.tools.Get_Conditions_From_csv.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.get_patient_name method)": [[157, "mia_processes.bricks.tools.tools.Get_Patient_Name.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.import_data method)": [[157, "mia_processes.bricks.tools.tools.Import_Data.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.input_filter method)": [[157, "mia_processes.bricks.tools.tools.Input_Filter.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.list_duplicate method)": [[157, "mia_processes.bricks.tools.tools.List_Duplicate.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.list_to_file method)": [[157, "mia_processes.bricks.tools.tools.List_To_File.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.make_a_list method)": [[157, "mia_processes.bricks.tools.tools.Make_A_List.list_outputs"]], "list_outputs() (mia_processes.bricks.tools.tools.make_cvr_reg_physio method)": [[157, "mia_processes.bricks.tools.tools.Make_CVR_reg_physio.list_outputs"]], "mia_processes.bricks.tools": [[157, "module-mia_processes.bricks.tools"]], "mia_processes.bricks.tools.tools": [[157, "module-mia_processes.bricks.tools.tools"]], "run_process_mia() (mia_processes.bricks.tools.tools.concat_to_list method)": [[157, "mia_processes.bricks.tools.tools.Concat_to_list.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.concat_to_list_of_list method)": [[157, "mia_processes.bricks.tools.tools.Concat_to_list_of_list.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.delete_data method)": [[157, "mia_processes.bricks.tools.tools.Delete_data.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.files_to_list method)": [[157, "mia_processes.bricks.tools.tools.Files_To_List.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.filter_files_list method)": [[157, "mia_processes.bricks.tools.tools.Filter_Files_List.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.find_in_list method)": [[157, "mia_processes.bricks.tools.tools.Find_In_List.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.get_conditions_from_csv method)": [[157, "mia_processes.bricks.tools.tools.Get_Conditions_From_csv.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.get_patient_name method)": [[157, "mia_processes.bricks.tools.tools.Get_Patient_Name.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.import_data method)": [[157, "mia_processes.bricks.tools.tools.Import_Data.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.input_filter method)": [[157, "mia_processes.bricks.tools.tools.Input_Filter.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.list_duplicate method)": [[157, "mia_processes.bricks.tools.tools.List_Duplicate.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.list_to_file method)": [[157, "mia_processes.bricks.tools.tools.List_To_File.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.make_a_list method)": [[157, "mia_processes.bricks.tools.tools.Make_A_List.run_process_mia"]], "run_process_mia() (mia_processes.bricks.tools.tools.make_cvr_reg_physio method)": [[157, "mia_processes.bricks.tools.tools.Make_CVR_reg_physio.run_process_mia"]], "spm_hrf() (mia_processes.bricks.tools.tools.make_cvr_reg_physio method)": [[157, "mia_processes.bricks.tools.tools.Make_CVR_reg_physio.spm_hrf"]], "mia_processes.pipelines": [[158, "module-mia_processes.pipelines"]], "co2_inhalation (class in mia_processes.pipelines.cerebvascularreact.co2_inhalation)": [[159, "mia_processes.pipelines.CerebVascularReact.co2_inhalation.CO2_inhalation"]], "mia_processes.pipelines.cerebvascularreact": [[159, "module-mia_processes.pipelines.CerebVascularReact"]], "mia_processes.pipelines.cerebvascularreact.co2_inhalation": [[159, "module-mia_processes.pipelines.CerebVascularReact.co2_inhalation"]], "pipeline_definition() (mia_processes.pipelines.cerebvascularreact.co2_inhalation.co2_inhalation method)": [[159, "mia_processes.pipelines.CerebVascularReact.co2_inhalation.CO2_inhalation.pipeline_definition"]], "dwi_whole_brain_tractography (class in mia_processes.pipelines.dwitractography.dwi_whole_brain_tractography)": [[160, "mia_processes.pipelines.DWITractography.dwi_whole_brain_tractography.Dwi_whole_brain_tractography"]], "mia_processes.pipelines.dwitractography": [[160, "module-mia_processes.pipelines.DWITractography"]], "mia_processes.pipelines.dwitractography.dwi_whole_brain_tractography": [[160, "module-mia_processes.pipelines.DWITractography.dwi_whole_brain_tractography"]], "pipeline_definition() (mia_processes.pipelines.dwitractography.dwi_whole_brain_tractography.dwi_whole_brain_tractography method)": [[160, "mia_processes.pipelines.DWITractography.dwi_whole_brain_tractography.Dwi_whole_brain_tractography.pipeline_definition"]], "anat_airmask (class in mia_processes.pipelines.preprocess.anat_airmask)": [[161, "mia_processes.pipelines.preprocess.anat_airmask.Anat_airmask"]], "anat_headmask (class in mia_processes.pipelines.preprocess.anat_headmask)": [[161, "mia_processes.pipelines.preprocess.anat_headmask.Anat_headmask"]], "anat_mni_tpms (class in mia_processes.pipelines.preprocess.anat_mni_tpms)": [[161, "mia_processes.pipelines.preprocess.anat_mni_tpms.Anat_mni_tpms"]], "anat_skullstrip (class in mia_processes.pipelines.preprocess.anat_skullstrip)": [[161, "mia_processes.pipelines.preprocess.anat_skullstrip.Anat_skullstrip"]], "anat_skullstrip_synthstrip (class in mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip)": [[161, "mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip.Anat_skullstrip_synthstrip"]], "anat_spatial_norm (class in mia_processes.pipelines.preprocess.anat_spatial_norm)": [[161, "mia_processes.pipelines.preprocess.anat_spatial_norm.Anat_spatial_norm"]], "bold_hmc (class in mia_processes.pipelines.preprocess.bold_hmc)": [[161, "mia_processes.pipelines.preprocess.bold_hmc.Bold_hmc"]], "bold_mni_align (class in mia_processes.pipelines.preprocess.bold_mni_align)": [[161, "mia_processes.pipelines.preprocess.bold_mni_align.Bold_mni_align"]], "bold_spatial_preprocessing1 (class in mia_processes.pipelines.preprocess.bold_spatial_preprocessing1)": [[161, "mia_processes.pipelines.preprocess.bold_spatial_preprocessing1.Bold_spatial_preprocessing1"]], "bold_spatial_preprocessing2 (class in mia_processes.pipelines.preprocess.bold_spatial_preprocessing2)": [[161, "mia_processes.pipelines.preprocess.bold_spatial_preprocessing2.Bold_spatial_preprocessing2"]], "dwi_fod_msmt_csd (class in mia_processes.pipelines.preprocess.dwi_fod_msmt_csd)": [[161, "mia_processes.pipelines.preprocess.dwi_fod_msmt_csd.Dwi_fod_msmt_csd"]], "dwi_preprocessing (class in mia_processes.pipelines.preprocess.dwi_preprocessing)": [[161, "mia_processes.pipelines.preprocess.dwi_preprocessing.Dwi_preprocessing"]], "spatial_mask (class in mia_processes.pipelines.preprocess.spatial_mask)": [[161, "mia_processes.pipelines.preprocess.spatial_mask.Spatial_mask"]], "mia_processes.pipelines.preprocess": [[161, "module-mia_processes.pipelines.preprocess"]], "mia_processes.pipelines.preprocess.anat_airmask": [[161, "module-mia_processes.pipelines.preprocess.anat_airmask"]], "mia_processes.pipelines.preprocess.anat_headmask": [[161, "module-mia_processes.pipelines.preprocess.anat_headmask"]], "mia_processes.pipelines.preprocess.anat_mni_tpms": [[161, "module-mia_processes.pipelines.preprocess.anat_mni_tpms"]], "mia_processes.pipelines.preprocess.anat_skullstrip": [[161, "module-mia_processes.pipelines.preprocess.anat_skullstrip"]], "mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip": [[161, "module-mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip"]], "mia_processes.pipelines.preprocess.anat_spatial_norm": [[161, "module-mia_processes.pipelines.preprocess.anat_spatial_norm"]], "mia_processes.pipelines.preprocess.bold_hmc": [[161, "module-mia_processes.pipelines.preprocess.bold_hmc"]], "mia_processes.pipelines.preprocess.bold_mni_align": [[161, "module-mia_processes.pipelines.preprocess.bold_mni_align"]], "mia_processes.pipelines.preprocess.bold_spatial_preprocessing1": [[161, "module-mia_processes.pipelines.preprocess.bold_spatial_preprocessing1"]], "mia_processes.pipelines.preprocess.bold_spatial_preprocessing2": [[161, "module-mia_processes.pipelines.preprocess.bold_spatial_preprocessing2"]], "mia_processes.pipelines.preprocess.dwi_fod_msmt_csd": [[161, "module-mia_processes.pipelines.preprocess.dwi_fod_msmt_csd"]], "mia_processes.pipelines.preprocess.dwi_preprocessing": [[161, "module-mia_processes.pipelines.preprocess.dwi_preprocessing"]], "mia_processes.pipelines.preprocess.spatial_mask": [[161, "module-mia_processes.pipelines.preprocess.spatial_mask"]], "pipeline_definition() (mia_processes.pipelines.preprocess.anat_airmask.anat_airmask method)": [[161, "mia_processes.pipelines.preprocess.anat_airmask.Anat_airmask.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.anat_headmask.anat_headmask method)": [[161, "mia_processes.pipelines.preprocess.anat_headmask.Anat_headmask.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.anat_mni_tpms.anat_mni_tpms method)": [[161, "mia_processes.pipelines.preprocess.anat_mni_tpms.Anat_mni_tpms.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.anat_skullstrip.anat_skullstrip method)": [[161, "mia_processes.pipelines.preprocess.anat_skullstrip.Anat_skullstrip.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip.anat_skullstrip_synthstrip method)": [[161, "mia_processes.pipelines.preprocess.anat_skullstrip_synthstrip.Anat_skullstrip_synthstrip.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.anat_spatial_norm.anat_spatial_norm method)": [[161, "mia_processes.pipelines.preprocess.anat_spatial_norm.Anat_spatial_norm.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.bold_hmc.bold_hmc method)": [[161, "mia_processes.pipelines.preprocess.bold_hmc.Bold_hmc.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.bold_mni_align.bold_mni_align method)": [[161, "mia_processes.pipelines.preprocess.bold_mni_align.Bold_mni_align.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.bold_spatial_preprocessing1.bold_spatial_preprocessing1 method)": [[161, "mia_processes.pipelines.preprocess.bold_spatial_preprocessing1.Bold_spatial_preprocessing1.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.bold_spatial_preprocessing2.bold_spatial_preprocessing2 method)": [[161, "mia_processes.pipelines.preprocess.bold_spatial_preprocessing2.Bold_spatial_preprocessing2.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.dwi_fod_msmt_csd.dwi_fod_msmt_csd method)": [[161, "mia_processes.pipelines.preprocess.dwi_fod_msmt_csd.Dwi_fod_msmt_csd.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.dwi_preprocessing.dwi_preprocessing method)": [[161, "mia_processes.pipelines.preprocess.dwi_preprocessing.Dwi_preprocessing.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.preprocess.spatial_mask.spatial_mask method)": [[161, "mia_processes.pipelines.preprocess.spatial_mask.Spatial_mask.pipeline_definition"]], "anat_mriqc (class in mia_processes.pipelines.qualitycontrol.anat_mriqc)": [[162, "mia_processes.pipelines.qualityControl.anat_mriqc.Anat_mriqc"]], "bold_mriqc (class in mia_processes.pipelines.qualitycontrol.bold_mriqc)": [[162, "mia_processes.pipelines.qualityControl.bold_mriqc.Bold_mriqc"]], "mia_processes.pipelines.qualitycontrol": [[162, "module-mia_processes.pipelines.qualityControl"]], "mia_processes.pipelines.qualitycontrol.anat_mriqc": [[162, "module-mia_processes.pipelines.qualityControl.anat_mriqc"]], "mia_processes.pipelines.qualitycontrol.bold_mriqc": [[162, "module-mia_processes.pipelines.qualityControl.bold_mriqc"]], "pipeline_definition() (mia_processes.pipelines.qualitycontrol.anat_mriqc.anat_mriqc method)": [[162, "mia_processes.pipelines.qualityControl.anat_mriqc.Anat_mriqc.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.qualitycontrol.bold_mriqc.bold_mriqc method)": [[162, "mia_processes.pipelines.qualityControl.bold_mriqc.Bold_mriqc.pipeline_definition"]], "bold_iqms (class in mia_processes.pipelines.reports.bold_iqms)": [[163, "mia_processes.pipelines.reports.bold_iqms.Bold_iqms"]], "extract_roi_param (class in mia_processes.pipelines.reports.extract_roi_param)": [[163, "mia_processes.pipelines.reports.extract_roi_param.Extract_roi_param"]], "mia_processes.pipelines.reports": [[163, "module-mia_processes.pipelines.reports"]], "mia_processes.pipelines.reports.bold_iqms": [[163, "module-mia_processes.pipelines.reports.bold_iqms"]], "mia_processes.pipelines.reports.extract_roi_param": [[163, "module-mia_processes.pipelines.reports.extract_roi_param"]], "pipeline_definition() (mia_processes.pipelines.reports.bold_iqms.bold_iqms method)": [[163, "mia_processes.pipelines.reports.bold_iqms.Bold_iqms.pipeline_definition"]], "pipeline_definition() (mia_processes.pipelines.reports.extract_roi_param.extract_roi_param method)": [[163, "mia_processes.pipelines.reports.extract_roi_param.Extract_roi_param.pipeline_definition"]], "bold_stat_cvr (class in mia_processes.pipelines.stat.bold_stat_cvr)": [[164, "mia_processes.pipelines.stat.bold_stat_cvr.Bold_stat_cvr"]], "mia_processes.pipelines.stat": [[164, "module-mia_processes.pipelines.stat"]], "mia_processes.pipelines.stat.bold_stat_cvr": [[164, "module-mia_processes.pipelines.stat.bold_stat_cvr"]], "pipeline_definition() (mia_processes.pipelines.stat.bold_stat_cvr.bold_stat_cvr method)": [[164, "mia_processes.pipelines.stat.bold_stat_cvr.Bold_stat_cvr.pipeline_definition"]], "pagenumcanvas (class in mia_processes.utils.tools)": [[165, "mia_processes.utils.tools.PageNumCanvas"]], "report (class in mia_processes.utils.report)": [[165, "mia_processes.utils.report.Report"]], "reportline (class in mia_processes.utils.tools)": [[165, "mia_processes.utils.tools.ReportLine"]], "__init__() (mia_processes.utils.report.report method)": [[165, "mia_processes.utils.report.Report.__init__"]], "__init__() (mia_processes.utils.tools.pagenumcanvas method)": [[165, "mia_processes.utils.tools.PageNumCanvas.__init__"]], "__init__() (mia_processes.utils.tools.reportline method)": [[165, "mia_processes.utils.tools.ReportLine.__init__"]], "checkfileext() (in module mia_processes.utils.tools)": [[165, "mia_processes.utils.tools.checkFileExt"]], "check_orientations() (in module mia_processes.utils.tools)": [[165, "mia_processes.utils.tools.check_orientations"]], "co2_inhal_cvr_make_report() (mia_processes.utils.report.report method)": [[165, "mia_processes.utils.report.Report.co2_inhal_cvr_make_report"]], "del_dbfieldvalue() (in module mia_processes.utils.tools)": [[165, "mia_processes.utils.tools.del_dbFieldValue"]], "dict4runtime_update() (in module mia_processes.utils.tools)": [[165, "mia_processes.utils.tools.dict4runtime_update"]], "draw() (mia_processes.utils.tools.reportline method)": [[165, "mia_processes.utils.tools.ReportLine.draw"]], "draw_page_number() (mia_processes.utils.tools.pagenumcanvas method)": [[165, "mia_processes.utils.tools.PageNumCanvas.draw_page_number"]], "get_dbfieldvalue() (in module mia_processes.utils.tools)": [[165, "mia_processes.utils.tools.get_dbFieldValue"]], "get_iqms_data() (mia_processes.utils.report.report method)": [[165, "mia_processes.utils.report.Report.get_iqms_data"]], "mia_processes.utils": [[165, "module-mia_processes.utils"]], "mia_processes.utils.report": [[165, "module-mia_processes.utils.report"]], "mia_processes.utils.tools": [[165, "module-mia_processes.utils.tools"]], "mriqc_anat_make_report() (mia_processes.utils.report.report method)": [[165, "mia_processes.utils.report.Report.mriqc_anat_make_report"]], "mriqc_func_make_report() (mia_processes.utils.report.report method)": [[165, "mia_processes.utils.report.Report.mriqc_func_make_report"]], "mriqc_get_all_run() (in module mia_processes.utils.tools)": [[165, "mia_processes.utils.tools.mriqc_get_all_run"]], "mriqc_group_iqms_tsv() (in module mia_processes.utils.tools)": [[165, "mia_processes.utils.tools.mriqc_group_iqms_tsv"]], "mriqc_group_make_report() (mia_processes.utils.report.report method)": [[165, "mia_processes.utils.report.Report.mriqc_group_make_report"]], "plot_boxplot_points() (in module mia_processes.utils.tools)": [[165, "mia_processes.utils.tools.plot_boxplot_points"]], "plot_qi2() (in module mia_processes.utils.tools)": [[165, "mia_processes.utils.tools.plot_qi2"]], "plot_segmentation() (in module mia_processes.utils.tools)": [[165, "mia_processes.utils.tools.plot_segmentation"]], "plot_slice_planes() (in module mia_processes.utils.tools)": [[165, "mia_processes.utils.tools.plot_slice_planes"]], "save() (mia_processes.utils.tools.pagenumcanvas method)": [[165, "mia_processes.utils.tools.PageNumCanvas.save"]], "set_dbfieldvalue() (in module mia_processes.utils.tools)": [[165, "mia_processes.utils.tools.set_dbFieldValue"]], "showpage() (mia_processes.utils.tools.pagenumcanvas method)": [[165, "mia_processes.utils.tools.PageNumCanvas.showPage"]]}})